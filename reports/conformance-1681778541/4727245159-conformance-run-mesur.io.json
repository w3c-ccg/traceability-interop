{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "02e96cc7-3fd4-4753-9926-70b7855a90a6",
        "name": "Clear Cache",
        "item": [
          {
            "id": "307e2fc2-37e3-44ef-a159-94115c02330a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2443b3cf-9c7f-477f-a37f-7a74357c9b1c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "95d103e1-51fa-4292-b935-1d932d5869e7"
                }
              }
            ]
          },
          {
            "id": "14f170ab-2fff-4741-977a-ffbb33de8fab",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "200fcd49-b360-4082-be77-32f5fed89f3e",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "a74606cf-7ede-4d23-922e-a69815d23749"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "3b1e7870-d5ec-4201-82d0-68ba851ac620",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "b49732d3-298f-4034-83e8-1b64b1798db7",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2fa9fac4-c47b-41f9-8e06-c0a646002c65",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2dba4ac9-7abe-434c-9505-6be98956c8d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a0abf7b9-19ae-426d-897e-aba67e577a6c"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "228001f5-f81a-40a8-a73b-e7040c86eb24",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c7991ece-4391-4045-a959-154665572de9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ea4bdbef-4238-4002-b8ba-e9a18db4af79",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "87cd07f4-35be-4694-a3ea-8d8f78649f50"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a294ceae-12c3-4856-8759-b1655ba82fbe",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "1acd7e78-912f-4e40-b56f-efa63783dfd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1d3bb282-2d55-4ab7-9977-bdd20a793f36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "840c1e3b-cb4a-4c81-bcd3-f69342387d80"
            }
          }
        ]
      },
      {
        "id": "2cee1a38-7e41-4cfc-b145-08663b016329",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "23bbdff6-d682-490e-8836-be2ed950050b",
            "name": "Negative Testing",
            "item": [
              {
                "id": "65af4748-b910-4dbc-a78c-4910ce616b54",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c3aa727-abe9-4dc7-bb6e-76ab8767cd6f",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e76d58b4-dd3c-4ede-8757-695e11e552c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "de077e9f-223e-40b0-88ab-7a139f798e04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e8cb028-c44a-465d-913d-74bec33b7dec",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67b80be9-42ce-4562-93f8-c9fbdcd99368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "14c75a75-0651-401c-aba0-2d8394d44f0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c38858f0-4600-435f-a14c-cc3b338b65f7",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95945b5c-a044-4b4d-b205-5ea20f701f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe3ca592-dd4c-4152-bd12-29f5577156a4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e255f055-213f-4c2f-b1b4-a240dc861bb8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1b45727b-8204-4bad-af2d-57892a00c9ea",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c0f0d9-ae47-49ca-9cb8-646f6db31a21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c00cace7-426c-45bc-bcec-15590f30ac09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3f938d8-a76b-4274-90bd-b010ed7778da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdbc071d-ccab-4454-a2d6-d47725face42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a0307c9-68d7-41ef-85cf-15ca0eeeb941",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff66161-3364-470d-9886-4677a01601b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "afa58f84-400f-4907-b4b3-533f4cb70036"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fe3cafc-e01f-49bb-bc45-9c22c34a6b40",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "95ddead0-0fdc-4a67-92f3-9f24b4d9e040"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "8e24ac80-185e-4860-9f4c-a8f4a254be39",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bf5aace3-a4c7-431d-8ba9-227f54176286",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8ffc59a5-e49d-4bb0-90c9-fbf74a16337c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "d644a390-8997-440b-ae6e-6889a3ef1bba"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b3c6becd-27ac-40f9-8e0c-2045b13ed19a",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "2c131887-79d0-4d5c-abfc-f47c2911acaf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "baeaff85-a255-4995-9947-b213f831fca9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d62e7bcf-1747-4474-8844-b62ca8399112"
            }
          }
        ]
      },
      {
        "id": "4db32c6e-793f-4712-820e-57bce4861e1d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "ebf9954a-e82a-4611-ba19-b8f3afd06a5c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "614b994d-f39e-4c9a-891a-e1bbaf230c85",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "778652e6-556b-48b9-b68d-51458db49a2a",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de12a1c4-e1d3-43b9-9c80-69ddb4ce84ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdd16d4a-f1bc-4f03-b1fd-c141604c13cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15beebd8-b743-4d29-b2cd-5ecd1ad0431f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f732214a-552f-44ef-929a-a4c960222156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29a2545b-d596-4fb1-899e-7b1c0792a3e7",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3484517-931f-4bbd-b66d-dde4362ab934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c8addd5-ca38-45a1-bdce-89dfef66c610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbaee840-4901-4fbe-a15c-5f620797077e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "de5b4143-72ec-4f06-9b51-982cc93492a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d32950-0e18-49f3-8d61-3f35b650f4bd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11ac0d62-351d-4b00-82ec-1f7cd502566f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1f256f9-8d95-4812-9021-f3579c83db52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c09df16-ecb0-4d0e-b34f-dac5cef5305e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "66b16848-207b-4a9c-b923-7763e88eb1cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76d39525-7061-4a28-b60d-882ea4ee94d2",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "162343fd-7080-4d74-bb87-2bebab9582a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf5e509e-c586-43bc-baec-32b667891201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4ff9852-3a8d-4c9a-95dd-8b0405392a77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3afa5a60-4415-444a-93c6-854b4d936b3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e345561c-b78b-458d-8432-6574769fe2e0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ffa1b47-f1be-442d-9e98-0ede9bfa6d7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9ec0edb-81b2-470f-9ba4-dc465168429e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3af17215-cc20-4676-800f-e6698e5709cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e40431c2-678e-4768-aa27-9fedf343bc34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10f7291d-0fe7-404c-9224-981ed5e1218b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287e293a-f52e-4470-8d69-837a0b5f07da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b18772-6089-46f1-8cea-4f344ffcbf37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e99daad2-ce44-4198-ba9c-e0fb330a4987",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fa38d39-4b3a-44fb-a0c8-ba120b76071f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cee19cf-b01d-4b56-a1e3-760adb38335c",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d2b8e3f-2906-4224-a318-9d1ba14d020e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b089942f-0345-4a3c-9cf9-d56674bf143d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92839cf5-7f3e-4e3b-983e-7a12c6ceb21b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "41ed8c13-ea7f-45d6-bc97-352536ffc4e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db8c90b-1226-4b1b-a81a-21db6c181ac9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e6aab8-2712-42ce-8e4b-cb1001c10f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfda95d5-32df-46b8-aef5-1c6b9e67cbc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b84007c-1f31-4458-a4ff-2cedceadf1cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5455f34f-e18b-4fbd-8fa7-2c1960cfa165"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70f95690-e2a0-4b1f-a7cf-6510554c426e",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e767ba8-698d-4275-9287-8ddd8a71fad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbae941d-4b0c-4345-b9ac-cfa2371ac6a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab435d9d-367d-4a77-a2ce-9269f1f13425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3af1389c-d710-4895-bcb9-e4ef0186af62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d94b37a-cd9e-4241-a615-472ab04ac571",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b62dae3d-7f68-4c16-943c-1cc471e11934",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d057923a-61dd-4f7e-aa19-a472002c5dd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bd2204f-83ae-4bf0-995a-d5d8e62f6814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e894344-6735-4d84-9d69-084f2d459be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fcc9299-404e-4b3d-a223-009737858081",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c01dccbb-48a5-4e19-892a-00a8fe098c98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fbef17-e034-485f-8383-527991c82c5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f95ace43-e6c7-47cd-971a-03a2839d6a64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a3915621-f576-4a38-ab4f-f42d02c52e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f433a19-4304-4e51-a0de-dda97df4686d",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0777b8e8-069c-4e35-8ae7-57a8f6a58862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87a1a4b6-fbd8-489d-865a-422afc5ed175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f366e505-3935-462d-ad0c-ba38c1772b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2e65a718-4f79-44ac-a4e7-8e9d38d57f2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0b54b55-1508-457a-9234-0d804dee7b0c",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab512a6c-9d71-415a-bab6-b8a7d634ec2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebff5aa0-9957-4c43-b36b-1df49caaf512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8484b8ec-28fe-4011-b509-844b34fcb167",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "eeeda86a-ca44-4056-9fa6-d4ee75354950"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db9deed3-f76c-49f5-a259-82581e4e976a",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f13696-91f0-41b1-a1f7-9c9b966188b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "caf1e4de-ad83-49a9-878b-1d2136b37ab3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f079a39a-c907-4bfc-ad64-7bf070e32225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0449e7ed-06f9-4032-8ca7-b08dd77d9d3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385b6647-74ab-458e-a81a-9faa4eb72400",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "633a9a5c-bf84-46b8-aa6a-3072fb46effd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0810eb59-55f3-42d2-a04b-93f218bf3430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b34315-de72-4da9-8667-0e3e84c8d618",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1eb84bf-6e32-4b59-9e6c-0a1df7b55fc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a15d04a9-7df1-439f-ab2f-0370a12f6c66",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8798da1-a399-403a-9656-9f492dba8184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4c509b4-9518-4031-9b0b-5a9a7b37c40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f904d678-98ff-4f2d-a53d-e2f858f2a25c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "01e0b6f7-7f0c-4edb-81a6-99e2f117e3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d70b23a-95b9-43a2-9e51-d61c3e4b501c",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49a4caf3-6898-43a2-90a5-c57ce537fcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f08b635-f4da-438c-b582-c23b702b7aa0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f47dfd55-a3fb-4469-a8a1-c611520557b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "19f7013b-65ed-42a0-9ce2-d7acf3e5515c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b373cbc2-8fc7-40f6-aaeb-a2ecb093effb",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a78b962-f4f8-4b35-8788-9a5e66d630b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03e3882-731a-432f-b55d-fb6f62e07234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f34c337-cd02-497d-882b-255c40af0164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "819cae3a-c942-4fb4-8ee0-06724b6868fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d08899e6-f2d6-4ee9-8f57-7640e5831153",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ffb9f65-5679-4421-b4b6-e679f630a762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c278cfab-f1f6-47d3-bf0a-8b43b3e349c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0bd3f38-3ff8-4806-8ee9-73d700028b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4bec8d9-861c-4039-b59f-026e08f1db3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5207e67c-c48c-4b0a-89eb-58a5348130e9",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1571dcd-c61c-4a20-830c-43e63d2b3ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3da46f3b-673c-4817-9dc2-5e3e1078b956"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83660465-48a1-4d70-a6b6-cbdf7370e2e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e873518-5f8c-4f32-9b28-0e803fcd6519"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d049e1-426a-473d-a2b6-3480bc28387d",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a3ff1ad-d1d3-4f3d-a039-7cb45d434343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b54f9157-6c42-47a3-9e9b-cb460d5d533d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1641d121-c19e-46e9-b955-2d2b7ecc6bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac5eec15-5a74-4ecf-ba58-98100d95cb13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85c99a14-1598-405c-9699-ac681e50139c",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43b8ed10-eea8-48ff-bccc-6256e4ae3de7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f2e6f86-cffe-4551-b315-73bddcad8d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "481e6db7-abcc-4466-8fdc-b632afd6902b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "9c8e4df1-7785-44d2-ab30-f73460a1b128"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f6472b4-90c4-4964-89f2-7cac80315d4f",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbec44ef-9eb7-419d-8e9e-450fea0e0b1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e9d2ee-3980-4017-b0bb-8a0d8e676492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82117e99-9b29-433e-b946-bf17af682bc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "cbc5d5bd-953f-4c9e-aaa8-8c7b7cff13ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ee1a547-0cc8-4eb0-b931-a4a1fef8417f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b71d893-6778-440f-9ee3-ef7508c74dc7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6277af6-972c-4dfe-b2eb-5a1436662799"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e48ee47a-b154-4881-8cc5-ac0231cb4f35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "04bbf4cd-d638-4296-a4ff-40ac07576422"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e661b193-1aa7-458b-8915-87572c48a47a",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "199ff63b-a913-4931-bbdf-9cc7fffb63c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8591008-d53d-47bb-8e7b-5e9d02e106c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b71f8c1-f0b1-410d-a35f-607588565753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a927aa4-e640-4888-9ede-32c7fa6e635c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8ba8d83-a802-4de8-8154-c7678a068b75",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb82aba7-28fd-4354-9065-e8e13c5ca7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c16eab2e-6ab1-433f-85af-dec90d8090ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3077b1af-cd90-4792-93d3-f0682612c2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7454e495-63ff-4826-95a8-4dfb15a09252"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae148e3d-d3fd-45c0-98e1-ca87a50d691d",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad2b808f-90f7-4fe2-985d-597fc2a49c28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2047645-c603-4eb5-95d4-b3949c3eba0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c181ffa9-2f0b-43f1-9499-89fb38b2287f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5ae888-bba9-4ea6-b509-c9d01f875535"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4a5ace-ca60-4e28-8552-7a6c3f0d6c18",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0255f75c-e0b9-4b0f-8c3d-690d7a0a4d84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49c6607a-a9e5-46af-8ee2-0fd7b49466b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02884ad5-6a54-44fc-bee4-20cca5660da5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe511d89-3d4c-4f45-adc9-803f3fa22f30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ea2389-1a89-49cc-bbae-71c98aa87cd8",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3b8365b-f237-4a0d-8fcd-d60440229183",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e6aa7a8d-b951-4918-8add-e9c12e861fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d157ee77-daa0-46b1-a20b-80d3bda27a8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0173c75f-77af-4ea6-a160-ae170c63dc36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2eda70fa-cc5f-46fd-9473-2140bfaa9c59",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fac26ee6-f859-4f63-beed-0c4d8551f8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0616809-89f3-416a-8ff8-4c6d2e88c62f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddf9abb7-6c21-44f6-9d67-3e2c93aa5093",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "e811a7a1-00cc-41f2-ba72-81187ef590b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c4f96b7-60d3-4b3a-aa8f-fe10b612aec2",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1539256e-3aba-4f6a-b284-f77e8ede28ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8c4f1b2-8dc9-46e2-a2fc-c9ae72379617"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ea687b-c569-475a-bc36-ff550df4744c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd11b7b1-57a3-4215-91c0-20799f5ac17f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b0fd0b-8075-4658-85bc-5b7a84f651dc",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dd7810d-4ffd-4e06-bcd8-7aa3d1a4b527",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf970f4c-e043-41bf-bc3a-c36719756256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61c720b3-e919-4625-9781-7cf7f3cdb184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1286b88e-3bfe-4188-a751-7634ce7b051d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aad49cfd-bb02-475a-904a-475ad285e0e9",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32ee836b-0d4d-4116-a5f3-7e50219365bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef62a517-0b1b-4e18-a801-dd37a77754a1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa97487d-98a6-4665-8168-3fb1332547bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d67b2ae6-b0ea-4dcb-8fa7-5eb49062707d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ddbb582-be80-41a7-a727-d0407175ec45",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eefcb7a5-0c59-4063-914b-97e6944eb29f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d2fdae9-29bb-49a4-8ed8-ba3e6dfd071c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b47b3ee-08a0-4c5f-a519-9c05b33e1247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cb6eb02-482e-4322-b683-bd363d6688ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee7b4d4c-25a9-4c6f-9baa-25ad0b8e85c4",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b640490-f0c3-4038-af31-0861c628ace2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1376dcc9-37a0-4312-bae4-6f4c5a1408e0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1a7c86d-17c2-481c-be26-844a3f8bf87c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "0b104ecc-6f34-4516-941b-958d29d09fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4db2ad92-0812-4e2b-9883-4ccd359cb23c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfbd541d-b67f-4fac-b2a1-1c399b43d836",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "06533879-e9e7-4733-98c4-a3432e4c2cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "663d8e74-c1dc-49af-bf90-475ab9ce6630",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ea2daa3c-59c7-4540-bafc-35bd3a479fa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40da245-d7ae-490a-b546-81e6a362bf8d",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08e580b-dd8e-4e64-b83c-a2deec9450be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce3e1091-3d91-4ae0-a69f-825161d90074"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014a11c4-6f4e-434e-8c2d-ec93573e0caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21cea580-aa1a-42d3-853c-6875018091dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5524e9c-e036-40ee-bdad-51a8ccd69fdd",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd1654e8-70e5-48db-b5b2-f617bfa56fbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c60a948-722a-4dd2-94c3-b4c532b6b812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "117b4cac-ae89-4baf-8629-0779db3aea38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "9ffd99dd-59d9-4a68-8ebd-dfa1f7d0f5c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f76c901-cd92-4feb-8312-515b51477a24",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14866e90-a280-4348-ad1d-1b804439a75d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c91997-daf3-45e9-b30d-adba992f388d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a1c0b4f-2cb0-4e7a-987e-bad633a65023",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "83e6f675-57d2-49aa-9687-8b62db88dbfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ccc7f48-bbd1-4644-a225-6eb4e2e21e09",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dacab100-c39d-4166-8be6-06c669c2e8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2417b9fc-6cd2-4d10-8a58-c48f23aac2c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfd0c115-205c-49fd-9419-7018771d8504",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b1704a1-1b9f-45be-a7ea-1be35628fd7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "215aab19-1df0-4145-8814-910551cc3211",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d527ec8-0be6-4565-8079-0609caf4bbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1d8dfac-cf00-43e7-ba1c-2efa4d425d4e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab1118fe-8f8a-43ea-a443-c2a9198675d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8698df41-0d69-4c32-a6bc-b86526fcdfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "909d17fb-e93a-43b1-b7e3-b5accf50284c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73e42312-d760-4973-abb7-74103de36e15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6bc66ad-ad87-4677-8a58-bf222e1da633"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c23fb289-ed94-40fa-8a35-5f6c0f5cf93b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "646c3fa2-98e3-423b-a0c8-ebcb6a479e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40fd9e94-dd80-44de-a717-360c6ea4a6a0",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a22bd97-56d7-4f29-b60c-c16e72fce30c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1d9220c-f4b5-4e51-9145-81a925c09c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32842197-7ac9-4cc8-9737-fd3885a5ef3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "2e739df2-de17-4726-b501-6ed220259d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8aa8b35d-fe43-4ff4-8f2e-0492a1e182c5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c52672a-a990-486a-ad7e-3b6ad56281c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "774c5198-7673-4e92-bd5f-bfea9e23635c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2690f0b1-46bb-471c-b123-5cd2112726a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "226ad0a2-e143-4a8b-a5e4-5f9e506f56d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59e7a540-12e9-4478-aa3f-7a23508756ed",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cbf7e56-ca49-45ac-8ce3-262adc2339a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d0e1b1c-fa32-46d4-9927-a3c19c1b0b78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0dda30-df27-489b-abe9-cd9aa3e7e279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "b2aa56f3-3bca-4495-bcf0-57ea9cb8c8ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0538431a-83eb-4423-a327-2ca5548f275d",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8367b97d-d363-4e3b-9041-133c0225b5a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf065795-494c-480e-8e0d-9c9ee95eb2fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dae9a6c-4ebd-4c2e-8bd7-a69341d4e65f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa80723c-392c-426a-be29-d59e051ccc5f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dac1fba-8619-4869-9374-b3a358e86f8d",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80c79aa1-18f4-40b1-9028-51d487d6e0ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5926af8a-26ff-4ac3-aec7-a9d18362a71c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62c5ce88-61ae-41db-b63c-b7c3a054f0f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "04ec827e-dea8-4b7f-a4af-8098f7354b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41106586-45d6-4d3d-88f0-e91ab6486189",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1cb146-e23a-4cbd-8ade-2453985736ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f60a1037-b607-47a8-9533-00d721e5f894"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ad6647-cca8-44e4-a644-7bc101474247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8980b78c-7612-48a0-99d0-023861b119d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9d8ae32-59d3-4920-b236-3f03daffe961",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ac26c1-ea1b-4ef0-adc9-73a040f9e477",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2d321e9-0336-4848-86a2-2061e604c151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f1d81d7-4598-4745-ad6e-ce1be848069f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "33807c30-91e4-44c7-94b6-82af66cc4bcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "088f07f0-e5bb-4371-9a80-405fa7c9e496",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0606264-1673-488d-9217-cc69f364d2bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8206a3cc-1def-4fef-b5b6-e7e5252c850a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa95c617-51cd-46b0-b891-15926a21a8f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bc299492-dfc5-4d92-bb1e-6f4283c3d2c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f1ddfe4-1dc1-49e0-b72b-bf152cbe3729",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3588700d-1f09-4cea-8dec-a78fce768d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d07d3ba8-caf5-4454-8e28-7615b9eccda0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df154d22-143e-4af9-9987-21e57be307fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fde6bb74-1ab0-4f13-b94d-b4baeed7fd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b96ec0fa-f803-4602-ae54-d9d7973ac939",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3150c3ef-f43c-4b7d-be25-8fe49bde43c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e277e7d8-5f72-442d-abd4-11d8ce290271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f6e0dc6-f6dd-4bc2-a2e7-1d4fc493ca34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d550ea4e-1c88-4dc0-8050-ba5f63d2a1de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5bb7a4-d37c-47d4-99ed-3976e24f0790",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a69d377-abe3-46da-acd1-f119c492f9fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99f3eb15-778f-48ba-8e3b-3d8892b9b5b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43162d61-8acd-4ec7-8d14-ea0599032181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5ab0f3fb-c9cd-471b-8a23-cdb2578b7cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6dc5dd-7684-4fa4-8212-285fc77f2b4d",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24b300d7-8bf8-4c44-bb70-a0523e050c44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62fe4d23-2744-44fb-b9f1-31f6e77b7e98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8132fe03-524d-4225-9e59-10493547e37a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79fb7040-7544-4bb8-bd97-77719e432ad1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cd0c630-28af-4f3f-943b-3c5442917340",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "95967dd4-2704-4406-98d6-0e3eecff4205",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dae2a2c5-03cc-4ba5-8347-1e1449cdfb34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9eb5943-60c6-4370-9092-b88135fc0470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5be4f844-35ab-4e29-bcad-6b6acc108c66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b109fc1-e57c-4174-a5dc-10852ece9bc2",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e3aa7-01d8-40cc-b5d1-a37fc3d72ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9901888a-3c7e-4d96-af69-218c4370b9ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0dc767-008f-43e7-8a55-aabd6c81415e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "6600801b-2784-4a2f-a920-b277e910ad1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c65be80a-8860-4270-b5a9-e765ad7dfc6c",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d8deb30-31e4-4129-a9e0-454b34605333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1777cb5-a278-4343-a245-a130cfcec2d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76dc8a02-f61f-4318-8b90-c5451390b092",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a3bb1b7-7d3f-462c-b902-321d8aedd923"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea94092-7bdc-4e09-92db-b63851da2707",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9766929-c617-4c50-8c24-c81e6b33a293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd5603cb-f1b3-4159-a04f-148e8268f441"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72cb8f65-0ed5-4de8-b488-3c082b82d794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfa8e7f-58be-4120-80bb-b01ab01f4f9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04da3d3a-1989-4911-af54-eeeb16fa563c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d89e1d87-c39c-4221-89de-c39c7380db04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d8e672f-32dc-4db5-8c70-5fdb7486b5e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18fa08c-5d96-4398-b68a-5ae7b2515d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "5b37157c-f2cc-4830-a998-620cb9a29075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7901ae-d733-42b6-ad9e-98aeda11164d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "495e7d76-eb16-4250-8dbd-c8bdd24ca7b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "415e8cfb-008f-484b-83d1-f45cdb14d037"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24e27699-9a0a-4695-af0b-bce66a38da92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "5e318263-4a44-44c0-9ac6-9cfe5c3e3520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b9962b4-870f-4bbc-aaca-2aca20bfe7b9",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9054cb-6fe4-434f-b580-ff8ff6f6815a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63a74170-4684-425f-bbee-98eb6695e523"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ba0ecb-c08c-408d-b952-9a4d18bb88bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b787ee4d-f138-4723-8d13-e0a3639819ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "867cd44a-62f9-4dd5-8914-da8438c2106b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eaf8ba5-48d7-484c-8531-70d187467f8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003ae520-542e-4baf-a215-797bf722579e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f03471f-8dc5-4ada-a669-e76e7ca9ce0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "d17c62d5-24ec-457b-a126-e623cc979283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2e9d22f-170d-4968-a664-972ab5719c29",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "65f5ecd1-3dc8-4712-9bec-a371809aa546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb94dc0-a710-4b2c-b208-6d1b84490a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "418d37c6-6f4d-446d-8eaf-e118687d8efc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "693a28e3-0e3f-4f93-a32d-92a1ff04ba66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ba2d2d3-ce5c-4f79-982f-4dec37b0cc90",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd4e45bd-1939-4a66-af12-5a21574de383",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e25be509-02cb-484f-a38b-ae22434fe858"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a61b1cfe-9941-4bff-93e7-9bfdf9fde1d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fe074e38-a8b8-4542-b6f3-cf55e499979e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57fe0083-05c8-483d-b2e1-fb7610fd2e82",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301e5029-ea83-49d3-b0ed-b90e947fb6cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e806d166-23bb-403f-8411-d9be40e66a7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f37bf5ac-6206-4e57-9ba7-a37341b0fa84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "95ffa1e3-914c-4bfa-bb43-511b8b929bbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a7f549b-aa8c-4d2e-b77d-b8cde6677710",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed666f2a-04f2-4ebd-bd9a-22109450dbba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1102f362-0f07-49fa-b81a-a8572e33aedb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10fabef6-25dc-4650-8d6c-0dcdfdcfcdde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "86184609-cb60-4105-a395-1d49f7f464b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ffee6fa6-56b7-4e3f-8169-65c7f499725f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1335caa-a86c-497f-be1b-71606188c6d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8346d05-77af-4176-a9b7-66e8fce3778d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6abd8fb4-e423-4201-83e1-238fe267ad58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a5b7ed09-f489-4578-af8f-978e0b2236ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bba3bdc9-95ff-426a-b92b-229501de1c71",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e96aefc-00f6-4d20-ac7d-79828156d192",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb27f62-bb48-401a-be1c-4baca504e5b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a761cd4-d858-4a72-a748-b11da79274b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "6511a413-cc95-4a51-a208-b136434894bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38ec28b2-a554-46c1-ada9-33deb340e032",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f738cf7f-0d38-4600-bbe0-73cad4ad34e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea792a2c-1df9-4ab0-87db-8c252591d3b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681ff7ce-3e4a-4ebb-ab00-6a19ca641395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c368e26-c802-46a5-8caa-8d0696bc091b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85b5166c-daed-43c3-8afc-f1d9753db9fc",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e28948e3-9f2b-4487-b4d0-057adf1f5f99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "676fd8f3-566e-474e-a202-c4dff1061871"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c871318d-95d4-4c7e-a5c8-fe68ea732f20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bf22c6-d557-4c54-b018-43adf8b27ed4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73060a9e-a515-4ead-9fd2-f36194f2e172",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de5884-dc86-4f95-81d2-c0f71556248b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0404cf24-ba1c-4c75-8d8d-60ed2044a2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1770a963-4133-4046-9d05-392935ed2f5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2b71049e-8830-4c56-9473-c5ac2b10d7a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fba673-e46b-4ca9-bb55-5d4066e89fe7",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62644e82-6dc1-4f22-b2d0-09870d1f405e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f35b874-df60-492d-a3a6-e3552181ea92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5fa152a-f78e-4811-b298-7da65dc4372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "762550e4-582c-4401-93c2-2fef1b69060f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c7c7166-2330-47c4-9197-271a3e5efa3f",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb1c1dcd-d212-4056-a52b-0b56189be3fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b41526c-2034-4e1e-9e44-cdd9f4509662"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "915985e1-c387-49a4-a071-03f9126ea11a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "687f4f9e-7b75-4a0d-877e-ecc2d9460ec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8356e005-4759-48b6-9c93-0786c20b9a6e",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340d801c-01c9-4aa4-acb9-c6a3925e6608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d0763ae-0f13-46c1-9950-dc09f2c9b2bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8dd92a7-3f4a-4aba-b0cb-2007d7287b60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "40bb6b42-6c35-4dd1-a1c4-8de0e656875f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16231b90-9b57-4125-927c-18f0c92b8b10",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6948fc25-09b6-4e72-952c-a0339881f05c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5fdb6b-7a98-4bae-bdae-930f855fa53b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1ade208-2d3c-4fb6-9c3d-fe26329c5f26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b1c8029-d8a8-48ee-b7c1-8c26ab08f456"
                        }
                      }
                    ]
                  },
                  {
                    "id": "baf44bbd-737d-4815-a55c-d2100cd0e6dd",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "185bbdd1-53e9-4697-86aa-539a18c18ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48637ff8-904d-4ad8-8059-48ab530a707c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68d22bb0-f5fb-40ac-ac59-84da79c77694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "096eabe4-236f-4bf2-8297-f4e569d9a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f77cbc17-d652-49d6-b35a-2800a4cafb83",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93f2a08e-3262-4add-9494-a89cad322211",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceafb6bf-ba91-4d44-9b75-01c4a7cf1ddc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5490a16-73ce-4ba3-987d-8ce23145ce53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "695942cd-ec87-4817-b1b0-682d1399a589"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874342f6-222e-4379-ab90-a9bb7cc4f813",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ea6ed84-baaa-44e3-887a-7d320cc25bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3adedadf-eb97-4dae-b340-438bf7ced4cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a854581e-ed9b-4fe9-a482-7e89ab2336f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6c371a08-d464-4969-a725-c0fe0d1b1248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fceb115a-d9c1-457d-bb92-8b76d892d071",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f0bf6bf-1a28-4d42-8839-19f9b28571a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3965683f-10d4-4caf-a471-b55deed08e68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f02921c-229b-4c58-a055-2269188d3bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "11043f8d-0248-4be6-868a-fb5656095858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a53aa3b-a841-41e3-9803-24de6e8c1a27",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "650cb53d-1f12-4e66-8d95-26dcef4e832e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38aca98c-470f-4a63-8a88-46fc88bf8d22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e6e175-e8a5-42cb-b366-7db29009773e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f6bc74cd-b003-4698-a424-12d610d1234a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1e40219-bf0b-4282-99b3-02f4f2633b9d",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5e8338c6-7fb8-4314-b6bd-25bc1f1b02bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34c9bac3-2972-4011-86a3-f7a7050bb76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96c7a83f-a604-44d4-b598-83a35abe8f0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "53e41d01-1f9d-42d9-aeff-619498731b71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e52ef16f-fba8-4090-b193-8e6d1d0e5e4b",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9765054-9d1f-45a0-9fe1-9d3a66a5805a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91babebc-5079-485c-89a6-6086ad1ebb9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152c539b-66b9-46ad-90dd-6cd2d5cae26a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b2bf186c-4816-4871-a0df-08b1fd512c7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fcee69d-53be-47eb-a72b-39c9fd6952a8",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62e8bf7a-f5d8-468e-a185-00ba9d5b1c2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a3ad689e-0d24-449b-a1fd-a993e8de92d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b7f3ad6-a874-466b-951e-225647ce708f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22e87788-8e09-4c06-8be6-3211012efc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c82cc73-e5a4-4202-92cf-458b7d2e09c5",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8764f625-30b3-4706-b8bb-e4c6305989b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7751cadf-5088-4544-ba88-999a07451fcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcad6f51-2337-4e57-a9b2-37810f3c58d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "41a2b958-0b80-4fc0-a708-200606608fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3df9c3d-25c1-486f-8bc3-389200416eb0",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58083bd-3c98-4ec5-931c-ffd691f8f28f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec25fedd-4b1c-46ce-b2cd-f2790452c38d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8210d91d-a555-48d2-8366-6fc1ea45fb9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f4a929dd-3f74-4b91-bcd4-a13b747ed0b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c67caeeb-4dd7-4d09-b591-c95bd0a56651",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af02c4df-cba2-4887-a63a-d30fde2e435d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98fe6da-d56c-4e5c-948f-4886e5eaa34b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64ff554e-aefe-48d1-b27e-916a160d3f1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f6ed31a-fa26-495e-9428-73cc725c9a70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddc412bd-db5c-421a-85b2-cf214cafab14",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ee6c72-7671-4366-b2e9-ab2ba53a70c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98d43b3b-aa01-4a70-99aa-403a43bb0077"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "252a4c0d-2694-4f3d-906c-1dde508b6471",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "dffde9fd-b671-41e8-bc2a-2bc3b2fedf68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75440302-384c-4eb6-95bd-3714e1686024",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e16c6f4-e39b-4d49-af36-3b8094ae9187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8a4b8d-dc1c-455d-91d4-685a867c474c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ca69cfb-c943-4111-add9-6c9d2ce2da98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7dd48fe9-43aa-4ae3-8b1f-868708637c20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1348552-dc44-410e-9b73-f5dbe589cdf5",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41ec8d95-e178-4664-87af-4ad4bedf3f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1270aeb9-1bf3-45e9-b267-70259c426016"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5e162c-a6b8-4738-8d74-ed8375ac25b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d96dc07b-7c3d-4a29-a705-191825f21d9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5848ff50-84f7-46df-a170-52cf44713a9a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "600e5de5-b136-4555-b452-cf8a1b4ba42b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2986f855-35dc-4940-bc7c-41faadbad6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87976eb8-860a-4c6e-8ca0-ae6c8d48cc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "1bfdd999-955b-4dc2-b07d-69bd891c4c73"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67b5bb46-06b2-4017-b6eb-c5f171297b54",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38c5bad2-ecb0-4e78-815b-043cef8a0143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0bbb9b35-543b-46ef-bd35-93e8564ce61c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f400e72-3641-4172-9b5a-2a1778291562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f62ea54-014b-4271-b167-51c15802d3ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31cd0225-5d89-4c45-8920-2a243a392510",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7684dcc-5f06-47b0-88be-6f23e767fa0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ba3c0add-a501-425a-9e38-09a51f91779f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ed03eb-829b-496f-8063-9a2a4384e180",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "b8500a7c-3941-4404-9a04-992dfbd86c3e"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6250110f-12e6-4e0b-997e-9fd39dd997ed",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b2817e74-87ce-430b-b22f-c352b0663c88",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aceabcf-365b-4345-b519-ee4bbae99677",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c7ae6da5-dc42-4fcf-a69e-fafb165c1afb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f9e80d2-eca5-4e00-aeb6-d0b25b205e70",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96d24eb6-39b8-4734-a194-efa843d12452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53186b33-b900-4def-8176-ab294a40224d",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f842bc09-b5d8-4ffa-af9a-9f275b8f8668",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d1971a48-631b-4277-8229-726598316eb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9868ff55-84b1-4ebf-93ea-e61481768207",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b7b64bf2-b9ab-44e2-8c58-0547cb4f8b29"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f5896248-a629-4886-8d36-ace4d1752af9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7aeab4ed-80e8-4ddf-9ce9-de2f18dd98b0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f777326-941e-4e1d-b6a4-a20bbf68050e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1ec6f3ca-6d30-4c59-94bb-054155a3b402"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f4dba5ea-bcab-4489-b8b1-364c20832295",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17b68374-8ad9-4074-b3c5-52d09eab1e72"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "886b297c-7f10-4fbe-b4ba-4fe1ff400643",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "42820409-e384-4dd3-ab94-41818564434f"
                }
              }
            ]
          },
          {
            "id": "4f7af0ee-56e1-4710-862c-604a737a543e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "fdbb4669-2e28-4266-bc59-cb905d0a7216",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "17a728d5-ffea-4500-a141-1fb31be5088d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e5f8e8c0-e4ff-4ef6-b5cc-6807659f1149"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1781a1f6-d03a-4396-ac36-16371c7b36e8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "1b1ca4df-dfda-43ed-b5d2-bec4f401ad4b"
                    }
                  }
                ]
              },
              {
                "id": "ba5d8c99-b7c9-49f9-b5ae-26cc495baaac",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2bbb2f39-bea2-4414-82d9-7d5526655bee",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "36c79a9f-c541-4754-91b8-336445201a82"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "09f53506-be4c-40a5-9d3b-b95511398801",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "cf1f88c2-8514-42fc-a42e-5e000fda61f3"
                    }
                  }
                ]
              },
              {
                "id": "42cf7442-4491-487a-8dd9-70b4cda6eee1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1641bbe8-fdf6-4495-b751-ad42a915888b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "64cb17ec-12bb-43bd-9061-c758fb146a2b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b3447a0-6035-40f6-8ba5-0f1dc048ac48",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6510ce28-5e6a-41e1-9032-e4069dd1d3b9"
                    }
                  }
                ]
              },
              {
                "id": "bb364219-ee8c-4df5-9396-b8fb0e0c9c8e",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "496c5aa5-4ea5-47fb-b2a3-69d5174d50a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2dc63a2f-97bd-4e30-87b1-3305514e2082"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7995d96-5a1c-4b5a-8b98-4af9c43f5954",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "92b094ec-9ae5-4ea0-9d36-431be2ade628"
                    }
                  }
                ]
              },
              {
                "id": "d2748c1f-ce5a-4c82-bd86-d329d874b6c7",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "655fc680-223a-47a6-af7c-644cfa39b9ce",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83805c44-79b3-48d2-82e4-9fc2c690bc9d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1cbc0422-0efc-4218-9b83-2377d8934fc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "a1f5d31a-7d60-49c0-b8bf-a8a64cf4b49d"
                    }
                  }
                ]
              },
              {
                "id": "afb212d7-9da3-4fcd-a303-f239ee165eff",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c5e0751b-231c-4059-80b4-f8ed77bc493c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "09782b7f-45da-4f63-a6c2-96b07ffd8248"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c3774c2a-4f43-48ff-b0c9-0870a12768b3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b8ac42cc-109d-4a63-8697-632e85cf2c18"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "b02f38d9-36ec-4cdd-8ced-6fc85dbc8388",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0a1c241a-e095-4276-97a7-57f458cfbefd"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a90f1b2b-2489-4eef-8e06-3ff9a1dd509a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e37c2a79-203b-4abb-afd9-def3d4f69ede"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c9fe09ca-a2f9-444c-a50d-42b11afa5476",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "5757ab9f-b46d-4fe1-b042-708b925a7f6f"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c4bd3c55-8efe-4e41-878d-58c360df164f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "178946ab-f239-42cc-9680-de9c74ef2979"
            }
          }
        ]
      },
      {
        "id": "3c866e82-4077-43bc-a3ed-17e597596db6",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "0acaf728-21a7-4450-a72e-1a242d095587",
            "name": "Negative Testing",
            "item": [
              {
                "id": "927c602b-ba81-46af-af6d-6e0da8f7f9ed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "1433c5db-71b6-4400-a8bb-74067176912b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90f0df15-490a-4851-8650-fd1b6c717ed8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0795f84-b5aa-4bc2-9a71-cd9e9de84706"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1db7587-a98c-4267-9fb6-e94062e7aff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "8e8c4f71-efa4-43cb-867a-76db45a5cd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7d5148d-d969-4408-8c20-948b814b3fc8",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e87cc3-6867-4b25-bcd6-25ec6a8a2301",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63611333-558a-410a-b2bb-82ab0b27fb16"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab5951fd-903b-4ac4-af49-343f1ca4c362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "32ced1bb-b735-4faf-9da5-fe58f1a5ca24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8aba985-7bde-4dad-a679-c508c9cd2c02",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afc97ed-fc67-422e-9e07-06e26e77c347",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2707cfa0-35d7-4e49-a9fd-7d332e64b874"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fd39e9f-6b0d-45d9-89d4-e2aa4505aec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f4291e4-9f3b-4645-b29b-1ed55812864c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0421198f-6a82-4dec-9a98-88bc860df46e",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ca3c8b-9851-41d6-ae25-ea9dae86375d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2f2d2e3-7586-4215-920b-89b9c97f5180"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "473aa2aa-7df6-453d-8cfb-7a0029ebc0f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c634fea4-c2a3-4539-820c-523479a5ee7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beae83cb-922e-48df-bec0-280d7194c78d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16727322-9f6a-49ea-8c93-5914dcff4343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e894837a-b258-464c-aa65-ab512637e82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53299bf1-1224-4b4e-830b-04fd849d80fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "824f0f1d-5730-4743-95ef-c9f8d0b95244"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b8c854f-7239-4ba4-a36d-efc9a504e316",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "705f6b76-dbd2-438d-921f-9e4717ddd529",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0d43913-15c4-4a27-930e-54e7a90e836c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36270907-3f92-484c-8506-2c79a3059671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1ff54519-8124-4ba4-8861-043a9bba9231"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6e06a4e-cc6c-4528-bcca-7154860de270",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57637095-2e96-4d88-9088-2408675a010c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e673716-e0bd-4d8e-b651-ff0ce4fb0d6b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b378858d-55c6-4cd2-9e41-ee045356a29e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "247dcb07-9df6-4994-a461-def1998e1873"
                        }
                      }
                    ]
                  },
                  {
                    "id": "737edf9d-47ea-4b17-81f3-8ed7de7437d9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "040d2e70-823a-401b-8800-2c7e0db949c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa15f6f3-d1ef-4fc2-a6d5-01d5de31418f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f87c0f-75a9-4424-aa6f-9d73d3cb1eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "224a8ec8-9a0a-45db-bf69-c8ad67655dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b5137ad-d468-48f0-a27c-c22ed999f295",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b2fd86b-3b13-45d3-80d6-ea2a95cde5aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55f08de6-eeeb-4930-b30c-b41bf82d598c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ebf5b0-2563-410e-9780-03ceefb64737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "89fa3ac9-d4b7-4577-9b13-fa1a32457452"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1d1d5a-1b08-423d-b5b5-627ef440c6f6",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e726cab0-b3ab-4eaf-a230-a98426c3de6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55fcd003-e04c-4b3a-abb6-0c64ff95a1f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "379af584-9f4b-4e6f-b30a-2bc4af24be5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec1824e9-9f09-457f-883c-46957bdb82fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72511572-1cd1-4163-bd87-e4015d366923",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c77fbd0-308d-4dab-826e-603d055f1eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b16fdc3c-8c14-4496-9ac9-f5604dae83ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59d441a7-e360-4826-98f8-b2a42a7b7b56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "1ac1cd65-2d6b-4c96-bc1a-974b6731daac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "025f745f-4544-4a47-a349-055cebb913e4",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82ee12b-d4c7-46d6-9dfb-2c329653726e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537faaed-564a-4aba-9073-b0aa22a864b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31f06699-d02c-40a0-aa6d-8f214e4b8a3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "98c3dd26-4edb-4674-92ca-e8c3139cd6b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52811da1-7a65-4e46-9c3f-d2850a65fd4f",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d63f3a1-ef02-4f17-9d7c-0968f58663d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46cbb19e-8c7d-4e6b-8dba-eb633cb54448"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74e50600-c376-42ff-95c0-0bcf5168527c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "04382909-0645-4e3f-a0a0-9a69744f6cc9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c84c5d7-8113-43f6-8c4b-a820369899e9",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39d8f6b5-2907-4cd4-b414-23fbc4d834a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eeff37c1-9ce8-406b-8524-6c10d50c9382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d26c184-62e3-4362-a68f-01ef8f0ebe57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae5b645c-e491-4669-bdf3-8c105838e0d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "770d1d14-9f78-41fe-9e43-f2cb4202992d",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e82ee86-2c29-41dd-96c4-2496e0384f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bdd24d7-3c02-4185-984d-ce058763b526"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4bafac-2217-4dae-97a8-6acc1168c232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "10f74a99-6eae-42b7-84a0-66b04ad276ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cfa6ab9-2bd0-43db-b3d9-9abf43bf3477",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "822f36b7-2bff-449c-9eaa-9ac63cc6dba4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f4be0fb-461b-4898-b3ea-43e134955b28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71f25a6f-5a44-4c2f-835a-e3cd91f562b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "c61ee09a-47bb-4615-86f0-3bcdb4e04dd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9289dd10-0205-4d08-8a4c-2cc360726a94",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de338797-8797-42a4-8c5d-fb17eb8dca88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e1688efe-1d4f-40ae-b54d-7293962fabb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07ce14de-1012-4fea-b9ac-80ea760de403",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "e245d154-6bfa-4e44-b41b-664b852fa4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4137f533-e888-4bf6-8752-e54ab5009087",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b3181ea-94b3-4e9b-88b2-05bb1708d5f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5dad9660-c6bf-44f1-86aa-1a82dc958e2a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2be20a22-8aff-40b5-b6e7-e1862abbb40a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb29f975-92a7-48f1-9b68-6a2e795eadbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "898271c3-12b2-432e-8d55-b449527d26a7",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d49e9-d9a3-44be-9495-466adabc647b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aab26de6-aabb-43e2-808c-b7d8c0916e9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65530f72-f162-4436-8ff2-2a5e48967c3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ecea76b-aa1c-41d3-bdd9-667ffb89ce5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628bcb31-706e-4ca9-9e3f-c620ccb54cff",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a319c33f-8589-47c1-a595-545fa4ee518d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "92f7515d-e28b-41e4-bf49-cd2d8006ee91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "087df1bd-d1ba-42c3-8739-3e50f6b7ed9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "900fb334-61d6-4901-9de0-15802a7ae133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "becf6429-32d9-434c-9e82-9f78da583f7a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd912ac9-b12d-4b55-b756-5ad83ed8a822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26985a55-af7f-41a2-90cf-827d1ef9b053"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0223e51a-f947-44d2-b369-2ae2f391dbe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5a92b0-f238-443f-80ac-bed07b8ec224"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd4e2ba0-8b6e-4107-abe9-34731a6d5972",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40b806dd-961c-46f3-982b-b0cfa255843d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2e03041-3cba-45cc-80ad-e875d941b7b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55e3bbcf-6c15-457f-aaac-3c95893db06b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6666d584-56dd-4d8a-b90a-c2918360b1ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa46ce7-0a31-4540-b321-1cd43083c688",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fd4f520-d94d-4f46-97b2-33604e1ff826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ffa67f-a1af-4b10-a26b-713adc5dca7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bbb8667-e65f-4b2f-a5a1-efb120640c23",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "142c1879-6235-4a67-9e88-57ae0ce114ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2fbe2b8-895d-4f34-b06f-d3638d1efcfe",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77875fd4-2436-4d4e-8efb-cedd5c8c33d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1eb8dff-07db-44df-9c93-8d1cc3847336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2427ab4-a3a3-4b39-937d-911cca858162",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa49b40b-c64c-4303-92ac-1a3c87bb8743"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b89bbd2b-27b3-4d62-a1d6-bc55505b56be",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56cfa80-942f-4c2b-a7e3-c3dbe3bec09a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e82e6436-4577-4fcc-b15a-78a808d00495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b178eb8-36ab-415e-8c7d-84ff36527587",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bf94196c-f940-46e8-83ed-bcdf604700cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a5918da-ccf9-4fa4-b434-08e9e84f484c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0635d93c-35ef-4369-9d32-85a2df9d7929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "026c2243-6be0-4677-99b6-29702514dab4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9ebbab25-3ab0-4faa-867d-01874754394b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "168da39c-3652-4f53-9992-bd7bf62af928"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41758404-a1f5-4d81-8b94-c32beed65e45",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dee6cee6-6b28-483a-97d8-a3c63e0e7eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a8ce71e1-fce9-4743-845c-7f3a8211637e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0128927-1754-4657-9dc6-4fba659b2694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "219c325d-7553-457b-921d-e61ef5abf4e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a6989a7-7921-4d82-b7f5-35806154c466",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4928a638-c1c8-4ccd-803b-3624a8e4b312",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61352147-e3b3-4b97-927d-74c933180109"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b2777c-f525-4c82-9c39-bf8bdc499ee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b46c8c3-b25f-4f7f-9f10-768e170d81eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c5cdbfb-5a22-40c7-9b87-696de04634b7",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34200b5a-6ac7-4949-919e-a52d31715aa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97b0a28f-0b18-4b4e-bda7-25455e711a9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa573df-c55c-48c3-b6dd-a7053ef6054e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ea7ea678-24a3-4db5-8941-3702e1568628"
                        }
                      }
                    ]
                  },
                  {
                    "id": "947c4674-8485-4519-9605-e88da0e3d976",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdb96032-cb2a-479f-9f15-9909060bfc25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af9eb649-31d3-495a-8ac7-cd09a78defbf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47746c57-2c14-40db-b6ab-5080cfe92446",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2a70dc1-73b3-4d1d-a589-b6c4515b2ddc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a00d9e2-9f83-46c2-a7f3-cdbcf1fffa1d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bde34fe1-840f-4e4b-bd5f-cd08e028aae6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed58c52d-0aae-4329-ae19-d9e8562481ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3561201a-fb56-4c9c-a790-bd66ddcb44f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d683f06c-b561-4349-b925-eafb578e22c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be45e34-5642-47fd-99f1-cf2d50f46f44",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7be2a53e-3108-466f-a621-d8714952d4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3bc644c9-a408-4e77-80bd-f37cf5f2fd28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75171eac-2a4a-4ca1-af1d-5099e5111e9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2d5fe8ba-a03a-40de-9d7f-22f68c35be96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "71880f0a-90fc-4eb3-84f7-0d9a51cd0efe",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "14763db6-743b-4023-8480-02c995bb8b2a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6892666e-1f2e-4540-9101-d53ddc40dd7d",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "76ec88a3-4cc2-49a6-918f-3782a2dfb8ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3edd09d3-e97e-4c3a-800f-b6b66677a9af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9de1410c-7e5c-428d-ae3e-97942aa5d980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c898ce6-df0c-4b9d-978d-7e63693e5c9b",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f8daa62-5615-4c75-a003-168263c0faa6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "847bc952-cb6e-49b3-8d71-1697afbc628b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7fba19ee-bb09-478c-8f14-6fb49efae21e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eca57066-83c3-4fc2-9b90-535e3ec07c8a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae8c57fb-d988-4774-aade-be9f3556f4ee",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95a82349-c560-41dd-b4a3-6edba6a78560"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "845b7454-8537-4cb6-bc3d-e7ed52931cc0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7bbe98cf-49da-4b2f-82d9-6ee1b6965c95"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "184f6e13-d99f-4132-bc24-ac21c1ec5fa9",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "bbdf0a9a-532f-44e4-852e-c87d6893dfc2"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3f927221-bf49-4825-81c1-a3a5e72a4374",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fdc0dc69-ce16-4eb3-9ac2-40935734599e"
            }
          }
        ]
      },
      {
        "id": "06be724d-e6ae-465c-9218-269db69880c3",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8ea2709f-9c07-4a75-b3ea-8c7b46207655",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9c69dc28-cab9-46a6-adbb-8de8ca9c2f2f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ea9e1c47-fe89-4575-9469-885feda34ac2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae36e4d-2ecc-4132-99e5-c2a9c57ac711",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f2b31b3-5f52-4d08-bc4c-344c3c0777a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8edd56b1-fa28-4e2c-9be6-3a4b35cdde97",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb41da4-e4d9-4542-9490-b2f3cb5d1a98",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "677ed5cd-45b9-49ad-9d82-3bdb23deddbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c2043e1-61e6-474d-87e1-a4442e46bba6",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4b009c2-55a8-447b-ba9b-ce78e7061809",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41ea9d1c-fa19-4c40-b214-1d6132e9febb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4058b0d-1223-4454-8c8b-9127a6f104c6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5e8959d-9478-44ef-b5d4-ec47eda2d558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5edc8def-d718-4753-811f-962014ca1781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2de9801-b0f7-4d92-8f20-10acfed17988",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d04c418a-f148-4eb3-9585-620de37c7224",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ecabca6-da94-43ce-bd19-fddb5a3cfef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8fa1d4b-d304-4df0-a489-7d94f585a8c5",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3330155-34e1-48f9-ab0c-a76b15d4d0f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcf3ae8f-6e70-48e4-9147-1bbb0dfb8ef1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6eb8d63-8387-4e06-924f-b074124d0858",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53aca178-3e8c-4c51-9768-33590eca2c27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2126eb69-d309-4ec8-b0b9-37aa7d5f9614"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0903d59-4c99-4ffe-927a-505252a1cee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87bc2cd0-e639-41fe-aad4-c05381476682"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19490f7b-9124-465f-ba1a-35bcdf5d5c45",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b11a38c-a563-493e-9783-d02b3643c354",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "01220be3-ef12-4730-bdc0-f08af55eb8b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86245cb6-a2cf-4616-831a-4a4793bae792",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8d752f0-6639-49f1-9539-51247f6f4bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6099187d-f45f-48ba-8879-554bb5218916",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17ba20f1-eeea-4e4e-9733-ff98d2833c18",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ba52209-1122-4233-b303-e4616c1b497c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a34b0bfe-96ae-4893-9246-ba8fc137d49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc70530a-a744-443c-b4a8-91749177a87c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e3ad75-0869-4c15-9301-cbb6c6b962ad",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30ba787f-c36c-44ed-9924-1f76320eeb2b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "78f04c7f-7128-408e-95c1-00f6933853a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1245daa-c1d4-495c-90b0-762d59d78f65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6da864b8-5fde-42b3-a844-1567c859b69f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "121ec0dd-3b7b-425c-b0a3-7387d9482d38",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f8d090-2e3c-47ab-bacb-20482696b5e1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce1a75fd-2851-4418-ba92-aad4492cb038"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71414b63-5b71-457f-9eaa-9c425ef84974",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a0c055f-87da-4fe1-aa0e-186fcd54f0be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "039edeca-9681-4e10-bcbd-2d41a690d420",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00e548e1-cd6a-4b77-97a7-e3000cc6afe3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd6fc813-9b75-49ee-8dc8-c0f40ed5e8ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58821c92-e56b-4fcf-838f-4ae784f58ca4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0bf985c-1c69-424a-81c6-f8e325f731d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13e1f94c-cf09-4b5b-91db-4bea7e6e3e8c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffd78338-ee42-4bfc-84b8-e93312755897",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07156e21-63fb-4248-a672-d015dbe98fa0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd3590c0-9cd6-4944-9731-eebf0484cea2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb09ff16-141f-43fe-90ab-10d52f9eaeb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa635223-f45a-4247-a7cb-757f0cdf482c",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf9feff-b87e-4ac5-a3d3-820e729ce6e9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc441993-8c50-4ba8-9670-8837a1f6d973"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c359232-c249-470a-8779-1db684116a59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b2bf264-23c3-471a-bdb9-8e3cc4cae238"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20ab5cc-6167-4643-a936-f9f697fc715d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f76afa84-2865-44a9-872d-b6317b0d7886",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b35d1476-31fd-43a2-9a30-7a18078446ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e32f710a-05db-4f8f-94ec-e2a87c0d6ce5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfcb0b6c-4b92-4b37-accd-9824aebd4293"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7900bdc9-e23a-4f7c-b646-cc08a99a1171",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "305e3585-8f1a-480e-9594-67136dac997b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee5fd5bc-ae1a-4a7b-940e-3af1974c8f81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca2ec5c9-6635-45e5-aa6c-059d01d5f06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef7f371f-e902-4660-bdfa-2346fb0910e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d4cd819-fa5c-40ca-a94c-ab9f9b8a4a07",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bbbdb01-5c39-49f4-8ddc-f8d3a62d49ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05aa8049-be73-439c-8130-e810de26a9c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3f8a488-f697-42b0-a91a-0804bc6bae5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbca13ae-9e74-4f2b-a81d-f347bb2b5206"
                        }
                      }
                    ]
                  },
                  {
                    "id": "920f57a6-a083-482e-8112-b70a53a8458f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2804c445-0e82-4a34-8fe1-7138ef4d804e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9d693b03-68e8-4476-b63a-b20e0742e609"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75dc9948-6686-43e0-b766-bcc89cd47fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c9eb2dc-be3e-4c0f-89c4-ddacfbb21ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fc9c767-3255-4220-8b5e-67d8bbe29840",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c35ce3d-92b4-49e2-aaaf-7188a892f3ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3004d680-79b4-4465-bfc5-c1e5c6793169"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88387810-57f6-476b-b114-efe33e2c5555",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5018d3be-e126-4457-b5de-d1b5a2855c63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3cabb37-5d77-4617-9efd-ec770e1009a3",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3681056b-54e2-4e1a-a486-a521ec2768bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1492e17c-b98d-4916-bb2f-4666415f8b4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d220bad3-1144-4079-af6e-c666b68dc1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9617fcc9-eb38-4de2-ad3a-dd1fe1ca43aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d95d0f34-0db8-4103-9194-81e6a111d7c7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44320a44-d83c-4a14-8da5-581f75e572d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70991114-7c4b-4eee-ab89-dda8e580318f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4aa6b6a-7b8a-4b59-a02f-85e8b2b674ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5903d873-f7c7-4afa-97b4-fe8f59e9892f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d878e449-6da1-46c1-a163-b0bcefbf4367",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88b74704-949d-4148-8759-437b7604467d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc3780d-0c8d-41b9-841e-879c24caee10"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d67ef69c-1b80-4cc4-9e9f-e711483a1a93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d586e9a9-4a61-4aa7-bd66-63fa631ce61d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75b74cb4-1d30-4958-8966-c8874b10d2a2",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "623c0158-3d2f-4f50-88e7-b02ce777ef55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ddfaff4-5340-41e4-9330-893faa2f5b3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1a3d19f-c64d-4b80-bfea-ac6f7485c921",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a015cd52-eca2-4e00-ae53-56fe8f4d5fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3f1d670-86eb-4995-aae8-0e0509ce0abe",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfc8a4d7-d2a3-4edd-a43f-2bafd67ce506",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "732bdef7-cc7d-49d0-9957-b8f3eae6af2a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dccc0b92-2e7e-46e3-99f7-de02f8efeeb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "056dcc40-c927-4e24-bacf-c67c13ab6715"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e080b401-eb01-438b-986c-dfaea368598b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4055f688-7dbf-4709-9535-14ba64c217d8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b6ec05d7-923d-4040-a8de-20ef4d938f31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "13f1bb5e-4edf-48d1-ae7e-d4adfd4606b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bda9f2c-137f-4e0d-904e-e465b8e236fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ea3853-df85-4d42-af08-f5ca6a9de076",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "329a9a19-f1fc-4136-bb83-f586cb39b465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "696a95fe-fa5e-4966-9518-545bace0c7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29f4221a-7ed5-4f30-8853-be0ecd99ad4d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "696e4862-29e6-4dc3-a2a8-6f5dfdd04b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a2711f-f09c-4630-8d63-51566c5c0326",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b05fbcd9-b829-42b2-ac9d-d4a386220e8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0cadd927-a17e-4fd5-914f-636f7e4708e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afd8a33e-0c8b-40b1-a196-2ed519e471b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07cd6b6c-5a40-467d-a920-023a44434d04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865d4d1d-1b68-4843-a87b-d3bad3fe9451",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3107a3d-0369-43bb-8d8b-c8c89b8f41c0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3c91f65-f68b-4813-ac41-0a7e998af87e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "935f2b64-b920-4c4f-a7d9-11301b1a2d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4495d81-5231-4ab2-b92c-f77527602ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb2ed796-c942-4638-ab87-9f08d6403291",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c17a2a1-7682-4f0e-a8d5-5920a4a9a94e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "95eb3b86-c3b2-453e-9529-f9d322294788"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c976ad4b-e3b9-4d09-9534-860c8cb6cd3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7cd79fb6-55d5-4085-b10d-a9edf0915e06"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd079d2e-7179-4cc4-a82e-5025c283bed1",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e44dfec-4bf4-4574-b47b-6e617d06f927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "51f16612-e4bb-4f2b-9bd7-2641c29776ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78e0bdc9-c5bb-4de6-a616-accf1336cee5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632234dd-dfc5-4f7e-b6b2-bf96b36a98a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f6528bd-afb4-4cf8-95eb-0b6dab952f84",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce87961-fe9c-46e5-96e3-ff7a1b57a1f5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "70ce9774-ca92-439a-a153-d4aee38245c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86006608-fe54-4cd4-9280-3e279992b7b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6fb1a61-d1bf-404d-902a-69c6aebf1562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc0180c5-cf68-41d7-8574-652efd606423",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e482d6-2509-4659-9fb4-56b810e1510b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ddaa613-d520-4735-a68b-5ff5f0e50e2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05b31637-2cb4-4f6b-a47e-b332044c3f41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bbda3e4-1d9a-4752-bb90-b560fb29bd7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5a3e70-2e4b-4760-8936-ddf84b66c664",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5b2332c-0ba0-4c77-8d15-cba931086d34",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a57435d2-079f-43d1-8e37-cdf6b3dad3da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fdbdb58-9fb9-4104-a501-d58205323cf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "971ab3a3-88a3-4e12-824a-7890cd4e6b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1ac7deb-307a-4df0-83ab-aefaa1bdb596",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e979eb8-dc2e-4124-8c5a-d2c04724dd6a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fed97eda-a03a-43a5-99e4-d369f1dc3a5e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "563f5add-c5cb-4163-9676-050646375026",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed1a9073-2916-4e94-aa7c-ffe75b0c4e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d6e2093-764c-439a-9b6e-69fc1901e6d8",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "809e2953-d67e-4eda-9111-58087710058f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04f72232-d782-4fee-9d3e-4fb058912b8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59a6f515-8b22-47fd-899a-df8ba1426744",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b382471-9244-417b-bf62-c2814d36a5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb52f58a-715e-4912-aa67-e8efc2f4d144",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4209548e-7a3a-4a3c-a782-09083b192605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ae1d0a5-059b-483b-836a-76d7fba1e0dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7835ee-239f-478f-8214-4a8b615a31fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c88b3c71-338b-4658-a4e2-97480132cf92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23d0bef2-81b5-4f36-90b1-1eff4a57c30c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a0a4cf3-383a-4906-ba7d-abbb963159d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c51e47f9-b6fe-4653-be5f-8352e5917d77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d8abc6d-65e9-4aff-ac0a-78e1b90d619f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dce17b18-36cb-40b9-95af-6646cde0e3dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72b6649f-dc03-42a6-b958-66582a3ab132",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea98700c-1328-4f52-9806-1c0125a7c174",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b2217c-950f-4163-bcb3-84041c4db2f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bfdadac-5532-4dfa-a0a3-44671d0a400e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0044346-5c5c-45e4-a324-a96ad1355c3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "210f4f40-9fb0-4987-a133-5f34178d3a8c",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7523f71d-fe7e-40cb-b664-1b01b9ab773d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23d29d9b-5ae5-4e6c-9897-d8612ed7ae90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c322fd-75bf-4337-b1f8-ff1922025100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de89c9bd-d6f4-4628-bf01-cfa419462883"
                        }
                      }
                    ]
                  },
                  {
                    "id": "347f8914-08ba-47f2-9f06-678816cbe8d4",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e553568f-4c0e-4c89-87e1-7bdc8f7a460b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78dfeb54-0de2-446e-8d0f-137e9486156a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b27426c-0748-4552-ba85-ddaba75eb666",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fa51d87c-7052-49d1-9513-c44af4083eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd8f7a67-9c82-40dc-bf35-8f7b2ef56451",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff6e7abe-8e4d-475b-a0f2-43de633019bc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "789c3bc8-d2e7-45f6-ac48-1ecc12c427d8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55add700-da24-4a7f-aa2a-3cd10dff498d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bc41fa7-d6b4-4721-b490-d77abb9a0a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "231de26f-f3f7-4b0f-8d9d-78b2848c8e02",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea97e7b3-310b-418a-859a-eda3188aee13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90fc3ebf-71e4-4d86-9c03-2aff9756d933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9d1ecd6-e390-4542-8fce-43fc59743f70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0cc0cf-9d0a-4e16-8874-2dd24128a3de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6dc13a37-7c27-4604-b79a-bfaf26dec032",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a040dc9-16f7-48e0-b407-c57a57a11fbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "821d5c09-41be-41c0-a5f4-8472a3789204"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0306272c-04ee-4b5a-8556-c481fef2202c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a652e3ee-3ae5-4799-8848-1270626b7808"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e164add6-fa94-4baa-a4d1-774a7c5e1c25",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab6c84f5-3d8e-4015-a34f-777e43e9764f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "980b9742-7002-46fc-9773-83a7cb3628cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7768aafb-28b8-41fa-b80c-73fd0f7ad086",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dc0b7cb-47a5-496e-bdfb-b89a1ef5f4be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a28aa83a-668c-41be-a4e7-3c1744c27fcc",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5536b552-a6af-4c36-b880-ef9929f1b1ce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4ca4ed0-c4f1-4421-97b3-7938eaf6ec0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0397e66-39c3-40be-8276-a4a1a3c91f27",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18145e02-ec3a-47ca-a649-1d4eb3735d55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e12970f5-4158-4112-8470-133fff8096d0",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f4f2ff1-8def-484f-a9df-31fc60895059",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc109970-4294-4748-89cb-9d5013119e99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "898aa853-2743-4483-8cfb-f211980a439a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80bb5152-bd22-4d43-9995-f043eea10de8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da25a94-d46b-4ad5-9280-30119e1128f1",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d927a8-8fbb-46c5-806b-864f757d6f28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13def7e2-6f5a-46ce-a693-71c7cac9fdc4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "265b1503-7393-4bf3-bbc3-73b5797df1c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2fbebea-bf2c-4f81-8a7a-b8dc5b55e737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd0ce38-ac2e-4193-bb74-c83e470c723a",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d92e4b3-836f-40db-997e-4e3a2d7f8a0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b6a62da-04e3-4c25-a672-95601b92c2f4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2cbf4cd-4aaa-460e-ad5c-914c14d3732e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97690da6-ae62-4982-8fbd-3060ddc491d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14fe0fdd-98d3-4b96-9e28-8337dbcff382",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f7443e7-7879-4e62-9ca1-9d58eda48b38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62952689-4fc4-4aea-96e8-b0fb87221995"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77f6c53-edd9-432f-a4fb-692b36db1329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "144b67ff-59c9-4398-94b4-23746dda855b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "783733b6-0490-44a5-9979-a02afd5b705e",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90040af8-a561-468d-921e-2eec6f210f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3147d4fb-eb7c-4f50-b29b-4fb653c5f11d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a4c075d-92ac-4467-8edf-f19fdeb91e69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9b3f566-5be0-42c7-bd5c-917d603c2724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9f0680a-fa0c-4566-87d7-02c33819acd3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68dd9db7-a3b2-4343-aa38-b0b4cdd31127",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07ad451e-9948-49ef-9ecc-ae42a721ea57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd4d215-4c3e-4979-9d9a-53c8eb8cbee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e7c4f3c-df31-4ad6-8c3c-e745802e159a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0754dcaf-99ab-488b-a87d-02e8d980e2be",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "228d74d2-de16-43cd-955b-e02f8be6a43e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f26a9f-ff0a-46d5-b92c-391b4bb2c5d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bb32b10-0db3-4c3a-a8f7-c7d2d3338f1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee0547f6-4c8f-420e-bba5-722dd3b1ab22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "203cdef6-f014-49df-bb7a-3639066ab9be",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "906b2b62-694f-449a-8bb1-79faa641b5c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "266f76da-c403-4d9a-81f9-3b26b69d51d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "675c683f-1633-47c3-9460-dc4fa1bcc075",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ce6d61a-2d43-42fe-a9a8-fd4441ccc32e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d732caf-24b0-4e87-8c98-e61e09c8f53d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53e907a3-9077-4d75-b83c-1b91a46c1a4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b17f220-be2c-4f5c-a0c8-45c13ebe1f64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fba006ab-02d9-4303-b8f0-bd721f450424",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c7953a8-ea1a-4cef-824e-deda1e9a2376"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fafc1f08-e81b-4844-80d9-12954be05b66",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb202360-96ca-463e-b521-dfc9af422a89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc87610e-a979-4d5b-b66d-96454afd4ec1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1761ed0c-62cd-45f0-8c95-6443844eaeb4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ef08c140-b6ca-46dc-8fa8-bd0c69ad3b2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a66ee094-8f83-40c2-83d5-a08d30bfd66d",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff694de-6ec8-40d9-b5c4-007131e09f79",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "175c0a31-1714-49bc-9548-7cb3c70ef9eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "470991ea-2266-4144-8d1b-501eea0705a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f494f280-539c-45fc-8980-43ffaeb2df72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "564d73c7-effd-4ce8-a983-3a6881bea93e",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41e6927a-8f8d-4e85-921e-6e987d1ebbcd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73563eaf-c118-49d6-8565-bd01b7fac1dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f59dc168-9f4e-45f3-ae3f-f92a485f64df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071d1480-8482-4cb9-93b7-3b6ec6e044dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f20e394-c6b1-4b5d-8ba9-1264aeca238b",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09da662c-45ce-421e-b775-4fe684f6c904",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "763fb66c-0452-4d5a-8c8a-a1644f50dd35"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de0f8041-3563-4c96-9f79-1d9b3c6650e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ab554c-cbc8-44f8-863b-ea11839cf73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e58c57a-a729-4cf0-8bd1-702a32152aa1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46f81e8-cbe6-48a9-af70-b25d4afbfea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5d39f4f-75a7-421e-b8d0-f438195a84cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff4c93a0-500d-45aa-8eb9-a68f3de898dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "33445125-744e-42b8-b07c-55ad9d42aa3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1208356-759e-4d81-8b93-d376f89210a5",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e561ac-40d0-4636-84f8-b0e319d93fc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8fad0317-74ad-4de1-9413-4306b9c3cf5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f136dd4-da2b-4a8e-aa3e-44f50ab110a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23a7500f-e061-4080-82d5-bd9f70ea0be9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5e9668-07e5-4c85-9d32-acb1132e412d",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "940729a3-8766-4fa7-a728-a3bf72d41b3e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "571a65c1-edc7-4d45-948d-3f7c2fb7d319"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b004b23-1e44-4629-a620-37b8cb142c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "454431ff-abbf-4782-96ef-c6fe70fe98a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd6b1204-fd4a-4440-9484-ccd831e9bf05",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74712519-940e-4bd4-be92-f9beedf9518d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "41a14b5a-54c3-4ccc-b86b-b5c8700c4ae2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1af8254f-a317-4364-b1bd-ef33c8e36524",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e96d7fd-4867-496d-835e-903dbb88d130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8157db0-0ae5-4b70-9577-4bd2aafedbf6",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8714d542-79bd-4ad8-866b-657c03b0e72a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24a3b833-a2cc-46fd-ade1-9713583fdf44"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c8c249b-891f-4bb9-b6e6-16ff4ec52873",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1fac857-c5db-4bfc-9287-39014707cb0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ec91fd4-b6c9-4a10-89f0-9f202976b92d",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f207c15-7bd1-4a6f-adfc-8dfc1dee1470",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "222e9433-c3dd-4565-b8bf-0d0e8eecd154"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90993a35-3a81-477d-9e6b-3beed3ba5456",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb587396-c7b8-4509-a70a-bbbe300ffd42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45417cca-6bb7-4466-bb7f-664c780368aa",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceb594e7-b011-4ba4-8e08-082984c58ed7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "50e1ed49-2e68-4795-9b03-e29b5de5e047"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3478124f-6994-4f99-a8d9-8ed67d9be28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed6cf59a-5c8f-4a66-aca8-9331768fba00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41a7b61-a430-41bc-875e-79063336958e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7854eacc-ac08-41b7-b29f-8cd5abb6654e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a61ebe3-6345-4752-b003-5c9d3b81dc27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d576220-3505-40f1-a9d0-fc07f7398552",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8305d594-9f20-40af-89c3-f2f8464c89a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb962d21-672a-420b-86fe-5ed71a37c9cc",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5cf68f1-8209-441f-86f0-7e6e9d8c7a51",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ebd0335-41f7-4055-9808-3346d58225a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8942ba9e-8d96-42d7-9e12-301a51d00d24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d6eb29f-4dad-45cd-9e75-d49c65db679f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dc3d0ff-122a-407c-84cd-989234a4d016",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c0ddc33-c75d-4d35-88d3-a5258f07aebf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55af41b1-689b-4c74-a780-56c2852ecac9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "895e60ba-4a65-427a-b591-02d90bffe186",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7bcb3ae-60b3-4d7e-8732-8f91fbf0d71a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f071d0ec-22a3-4dd7-bd2c-93d622d88c85",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77157c1a-bbd1-4b99-9ce8-ca54b53e17cf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "feeba943-85da-4245-aab8-757888cc8d89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72aadf90-caa1-4abc-a21f-1d1fb2f26ca1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44edf656-a9cd-400a-9c5e-60bcd09167c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118036ba-203f-4bb9-ad7c-b2dbda3c88ef",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79f67fbb-c548-4fe5-8c15-3ad02aecef23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a100c97-3be8-45e4-a439-585e0cbb1a3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c1edb1-b15b-42ca-8a54-5d5416658de9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60248857-4ebd-464f-92cb-0909cf7974a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31631d61-8ae5-4240-a359-6f8bdb9113d9",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba7c46bc-9bf1-48a4-b82c-7cb70a426b42",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "de9a32d3-011c-4653-9b84-7f5c9fd46cdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98981955-8c75-4fd7-9c8c-74f8aef0b949",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe9c1927-46a7-43db-90ad-c831db12bb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8303526-9318-4615-b123-e0e29c011393",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22105715-f56a-49d5-8224-dccaae38e448",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cbd7d768-936d-433c-a96d-847288572f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047549f3-ac23-40cb-b440-37d7cd537e26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3b55813-f610-48b7-a98c-ae9591e52bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7842cdd3-89de-4d5b-907f-2687fcff47bb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "644e089a-2435-440e-a824-4eb495300055",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8203dc9c-6e98-45b1-8ecb-7a4aef5bdcd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bc17167-6a27-4ca5-b99a-400dddff9d16",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3169d2a-1274-49a9-90d8-5d1e3bcc5cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1254d90-359d-43fd-bcb9-c0d3d4be3cef",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88ba7085-f800-4d0d-94fa-ed4086a4729a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3e355a5b-d2bb-4469-82d9-1430ec8b827e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54cc417-11bc-43bb-aeef-3fc53d83a051",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a2e44f4-3bdd-464a-8e9c-9da1e3466c9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2901610-ecec-4ed2-9758-93c70cb9ccff",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ee9a023-8388-4f93-b0e1-3f494d7e8ea5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c640fa3-9f93-43af-91df-9b350ef26982"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80898dfe-e90b-4370-8f65-52ce411e584e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80d89c02-4a9f-42ef-8250-ef2dd29121cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33009d7c-c6c8-4b98-ac10-37350b9a1aee",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc10019e-c5c7-4c1c-b006-bc1116bc8701",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c958bb6a-aa32-483a-9664-41244fc1df01"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7571e6-a893-47d0-89ba-dd8299353543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5bcd8d1a-299f-4f5a-905a-7db60d0e0db3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0da03ea4-29c8-4966-999d-fd65c029ec06",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f81f1d6-5980-4b60-bde1-eed54eb380fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "307b8104-3f32-4d2d-8d8a-79828647cc64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b0363d1-cdee-4d8f-b20a-59a4aeaba4b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4a19a1a-f2c4-4169-aa44-22cdb6606c91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d0fd193-0dfd-478d-9cb0-c59c550cf1ee",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86fb2bdc-06d8-4ad1-ad95-6606d9fce4de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85226460-c91d-413b-821c-cf4fe60f87f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccd3b054-1edd-4761-9561-9af4e9143c7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "798e5eb0-9d44-430b-9a18-eeefda13526a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43582ff0-82b7-4aad-a173-6d0804a2c72c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a5c651-440f-456b-8e3e-07416257a23c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c236ab6-2ce4-4a19-bd64-165b50cc8ba7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb21eaa7-66a8-4481-bb1a-f3fb07489377",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a5ec16-3deb-4d06-984e-9d27a16ef6e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "edf85d19-18e9-4acd-b43d-80734b93c5dc",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41355e13-16f1-4d1c-94cd-61d3de41269a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a696bf58-9030-4c1b-b1d9-03ca7311c952"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "172b31f5-8ab2-4920-9c67-ce559f0ec19f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "337bd029-cbe1-46d6-8ac2-8249b674c9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7182a89-1d15-41a9-8a8b-9f8e582be005",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06ed1492-2732-4109-95ff-6034f6e71f58",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0e7b8936-ef4c-48ef-a652-6f73501d9c75"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbc4b492-451d-4164-ab07-8342cfcd3068",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "727fa320-2048-484d-a7a3-d774e9d2eaa7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f0f5251-3073-40fc-84ad-09fcdb59dfc3",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6da6fb0-67de-4ab6-a40c-6b97cf61750c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dafd4486-d788-465f-aa43-ee764c5cdc9c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf3283a9-edec-41db-a296-8a8c5ec79526",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d29f37e-ea45-4d53-b5de-ba40fe203c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff2d7bf1-4e46-455e-b55b-44a75ab54da3",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35658bff-38ec-4c66-9438-f61426ec5f0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4aabb9ff-44de-4012-b005-7bfe7240bc74"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "33fe497d-e7dc-495d-864d-32a8868caaff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c623c76-e6dc-4985-ab3c-b1229803dbdf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53be4cf8-08bd-4e2d-95c5-c9f97c8e90f6",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d6bf9ac-d388-458f-90a0-f869655ab68d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1866dfe7-5fd3-4c6d-9103-6b93445a72db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "72267631-d2f6-4352-89ae-ef536c040a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88f57871-121b-4111-812e-6e77ca3e8401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef453d28-7b4f-4049-b119-c8f565cbc623",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2947185-49c7-4c50-8ae3-04693391af93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebf79fc8-7fb5-4f4f-b5e2-aa18f4067193"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df52fbd9-36a4-43b6-954b-203bca55061c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e71baac-9030-4949-8131-fce922209b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c135e58-8894-40b8-bbd2-56389ba0099e",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6496659f-edae-4e87-acde-2c1b3f885d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "abf400a2-e3df-40fb-afd4-27782306583d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e56734d5-013e-4e31-8bc8-315713bca2ee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71aa994a-0328-4409-91a5-6a95d8aee1ea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7390eb0d-a7e6-4de2-ad34-a5f5708a3eeb",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "157a2471-df20-47df-80b3-25bb7bdf24bb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b6cb09-1fd9-456d-83fa-caf538e3954b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b753f3d-75ef-4600-97ce-c344572a201f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27f30c6e-f117-4036-8b87-aaf4cc889ab9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b925018a-4015-46cc-97b5-b261fee631da",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7b046d3-79c7-40fc-a775-0c801fa57177",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f0f94910-3d74-4346-8659-9338bc50016f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bdb6e2a-df2b-4b6f-9d75-1d4270df3404",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f029008c-c915-41e2-a76b-3aa6ebfc4f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ba0f53-1b92-4cbb-8522-7c252f2ecdca",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4bd90a2-9ffe-4606-947f-accc687aca22",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ab19fc67-4954-480f-8edb-a3105a7a0f8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e650e6-23fa-4c7e-bc8a-ae4303cf6387",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c6f0cf9-9c91-4a77-8951-7364893e7d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9b116e0-086a-4806-94ef-ab4d248ac7bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31acf493-392c-451c-92ff-e6e7edba0971",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d2e71493-fc00-4e72-8622-ed71c96a998a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fd5893b-6eba-42b6-b106-6a06656eb7b4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c505c58e-c085-4f97-9282-cd06fa254706"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68109c8e-f333-4a32-b47f-610401975a3b",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da42b0a6-f80e-4014-a3c9-96d6b6677c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d38d9f99-5025-4c46-9d62-be6ed4fccbf8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4d4eb8-93c5-4233-a51b-b4249ef34e9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "444de289-042d-41f9-80ab-7f6654e21548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5eb05fc-7630-4456-b1d3-d0567cb1f102",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0685f31-8e86-4a18-8ac8-1e726d283736",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a90ada8e-fe22-470d-a469-b9e772b176cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "450e3bb3-4e7f-49a3-810b-fa12924f5cd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "efa15db3-6ba7-45bc-8238-3b57f54e16f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371069d3-4e49-4722-9a44-37886cef2e4a",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "454ba06b-3a3f-4fcd-91a2-6d2b9278ae21",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fae1bb16-898d-45fd-b3ed-d56df74918b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4349fd9-fdef-4e67-8f12-d4906f18bf9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b416370-1e4d-4246-bfff-68931b4f3dc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "197912ca-4916-485b-9426-af4049257a96",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfe910c5-a0dc-4470-8804-0e2f209023a5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9229e3d2-2b92-40a2-9f1a-85911e0efeab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f463643-b0cf-4a8c-a7f7-3ff585b8f258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a68301ca-ceea-4a0a-9483-09c63d02c5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1257ef4b-8502-4e00-b662-4bc1e26216b7",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3394d357-b3af-4831-8d1a-ff2b49aa4a25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ecb2267-eb07-42d8-bbbe-255ebeb56cfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "30009618-8e40-42fe-a82c-1b70afb3535c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a950fff-7962-4233-b5e1-d82e0df85ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30091c62-6f04-4038-a4cc-11934b2393f9",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15cbf0ab-35a5-4e6d-ac35-0c7a00d13721",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8fe1b072-827e-4685-99a8-4be02a6b88d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51b5d33-726f-4128-8449-02e41291aca4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "179221c1-5145-4873-828c-b400a60c51b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93024840-308e-4852-8b08-9953a1d09226",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d148cc3-c053-4e43-b270-2e56e9df733b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c38afd5-a243-4b97-8fdb-6b49f7950b2d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcc3e760-ef0f-42ea-b9e4-92711a753a07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e567c94a-6df9-4be8-9c8a-eddf0a468656"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "48444b90-54be-42c6-be6c-5a57ef0837e5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "03c0f76e-949f-49f4-ba30-af0bc15fca24"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "957c63c2-790e-4543-9eee-d2272ce35f98",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "a543fbbb-5704-4f3b-a1ef-29901be110a0"
                    }
                  }
                ]
              },
              {
                "id": "5de59df7-9d6e-44eb-a6a0-07fdc325a004",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e247b970-5509-4239-95fd-88df77208996",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12ea11e5-07eb-42a1-88ba-9105c2d268e9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "7f4af2c7-eba9-48fe-b145-9b787787be5a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a0ad76c-0c2e-4021-970b-14b142fcd201",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2b18a78f-4795-4cde-8c3b-7245cbfbf356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fee1f87-6496-4342-88b6-0f16b1a7ccb8",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "362ca470-4ee1-4085-b935-af7635ee4931",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "5ef8f646-68d9-4abf-b7d3-f9176dcba03d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9469460-56dd-430d-8c70-a5f763d7b4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0447c161-e87f-4f8b-bc02-a224bbd413be"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0fc6d9f-3462-4008-be0c-74bc7b35915c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b10bd9a0-bd23-4f9c-80b3-209d822de144"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1314fc25-e2b7-4734-8fa1-e2e4c549c477",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "44d50786-093c-414b-b0de-bb62fdf73353"
                    }
                  }
                ]
              },
              {
                "id": "c498afbf-9529-4e1d-ac17-c5d5b260ff66",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "9a1c0126-9344-41e0-87cb-85ac161a4936",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5090fc27-7112-40a6-85d9-b2da29fe1b59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "18e0779a-9f7d-4c83-a709-ed569a3b347e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5380241-9c68-4528-911b-dad9871be969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a344f3a-c023-4742-b875-11a204689f00"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "b7fd70f5-0158-4683-bffb-84f795fd2465",
            "name": "Positive Testing",
            "item": [
              {
                "id": "06dcb23b-87ca-4f2f-a57f-8e3b4feca705",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cae157a0-ac2b-4a14-869f-7a6f3451d3a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "c3874403-9a8c-46c9-9e75-570c748db6c1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ff405d24-3809-400f-aa37-5a54f2e74acf",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a069313d-a7db-4df1-a28b-95252593f922"
                    }
                  }
                ]
              },
              {
                "id": "0f655b89-d090-43c4-a44b-a2033a892f6a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f775281d-cc89-4bb8-b0e9-c10a9659762e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "1f9bb7db-b6fd-494c-afcf-4e4e38c4139f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bccd659-ee78-4d61-ae99-51f50ca5c084",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b11167e1-50f8-4faa-879e-077685751ece"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "61e01db0-c857-4cce-99ed-3bee5a559d31",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "9f642c70-bb7b-4eb8-9242-34a68b4be0cf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fdad9d9-8084-40f9-a0be-b2579a61c4e9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "9f0b3b2f-3e3c-4b79-b9ea-f21f5afb5c99"
            }
          }
        ]
      },
      {
        "id": "40cdfe2c-571f-4016-906f-9e9879b16eec",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "3a489e97-b13e-4331-80e2-3fe282053931",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2cf51570-1e37-4971-97d1-836aadf28bee",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fff8464-ddb6-4a61-92d4-3a3445b471d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "62354964-78e6-41de-bf9b-f788dfea915f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd4363fe-7fde-43fd-899c-0a5a54e75b8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4bc8eb85-5671-46a8-86e1-288c9b7206a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43ec8d05-50c3-421c-aeaf-3b1d99646a75",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7f53b43-5b70-4cd2-a7e2-98f18bbd0f71",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "953f0b38-f379-49c3-a7c5-4823751f109c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920d28c1-8afb-4492-b69b-85fafa96a17b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9c875d6-5692-45d1-b545-b0463902124f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad0326d6-ebfb-4812-b0df-bc8bde8a3ad9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f3b7391a-b0a4-4358-a6c9-7d5d9297652f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "97367683-f880-4481-b218-aa88cd7c9435",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "61aa5c81-7558-437a-96fc-30c5b96950ce"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "427a489a-f2c8-41ca-8c81-c601c4d872bc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3f5afbe7-e60c-4504-b116-29c1fa231abe"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c097446e-a3fe-4d02-a0ee-5614fed3f230",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6f0933c7-7b9c-4f26-b99c-9a417d88f697"
            }
          }
        ]
      },
      {
        "id": "ca1f826e-6160-443c-a296-60be5f95b1ab",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "10ebce47-babb-4b1e-a7a3-3a31594271de",
            "name": "Negative Testing",
            "item": [
              {
                "id": "cac1c063-50ab-4ac0-852e-7385d6fc9600",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32db9d68-1fef-47cc-8091-da85fe2a76ef",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac046a8-1be1-4b69-bc33-6d09e7238406",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "abd0b2f3-d148-4142-8052-9969b5a95689"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5148ab4-4ccb-4910-9271-3f9b2da7aa2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2c7ae620-f109-4843-805f-553873c6c8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fae3f64-fa20-44bf-895c-c3b02c46f4c1",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1ab6a9b-66cd-4cde-bb3e-3f75f89fbc7a",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "822b144e-97d4-47d1-a853-18bc8b8a39fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64d4c691-9a7c-4a6f-a2fd-e4bcb788d958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c130e6c4-7424-478a-bfbb-647114edecb1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f0b94f4-4e80-4460-ab04-609152862cd4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecc2a41a-d1df-48d2-86a2-18150bda22ce"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "0293fd56-f225-441d-9e92-8b1da888ba89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e3d76f28-5444-4e81-83e1-150fefd2300a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c8051f33-3fb0-49ec-a549-3386241a2a67",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "10192a4a-934b-4d9b-981e-7671e9e1050b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ab0b351a-fdc4-401a-8e84-81d5179df900",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdabb00b-51e3-450d-b5a3-443014f6c403"
            }
          }
        ]
      },
      {
        "id": "29125407-ca5f-4324-8678-3511648e024b",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "43d0b25f-8434-4649-8eb5-8a641bf25765",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b080c576-7484-4a61-8da6-6cd5827b56b1",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "5a07909a-3d5d-4b79-92c6-752a17bb092c",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d7526a-ab7f-48d9-83a3-5f70cf726b23",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a4ae65c-9ed3-4e92-b8b3-b914672a3d63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b208c529-8b16-4b0e-a8fb-bbbdb156771b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9e0697a6-6ae9-417c-8f0a-e6293f34cd0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc45f377-b00d-4d4b-a15a-a0f9d3844064",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a680e393-8abc-4f43-924a-78347fcdcfda",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "4237a9f8-6e72-4273-b985-4386bc8a4df7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adedc1fe-04f1-4067-b7b1-633a9a2bbf6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "80c213fb-0195-4357-8792-9bfd5b244571"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4e1d5b71-3c49-4086-b7d1-d04d77d20725",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "799d9491-b17a-47c3-83e9-aa2a95891078"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7e22c239-136e-4094-810b-0db46873bdd3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b7f7b7e4-77d6-4a3f-90ea-9918d408fef2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8abd9042-bada-44f3-b727-c4441d23247f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ed0e046c-42a5-465e-b353-3a9f3be3c028"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e7bdad16-3f83-44f2-a840-01160653d8ec",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01b6bbcf-d86c-4390-93c0-3b756fce3d6a"
            }
          }
        ]
      },
      {
        "id": "6c0af0dd-c8c4-4f56-8945-481912e1a9dd",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a4f2f24-bb76-4b72-9ef7-0304681d343f",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d960cecc-4677-42de-82df-2f8fc65769ba",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a99bf134-3011-4112-9cc0-0d433e47febe",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9be35575-21c8-4bc0-a7ca-6a036ac06ac5",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32534f7c-a1d4-4ad0-9806-45023c77fb31",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 72.1538461538462,
      "responseMin": 7,
      "responseMax": 416,
      "responseSd": 33.45121856776876,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1681778154340,
      "completed": 1681778187307
    },
    "executions": [
      {
        "id": "307e2fc2-37e3-44ef-a159-94115c02330a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "d9b5d126-0991-40aa-8e87-1753170e99fe",
          "httpRequestId": "ce0f6058-2509-4970-9ee2-308d0a945490"
        },
        "item": {
          "id": "307e2fc2-37e3-44ef-a159-94115c02330a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ec5e99f8-b9a1-457e-9c33-d0b8ba369e02",
          "status": "OK",
          "code": 200,
          "responseTime": 61,
          "responseSize": 0
        }
      },
      {
        "id": "14f170ab-2fff-4741-977a-ffbb33de8fab",
        "cursor": {
          "ref": "5e247693-cd9f-4620-811c-1e8f1824b75e",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5684b783-5b5a-4090-91a0-af6ec2294d3e"
        },
        "item": {
          "id": "14f170ab-2fff-4741-977a-ffbb33de8fab",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "45bd76c9-3e1a-41b2-9b97-a03f521da09e",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "2fa9fac4-c47b-41f9-8e06-c0a646002c65",
        "cursor": {
          "ref": "af1931f1-00e0-4c22-9343-a569ef1f1143",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "1471e02b-68b3-48b0-99b3-5b4b245bad9c"
        },
        "item": {
          "id": "2fa9fac4-c47b-41f9-8e06-c0a646002c65",
          "name": "did_json"
        },
        "response": {
          "id": "e30d8108-10c2-4dbb-960c-c70ba7a07cd0",
          "status": "OK",
          "code": 200,
          "responseTime": 416,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3aa727-abe9-4dc7-bb6e-76ab8767cd6f",
        "cursor": {
          "ref": "203876f2-0261-4469-9412-4ad6fab9ac64",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ffe6c58e-8b7c-4a89-b32d-ac2f41a73f02"
        },
        "item": {
          "id": "4c3aa727-abe9-4dc7-bb6e-76ab8767cd6f",
          "name": "did:invalid"
        },
        "response": {
          "id": "3768082e-586e-40c0-8451-4e1b6810f1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3aa727-abe9-4dc7-bb6e-76ab8767cd6f",
        "cursor": {
          "ref": "203876f2-0261-4469-9412-4ad6fab9ac64",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "ffe6c58e-8b7c-4a89-b32d-ac2f41a73f02"
        },
        "item": {
          "id": "4c3aa727-abe9-4dc7-bb6e-76ab8767cd6f",
          "name": "did:invalid"
        },
        "response": {
          "id": "3768082e-586e-40c0-8451-4e1b6810f1e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e8cb028-c44a-465d-913d-74bec33b7dec",
        "cursor": {
          "ref": "4007e294-ae20-4eac-8b3c-630fe0d4bb98",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "0963312d-dc6e-4a01-9732-a5a4c047d3a5"
        },
        "item": {
          "id": "3e8cb028-c44a-465d-913d-74bec33b7dec",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "6a1dbb46-0701-40b1-a24c-a3d75c898a8d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 101,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c38858f0-4600-435f-a14c-cc3b338b65f7",
        "cursor": {
          "ref": "0c0f0be3-3b1a-47af-9b15-e4d8153129f7",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "952a9e17-b3fb-4661-ab5c-0212c8ad6cf2"
        },
        "item": {
          "id": "c38858f0-4600-435f-a14c-cc3b338b65f7",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8245f894-fd84-4676-823d-5bce48be8b0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b45727b-8204-4bad-af2d-57892a00c9ea",
        "cursor": {
          "ref": "94c9a01d-fd00-4274-9293-687120b6b0e6",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "7ae9bc1e-0812-4e0c-9746-3d1eefa9460a"
        },
        "item": {
          "id": "1b45727b-8204-4bad-af2d-57892a00c9ea",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "af018503-24c7-40ea-9b81-ff2fcfedfcf2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0307c9-68d7-41ef-85cf-15ca0eeeb941",
        "cursor": {
          "ref": "a46af7a1-7bdf-4942-8e3d-d62bc4f3c4b0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9af6e2a8-60c9-44ef-b3c6-7a0c10b253d5"
        },
        "item": {
          "id": "5a0307c9-68d7-41ef-85cf-15ca0eeeb941",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2c81649b-e453-43aa-a8e0-0e158747b905",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a0307c9-68d7-41ef-85cf-15ca0eeeb941",
        "cursor": {
          "ref": "a46af7a1-7bdf-4942-8e3d-d62bc4f3c4b0",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9af6e2a8-60c9-44ef-b3c6-7a0c10b253d5"
        },
        "item": {
          "id": "5a0307c9-68d7-41ef-85cf-15ca0eeeb941",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "2c81649b-e453-43aa-a8e0-0e158747b905",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 157
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf5aace3-a4c7-431d-8ba9-227f54176286",
        "cursor": {
          "ref": "34eba827-f025-4161-afb2-9690302c78ea",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c29fe035-3a3b-4553-b62f-edefe5ca6eb9"
        },
        "item": {
          "id": "bf5aace3-a4c7-431d-8ba9-227f54176286",
          "name": "identifiers"
        },
        "response": {
          "id": "6cde0343-7d5d-40eb-a984-bcc02a8cecd6",
          "status": "OK",
          "code": 200,
          "responseTime": 114,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778652e6-556b-48b9-b68d-51458db49a2a",
        "cursor": {
          "ref": "82871cb5-abd0-430f-b82a-b56c95cfa98b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a9ade3ed-a0f1-41b0-9769-984e6c5a2340"
        },
        "item": {
          "id": "778652e6-556b-48b9-b68d-51458db49a2a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dde14e2c-3b03-4ac4-adca-ba036396a76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "778652e6-556b-48b9-b68d-51458db49a2a",
        "cursor": {
          "ref": "82871cb5-abd0-430f-b82a-b56c95cfa98b",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "a9ade3ed-a0f1-41b0-9769-984e6c5a2340"
        },
        "item": {
          "id": "778652e6-556b-48b9-b68d-51458db49a2a",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "dde14e2c-3b03-4ac4-adca-ba036396a76e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29a2545b-d596-4fb1-899e-7b1c0792a3e7",
        "cursor": {
          "ref": "ad939656-9bd1-4b75-b0d4-996c33b93c96",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "4a80e45c-4a43-4187-8e85-f2ec6f7bef40"
        },
        "item": {
          "id": "29a2545b-d596-4fb1-899e-7b1c0792a3e7",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "4b1f5bca-f700-41e7-96ff-a41647a8acf3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d32950-0e18-49f3-8d61-3f35b650f4bd",
        "cursor": {
          "ref": "41dfb849-94b3-4f40-b633-38019ca8b0be",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "361f830f-703a-4d62-8abc-2514afb32bd0"
        },
        "item": {
          "id": "86d32950-0e18-49f3-8d61-3f35b650f4bd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "71168b59-5ccf-4a49-8f9c-670b1139a5e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76d39525-7061-4a28-b60d-882ea4ee94d2",
        "cursor": {
          "ref": "885bf7e0-4b6a-4a8a-a73c-173b5d8ca83b",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a5aee6de-f32b-46d9-b859-9879fd5164ac"
        },
        "item": {
          "id": "76d39525-7061-4a28-b60d-882ea4ee94d2",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "60d3d740-770e-4f1f-90b2-8fb5c48f35a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e345561c-b78b-458d-8432-6574769fe2e0",
        "cursor": {
          "ref": "5717218d-50be-4423-bdcf-c7beb3f378bc",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "ca0de986-32f1-4680-9dee-8baab4f804ab"
        },
        "item": {
          "id": "e345561c-b78b-458d-8432-6574769fe2e0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "270b2976-971e-4b39-85b5-e2cef4c56a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10f7291d-0fe7-404c-9224-981ed5e1218b",
        "cursor": {
          "ref": "c5a9a07a-460d-45cb-8d93-6fefc6fa91a5",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "b71afe36-0820-4748-b4fc-2473b6e390bd"
        },
        "item": {
          "id": "10f7291d-0fe7-404c-9224-981ed5e1218b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "00221466-3771-4c3c-957a-f976d640786a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cee19cf-b01d-4b56-a1e3-760adb38335c",
        "cursor": {
          "ref": "2d20f60e-1a78-4b36-b3d0-c238a5e2fabf",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "c9804420-8f2d-4bce-8c1e-10aca570ca84"
        },
        "item": {
          "id": "0cee19cf-b01d-4b56-a1e3-760adb38335c",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "08ce978c-35af-43cc-af33-0238169b5caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db8c90b-1226-4b1b-a81a-21db6c181ac9",
        "cursor": {
          "ref": "16180155-156c-4d44-a3d6-3b397c23a1f0",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2b080241-e40e-4c24-b3af-16516f4ca4dc"
        },
        "item": {
          "id": "2db8c90b-1226-4b1b-a81a-21db6c181ac9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c8cf103a-9f03-4d1e-8934-af97ef4db542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70f95690-e2a0-4b1f-a7cf-6510554c426e",
        "cursor": {
          "ref": "aca13ca7-c6ec-4169-bd18-a4046e76636e",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "ee08d860-5b3f-4218-b1c3-d3ecc4ef8d65"
        },
        "item": {
          "id": "70f95690-e2a0-4b1f-a7cf-6510554c426e",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "76a35db5-7560-40cd-8d5c-1ca2e6d200a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d94b37a-cd9e-4241-a615-472ab04ac571",
        "cursor": {
          "ref": "393a787f-adcd-4501-83c7-9274f1327c18",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "9776aa75-e477-4d8c-8fcf-1152240ed759"
        },
        "item": {
          "id": "3d94b37a-cd9e-4241-a615-472ab04ac571",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "95d98cdd-8ce2-48f4-bdca-710e88900885",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fcc9299-404e-4b3d-a223-009737858081",
        "cursor": {
          "ref": "8c62f8bd-a0b0-46db-a33d-af81a63ded2c",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "eacce689-5a71-4fe9-9ae8-ef25467ba6dc"
        },
        "item": {
          "id": "8fcc9299-404e-4b3d-a223-009737858081",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "8951ecde-7eb8-49b2-a24b-f4ccc4e7e28a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f433a19-4304-4e51-a0de-dda97df4686d",
        "cursor": {
          "ref": "a12b5586-8bd8-4dc8-910f-b3c9019dc72f",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "bb389ab4-cce2-4eed-b54e-426b375260f3"
        },
        "item": {
          "id": "8f433a19-4304-4e51-a0de-dda97df4686d",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3fa861ad-01d7-4588-b79e-65f9b9f59b6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0b54b55-1508-457a-9234-0d804dee7b0c",
        "cursor": {
          "ref": "bcc3e4dd-6acf-44b4-889c-621d32791908",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "da0574ed-505b-4eab-a9f9-f0988294455e"
        },
        "item": {
          "id": "c0b54b55-1508-457a-9234-0d804dee7b0c",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "2ab61086-6e1c-4d09-85a4-f092cbc28fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db9deed3-f76c-49f5-a259-82581e4e976a",
        "cursor": {
          "ref": "2dfd17c7-4c83-4086-9aa3-f6e7ec5924cc",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "69d3ebf3-3e63-47e5-887c-0618ef726b76"
        },
        "item": {
          "id": "db9deed3-f76c-49f5-a259-82581e4e976a",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "db875a16-4a77-4645-96f8-296ae8e98ec9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385b6647-74ab-458e-a81a-9faa4eb72400",
        "cursor": {
          "ref": "9977f5ce-e2e3-44fc-802c-0bb9f306ddbe",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "cca3fe42-9198-47c3-bf95-981aaff0a75f"
        },
        "item": {
          "id": "385b6647-74ab-458e-a81a-9faa4eb72400",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "c837a79e-dcf9-4110-8b72-2998f9b19005",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a15d04a9-7df1-439f-ab2f-0370a12f6c66",
        "cursor": {
          "ref": "7806611b-1c6a-4f1e-811c-27252b2cd06d",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "da293ac6-8b99-4976-9036-2ae8e3bc2c27"
        },
        "item": {
          "id": "a15d04a9-7df1-439f-ab2f-0370a12f6c66",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7507e786-700e-4fd5-92c2-ad45872c5f32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d70b23a-95b9-43a2-9e51-d61c3e4b501c",
        "cursor": {
          "ref": "e4749adf-dfae-44a1-acbd-d284d700350c",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a73260b7-3511-49e0-bc6e-fdfde9036a92"
        },
        "item": {
          "id": "8d70b23a-95b9-43a2-9e51-d61c3e4b501c",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "2c9816bc-93d3-48a3-b232-e482fcd32d58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b373cbc2-8fc7-40f6-aaeb-a2ecb093effb",
        "cursor": {
          "ref": "d7cbdfaf-26c3-490e-8bb4-a5ba4aa4e4ca",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "11cf710b-4669-4567-b760-a7223af6897d"
        },
        "item": {
          "id": "b373cbc2-8fc7-40f6-aaeb-a2ecb093effb",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "13c4cb6d-3641-4a54-ba45-870c8c8f44ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d08899e6-f2d6-4ee9-8f57-7640e5831153",
        "cursor": {
          "ref": "852696b6-98bc-4a4d-8266-9c3167cf9815",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "651d6e6f-8874-4d79-b9df-57f6277cccc2"
        },
        "item": {
          "id": "d08899e6-f2d6-4ee9-8f57-7640e5831153",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "259f0930-6058-4031-9944-3d2ac884f4b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5207e67c-c48c-4b0a-89eb-58a5348130e9",
        "cursor": {
          "ref": "7204bbe0-e25a-45c7-8cce-04cb7ef37771",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "5cddfb77-005a-44aa-aa7e-aae3d1b452da"
        },
        "item": {
          "id": "5207e67c-c48c-4b0a-89eb-58a5348130e9",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "690eae87-ce9f-4b57-bf94-e3d1e997922a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d049e1-426a-473d-a2b6-3480bc28387d",
        "cursor": {
          "ref": "a4b1caa0-ec90-4be2-8e03-080a33b44750",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "156a807c-bdd6-43c9-a3a8-8fb94a4d0e23"
        },
        "item": {
          "id": "f9d049e1-426a-473d-a2b6-3480bc28387d",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "53b7be85-3abf-4432-82cb-eac455fdf5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85c99a14-1598-405c-9699-ac681e50139c",
        "cursor": {
          "ref": "74bc5fbd-dfff-4c51-8679-540ae7c2801d",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "c190f2b7-6cb7-48bc-b84f-33ecb434dfff"
        },
        "item": {
          "id": "85c99a14-1598-405c-9699-ac681e50139c",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "cb4e9c2e-aa5f-4f26-8ee5-c51103cebd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f6472b4-90c4-4964-89f2-7cac80315d4f",
        "cursor": {
          "ref": "780ed72f-4aba-41e1-bbf7-52a436c8c166",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "da3f5a80-cd91-45a8-a03f-a56a44483b5b"
        },
        "item": {
          "id": "4f6472b4-90c4-4964-89f2-7cac80315d4f",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "44c93e00-f186-483f-972c-c0c6cbfa5c54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ee1a547-0cc8-4eb0-b931-a4a1fef8417f",
        "cursor": {
          "ref": "3224d8c8-7ce8-47a6-9d60-adf8e45912a6",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "ec11ffc5-373f-45ef-89db-ae7938f947e7"
        },
        "item": {
          "id": "9ee1a547-0cc8-4eb0-b931-a4a1fef8417f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "d86f55cd-f3b8-4d35-bfe7-e10d65db04f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e661b193-1aa7-458b-8915-87572c48a47a",
        "cursor": {
          "ref": "cbde5e43-df21-46ad-b99e-ffe9d95fa08f",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "f4b63dd9-0734-417f-9dc8-ef7bb5e3ea32"
        },
        "item": {
          "id": "e661b193-1aa7-458b-8915-87572c48a47a",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "dedd790f-3bb0-4082-80c9-beda2fe61ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8ba8d83-a802-4de8-8154-c7678a068b75",
        "cursor": {
          "ref": "7daf42dd-ee52-403d-bdb1-54079fd8e517",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "1a084c45-b842-477e-aca2-4e42a2a688ef"
        },
        "item": {
          "id": "b8ba8d83-a802-4de8-8154-c7678a068b75",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "945ffae4-3eff-4a0d-8a87-ef91b900a45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae148e3d-d3fd-45c0-98e1-ca87a50d691d",
        "cursor": {
          "ref": "b6aef9ba-8012-437b-bf79-d39a8173adbc",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "3666d7f0-d37b-4068-bb14-a6abbbd12578"
        },
        "item": {
          "id": "ae148e3d-d3fd-45c0-98e1-ca87a50d691d",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "a1e319c2-2581-494f-bd9c-f5a68f0e6d3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4a5ace-ca60-4e28-8552-7a6c3f0d6c18",
        "cursor": {
          "ref": "666798fe-942e-432a-a4a6-88684def2f3c",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "16143412-20a5-43c8-bfa0-2c5833c3bafd"
        },
        "item": {
          "id": "ca4a5ace-ca60-4e28-8552-7a6c3f0d6c18",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "e25a0d65-0632-466b-98c0-b851e1345e79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ea2389-1a89-49cc-bbae-71c98aa87cd8",
        "cursor": {
          "ref": "8608aa0a-b413-4426-addc-9b5e579b0b75",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "125c5fad-cc77-4a56-8dee-73f4ce89ee1e"
        },
        "item": {
          "id": "71ea2389-1a89-49cc-bbae-71c98aa87cd8",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "90cab9a6-0eac-41a7-b80d-155f30197d7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2eda70fa-cc5f-46fd-9473-2140bfaa9c59",
        "cursor": {
          "ref": "28ddf4b2-6533-4081-ba3d-9ec858110876",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "066dd3dc-73d1-435e-8aee-473ae77e7170"
        },
        "item": {
          "id": "2eda70fa-cc5f-46fd-9473-2140bfaa9c59",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "a27dde1b-b785-4181-9141-b3c5d4f09094",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c4f96b7-60d3-4b3a-aa8f-fe10b612aec2",
        "cursor": {
          "ref": "49adc228-82f7-454e-8c55-d987ad9ca797",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "76903d9d-5845-4a50-9284-b8278dcbbdca"
        },
        "item": {
          "id": "4c4f96b7-60d3-4b3a-aa8f-fe10b612aec2",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "442c5baf-f105-4b8d-b511-a7a7e3846a68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b0fd0b-8075-4658-85bc-5b7a84f651dc",
        "cursor": {
          "ref": "23a1e8fd-77b9-4190-bf36-26f99232a4e3",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dea65ae9-60c7-410f-a205-2c9abc658a49"
        },
        "item": {
          "id": "76b0fd0b-8075-4658-85bc-5b7a84f651dc",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3d32d559-1518-4afa-afbc-3b6ed132b7ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aad49cfd-bb02-475a-904a-475ad285e0e9",
        "cursor": {
          "ref": "6aa6c48e-22b7-44a7-bf0b-01872fcfba12",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "cb95f9b0-62b0-4dda-8706-3f888f3b937d"
        },
        "item": {
          "id": "aad49cfd-bb02-475a-904a-475ad285e0e9",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b1fb4003-bca6-49d3-a704-40aa094dd26b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ddbb582-be80-41a7-a727-d0407175ec45",
        "cursor": {
          "ref": "743cdd0e-2577-4df9-8aa5-081484fbe483",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dd88a89b-bcc2-459b-b59d-05f75f381a3f"
        },
        "item": {
          "id": "9ddbb582-be80-41a7-a727-d0407175ec45",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "e9a61a11-1db3-4859-8025-69c96b03936a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee7b4d4c-25a9-4c6f-9baa-25ad0b8e85c4",
        "cursor": {
          "ref": "9455da9b-dc28-4b66-9901-00bc58e9b2a3",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "4e198ba4-f319-4ee1-814d-c2a2747ff1ea"
        },
        "item": {
          "id": "ee7b4d4c-25a9-4c6f-9baa-25ad0b8e85c4",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "e9c9ab01-0b8a-45b5-ae74-d7fb37ee7cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4db2ad92-0812-4e2b-9883-4ccd359cb23c",
        "cursor": {
          "ref": "70307b72-4752-4498-b8aa-30e60bca06bb",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "641c5f64-a438-4694-adf9-e1c49e43b97e"
        },
        "item": {
          "id": "4db2ad92-0812-4e2b-9883-4ccd359cb23c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "71b6bda5-4cc3-4e6d-84b8-e0f37255e640",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40da245-d7ae-490a-b546-81e6a362bf8d",
        "cursor": {
          "ref": "274fb531-9d7c-43ce-a72e-f5746f14c723",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "6fbb1907-e638-4fa4-b8b1-408b6eee855b"
        },
        "item": {
          "id": "b40da245-d7ae-490a-b546-81e6a362bf8d",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "5f654e00-2c72-4ee8-93c3-26ce26b075a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5524e9c-e036-40ee-bdad-51a8ccd69fdd",
        "cursor": {
          "ref": "f1ba4fa5-a0bf-45db-ad23-9818d49a233f",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ec3cc963-a5ef-465f-94d2-7887e0ac1f31"
        },
        "item": {
          "id": "e5524e9c-e036-40ee-bdad-51a8ccd69fdd",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "fd27c0ef-8453-44b2-b797-931a63cdba5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f76c901-cd92-4feb-8312-515b51477a24",
        "cursor": {
          "ref": "9194edda-aae1-40f4-b1ee-2dda6f19f02a",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "e213c773-9b17-48b1-aa64-2d643b71a4fd"
        },
        "item": {
          "id": "4f76c901-cd92-4feb-8312-515b51477a24",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "48e80f95-3c4e-4613-a33f-cefffd706bda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ccc7f48-bbd1-4644-a225-6eb4e2e21e09",
        "cursor": {
          "ref": "d53065a5-f674-41eb-9019-e32c8bdfc7eb",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "d34895d4-f811-4b45-aa0f-01c086318f8e"
        },
        "item": {
          "id": "1ccc7f48-bbd1-4644-a225-6eb4e2e21e09",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b3345b21-3bb6-45f0-a293-8a4e7123c700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "215aab19-1df0-4145-8814-910551cc3211",
        "cursor": {
          "ref": "a1cbbe37-ba1d-4206-9c9c-55715667138a",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7dd965a3-7d7e-4c3a-b15e-75e888d7d9ac"
        },
        "item": {
          "id": "215aab19-1df0-4145-8814-910551cc3211",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "e7c4177e-c613-4da3-b681-fa63d949abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "909d17fb-e93a-43b1-b7e3-b5accf50284c",
        "cursor": {
          "ref": "2768b366-69d8-4189-89d4-67369c809715",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "ecefb4b9-9774-43cc-8006-c098e64711f0"
        },
        "item": {
          "id": "909d17fb-e93a-43b1-b7e3-b5accf50284c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "eb4f2de9-259b-4ca9-91ff-75df06e51ffb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40fd9e94-dd80-44de-a717-360c6ea4a6a0",
        "cursor": {
          "ref": "4a23d83f-672c-48c9-a9a9-63cd629acbcf",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ffa12c8e-f873-4cc5-80c1-40f8e16ced79"
        },
        "item": {
          "id": "40fd9e94-dd80-44de-a717-360c6ea4a6a0",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "6416bda4-b908-468f-b7cc-bd7c65795e49",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 72,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8aa8b35d-fe43-4ff4-8f2e-0492a1e182c5",
        "cursor": {
          "ref": "7ec7cf96-1470-46a4-88f5-235a58174998",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "d984248f-fc0c-4b49-882b-703bfff79df2"
        },
        "item": {
          "id": "8aa8b35d-fe43-4ff4-8f2e-0492a1e182c5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e041817e-efc3-454c-a3f0-a2290a172048",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59e7a540-12e9-4478-aa3f-7a23508756ed",
        "cursor": {
          "ref": "b9746a3c-ed6b-4bda-a2c6-62eaef4350a1",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a521a143-a253-42e7-a1ec-fb9375f7050b"
        },
        "item": {
          "id": "59e7a540-12e9-4478-aa3f-7a23508756ed",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "75554414-e993-49e4-bf2f-49f19928e308",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0538431a-83eb-4423-a327-2ca5548f275d",
        "cursor": {
          "ref": "8abc07ac-47aa-4d0e-9fca-81bcf2a840dc",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "429cc0fb-f155-49c6-a017-cd7fb45df9f7"
        },
        "item": {
          "id": "0538431a-83eb-4423-a327-2ca5548f275d",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "5566418d-4825-4dd2-b622-cf699489813b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dac1fba-8619-4869-9374-b3a358e86f8d",
        "cursor": {
          "ref": "b5b613f0-0958-42c4-85f9-3689d6d17ef9",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8faa7f96-1cb7-4437-a9b0-29047e7d2e8c"
        },
        "item": {
          "id": "5dac1fba-8619-4869-9374-b3a358e86f8d",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "bf7ef6bf-bb74-496b-9c8a-4d348b2ba53a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41106586-45d6-4d3d-88f0-e91ab6486189",
        "cursor": {
          "ref": "ebe67863-8ed6-4580-b526-b0ff1c04f761",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "e3d0541d-2967-40ad-9b84-3c5f8002630a"
        },
        "item": {
          "id": "41106586-45d6-4d3d-88f0-e91ab6486189",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "48573bb5-7607-4565-9935-201479fa491c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9d8ae32-59d3-4920-b236-3f03daffe961",
        "cursor": {
          "ref": "9ca68e4c-80ae-47ba-81fa-7da0f7341b92",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "014c70cd-052d-44d5-bc94-77c1d83564f4"
        },
        "item": {
          "id": "c9d8ae32-59d3-4920-b236-3f03daffe961",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a71889c2-21ff-4eb2-9793-a19f32b330f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "088f07f0-e5bb-4371-9a80-405fa7c9e496",
        "cursor": {
          "ref": "ccf02925-bc4a-4bce-8c33-279575612306",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "56b1e3c1-3fbf-4f1c-b733-0b9a69715177"
        },
        "item": {
          "id": "088f07f0-e5bb-4371-9a80-405fa7c9e496",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "e69fb1d2-724f-4fc4-ab04-00a6edf81cff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f1ddfe4-1dc1-49e0-b72b-bf152cbe3729",
        "cursor": {
          "ref": "c7119981-6597-4057-9ea3-528eaba91a29",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "93808bf7-6022-4201-a1d2-ff3f9efd97e9"
        },
        "item": {
          "id": "9f1ddfe4-1dc1-49e0-b72b-bf152cbe3729",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "b026b72b-3f06-4dec-91c0-7089cb9927e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b96ec0fa-f803-4602-ae54-d9d7973ac939",
        "cursor": {
          "ref": "f8a537f7-d40e-4086-a470-132bee547314",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "1f1f225e-b719-45c4-9862-7e71c2488f65"
        },
        "item": {
          "id": "b96ec0fa-f803-4602-ae54-d9d7973ac939",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "19d77465-a271-47c4-a8f7-a982f71a1f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5bb7a4-d37c-47d4-99ed-3976e24f0790",
        "cursor": {
          "ref": "1f36ec69-00d9-4d74-800a-d37e0f4b510a",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "87f1a23a-79f5-4c31-b0b8-540987b4a7d0"
        },
        "item": {
          "id": "0b5bb7a4-d37c-47d4-99ed-3976e24f0790",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "0ff8ff8e-3057-4b96-9d29-905c2b5ce5bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6dc5dd-7684-4fa4-8212-285fc77f2b4d",
        "cursor": {
          "ref": "4ac3a60a-03af-43d7-b5f0-f58fc34836f3",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4d14a885-5d6d-44be-9b9c-978d8daf178a"
        },
        "item": {
          "id": "bd6dc5dd-7684-4fa4-8212-285fc77f2b4d",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "0c6c5275-9dce-4290-a3dc-d745c53edd39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cd0c630-28af-4f3f-943b-3c5442917340",
        "cursor": {
          "ref": "864d5271-1887-45eb-83ea-b1d5b20f7134",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "bf81cdcf-8adf-4b4c-ad19-f150ca8ad2b9"
        },
        "item": {
          "id": "2cd0c630-28af-4f3f-943b-3c5442917340",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c67e4cb5-1195-4ae1-88b7-0a8e80b9d98e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b109fc1-e57c-4174-a5dc-10852ece9bc2",
        "cursor": {
          "ref": "d2bb7d84-2f03-4e41-86e3-8dfe14837e91",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "31d9df4f-007c-4b59-bec7-799d70415bac"
        },
        "item": {
          "id": "2b109fc1-e57c-4174-a5dc-10852ece9bc2",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "205683f0-82e1-4c35-a8b8-2756c7c58f0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c65be80a-8860-4270-b5a9-e765ad7dfc6c",
        "cursor": {
          "ref": "da0e1849-52cb-43b4-9ad0-e1d394a37bfa",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "78a97116-bc02-4230-ba4c-cd6e9e82b561"
        },
        "item": {
          "id": "c65be80a-8860-4270-b5a9-e765ad7dfc6c",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "46a32712-c81e-47fb-80d8-80897e066777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea94092-7bdc-4e09-92db-b63851da2707",
        "cursor": {
          "ref": "24192d26-091f-4d68-842e-23cfbbe77444",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "8b490b51-f03f-4fe1-854a-8f01fb58b3fc"
        },
        "item": {
          "id": "9ea94092-7bdc-4e09-92db-b63851da2707",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "c6a824c1-1266-4a2f-acc2-1bf629db25f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04da3d3a-1989-4911-af54-eeeb16fa563c",
        "cursor": {
          "ref": "f73c759d-b249-4a3d-9f14-d646c6216c7c",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "ef6cb4d0-09a5-426c-ad42-0563928d62f4"
        },
        "item": {
          "id": "04da3d3a-1989-4911-af54-eeeb16fa563c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0aaf9bde-9745-4b98-aa8f-b24d217d0812",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7901ae-d733-42b6-ad9e-98aeda11164d",
        "cursor": {
          "ref": "051a810a-6f36-4d30-ba63-6327d00a8994",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "f0743341-0aeb-4d8d-be87-1ae097422d88"
        },
        "item": {
          "id": "4d7901ae-d733-42b6-ad9e-98aeda11164d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a1474f5b-f828-4d77-b266-9e662c6ad88a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b9962b4-870f-4bbc-aaca-2aca20bfe7b9",
        "cursor": {
          "ref": "8b0c41e5-b4a0-413d-887a-e1bb8b36dceb",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a276ac02-df02-42b7-a7a6-773c031de780"
        },
        "item": {
          "id": "3b9962b4-870f-4bbc-aaca-2aca20bfe7b9",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "587c4468-0d6a-4da5-a1ec-719ae5f95e34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "867cd44a-62f9-4dd5-8914-da8438c2106b",
        "cursor": {
          "ref": "43ec963b-44f8-41e3-8145-aa60dcc3e590",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "076c662e-194d-4019-b9bb-afccbbb23d29"
        },
        "item": {
          "id": "867cd44a-62f9-4dd5-8914-da8438c2106b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "61714c0f-c267-4178-8f41-67714ca89528",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2e9d22f-170d-4968-a664-972ab5719c29",
        "cursor": {
          "ref": "d5815e11-337d-44e4-a842-eb013a3b9b6b",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "04806e12-a195-4b69-b2b2-a90787ca9087"
        },
        "item": {
          "id": "d2e9d22f-170d-4968-a664-972ab5719c29",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "e4b446a3-cf1f-4d7b-8cbe-77db8821323a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ba2d2d3-ce5c-4f79-982f-4dec37b0cc90",
        "cursor": {
          "ref": "94530519-4047-4cc1-82a2-48478fdb951f",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "6aa22100-48a4-4c92-8d69-03d592d51641"
        },
        "item": {
          "id": "7ba2d2d3-ce5c-4f79-982f-4dec37b0cc90",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "2f2af4e0-3fd5-4b3a-9f73-0172d8b91110",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57fe0083-05c8-483d-b2e1-fb7610fd2e82",
        "cursor": {
          "ref": "00789d8e-a7df-48d9-8782-666f927a671c",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "ab8813d7-697d-4410-8d8e-d00c9692696e"
        },
        "item": {
          "id": "57fe0083-05c8-483d-b2e1-fb7610fd2e82",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "7c70fc2d-37f7-46bc-b531-2078c6c35449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a7f549b-aa8c-4d2e-b77d-b8cde6677710",
        "cursor": {
          "ref": "0700207a-6373-47ad-a54d-e20b84a23af3",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e5034241-6b95-4a50-8885-03aaca4ffb6a"
        },
        "item": {
          "id": "8a7f549b-aa8c-4d2e-b77d-b8cde6677710",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "0e79aff6-0044-4eb5-9a83-683a80a73282",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ffee6fa6-56b7-4e3f-8169-65c7f499725f",
        "cursor": {
          "ref": "68338206-3ce3-48c2-bebb-aea45371a0ba",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "45a3dde1-d9a9-458b-bf8e-ca90e2c3470d"
        },
        "item": {
          "id": "ffee6fa6-56b7-4e3f-8169-65c7f499725f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "1fb8ef36-8659-4142-a4e8-95520b1f81d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bba3bdc9-95ff-426a-b92b-229501de1c71",
        "cursor": {
          "ref": "1e92aaf0-cc54-456e-8a00-2574f89a67c4",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "3ca0aae4-d3ad-4df3-8e39-a2f90f5b3d04"
        },
        "item": {
          "id": "bba3bdc9-95ff-426a-b92b-229501de1c71",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "5c3bf0f8-de37-4495-a2d9-ddf2780c01d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38ec28b2-a554-46c1-ada9-33deb340e032",
        "cursor": {
          "ref": "ec2c8999-0682-4b39-9b01-c51cc4ba850f",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3f593404-65dd-413f-af40-5335995b8766"
        },
        "item": {
          "id": "38ec28b2-a554-46c1-ada9-33deb340e032",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "187143a6-36d8-48f4-b62f-764d110aa48a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85b5166c-daed-43c3-8afc-f1d9753db9fc",
        "cursor": {
          "ref": "62a19ad5-51ef-42d5-af0d-8a84d413a5ad",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "f66f4658-9eaf-4e25-8687-92dd1fda35d6"
        },
        "item": {
          "id": "85b5166c-daed-43c3-8afc-f1d9753db9fc",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "2d169bd3-c5f9-457e-aded-3bce35be3352",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73060a9e-a515-4ead-9fd2-f36194f2e172",
        "cursor": {
          "ref": "ffcfea4a-8eeb-49ef-8677-508b747621ee",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c322a9ea-7afb-4054-be21-c7ab7df44c5c"
        },
        "item": {
          "id": "73060a9e-a515-4ead-9fd2-f36194f2e172",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "7f90e595-f14a-44cd-b9a5-b58f1896daa6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fba673-e46b-4ca9-bb55-5d4066e89fe7",
        "cursor": {
          "ref": "224a4b8f-40ee-4514-87a8-19f7bce94529",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "dce3f135-a7cb-4579-8ecb-4283edd59bc3"
        },
        "item": {
          "id": "53fba673-e46b-4ca9-bb55-5d4066e89fe7",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7f685717-fd22-4c4d-bbbf-6e3e892ec556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c7c7166-2330-47c4-9197-271a3e5efa3f",
        "cursor": {
          "ref": "3faf09f1-b8e9-46cc-b849-810a9c3c25db",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "1386c9ec-ff31-4385-8d51-ff2106c9f89b"
        },
        "item": {
          "id": "5c7c7166-2330-47c4-9197-271a3e5efa3f",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "76e89e4a-df52-4e0a-bb90-a50d83319e8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8356e005-4759-48b6-9c93-0786c20b9a6e",
        "cursor": {
          "ref": "33c00c65-1649-4be7-bb76-66b9af1dca23",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "42f26781-a24c-4736-85a4-00f724c6be8f"
        },
        "item": {
          "id": "8356e005-4759-48b6-9c93-0786c20b9a6e",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "589d615b-8b29-495b-b028-fd506e21967d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16231b90-9b57-4125-927c-18f0c92b8b10",
        "cursor": {
          "ref": "02387c4c-2707-43c0-97b7-dd4f4bad81ee",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "618ae86e-6729-4d43-8b5f-cd58b4b82ae9"
        },
        "item": {
          "id": "16231b90-9b57-4125-927c-18f0c92b8b10",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "15398348-4792-43b3-89d4-079b67c43ff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "baf44bbd-737d-4815-a55c-d2100cd0e6dd",
        "cursor": {
          "ref": "c3a2ff6c-4418-4c97-9d57-378f28125346",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "4318bca0-e05d-43f1-98aa-fbfc18b6a644"
        },
        "item": {
          "id": "baf44bbd-737d-4815-a55c-d2100cd0e6dd",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "2233e2dc-3afd-4279-b99c-f6fda263caed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f77cbc17-d652-49d6-b35a-2800a4cafb83",
        "cursor": {
          "ref": "af45150e-aa08-41e9-bb29-20e88cbb57dd",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2775684b-11ca-47df-b1fb-b1bd2e1f4970"
        },
        "item": {
          "id": "f77cbc17-d652-49d6-b35a-2800a4cafb83",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "67a14952-ce49-4c04-ab01-eaa37cc85ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874342f6-222e-4379-ab90-a9bb7cc4f813",
        "cursor": {
          "ref": "e8732d60-7f84-4c42-ad86-d2756b201ec2",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7bf9f14c-39b0-4d50-bda7-00055cc5ba50"
        },
        "item": {
          "id": "874342f6-222e-4379-ab90-a9bb7cc4f813",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "d1f5dfe3-03ab-4fa5-b7b0-1e61512234d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fceb115a-d9c1-457d-bb92-8b76d892d071",
        "cursor": {
          "ref": "26471be3-1f6a-4913-93e1-0de3653594c5",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "77d428aa-68ab-40df-ba56-b649143c6a24"
        },
        "item": {
          "id": "fceb115a-d9c1-457d-bb92-8b76d892d071",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "4a2239fd-b3a0-481f-a52b-3adcc84b0da9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a53aa3b-a841-41e3-9803-24de6e8c1a27",
        "cursor": {
          "ref": "1f40c845-dd97-481b-87ab-b770277173d9",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "53b28755-d66c-4b0a-b9ed-ba0ab97ad7e9"
        },
        "item": {
          "id": "1a53aa3b-a841-41e3-9803-24de6e8c1a27",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "8b81c4df-ed27-4a45-97b5-6efdbb21d9fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1e40219-bf0b-4282-99b3-02f4f2633b9d",
        "cursor": {
          "ref": "72ede4be-8dc7-4800-912c-c7ec4e066bfc",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "b1ad2341-0fc9-4d05-b7bf-d0c46d9d035e"
        },
        "item": {
          "id": "d1e40219-bf0b-4282-99b3-02f4f2633b9d",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9134da8e-c347-4451-bc56-4e9112def7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e52ef16f-fba8-4090-b193-8e6d1d0e5e4b",
        "cursor": {
          "ref": "69f1ceab-afe3-4b7a-aaac-84ae30dceb48",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "5d8645b9-c3e6-49e7-a6f8-297a08ad3c5b"
        },
        "item": {
          "id": "e52ef16f-fba8-4090-b193-8e6d1d0e5e4b",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "d7132bac-8893-4347-a54d-949512c01cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fcee69d-53be-47eb-a72b-39c9fd6952a8",
        "cursor": {
          "ref": "525ec636-c160-409b-a051-8a7154ed6687",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "1cdba63a-83a9-4082-aee6-967e098764fa"
        },
        "item": {
          "id": "2fcee69d-53be-47eb-a72b-39c9fd6952a8",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "9d0da7c4-a911-42fa-bc4b-32c3cf7c2b06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c82cc73-e5a4-4202-92cf-458b7d2e09c5",
        "cursor": {
          "ref": "136fa086-3806-45c5-bf73-e9391965f1a1",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "afbafb28-0c7b-4965-ab91-868399ab0d7a"
        },
        "item": {
          "id": "7c82cc73-e5a4-4202-92cf-458b7d2e09c5",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2607834c-eaf3-44af-aec9-46a957bbdcf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3df9c3d-25c1-486f-8bc3-389200416eb0",
        "cursor": {
          "ref": "50b3f165-9d2a-424a-961d-6f2f6d563b1b",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "72999228-52ee-4632-8f92-024356986822"
        },
        "item": {
          "id": "f3df9c3d-25c1-486f-8bc3-389200416eb0",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c4e498f1-35c3-445c-b1b9-edeb3c2a9315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c67caeeb-4dd7-4d09-b591-c95bd0a56651",
        "cursor": {
          "ref": "09b7f39d-bda2-4c86-a686-fabcf186d70c",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "272169ad-6c29-4427-af78-3fc2f8f6aad2"
        },
        "item": {
          "id": "c67caeeb-4dd7-4d09-b591-c95bd0a56651",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "781593d1-37d0-4cbf-956a-e4dcb04152c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddc412bd-db5c-421a-85b2-cf214cafab14",
        "cursor": {
          "ref": "46008614-9968-4f1b-b20d-fb8fd0a5edcc",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "23ccf3c8-bafe-409e-b543-27698afb8555"
        },
        "item": {
          "id": "ddc412bd-db5c-421a-85b2-cf214cafab14",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "46968fc3-2187-4ca4-9bde-3f2e858171b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75440302-384c-4eb6-95bd-3714e1686024",
        "cursor": {
          "ref": "d5dfbea5-8c49-433c-9981-61b92dbef6a1",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "f6d55619-cbb1-4e5a-98da-b19d828310ee"
        },
        "item": {
          "id": "75440302-384c-4eb6-95bd-3714e1686024",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "25c9570e-bb9e-4574-b5b6-cd8e596477f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1348552-dc44-410e-9b73-f5dbe589cdf5",
        "cursor": {
          "ref": "4c3b1a51-57ae-4bc7-92d8-7b31e1b2337a",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "9f6a0c61-b070-49f0-affe-07af322f3ea3"
        },
        "item": {
          "id": "f1348552-dc44-410e-9b73-f5dbe589cdf5",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "0ab17b9f-7f56-4fe1-8883-f4ef462a9e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5848ff50-84f7-46df-a170-52cf44713a9a",
        "cursor": {
          "ref": "0837647e-7612-4bb5-8d78-a494911d33b3",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "88d2972f-aca1-49e0-abf1-f614cd20f10e"
        },
        "item": {
          "id": "5848ff50-84f7-46df-a170-52cf44713a9a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "08c04ed3-a268-48f9-a8e0-32e895216d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67b5bb46-06b2-4017-b6eb-c5f171297b54",
        "cursor": {
          "ref": "74e504b1-7abd-4e39-950d-e3302b033bb6",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "27057020-d13b-44b8-8b13-254dc787b796"
        },
        "item": {
          "id": "67b5bb46-06b2-4017-b6eb-c5f171297b54",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "9f406c92-66c1-4548-a01b-f02e373f9b87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31cd0225-5d89-4c45-8920-2a243a392510",
        "cursor": {
          "ref": "0d1e1d4b-137e-4643-a34e-ea5ddd753091",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "77c92ecc-57a9-401c-aef7-aefae0d494f8"
        },
        "item": {
          "id": "31cd0225-5d89-4c45-8920-2a243a392510",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "8e318f51-b8c1-49a3-920f-a87c01714b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2817e74-87ce-430b-b22f-c352b0663c88",
        "cursor": {
          "ref": "00c67ccb-4748-4456-9f26-1b36de159768",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "a136124b-3efc-4a29-b15f-c480a3d018c5"
        },
        "item": {
          "id": "b2817e74-87ce-430b-b22f-c352b0663c88",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "6910a9fd-f015-4710-a3a6-fbe4a9290ade",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53186b33-b900-4def-8176-ab294a40224d",
        "cursor": {
          "ref": "8b913e58-7c8c-40b2-9a52-0f72f2355a75",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "1c81cfc1-af49-4636-acdc-6c6289da8ca5"
        },
        "item": {
          "id": "53186b33-b900-4def-8176-ab294a40224d",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "3d6d31a0-5a98-4df3-a702-de4e3895996a",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 233,
          "responseSize": 162
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdbb4669-2e28-4266-bc59-cb905d0a7216",
        "cursor": {
          "ref": "5713a802-6328-480b-a4d3-51bcaef0223e",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9033282d-b0f0-4ff4-b277-541dc47e82c3"
        },
        "item": {
          "id": "fdbb4669-2e28-4266-bc59-cb905d0a7216",
          "name": "credentials_issue"
        },
        "response": {
          "id": "fb367bd9-6624-4101-906f-dcb6f8a21f47",
          "status": "Created",
          "code": 201,
          "responseTime": 125,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba5d8c99-b7c9-49f9-b5ae-26cc495baaac",
        "cursor": {
          "ref": "836e874a-9ccf-4356-b476-3cf478ca553e",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "43e108b5-5bc5-4f4f-8f6e-d729a95fec8f"
        },
        "item": {
          "id": "ba5d8c99-b7c9-49f9-b5ae-26cc495baaac",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "7a4a7c5e-d12d-452d-b06d-10d6b9d310ce",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "42cf7442-4491-487a-8dd9-70b4cda6eee1",
        "cursor": {
          "ref": "c5f6b28d-1169-480d-8c3a-e991f1d45594",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "cf71e873-0cf2-4fa8-a801-7b13a44698d6"
        },
        "item": {
          "id": "42cf7442-4491-487a-8dd9-70b4cda6eee1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "123cd776-5b07-4a8a-a235-38ad13552097",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb364219-ee8c-4df5-9396-b8fb0e0c9c8e",
        "cursor": {
          "ref": "7805a785-aa74-47c6-844d-67adc02f8b54",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "de29740c-c786-43bd-a663-0f47d15dc44b"
        },
        "item": {
          "id": "bb364219-ee8c-4df5-9396-b8fb0e0c9c8e",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "08b5f2db-339d-4a36-9d68-c91a19ce6b80",
          "status": "Created",
          "code": 201,
          "responseTime": 86,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2748c1f-ce5a-4c82-bd86-d329d874b6c7",
        "cursor": {
          "ref": "b4ae5b85-4ef5-460e-940b-274b59d724c5",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "bbb2494c-3202-46e2-bafb-1bddec5a8ee8"
        },
        "item": {
          "id": "d2748c1f-ce5a-4c82-bd86-d329d874b6c7",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fcf9287d-abc0-4b04-a29e-b53191adf2f5",
          "status": "Created",
          "code": 201,
          "responseTime": 83,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb212d7-9da3-4fcd-a303-f239ee165eff",
        "cursor": {
          "ref": "5e399426-0b1a-4d03-938e-798b68147261",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "62290a04-cf68-4474-bb68-3349290f9a35"
        },
        "item": {
          "id": "afb212d7-9da3-4fcd-a303-f239ee165eff",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "32049c1e-8a12-4d41-8c61-bfb26706dfe3",
          "status": "Created",
          "code": 201,
          "responseTime": 82,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1433c5db-71b6-4400-a8bb-74067176912b",
        "cursor": {
          "ref": "06d3c8a4-eaf6-4c11-8843-2cd4b4d5281f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e976ae6c-c141-4736-81e6-4e5272297f55"
        },
        "item": {
          "id": "1433c5db-71b6-4400-a8bb-74067176912b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6fd2a1c9-c1dd-4746-b631-d5c8f35908a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1433c5db-71b6-4400-a8bb-74067176912b",
        "cursor": {
          "ref": "06d3c8a4-eaf6-4c11-8843-2cd4b4d5281f",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "e976ae6c-c141-4736-81e6-4e5272297f55"
        },
        "item": {
          "id": "1433c5db-71b6-4400-a8bb-74067176912b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "6fd2a1c9-c1dd-4746-b631-d5c8f35908a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7d5148d-d969-4408-8c20-948b814b3fc8",
        "cursor": {
          "ref": "94133392-ffc2-4847-a69f-d3f8ee9c17c7",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e0cd1cc7-27b3-41d4-8d92-2db5470a4686"
        },
        "item": {
          "id": "a7d5148d-d969-4408-8c20-948b814b3fc8",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "97a3d955-456f-40ce-84f7-d8dfbaafc1c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8aba985-7bde-4dad-a679-c508c9cd2c02",
        "cursor": {
          "ref": "0bd267e1-d2d4-4c30-a34b-5a27a02f1542",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "7d7aa83b-6c06-45ee-90f4-45be827da7e2"
        },
        "item": {
          "id": "d8aba985-7bde-4dad-a679-c508c9cd2c02",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e8827da7-8079-4483-a35f-b44e2dffa9ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0421198f-6a82-4dec-9a98-88bc860df46e",
        "cursor": {
          "ref": "0dfd6e5f-eb84-416d-8d96-220e3b5906c5",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "5f7cac16-13e9-45fc-9c86-941eb125fb9d"
        },
        "item": {
          "id": "0421198f-6a82-4dec-9a98-88bc860df46e",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "2e508921-458f-4a91-a938-cd10a7c3a06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beae83cb-922e-48df-bec0-280d7194c78d",
        "cursor": {
          "ref": "fd93f20b-9527-4838-adb1-c738fa8f0a62",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8f859d40-1554-4e25-baf2-601b9b0a8140"
        },
        "item": {
          "id": "beae83cb-922e-48df-bec0-280d7194c78d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e323b64b-eee7-43a8-bc76-a54a53454841",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b8c854f-7239-4ba4-a36d-efc9a504e316",
        "cursor": {
          "ref": "fe3ae6af-2716-4339-9067-8931db6fc443",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "abb9b043-3fd2-4aed-ace0-62097eba3b6e"
        },
        "item": {
          "id": "9b8c854f-7239-4ba4-a36d-efc9a504e316",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "88153d17-f893-4bea-ae16-91fb9bcef9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6e06a4e-cc6c-4528-bcca-7154860de270",
        "cursor": {
          "ref": "8de75c9c-1ba0-435d-9541-922b1564cf2a",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "ea4182e5-0d7b-4a6c-9c77-9d00de13afe6"
        },
        "item": {
          "id": "f6e06a4e-cc6c-4528-bcca-7154860de270",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "983760d6-12f1-45e4-bd62-3335229f6c05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "737edf9d-47ea-4b17-81f3-8ed7de7437d9",
        "cursor": {
          "ref": "35dd7fc2-0140-4a65-88d4-f1fa9528dc18",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a07cd4cc-baa4-46a3-8698-360bfa054b9e"
        },
        "item": {
          "id": "737edf9d-47ea-4b17-81f3-8ed7de7437d9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "28f75850-d117-4a7a-bf7f-ab5f50f3bd17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b5137ad-d468-48f0-a27c-c22ed999f295",
        "cursor": {
          "ref": "bb8fcc93-e775-4f6c-a117-d0f569aaeffa",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "2f794db2-497e-4af7-bd73-334b6dfe6bba"
        },
        "item": {
          "id": "4b5137ad-d468-48f0-a27c-c22ed999f295",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "1cb6e337-7ed0-4d4e-b93f-5c35a43b393c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1d1d5a-1b08-423d-b5b5-627ef440c6f6",
        "cursor": {
          "ref": "67d28aa7-b650-49c3-96a9-fde74cd82c60",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "14b9f970-6a62-4516-a1d2-eec7885627c0"
        },
        "item": {
          "id": "9b1d1d5a-1b08-423d-b5b5-627ef440c6f6",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "67fb37ca-f251-4842-9d82-c912ea3e1036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72511572-1cd1-4163-bd87-e4015d366923",
        "cursor": {
          "ref": "9bf91821-0106-4175-95ac-4a74fc1895a6",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "c87aa51e-e6ce-4ccd-8b46-89fcbea1ee94"
        },
        "item": {
          "id": "72511572-1cd1-4163-bd87-e4015d366923",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "16e6856e-6f46-4646-9930-92fb02eb76a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "025f745f-4544-4a47-a349-055cebb913e4",
        "cursor": {
          "ref": "21c9b837-831d-4101-beb7-0151f44d24f9",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "d38c36ab-6b8f-42ea-81b9-e7a1473e25ac"
        },
        "item": {
          "id": "025f745f-4544-4a47-a349-055cebb913e4",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "04953b4c-3aa7-4e06-a4df-3d173e6b6d31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52811da1-7a65-4e46-9c3f-d2850a65fd4f",
        "cursor": {
          "ref": "e1a8286e-a239-4212-b421-733829d40562",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0d0c402a-6c89-4d67-898d-a39f1f9b6412"
        },
        "item": {
          "id": "52811da1-7a65-4e46-9c3f-d2850a65fd4f",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "acc3bcb9-a652-4057-9847-ee137f173a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c84c5d7-8113-43f6-8c4b-a820369899e9",
        "cursor": {
          "ref": "1e51cdba-b68b-4191-8742-e149ff9aa0b1",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e410eea9-0869-49b0-89c6-2cd1d30828cb"
        },
        "item": {
          "id": "8c84c5d7-8113-43f6-8c4b-a820369899e9",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "d66f78ae-226f-4c50-a969-2a4130ff4f09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "770d1d14-9f78-41fe-9e43-f2cb4202992d",
        "cursor": {
          "ref": "cace2f8d-6eff-4452-a95d-e10457b99a76",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6e4cdbc1-fdf0-477c-9a3c-f8ae58672d5f"
        },
        "item": {
          "id": "770d1d14-9f78-41fe-9e43-f2cb4202992d",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7c934582-97ea-44ba-983f-ee8464020e28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cfa6ab9-2bd0-43db-b3d9-9abf43bf3477",
        "cursor": {
          "ref": "18e17bbc-52eb-43ae-8a09-f853cd8e6289",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "1ee42f88-7562-4fac-906a-2ebc76841211"
        },
        "item": {
          "id": "3cfa6ab9-2bd0-43db-b3d9-9abf43bf3477",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "e871ab24-8fa6-4eb1-91ca-b371369fc6d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9289dd10-0205-4d08-8a4c-2cc360726a94",
        "cursor": {
          "ref": "a56ba2cd-8af6-4b43-a79e-4391c3896045",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "4486fb9f-228c-4731-87f1-703cf0556517"
        },
        "item": {
          "id": "9289dd10-0205-4d08-8a4c-2cc360726a94",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "750f7e54-ef83-4280-bad9-981cca8cbc4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4137f533-e888-4bf6-8752-e54ab5009087",
        "cursor": {
          "ref": "7028aefa-1374-4954-aace-fb3d58dc0f1f",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "c7bc0620-d69d-4863-953a-905fc3d2cb72"
        },
        "item": {
          "id": "4137f533-e888-4bf6-8752-e54ab5009087",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "304587a5-cb0b-4be8-a697-712b7ca1c5ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "898271c3-12b2-432e-8d55-b449527d26a7",
        "cursor": {
          "ref": "db4cc259-29db-4fa0-804f-43313b313609",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "97451783-9d81-4d37-bb30-ff656029560a"
        },
        "item": {
          "id": "898271c3-12b2-432e-8d55-b449527d26a7",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "4205c33f-8e0a-4dec-b75d-8d81201d63fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628bcb31-706e-4ca9-9e3f-c620ccb54cff",
        "cursor": {
          "ref": "c51df573-fbd7-42b9-88ab-11971b4d7f2d",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "cfcdde45-dab6-484e-9bf2-e51dc212fab3"
        },
        "item": {
          "id": "628bcb31-706e-4ca9-9e3f-c620ccb54cff",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3c57534d-7806-4e8a-b92f-21bce33606a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "becf6429-32d9-434c-9e82-9f78da583f7a",
        "cursor": {
          "ref": "a85014da-d3cd-4db1-acee-d1665801e74a",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "7d64f28e-6f49-4e75-a193-7579bcc934a7"
        },
        "item": {
          "id": "becf6429-32d9-434c-9e82-9f78da583f7a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "12608cc4-1e7f-4684-af6d-04a0cb5558ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd4e2ba0-8b6e-4107-abe9-34731a6d5972",
        "cursor": {
          "ref": "45f6e376-82cb-4ced-a9c3-1f9b36614bb3",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "268ad9e7-7e4c-4725-b96f-d71d6d9827d2"
        },
        "item": {
          "id": "dd4e2ba0-8b6e-4107-abe9-34731a6d5972",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "63277230-5abc-4dd2-98a0-750fdc5a6e98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa46ce7-0a31-4540-b321-1cd43083c688",
        "cursor": {
          "ref": "1380ce92-2007-4a83-8788-bc840466dbe1",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "ffdaf05d-55c8-4eec-a3fc-9feda6494828"
        },
        "item": {
          "id": "5fa46ce7-0a31-4540-b321-1cd43083c688",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "2ffd4d49-6bdf-4793-a91b-bd07713bdb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2fbe2b8-895d-4f34-b06f-d3638d1efcfe",
        "cursor": {
          "ref": "31bac39c-28bf-4167-98da-4cb293ab7072",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5cab42df-2181-48c5-b736-e66fa214bc8c"
        },
        "item": {
          "id": "e2fbe2b8-895d-4f34-b06f-d3638d1efcfe",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "53c95bb1-1b42-4dfe-beed-430a68fd0156",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b89bbd2b-27b3-4d62-a1d6-bc55505b56be",
        "cursor": {
          "ref": "a1ec3f4c-8f06-4b0a-8460-3341f8dcd419",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "00f09e0f-e595-4697-9454-03071e30a185"
        },
        "item": {
          "id": "b89bbd2b-27b3-4d62-a1d6-bc55505b56be",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "8af7e40a-069c-4892-8b8c-1f22c9a2deba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a5918da-ccf9-4fa4-b434-08e9e84f484c",
        "cursor": {
          "ref": "2fe1c161-975d-459c-a17b-3eb0dd764f07",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6fc95f5d-2aab-4a70-a865-1c6fd9dcd3bf"
        },
        "item": {
          "id": "6a5918da-ccf9-4fa4-b434-08e9e84f484c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "a67ee77e-7787-46a0-b7f9-a6888d245240",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41758404-a1f5-4d81-8b94-c32beed65e45",
        "cursor": {
          "ref": "f2be45f3-9ee4-49c5-8fa7-e6dd2a20cc9d",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "ac9987ea-0888-4862-82e4-ff2eae408345"
        },
        "item": {
          "id": "41758404-a1f5-4d81-8b94-c32beed65e45",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8c35582a-6036-4299-b9f7-92d44a2cf3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a6989a7-7921-4d82-b7f5-35806154c466",
        "cursor": {
          "ref": "5f194b4f-7557-4722-900f-f772ead27faa",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3d730bd5-94f6-4ce4-a8fe-a3e1815ee524"
        },
        "item": {
          "id": "9a6989a7-7921-4d82-b7f5-35806154c466",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "edd3ee30-be22-4ef8-9ba7-95c5fe882c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c5cdbfb-5a22-40c7-9b87-696de04634b7",
        "cursor": {
          "ref": "c6ec84fa-61d1-4c6c-bc70-3f36e540bca8",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "758de36a-dfbc-4947-ab2c-2b11f7638625"
        },
        "item": {
          "id": "4c5cdbfb-5a22-40c7-9b87-696de04634b7",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7e8d9aad-783d-4b7b-b947-7a972767ea40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "947c4674-8485-4519-9605-e88da0e3d976",
        "cursor": {
          "ref": "ac02bcc2-e621-463a-a3b9-f35ded829e6e",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "03ea0612-fffa-4e29-beb8-d6df77051e88"
        },
        "item": {
          "id": "947c4674-8485-4519-9605-e88da0e3d976",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "f082e44c-8bda-425e-8990-733e0bf58649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a00d9e2-9f83-46c2-a7f3-cdbcf1fffa1d",
        "cursor": {
          "ref": "4f591cce-441c-4d02-8909-cfce4f5d35ca",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "f48458bd-0dc7-4fcf-8fc9-feeb598eb992"
        },
        "item": {
          "id": "3a00d9e2-9f83-46c2-a7f3-cdbcf1fffa1d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "46a04e98-7d17-4db8-b2e6-9e79eaca7950",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be45e34-5642-47fd-99f1-cf2d50f46f44",
        "cursor": {
          "ref": "783837c5-c773-450e-a2ef-2408a88882c9",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "73c39e9c-297d-44d3-9b72-14865401c86b"
        },
        "item": {
          "id": "5be45e34-5642-47fd-99f1-cf2d50f46f44",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "30483097-29dd-4cdf-a422-fd778879d3b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14763db6-743b-4023-8480-02c995bb8b2a",
        "cursor": {
          "ref": "83b7c9cf-1bab-4baf-a7f6-ed91e731f744",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "d56f3d5a-7200-4bda-8c9e-592ad0391f5a"
        },
        "item": {
          "id": "14763db6-743b-4023-8480-02c995bb8b2a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "192b80f6-9fba-4a7c-ae57-80b1def200b0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c898ce6-df0c-4b9d-978d-7e63693e5c9b",
        "cursor": {
          "ref": "94670fac-cfa8-4182-983c-15b0e7ba0135",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "edbbad7a-a6c2-4e2e-967f-1300ab76b6b1"
        },
        "item": {
          "id": "3c898ce6-df0c-4b9d-978d-7e63693e5c9b",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "f6f28710-9bf8-4e12-a212-df5823a14a9c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 63,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9e1c47-fe89-4575-9469-885feda34ac2",
        "cursor": {
          "ref": "273b03f9-35d5-4460-98e2-827463bcd9e2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fde2a4f3-bf65-4861-b6fa-b03085ed5ae4"
        },
        "item": {
          "id": "ea9e1c47-fe89-4575-9469-885feda34ac2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7beb1020-e1d1-431e-b6ea-791576710285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9e1c47-fe89-4575-9469-885feda34ac2",
        "cursor": {
          "ref": "273b03f9-35d5-4460-98e2-827463bcd9e2",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "fde2a4f3-bf65-4861-b6fa-b03085ed5ae4"
        },
        "item": {
          "id": "ea9e1c47-fe89-4575-9469-885feda34ac2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "7beb1020-e1d1-431e-b6ea-791576710285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8edd56b1-fa28-4e2c-9be6-3a4b35cdde97",
        "cursor": {
          "ref": "be14d965-c9ad-4e4b-9f69-09593fe4332d",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "2de20a6e-15d3-4096-9670-b97f32a80a64"
        },
        "item": {
          "id": "8edd56b1-fa28-4e2c-9be6-3a4b35cdde97",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "bf40b48d-471f-487d-8291-d53cf2e73d34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c2043e1-61e6-474d-87e1-a4442e46bba6",
        "cursor": {
          "ref": "e79f01fd-3d14-499b-aee3-6e8885a1fd90",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6e45d5b9-4353-48b2-8294-12459d592375"
        },
        "item": {
          "id": "4c2043e1-61e6-474d-87e1-a4442e46bba6",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "3df01bf7-da67-4ad0-84c7-419dc865fe15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4058b0d-1223-4454-8c8b-9127a6f104c6",
        "cursor": {
          "ref": "f26b5052-87d2-4d5a-802d-4bd1180a105b",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "a3a516da-09fb-436a-9f71-8d9b8dc5274b"
        },
        "item": {
          "id": "c4058b0d-1223-4454-8c8b-9127a6f104c6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "08914534-9930-4567-9a4d-df5bbca6cdab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2de9801-b0f7-4d92-8f20-10acfed17988",
        "cursor": {
          "ref": "9315a0de-552c-425c-aaea-cc7ea6dd28e7",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "c5616f85-5648-40c7-9dfd-12116daafdfc"
        },
        "item": {
          "id": "a2de9801-b0f7-4d92-8f20-10acfed17988",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "861becb6-171c-4df1-af65-1a1862100057",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8fa1d4b-d304-4df0-a489-7d94f585a8c5",
        "cursor": {
          "ref": "764d7200-32ac-46a2-a6f0-7c000c4ec1dd",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "86585123-6ff8-4ff6-a1b7-e0c1151347b2"
        },
        "item": {
          "id": "e8fa1d4b-d304-4df0-a489-7d94f585a8c5",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "f9065ff2-3231-4229-b06b-b7d576c7b2ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6eb8d63-8387-4e06-924f-b074124d0858",
        "cursor": {
          "ref": "e47e1cbf-be6c-433e-bda7-87a8613ec8b9",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "392f2c17-7c18-4d08-855b-53f0eb171883"
        },
        "item": {
          "id": "d6eb8d63-8387-4e06-924f-b074124d0858",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ab89929e-5631-48bc-9072-a1d5734ebdfc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19490f7b-9124-465f-ba1a-35bcdf5d5c45",
        "cursor": {
          "ref": "561ae6aa-49c8-4fca-83f2-4fff38f154a2",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3bc76bcb-6fa0-4aea-9de9-21a3e7a1f5e6"
        },
        "item": {
          "id": "19490f7b-9124-465f-ba1a-35bcdf5d5c45",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "c78820db-2d3d-4114-b6ac-ed570f07335d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6099187d-f45f-48ba-8879-554bb5218916",
        "cursor": {
          "ref": "9dc754e6-83be-43e0-98fd-9decd17e9846",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "548b670f-5092-4469-ba76-75233b00ced6"
        },
        "item": {
          "id": "6099187d-f45f-48ba-8879-554bb5218916",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b207481c-bd39-4147-8539-dedb9896ef8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e3ad75-0869-4c15-9301-cbb6c6b962ad",
        "cursor": {
          "ref": "679f19fb-2dc1-455e-be95-f7a9c3c5d2ff",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "1cc34f60-0c0d-4db8-9b1e-fe1e5393de00"
        },
        "item": {
          "id": "78e3ad75-0869-4c15-9301-cbb6c6b962ad",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "272a4659-ae73-46e9-a724-0a9610a41370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "121ec0dd-3b7b-425c-b0a3-7387d9482d38",
        "cursor": {
          "ref": "af94ef9a-e0ea-47a0-b709-4c33ea70eb74",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "c1cc0216-fc83-40f2-a792-441a30cc2ee8"
        },
        "item": {
          "id": "121ec0dd-3b7b-425c-b0a3-7387d9482d38",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "61c24c71-9085-4fb9-a053-fe80e204df85",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "039edeca-9681-4e10-bcbd-2d41a690d420",
        "cursor": {
          "ref": "9b209520-b333-48a3-b960-3f01e8df0fdd",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "180240c5-de44-42b0-be64-128ab169de0d"
        },
        "item": {
          "id": "039edeca-9681-4e10-bcbd-2d41a690d420",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d3ce61d9-fd0f-4f7c-963f-35d76a8141de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13e1f94c-cf09-4b5b-91db-4bea7e6e3e8c",
        "cursor": {
          "ref": "580b5a62-a124-4d38-b827-b5f7c8144643",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fbcd1e84-bfa8-4ebc-9725-e63082aac4a2"
        },
        "item": {
          "id": "13e1f94c-cf09-4b5b-91db-4bea7e6e3e8c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "f5d4d0bb-5a6a-4857-9d7d-3a7972600056",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa635223-f45a-4247-a7cb-757f0cdf482c",
        "cursor": {
          "ref": "ab0cade9-bfcf-40d2-9e21-0057a61af5d0",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "0c9d5de8-778b-47c2-91ea-2efaf30e7862"
        },
        "item": {
          "id": "fa635223-f45a-4247-a7cb-757f0cdf482c",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "fce60e3b-d050-4fcd-8c19-dda529f2fe5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20ab5cc-6167-4643-a936-f9f697fc715d",
        "cursor": {
          "ref": "0423ffef-b4bb-4b5a-ae49-2f38d25c7843",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a7e7f873-0fa1-475b-85ae-b29c29fe4dfe"
        },
        "item": {
          "id": "b20ab5cc-6167-4643-a936-f9f697fc715d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "476dbf0c-5b64-4822-b6cb-c79136a4973a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7900bdc9-e23a-4f7c-b646-cc08a99a1171",
        "cursor": {
          "ref": "d5a075e5-9020-41f5-8268-8baaba546f32",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "8131291e-cda5-4096-9889-0dc55f341fde"
        },
        "item": {
          "id": "7900bdc9-e23a-4f7c-b646-cc08a99a1171",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "77430072-0f8e-4d9c-a312-73bd95c20dd7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d4cd819-fa5c-40ca-a94c-ab9f9b8a4a07",
        "cursor": {
          "ref": "ce64dc4a-e86f-4d61-9536-87d7469dcf13",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "052e0e4a-08fb-4b42-a151-97f221443c63"
        },
        "item": {
          "id": "8d4cd819-fa5c-40ca-a94c-ab9f9b8a4a07",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "5d68db3b-9e95-427f-b00b-5041456c4ceb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "920f57a6-a083-482e-8112-b70a53a8458f",
        "cursor": {
          "ref": "9770deea-a1cf-4935-9eaa-4101b4ebb60f",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "13895f0f-396a-4c4f-a8fc-cf4f882b11ed"
        },
        "item": {
          "id": "920f57a6-a083-482e-8112-b70a53a8458f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "4302962e-84d2-4756-923a-bd33742b706d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fc9c767-3255-4220-8b5e-67d8bbe29840",
        "cursor": {
          "ref": "1238fb31-9bd0-43e7-b0fe-8f848378e970",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "0daac97e-7a9d-41c0-8b8b-95c9325a8e0f"
        },
        "item": {
          "id": "8fc9c767-3255-4220-8b5e-67d8bbe29840",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "aa0c00a9-8db2-40db-8af6-894ddbfa4563",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3cabb37-5d77-4617-9efd-ec770e1009a3",
        "cursor": {
          "ref": "42a48eeb-18eb-446e-a2ea-c409e3c0ff27",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "e2cf2ad6-bb94-402a-9e0c-8e64d01ea7d7"
        },
        "item": {
          "id": "d3cabb37-5d77-4617-9efd-ec770e1009a3",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "b5ae40c8-7c62-4e78-9511-ffbdedc29792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d95d0f34-0db8-4103-9194-81e6a111d7c7",
        "cursor": {
          "ref": "6a80156b-aa09-416e-8be7-2373d103610f",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "d19fb684-0ae7-4ee2-9123-5d4073a33b96"
        },
        "item": {
          "id": "d95d0f34-0db8-4103-9194-81e6a111d7c7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5dffc7dd-d44c-4ead-839a-39c1fef35626",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d878e449-6da1-46c1-a163-b0bcefbf4367",
        "cursor": {
          "ref": "3149169d-c25c-492d-a43b-47bb2f3a31b0",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "dbfecd65-c171-4c15-bc1c-61db70b3ed3d"
        },
        "item": {
          "id": "d878e449-6da1-46c1-a163-b0bcefbf4367",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "d0f1c5f4-89b8-49dd-910b-e257d50ecb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75b74cb4-1d30-4958-8966-c8874b10d2a2",
        "cursor": {
          "ref": "630a820c-57dd-4c71-b7fb-79196e9122c8",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "0317fcd6-1aea-40c9-a024-495d406efda5"
        },
        "item": {
          "id": "75b74cb4-1d30-4958-8966-c8874b10d2a2",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0ac51575-4b4e-45ef-a367-c9b95013f4dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3f1d670-86eb-4995-aae8-0e0509ce0abe",
        "cursor": {
          "ref": "c56ed502-1c5c-46d8-b718-e011f20fd098",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "9e4647b6-fdf5-46d2-8d18-de7efdb726e0"
        },
        "item": {
          "id": "e3f1d670-86eb-4995-aae8-0e0509ce0abe",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "2acdddd5-94d9-423a-91d4-3dd86b2a3b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e080b401-eb01-438b-986c-dfaea368598b",
        "cursor": {
          "ref": "477682b5-1373-415e-8031-6e084b33d24a",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "89048892-59f6-47ab-aff6-267f79cd27c1"
        },
        "item": {
          "id": "e080b401-eb01-438b-986c-dfaea368598b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "a8e52875-cf20-4a00-8b83-96f5ad8c3f37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ea3853-df85-4d42-af08-f5ca6a9de076",
        "cursor": {
          "ref": "4ff13065-51e3-4dc8-829c-bbed344b36e2",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "49a864a3-d1ad-4e15-ba82-a178008b4791"
        },
        "item": {
          "id": "47ea3853-df85-4d42-af08-f5ca6a9de076",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "ec875620-99f4-40db-974e-4b92fe44dea6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a2711f-f09c-4630-8d63-51566c5c0326",
        "cursor": {
          "ref": "20ac9dab-2903-4603-87a1-d242808660a3",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "6fb84c7b-daa1-4784-9db7-d1453aa84771"
        },
        "item": {
          "id": "71a2711f-f09c-4630-8d63-51566c5c0326",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "944cac57-a588-406d-9d92-fb2a9109e824",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865d4d1d-1b68-4843-a87b-d3bad3fe9451",
        "cursor": {
          "ref": "daa5a1c2-d6e2-493a-b28c-e602ba144fd3",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "c7e67d2c-3d06-47c3-ad0f-4aa196eba69a"
        },
        "item": {
          "id": "865d4d1d-1b68-4843-a87b-d3bad3fe9451",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "c15cf080-2f13-4e70-a047-bc1baa15963c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb2ed796-c942-4638-ab87-9f08d6403291",
        "cursor": {
          "ref": "af29d52c-a953-4b76-bf27-0fdbe6b199c3",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "07c5c853-383a-44fd-8853-6e167881d1fb"
        },
        "item": {
          "id": "fb2ed796-c942-4638-ab87-9f08d6403291",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "d7f038e3-c481-4864-9fc0-42873b9c4a2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd079d2e-7179-4cc4-a82e-5025c283bed1",
        "cursor": {
          "ref": "237c7ce6-508f-4f12-9457-f16f0349f6a0",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "935ab83d-9b64-44bd-9b8d-7f8eb56b58ce"
        },
        "item": {
          "id": "dd079d2e-7179-4cc4-a82e-5025c283bed1",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "2b9d68d3-ad30-4f68-bdfd-c43d5afa6af9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f6528bd-afb4-4cf8-95eb-0b6dab952f84",
        "cursor": {
          "ref": "05e0254d-a688-4da4-b982-10dd613cb9b6",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b7c9f515-a0f9-4763-863c-1cb95d5eb6d5"
        },
        "item": {
          "id": "8f6528bd-afb4-4cf8-95eb-0b6dab952f84",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a2b47c58-eeeb-41eb-b60d-09e772a8f923",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc0180c5-cf68-41d7-8574-652efd606423",
        "cursor": {
          "ref": "ba344ac7-16bd-4feb-a00f-14b9e04e75f0",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "1b83f83d-733e-49c3-a674-080fdab7eb15"
        },
        "item": {
          "id": "fc0180c5-cf68-41d7-8574-652efd606423",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "1e1cb7bf-9f56-4379-b643-f977b996fbe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5a3e70-2e4b-4760-8936-ddf84b66c664",
        "cursor": {
          "ref": "2fa54df5-0969-4610-bc8e-d2b7979ae2de",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "23a48903-4e4d-4f3d-86a1-6a89ddd207d1"
        },
        "item": {
          "id": "fe5a3e70-2e4b-4760-8936-ddf84b66c664",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "9aa949ab-8110-41e9-97c2-208ad6d811bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1ac7deb-307a-4df0-83ab-aefaa1bdb596",
        "cursor": {
          "ref": "1fcfc9ee-e850-40bd-a97f-728be2c454b9",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "f94e76cd-64ae-4ac9-ba2d-5e3d878787eb"
        },
        "item": {
          "id": "b1ac7deb-307a-4df0-83ab-aefaa1bdb596",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "64d0b21d-a876-4e9d-b60a-985eec720fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d6e2093-764c-439a-9b6e-69fc1901e6d8",
        "cursor": {
          "ref": "07412e82-4ffd-411b-8073-eac61d68381b",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1f6902b4-9629-4fcd-b4cd-170ef8dd6e16"
        },
        "item": {
          "id": "6d6e2093-764c-439a-9b6e-69fc1901e6d8",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "09bbcd14-961a-4f4f-9f49-953878ef71e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb52f58a-715e-4912-aa67-e8efc2f4d144",
        "cursor": {
          "ref": "fe90254f-1f53-443f-a478-783d966f6076",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "64a547d5-ad92-4748-bce5-f68a51d0c710"
        },
        "item": {
          "id": "cb52f58a-715e-4912-aa67-e8efc2f4d144",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "dc22c280-0219-4f2c-a7c9-66d8dce4e3d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23d0bef2-81b5-4f36-90b1-1eff4a57c30c",
        "cursor": {
          "ref": "062dc408-c7a5-494a-b2a6-a80ad5392166",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "45ba535a-7207-460b-9641-df0e01f920d7"
        },
        "item": {
          "id": "23d0bef2-81b5-4f36-90b1-1eff4a57c30c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "4865a6f0-ab1a-4e37-bf20-830b21782597",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72b6649f-dc03-42a6-b958-66582a3ab132",
        "cursor": {
          "ref": "b6b9bb7b-1e86-4c40-ac6d-57031f76bad3",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "da80ca84-2d5a-4c5e-8f44-6411c4015204"
        },
        "item": {
          "id": "72b6649f-dc03-42a6-b958-66582a3ab132",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "dffa7a27-2c82-48ca-8df0-95ac08ebd357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "210f4f40-9fb0-4987-a133-5f34178d3a8c",
        "cursor": {
          "ref": "ee6c472b-c816-47ea-b879-78f01f810862",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "f7dadd30-2c9e-461d-b5cd-3d4087ccdf3e"
        },
        "item": {
          "id": "210f4f40-9fb0-4987-a133-5f34178d3a8c",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "f7cb05d7-880a-4730-947f-e64d154538f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "347f8914-08ba-47f2-9f06-678816cbe8d4",
        "cursor": {
          "ref": "482702fb-c214-47d0-9baf-bbbd239d2f3c",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "74372653-bfd1-4685-a997-a6c9fc5a74fa"
        },
        "item": {
          "id": "347f8914-08ba-47f2-9f06-678816cbe8d4",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "e8b04f33-85f0-4112-bd47-e079fcfa10ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd8f7a67-9c82-40dc-bf35-8f7b2ef56451",
        "cursor": {
          "ref": "5a1d8aad-294e-4959-8ce5-fed26277b6dc",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "4f0f61c7-1fe0-4150-9ea6-b58ca670e2cb"
        },
        "item": {
          "id": "bd8f7a67-9c82-40dc-bf35-8f7b2ef56451",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "fbdcf2fb-4e80-4246-b918-ed37bf26e984",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "231de26f-f3f7-4b0f-8d9d-78b2848c8e02",
        "cursor": {
          "ref": "d46ca25c-b97e-42f5-85d4-923426d36c56",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "b32b247d-ee9c-4098-93b8-09595b431d7c"
        },
        "item": {
          "id": "231de26f-f3f7-4b0f-8d9d-78b2848c8e02",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "e7235a4c-8389-4111-85c9-d030ee753f8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6dc13a37-7c27-4604-b79a-bfaf26dec032",
        "cursor": {
          "ref": "f0172cb4-0549-42f9-9994-6faa0efca4c5",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "1c7b8c64-c8b6-40f4-9eee-b35889429bc8"
        },
        "item": {
          "id": "6dc13a37-7c27-4604-b79a-bfaf26dec032",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d8ad3de3-55e2-4eda-bd78-d04381815df7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e164add6-fa94-4baa-a4d1-774a7c5e1c25",
        "cursor": {
          "ref": "0107b4e6-6a1d-484a-ac08-4b008ece95cb",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "647d8dfc-c552-4b45-bae4-bd76e7699454"
        },
        "item": {
          "id": "e164add6-fa94-4baa-a4d1-774a7c5e1c25",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "0145cbb2-a73b-473a-904f-78e457fb8c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a28aa83a-668c-41be-a4e7-3c1744c27fcc",
        "cursor": {
          "ref": "c4972eae-6423-423a-b8eb-54d0d35c66a4",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "b9760e78-d364-4cf3-80df-d715e6821a94"
        },
        "item": {
          "id": "a28aa83a-668c-41be-a4e7-3c1744c27fcc",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8c316308-192a-47c0-abe5-acd5f8192c7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e12970f5-4158-4112-8470-133fff8096d0",
        "cursor": {
          "ref": "9629c854-df41-4f39-972c-124d635c1c38",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "c023af64-c933-4530-9a34-63508cf1ee11"
        },
        "item": {
          "id": "e12970f5-4158-4112-8470-133fff8096d0",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "5c8fce76-e7b4-44e2-a603-7de07beca291",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da25a94-d46b-4ad5-9280-30119e1128f1",
        "cursor": {
          "ref": "e53db2aa-a161-4b7f-a4e2-a99e6edaccfc",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "39fcd81f-80ea-469e-b347-49ac55737ba6"
        },
        "item": {
          "id": "9da25a94-d46b-4ad5-9280-30119e1128f1",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "9801853e-b907-4883-bf43-59da01249aab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd0ce38-ac2e-4193-bb74-c83e470c723a",
        "cursor": {
          "ref": "a3de5bac-41c0-45fd-bde9-32f053197cf1",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "2372458e-a4de-42e3-919a-4cb4d62118db"
        },
        "item": {
          "id": "cdd0ce38-ac2e-4193-bb74-c83e470c723a",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "8019efed-f999-4d36-a9e4-027a4d9f2908",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14fe0fdd-98d3-4b96-9e28-8337dbcff382",
        "cursor": {
          "ref": "74cbc0b8-4783-4e1c-9411-b644df7e8882",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "378d0b6f-bca1-4912-ae01-7082a95a667f"
        },
        "item": {
          "id": "14fe0fdd-98d3-4b96-9e28-8337dbcff382",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "86e59a17-ff71-4b39-ae7a-13243db49250",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "783733b6-0490-44a5-9979-a02afd5b705e",
        "cursor": {
          "ref": "4f99dede-1e3e-4f10-ac03-6ce2d19c1f64",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "87b85824-e272-48a4-b89c-64b2e212ca70"
        },
        "item": {
          "id": "783733b6-0490-44a5-9979-a02afd5b705e",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "6c9695ac-ef65-44cd-aaeb-7e599e2f3861",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9f0680a-fa0c-4566-87d7-02c33819acd3",
        "cursor": {
          "ref": "bffa24f5-52c2-4bdb-97f9-02eace12a1e6",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "17a0539d-7817-428f-a4e9-df8e20b67607"
        },
        "item": {
          "id": "f9f0680a-fa0c-4566-87d7-02c33819acd3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "00b9a2b9-578e-48e1-bfdb-b614386537b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0754dcaf-99ab-488b-a87d-02e8d980e2be",
        "cursor": {
          "ref": "8be0aa06-1ce7-4492-81a7-56173412b8a9",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "ebd331b6-d13c-4aad-9f21-99f8e1861705"
        },
        "item": {
          "id": "0754dcaf-99ab-488b-a87d-02e8d980e2be",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "9809bfcd-3930-470e-9572-db8a8cb0dd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "203cdef6-f014-49df-bb7a-3639066ab9be",
        "cursor": {
          "ref": "02507dc9-8e14-4110-a384-534233187029",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "1146bf38-cbfa-4c79-8e1d-570d4edb83d8"
        },
        "item": {
          "id": "203cdef6-f014-49df-bb7a-3639066ab9be",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "352e5987-3450-48d3-ae59-23f852068da8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d732caf-24b0-4e87-8c98-e61e09c8f53d",
        "cursor": {
          "ref": "df44dd87-53d6-446b-b71c-d40a715a627b",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "13206d9f-248e-4855-9324-f5a6721d2a53"
        },
        "item": {
          "id": "0d732caf-24b0-4e87-8c98-e61e09c8f53d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2c47a6af-1977-4a2c-b73f-01a72e00192a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fafc1f08-e81b-4844-80d9-12954be05b66",
        "cursor": {
          "ref": "a645de71-cd33-4fd2-8fc2-97f05d638cb8",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c425ba0a-0848-482f-997e-f938abb6c649"
        },
        "item": {
          "id": "fafc1f08-e81b-4844-80d9-12954be05b66",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "6b073923-571d-42ee-9c74-cf12eb3de3ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a66ee094-8f83-40c2-83d5-a08d30bfd66d",
        "cursor": {
          "ref": "467207a4-0c9b-4c83-9ca0-f94033e5b726",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d9504b05-df36-4e1d-abd8-6bdfde4031ce"
        },
        "item": {
          "id": "a66ee094-8f83-40c2-83d5-a08d30bfd66d",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "ab54e27e-e831-4b22-bdef-d04cea55dfc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "564d73c7-effd-4ce8-a983-3a6881bea93e",
        "cursor": {
          "ref": "344f6d35-c290-4ec4-80b2-027750b51406",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "0ed5d776-e066-4626-bd1e-7ee67355d4ed"
        },
        "item": {
          "id": "564d73c7-effd-4ce8-a983-3a6881bea93e",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "62322827-8cf5-4c02-8668-72d9b436c397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f20e394-c6b1-4b5d-8ba9-1264aeca238b",
        "cursor": {
          "ref": "cff36812-6732-43f9-9209-3afed75230df",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "a14251c7-65e6-4f3c-a661-2808d0124a02"
        },
        "item": {
          "id": "4f20e394-c6b1-4b5d-8ba9-1264aeca238b",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "c04a5b2d-c105-43bf-aec5-8f52e51ce9e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e58c57a-a729-4cf0-8bd1-702a32152aa1",
        "cursor": {
          "ref": "c640c112-1ace-4bb0-99f5-00192ab8a6b4",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "931b9741-ffc0-4c4c-929f-c64668a57cd4"
        },
        "item": {
          "id": "8e58c57a-a729-4cf0-8bd1-702a32152aa1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "a02b777a-6dbe-4c33-9432-5da3819a2927",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1208356-759e-4d81-8b93-d376f89210a5",
        "cursor": {
          "ref": "9dbccf4c-f1db-4bee-8863-e19681ffaeb1",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "bead8057-3991-4b31-bc9a-67d0b07597aa"
        },
        "item": {
          "id": "b1208356-759e-4d81-8b93-d376f89210a5",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "498d9bc5-0935-4e6e-9348-e5cf8e0e77d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 196,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5e9668-07e5-4c85-9d32-acb1132e412d",
        "cursor": {
          "ref": "b0992112-d9c0-4f23-ac4d-c43363c10c54",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "8a96b73f-98fc-4888-83a7-f28458a17ece"
        },
        "item": {
          "id": "9a5e9668-07e5-4c85-9d32-acb1132e412d",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "c28af9a0-808b-4d2d-b0f5-8fc445282a0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd6b1204-fd4a-4440-9484-ccd831e9bf05",
        "cursor": {
          "ref": "34357505-e452-4f92-b93f-7b49e881e9d6",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "3c32862b-51ec-4a2e-b551-73792179be90"
        },
        "item": {
          "id": "bd6b1204-fd4a-4440-9484-ccd831e9bf05",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e1b7ad6f-4492-43f6-9f07-d866d5d3ed1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8157db0-0ae5-4b70-9577-4bd2aafedbf6",
        "cursor": {
          "ref": "a48572db-c3a9-4238-98a2-bb471c7aed48",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "dbd524f0-c13a-4ed8-a1b5-050623f6fc22"
        },
        "item": {
          "id": "a8157db0-0ae5-4b70-9577-4bd2aafedbf6",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "ca730094-decb-4049-9358-345b49a5a9f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ec91fd4-b6c9-4a10-89f0-9f202976b92d",
        "cursor": {
          "ref": "013ea105-db0c-4cea-9904-afc751d2a7b7",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "bf8d15c2-326d-414d-8da8-c4b127126d64"
        },
        "item": {
          "id": "7ec91fd4-b6c9-4a10-89f0-9f202976b92d",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "9aeb5513-f8cb-4da3-a7f5-27378a56820c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45417cca-6bb7-4466-bb7f-664c780368aa",
        "cursor": {
          "ref": "f5c0c700-f51d-41fe-aa11-8fc3daa1fc4c",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "c1d1f618-ab19-47fa-abdc-f816b7fe9cb7"
        },
        "item": {
          "id": "45417cca-6bb7-4466-bb7f-664c780368aa",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "40f10063-ebef-4997-b613-5b97302aa4b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41a7b61-a430-41bc-875e-79063336958e",
        "cursor": {
          "ref": "7117a8ff-4864-4bf2-a5c9-dd354ed844c3",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "395e0e7b-3bdb-4147-bca2-a9f6ac73c329"
        },
        "item": {
          "id": "d41a7b61-a430-41bc-875e-79063336958e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "4a63a863-44cc-419d-9a42-ae6e5c67d35a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb962d21-672a-420b-86fe-5ed71a37c9cc",
        "cursor": {
          "ref": "50a8aef4-4af7-444c-b71b-30ff69428051",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "abf54034-bcad-46b6-9239-ec7b69a0aa76"
        },
        "item": {
          "id": "fb962d21-672a-420b-86fe-5ed71a37c9cc",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "640062b4-f5f3-469c-9591-bfdf03a81362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc3d0ff-122a-407c-84cd-989234a4d016",
        "cursor": {
          "ref": "9877662d-81a3-4cd7-9712-997a8a6158a4",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5459dda9-458f-4ed5-8b97-1e56c3684a91"
        },
        "item": {
          "id": "9dc3d0ff-122a-407c-84cd-989234a4d016",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "71826e5e-66b3-40e2-b8b1-4347f7bfc367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f071d0ec-22a3-4dd7-bd2c-93d622d88c85",
        "cursor": {
          "ref": "1ab9b997-98b2-4223-98c5-aee3e55b2382",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "116c3dc8-0df9-41df-8dbe-d5b631fe592d"
        },
        "item": {
          "id": "f071d0ec-22a3-4dd7-bd2c-93d622d88c85",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0cbbd42f-c66e-4a4c-8a80-f7820e0eb084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118036ba-203f-4bb9-ad7c-b2dbda3c88ef",
        "cursor": {
          "ref": "f15141c8-27c9-4444-9876-ca41567cbf08",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7943c7c0-415c-4da3-ac41-7b4eed6dffc6"
        },
        "item": {
          "id": "118036ba-203f-4bb9-ad7c-b2dbda3c88ef",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "f6b19096-8a8e-4e52-aaed-e28ab00fd70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31631d61-8ae5-4240-a359-6f8bdb9113d9",
        "cursor": {
          "ref": "798f4b97-d673-4d23-afd4-e115a0bcc5f6",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "5328d513-c2a3-4b0e-b30a-7ae85116b4d7"
        },
        "item": {
          "id": "31631d61-8ae5-4240-a359-6f8bdb9113d9",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "62707dde-c932-498b-aa43-0a4a14f552a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8303526-9318-4615-b123-e0e29c011393",
        "cursor": {
          "ref": "794c4ff2-edb2-4468-9193-197405380b6e",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f2f92d9c-7011-47a7-9a73-6a3354d75b8c"
        },
        "item": {
          "id": "e8303526-9318-4615-b123-e0e29c011393",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b2f1ece4-eb4b-46c9-a6a8-474adc2284fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7842cdd3-89de-4d5b-907f-2687fcff47bb",
        "cursor": {
          "ref": "17f8ac16-400c-4936-ba5c-0c9b38b8a65f",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "9f448944-0a3c-4bcb-9b6d-6ae1400924bb"
        },
        "item": {
          "id": "7842cdd3-89de-4d5b-907f-2687fcff47bb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5167b3ec-96ce-49fa-b88a-034334bb92f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1254d90-359d-43fd-bcb9-c0d3d4be3cef",
        "cursor": {
          "ref": "13ad2a78-64a1-4972-91b4-ceadb207fc53",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "83a9a946-6d46-47cb-a27e-f14e63ed8100"
        },
        "item": {
          "id": "c1254d90-359d-43fd-bcb9-c0d3d4be3cef",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "7241c9f6-5e1c-4b97-9182-6ea1d7930e5f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2901610-ecec-4ed2-9758-93c70cb9ccff",
        "cursor": {
          "ref": "9748b836-6b34-42c3-aa08-24559e73f0c3",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "fe9de33c-eed4-46bf-86b2-a2426615b66b"
        },
        "item": {
          "id": "e2901610-ecec-4ed2-9758-93c70cb9ccff",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "21f089ee-82bb-4303-8c60-b5677813c523",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33009d7c-c6c8-4b98-ac10-37350b9a1aee",
        "cursor": {
          "ref": "be82f06e-778c-450d-9351-38e8e702274d",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1209cc72-3e3f-4b49-bec3-bf7ca235c25f"
        },
        "item": {
          "id": "33009d7c-c6c8-4b98-ac10-37350b9a1aee",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "4485ca7d-ff33-4607-bb1a-d15dadcc3e1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0da03ea4-29c8-4966-999d-fd65c029ec06",
        "cursor": {
          "ref": "4fa70fbc-48ee-4e13-8c72-d3fa751a7804",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "8f9ee313-ad29-44bf-a035-831895a15f9b"
        },
        "item": {
          "id": "0da03ea4-29c8-4966-999d-fd65c029ec06",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "6d8f3804-8df5-4962-992b-1c08856f4b39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d0fd193-0dfd-478d-9cb0-c59c550cf1ee",
        "cursor": {
          "ref": "d822f4c6-ee3d-4654-bce9-9442e09a13dd",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "285e3ab6-b697-4e9f-8fd1-e933f1a23e56"
        },
        "item": {
          "id": "9d0fd193-0dfd-478d-9cb0-c59c550cf1ee",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "db05ffd5-2927-47be-afbe-7065e2627933",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43582ff0-82b7-4aad-a173-6d0804a2c72c",
        "cursor": {
          "ref": "8147e686-655d-4188-9c17-f20c16344f05",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "846f6861-6875-4725-802b-fbdd66d30f94"
        },
        "item": {
          "id": "43582ff0-82b7-4aad-a173-6d0804a2c72c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "4b934577-80df-4845-ba49-a3fe24dbdb4e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "edf85d19-18e9-4acd-b43d-80734b93c5dc",
        "cursor": {
          "ref": "9f966dc6-9883-49b2-bc09-dbc6464e5bf5",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "37c019f3-0587-4724-9f52-4f3db63139d4"
        },
        "item": {
          "id": "edf85d19-18e9-4acd-b43d-80734b93c5dc",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "e8ff8e3e-33c8-4cf9-94fb-ec45f0b8ce62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7182a89-1d15-41a9-8a8b-9f8e582be005",
        "cursor": {
          "ref": "7903c198-6710-4f23-a6cc-2a554ea3c30e",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "923b50f1-30a0-43b1-9b2a-9b04d3622d65"
        },
        "item": {
          "id": "e7182a89-1d15-41a9-8a8b-9f8e582be005",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "40601296-5efd-448d-9ed2-e98b105a59e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f0f5251-3073-40fc-84ad-09fcdb59dfc3",
        "cursor": {
          "ref": "b66190b0-c6f5-427c-9292-d358e3b4d226",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "70ba957b-4098-40fa-a4a6-32d01ba322f8"
        },
        "item": {
          "id": "3f0f5251-3073-40fc-84ad-09fcdb59dfc3",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "ddeff4ce-c5ef-468a-8132-d6c630a83029",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff2d7bf1-4e46-455e-b55b-44a75ab54da3",
        "cursor": {
          "ref": "c9607e72-7fd3-4b8c-bcfc-32c78c6ce8c2",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e6060574-0596-4f31-a135-34b1626eecc7"
        },
        "item": {
          "id": "ff2d7bf1-4e46-455e-b55b-44a75ab54da3",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "056394a5-9462-4a44-a248-0fdf5be25802",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53be4cf8-08bd-4e2d-95c5-c9f97c8e90f6",
        "cursor": {
          "ref": "207fb901-8ba5-4261-af0b-f8348faf0bdb",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "2ca41209-7a2f-4fc8-a82c-4f299a118234"
        },
        "item": {
          "id": "53be4cf8-08bd-4e2d-95c5-c9f97c8e90f6",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "8903578f-dcbe-45f3-8857-d8ce5dc12f95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef453d28-7b4f-4049-b119-c8f565cbc623",
        "cursor": {
          "ref": "c888e44d-3b2b-4ec4-aa03-311cefde07e3",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "9b41f29e-a975-4c6d-8b75-0fb6d349cbee"
        },
        "item": {
          "id": "ef453d28-7b4f-4049-b119-c8f565cbc623",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "bfcadfe5-43c2-47c8-84eb-46ae15363971",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c135e58-8894-40b8-bbd2-56389ba0099e",
        "cursor": {
          "ref": "e0457c4f-8a65-4d6f-8c81-ac0e7667388d",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "901d3750-b0ce-48ac-8192-278d351e3452"
        },
        "item": {
          "id": "9c135e58-8894-40b8-bbd2-56389ba0099e",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "be5e5536-c9fa-48ba-be68-a99da7a5dfcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7390eb0d-a7e6-4de2-ad34-a5f5708a3eeb",
        "cursor": {
          "ref": "823939e5-d690-4132-bb98-ef1c021337e4",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "a3af022a-7098-4e75-8e61-0fc78578a24b"
        },
        "item": {
          "id": "7390eb0d-a7e6-4de2-ad34-a5f5708a3eeb",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ce877d6a-6833-4157-8825-702fbcde54b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b925018a-4015-46cc-97b5-b261fee631da",
        "cursor": {
          "ref": "22691461-338b-42b8-9ee9-7aec6236668d",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "13e36a6f-e181-4140-956c-7ad6c97bc44b"
        },
        "item": {
          "id": "b925018a-4015-46cc-97b5-b261fee631da",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a3ff90ac-57ef-417c-abd9-0d8efd028c23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ba0f53-1b92-4cbb-8522-7c252f2ecdca",
        "cursor": {
          "ref": "ac9baf8e-fcd0-4e25-9986-a98ed0963137",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "eff8f4ce-7186-4a7e-8cd6-e677d6f1fde9"
        },
        "item": {
          "id": "d0ba0f53-1b92-4cbb-8522-7c252f2ecdca",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "fa4606eb-22b9-48c8-8eb6-9da704d380f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9b116e0-086a-4806-94ef-ab4d248ac7bb",
        "cursor": {
          "ref": "11a4a86f-36aa-4b3d-b758-5e811144be00",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "4fac4c42-af8b-42ab-b5e9-80511b516faa"
        },
        "item": {
          "id": "f9b116e0-086a-4806-94ef-ab4d248ac7bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "5adeb506-844a-4914-835a-f14b8f90dc89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68109c8e-f333-4a32-b47f-610401975a3b",
        "cursor": {
          "ref": "effea3e7-8435-42fb-bc63-83abdae82c5c",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "6bd53665-1f42-414e-8420-9e517d1ac1ed"
        },
        "item": {
          "id": "68109c8e-f333-4a32-b47f-610401975a3b",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "b993594b-24a5-43b1-b6f3-65bfb11718f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5eb05fc-7630-4456-b1d3-d0567cb1f102",
        "cursor": {
          "ref": "70786f3a-c6a6-453b-8fbb-ebd99ba6bd3e",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "edb47f3e-493b-4548-9e2b-717bcd173905"
        },
        "item": {
          "id": "e5eb05fc-7630-4456-b1d3-d0567cb1f102",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "e6f02c61-bd47-4c27-af33-e85ff7988f63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371069d3-4e49-4722-9a44-37886cef2e4a",
        "cursor": {
          "ref": "d3bf8a63-d9d5-4126-b39e-7c8316b407da",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "95c7035c-0aa9-4349-bd07-ef7e274a82a9"
        },
        "item": {
          "id": "371069d3-4e49-4722-9a44-37886cef2e4a",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "da946e61-0823-4613-9232-843b484254b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "197912ca-4916-485b-9426-af4049257a96",
        "cursor": {
          "ref": "acb0a8a9-38a6-40c9-b715-79cb940c40c9",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "6ba5d5e4-14d9-4b57-b829-822bd013287b"
        },
        "item": {
          "id": "197912ca-4916-485b-9426-af4049257a96",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "5437a08c-1ce0-43ec-8123-8e34b8318397",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1257ef4b-8502-4e00-b662-4bc1e26216b7",
        "cursor": {
          "ref": "6de94cf3-572d-4d83-934f-80983b2f3494",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "665b8536-84e5-4d9c-ac71-461edd96acc1"
        },
        "item": {
          "id": "1257ef4b-8502-4e00-b662-4bc1e26216b7",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "e48971b8-b4ab-469c-bbb8-128794d84f74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30091c62-6f04-4038-a4cc-11934b2393f9",
        "cursor": {
          "ref": "3358bca7-011e-4682-82bd-5ceb7efd0d6f",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "986fb7d2-2970-4ab8-92f4-a3208b49bb5d"
        },
        "item": {
          "id": "30091c62-6f04-4038-a4cc-11934b2393f9",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a6aaa0e1-8cbd-4d9c-84ae-bed295788543",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93024840-308e-4852-8b08-9953a1d09226",
        "cursor": {
          "ref": "c61a67f0-dbe2-4864-95f7-1f2f82da4f6d",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "82acb50b-0e73-4ffb-88c2-99a912ae924c"
        },
        "item": {
          "id": "93024840-308e-4852-8b08-9953a1d09226",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "59f54c3d-5cfb-4f0f-b4c1-00c3ca6e8fb8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e247b970-5509-4239-95fd-88df77208996",
        "cursor": {
          "ref": "b7c20958-9638-4666-890a-7f6ec55e8cfe",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "5fab81e0-fc1b-459c-9bb8-119a3664371d"
        },
        "item": {
          "id": "e247b970-5509-4239-95fd-88df77208996",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "136f1bd2-e45c-475c-8a48-c45fa672a51b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fee1f87-6496-4342-88b6-0f16b1a7ccb8",
        "cursor": {
          "ref": "2c7a8490-0880-44ee-9d5b-ab08796af590",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "abb372ea-e76d-4d85-b2de-4ae5254266c8"
        },
        "item": {
          "id": "6fee1f87-6496-4342-88b6-0f16b1a7ccb8",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "55fe55eb-364a-4c50-81ce-8585be660f90",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 163
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a1c0126-9344-41e0-87cb-85ac161a4936",
        "cursor": {
          "ref": "a382fee3-3892-424e-961a-48a5ad74dd33",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "d2abc40b-4849-42e4-9d6d-6e5eb28f48ea"
        },
        "item": {
          "id": "9a1c0126-9344-41e0-87cb-85ac161a4936",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "02ce1c32-a66d-4018-8da5-6a7936c6e9b8",
          "status": "OK",
          "code": 200,
          "responseTime": 66,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "06dcb23b-87ca-4f2f-a57f-8e3b4feca705",
        "cursor": {
          "ref": "f5f9158a-c6b3-409d-8aac-5ad0a0cf4bc4",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "63f845c0-b01b-4b4d-b27a-a323027dd5ca"
        },
        "item": {
          "id": "06dcb23b-87ca-4f2f-a57f-8e3b4feca705",
          "name": "credentials_verify"
        },
        "response": {
          "id": "62a0d693-42bb-4334-aa5c-a96e240d52f9",
          "status": "OK",
          "code": 200,
          "responseTime": 78,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f655b89-d090-43c4-a44b-a2033a892f6a",
        "cursor": {
          "ref": "ee9a3c73-c968-42c4-8634-a1af47a7d5af",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "2c0c2954-96d7-49d8-a7be-73b81c75ca2c"
        },
        "item": {
          "id": "0f655b89-d090-43c4-a44b-a2033a892f6a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "7ec12e7a-d016-4e16-88a3-5613d0cfbca1",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
        "cursor": {
          "ref": "c2893154-2d06-4806-8a23-c28c618ff05d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "43544e24-665f-433d-9e3f-42809f5e5d33"
        },
        "item": {
          "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1241b28-d66b-495f-8076-02b5acc49e1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
        "cursor": {
          "ref": "c2893154-2d06-4806-8a23-c28c618ff05d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "43544e24-665f-433d-9e3f-42809f5e5d33"
        },
        "item": {
          "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1241b28-d66b-495f-8076-02b5acc49e1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
        "cursor": {
          "ref": "c2893154-2d06-4806-8a23-c28c618ff05d",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "43544e24-665f-433d-9e3f-42809f5e5d33"
        },
        "item": {
          "id": "7a9572cd-d039-4bc5-83fa-0bb265a006f4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c1241b28-d66b-495f-8076-02b5acc49e1b",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43ec8d05-50c3-421c-aeaf-3b1d99646a75",
        "cursor": {
          "ref": "888966ed-46d3-4d14-b38a-3b59eaa4006c",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "adf28499-cfe9-4916-8d16-9c7076bcbced"
        },
        "item": {
          "id": "43ec8d05-50c3-421c-aeaf-3b1d99646a75",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "ccdfe7ef-e527-420d-9dcd-3df381a51147",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 64,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32db9d68-1fef-47cc-8091-da85fe2a76ef",
        "cursor": {
          "ref": "76c06b8b-67d6-45f0-8e39-78dd2332b995",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61128ab7-40d9-4bfa-b450-e3d913ecf9fc"
        },
        "item": {
          "id": "32db9d68-1fef-47cc-8091-da85fe2a76ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4a84df3-ef3a-4ca0-ab08-025140694fdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32db9d68-1fef-47cc-8091-da85fe2a76ef",
        "cursor": {
          "ref": "76c06b8b-67d6-45f0-8e39-78dd2332b995",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "61128ab7-40d9-4bfa-b450-e3d913ecf9fc"
        },
        "item": {
          "id": "32db9d68-1fef-47cc-8091-da85fe2a76ef",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "b4a84df3-ef3a-4ca0-ab08-025140694fdb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fae3f64-fa20-44bf-895c-c3b02c46f4c1",
        "cursor": {
          "ref": "7dd7f5ba-ede3-4ec8-be2c-8b93d508bf93",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "94446bcb-2900-48e6-92b2-6cd540b746e0"
        },
        "item": {
          "id": "6fae3f64-fa20-44bf-895c-c3b02c46f4c1",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "edcc47bf-3b4e-4b25-a97d-e6caaac0eac8",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 65,
          "responseSize": 164
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a07909a-3d5d-4b79-92c6-752a17bb092c",
        "cursor": {
          "ref": "d5870838-f4a4-47cd-99ed-0c9bd6aa9b25",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5454b926-abef-4b94-9666-90a7931700cd"
        },
        "item": {
          "id": "5a07909a-3d5d-4b79-92c6-752a17bb092c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62410a0d-981b-4250-830b-21d92b002a73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a07909a-3d5d-4b79-92c6-752a17bb092c",
        "cursor": {
          "ref": "d5870838-f4a4-47cd-99ed-0c9bd6aa9b25",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "5454b926-abef-4b94-9666-90a7931700cd"
        },
        "item": {
          "id": "5a07909a-3d5d-4b79-92c6-752a17bb092c",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "62410a0d-981b-4250-830b-21d92b002a73",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc45f377-b00d-4d4b-a15a-a0f9d3844064",
        "cursor": {
          "ref": "9b546619-1dd9-4244-b7ac-c511d5decbef",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "4b8470f0-27f9-4a62-872e-5e7d00e5b57b"
        },
        "item": {
          "id": "bc45f377-b00d-4d4b-a15a-a0f9d3844064",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "a98761ac-525b-4ee1-8e9c-bb1ea6e18dd1",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 67,
          "responseSize": 165
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}