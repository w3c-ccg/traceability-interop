{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "3e74e8ac-dc95-493f-ac08-e2219a6344c9",
        "name": "Clear Cache",
        "item": [
          {
            "id": "a41a2fbd-103b-4660-8ff1-e4191201ae17",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ff041cd1-5d6e-43fc-a5ac-b042dad584f8",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "32e5a58e-b20c-41e4-ab95-1d2ae11e59c4"
                }
              }
            ]
          },
          {
            "id": "1902dd9f-271e-4179-978f-dc133a0f6819",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "a1ef4c99-8ecc-4d40-9853-362637a16f3c",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "0804bde7-1dd6-465a-8847-48a2c92f82f2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "0c08bd5c-c1e9-422f-8bdb-c0b1a9ab0979",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "4d2732ab-70d4-4c96-982a-c05b18c98e36",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a346dcd5-d459-403f-90cf-f8f153c72b01",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3434a444-3eca-4b6a-be1b-c89f5bbb2e84",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "845eced5-ff03-42ac-ae1f-88f5481a0e51"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "984fb433-cad2-4ed8-9ecc-cc8af61195b2",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4f50ab54-504c-41f9-becd-58303952d058"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "def3ed8d-0510-4dba-b807-6ac287e8340e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab2638af-bf4e-4807-b983-d807d4b85cc7"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b6924ca8-f1d0-46e5-981a-1a7574083925",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d5b1fdb4-c0a5-47b8-bf79-b4ea5067ccf1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9157039c-c99f-42df-8983-96f01c5f750d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cdc805af-3ff7-48db-b93e-9525392efba4"
            }
          }
        ]
      },
      {
        "id": "80df6695-5b53-4318-a3f4-4226a76643d0",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "1f3e5216-d59b-4069-baa1-9de282dcc0c0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7a6cff09-a738-4f7a-b710-c26a280d0417",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7f859192-bb50-434a-98cd-fdc31212ef33",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb06756f-bb7d-41f4-95d4-faef35717222",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "16ae8546-1d5f-4473-80b9-187d3384c9ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce86a896-a0b0-4125-903b-7d0c8d5c919c",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7d24bc8-97ae-47be-91ee-69d4f74a2ceb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "74d4e4af-d581-4ff1-9bd3-8b43dfa2ec19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2adabe-1496-4528-87f6-a5d5c989ad85",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "388ecbc0-f907-43af-9ef3-e498fcf759b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a738f1ca-7053-4105-a957-32a8a1281192"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e9fee8ed-ccd0-48e5-ab65-95354a7be7f7",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0c4b5255-26df-4511-acbd-4ac1c55a96b2",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8db54754-8a3c-45b9-9675-9466bb0bb3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d3d6a08a-cf8d-48b8-9a7a-f3653e5e4ec7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e14c1be-4bbe-4a20-8c86-9335163a90d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2686343b-4d3e-4334-8440-13ffd2cc1fe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e0b8d6-7e38-49eb-ae4d-fd25e92bc66a",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4021d74-b0f1-44d2-bd81-f57a6e01909f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "93a78fbd-ca43-4673-8128-200f835d62a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bd316c5-593f-47e4-a0fd-e43adb2f79f2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "ab112a4e-9815-4e86-8855-35cf70febb75"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "49f1dd11-a8e4-4049-8a06-95ab144fe531",
            "name": "Positive Testing",
            "item": [
              {
                "id": "5cf0f0c1-f071-4bc4-904c-20efc90227cf",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "29c1e6f4-1bed-4bf5-9c2a-93db50971aaa",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "5d9dd328-300d-4e5a-a7e3-9e6069c53b0e"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a8b9afab-9ae8-48cd-bc6c-3c1d27a080c5",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "d0d4d389-5cc5-45d1-a051-d597d1b21961"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "cd0566f3-3795-4dd6-898e-720ab982b5fd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "09bebc37-5762-42c1-8a6c-e4ec25050670"
            }
          }
        ]
      },
      {
        "id": "fb476dee-e62c-42f9-b653-fd20346b8840",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "cc2252c4-e71d-45bd-a969-a1bbf73cd4cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2d3a7176-e15b-4d22-ae43-8f9ca1dedc49",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "5993ff16-9186-4a9b-ac12-488c20aee2ae",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a4c1a7-8980-403a-9b09-427525bf90ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c03bb724-c504-4768-b9ab-80a469bdc045"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dff2dc1b-e8fa-4344-8080-141c2ce02fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7c39b9da-e0ac-44ff-b023-c2f0d12df1d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71289d76-b62f-4384-9122-ce6a80ce857a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23c33c5e-dde0-4cbf-9044-f68ce7838bdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85359120-4a68-43c9-b15b-9de2b075710d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6fa92645-19d6-4fbd-9102-88b6c2b497e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4a0684b-4e78-4fd5-a3d9-f69c4748df89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56f08e4-1bf8-4996-882b-69ebf3e1e6e3",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e713d74-2bd2-4b5a-8afc-b0437e6805e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32479125-eeee-4f5b-8a26-c77b63feb2cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d07f7730-c035-4ae5-9b88-14bb01701dc5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e4d7a004-72f8-4696-8d1e-c7e263d8ba6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4516cf60-dba0-4fdf-837c-e179036fb8a5",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5c4cc91-6624-4bdf-9711-c2eb1ce45a84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7a123c-302d-4db5-8489-33739394264c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbda35b0-57bd-4d48-b65d-40813d62ab84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5bbe4d07-a073-4407-887e-53345bbf1760"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df95e3f8-fe4e-4af4-a949-775cb0be068f",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ca4500b-7030-4036-a940-7728aa9ce9f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031476da-060b-4a4f-8ed1-67491039dbf8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7165c602-7b17-4c51-8408-0286e367e33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0f5c1959-2932-49ec-bd24-b18b92a8878b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a6f67e-d5d3-42bd-9ba3-604e70795895",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee90329e-89aa-4906-9e28-dac89c6f2675",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "236abc05-3e53-4b5f-86d9-7f15307511d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d7f8cb9-fef4-497e-bd9f-953b23ce510b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4ad49b76-a6a8-4d61-8e35-56dc5acbdfff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f89d8f84-7cdd-4517-a874-a47a90613982",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae368dcd-3021-4e84-9bd2-dbdfb453c3c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "368649ff-840f-46d9-b55c-ecb5f0da134c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee67f624-f075-49c4-90c6-6c6168abfd84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ee0876df-cf01-472f-a05f-4de1b23db678"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c63c8f38-3372-4829-b57c-5120fbbfbf35",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fec323e6-da6f-4f7a-b68d-9b4588234948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06c5836-0dd8-438d-828d-02b6d69baf3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf8c0c4e-0abf-42eb-97fc-286c10ae14e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d3b56d3-a3c7-4c8d-a31e-03dbdfad1954"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f4bf587-8994-4eed-a0ec-f88e04f908d9",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84e3cf1b-8c64-4320-8078-0f8906f329c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd7eb145-9bb3-4f41-845a-114711650674"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f097df62-17f4-4603-ac62-34d57efadb43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "455691f7-6ccd-4e87-b465-402c3dfcb8e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3ea79d7-a1cf-49ae-889f-3347439da6a7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0abe6378-71b7-40d5-ad3a-bc4bb38a266c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61fcc820-ab5c-4aec-b4c7-e186ff03dd43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae3fb23a-ec51-40d2-b4ee-879b53186f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6609d3c6-e63e-4e85-ae4d-6cebbc2198d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07c0bbb7-fd3d-4da9-a4d9-6be99d61a247",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "021fd41f-4efb-4883-8457-32b71ab85340",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15136bdc-b217-43a5-a2a0-943ebe187fc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bf03a1-5f16-4678-bd07-d585ec2ee6dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "31c56210-e6eb-438b-88b8-602b920a8fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adf0c684-5fbf-4798-a251-9a7da033e27c",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18ae6c6-23e1-4b87-b012-a985be0093e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4ad7a72-09d4-4016-91c8-9ef4a8f41f7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1edf29e6-74f5-47b8-adde-9bc446a33add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ad570abb-fc8b-432e-9884-7f710b9a139e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbc46208-3ea4-418d-9bfe-682898a762c0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c1dd05e-2c11-4fec-8933-277e6af7e1c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbdd9f89-9d2d-4b10-b937-bf89ef254521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fac88de7-e29f-4044-b0d1-5ae76afec09b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1a07b03c-096b-4840-9c08-6503b2636205"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e9809e3-7320-4674-af99-fa35a31a5005",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d95d7e-e602-43b8-9675-6e49ffb27708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a77dd7d-44b7-462a-9a91-d58ee5729d83"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c1b905f-c1e8-4a69-87b1-e9620d144969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "45ec7c17-3927-4a0f-809f-4bab60328cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b3668e2-6a0e-4c4d-a31e-96cae636722d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e38edb-f8c5-4adb-add2-45f6bc03839b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb0f877a-190e-4ca9-96a5-e27d01a4e2da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70b80257-3f45-426a-84fc-a53e8fde6a6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b4935f92-8971-410b-a1fd-0d14db49f1c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fa3ea56-697a-4942-8bde-f5a51cc26c7d",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "32f8ab50-4e1b-4200-9d80-7d386a2dd283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f9e8110-160b-4c47-b17c-198a3697007e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b596c49-32e0-43d7-b337-b6700bbebff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4be5bfc0-e4fe-468f-a6de-ea996eb74ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a219944f-7d2f-4b01-af2f-42eecb175314",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b24ac83-4c83-4b93-95b7-312faac30449",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4bc651c-d0b4-4fdc-891b-bb6c9417a6e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6dab45c-011f-4534-80da-08ecf25a383b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3d25b24-294d-44e9-8a03-569124495753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b883dbe3-22d0-4821-9fb0-61d7570be8a0",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbcdba2b-2b68-418e-8b8f-cbb77e67c26c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f02fa941-9cf1-4e93-aa3e-70b1987665c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "201096ca-35ba-47d4-94c8-e59c97386904",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "660ab696-bae5-473c-81de-af99f99b358f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4daed72b-cc90-420a-8ebe-56b0b08dc8cc",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14f844ed-678b-4315-8e17-026847bee234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fff931d-f7d1-4931-92ce-40edd9227105"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f46c7aa-92d4-438f-861c-21a4f653715d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9ab1e98-9c5b-4680-bc4a-8ebe47772fa0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305c14c3-d689-48a2-9450-1b7d3448c03c",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5eff8b90-c48b-475c-8ad6-0d7ebaea15a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7c6c798-0329-4d41-9ce9-4fdcab2fadd1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd35ea8-d10c-44af-9b7d-ffe517940d7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c607fdb-1fbc-4284-975e-aa64a07c8402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8d651a-cbcf-45c9-8436-e44fce428683",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81c2339b-f4f0-4862-b4f9-90ae7532950e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3dde6be-6181-4042-abcc-2ee74ad2034d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c9bb4c5-7436-44e9-a3e8-335bdc4fb6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0669afc-fef2-463e-a0f3-a3066c12c576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282338c3-1d40-485a-a39b-906ba75bced3",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebe1edd2-4055-4b5d-97b0-c09c9c9d7596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2496e26e-b66d-477f-9170-af361cbc2253"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33a135e6-07eb-49ee-9781-2ca7cf36c9a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "21b66bf2-c0a3-47a1-9f68-2c1e1c2e6490"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fee87f7f-a422-468f-b8d2-331f61d0acf5",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3c9e1-a64e-4438-b682-d7c711cd3063",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155813d1-2d4e-4c43-a1cb-012e4bcb6753"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "000d09c6-882e-4fae-90b4-7247ac2936b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "42960bfb-9e8f-428f-81e3-7f16bd723e4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6fe75370-29b6-46bd-b58b-4563b0ff1cef",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9762fd3d-40f7-423e-87c4-42b595fe48c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fcbf1384-5dfc-4c84-99a1-9bfea516d494"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b56f390c-f360-43d6-a5e6-7f088985ff66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "5b9c0feb-4d6c-4a80-b744-81d88ca8521d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ec95547-d61c-4938-85cb-50d2484b8bea",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ff4111a-b965-47da-bf93-fb6e40efa1e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82b27ec-feaa-4c0e-aece-7b2a3317dd04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30c99754-ae58-4fa0-8b22-f83281b18b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3667c898-bd7e-4f1e-92f0-efcd8ca3a576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1b62b0-85d6-4004-b2b6-80e54c1f1e3b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04a48356-09f0-4351-90d2-59cb3278d310",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a947995f-4828-4ff1-af05-568822830aa9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25d72fe7-d614-4f79-b937-809e4b750dd6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "cbe2f9a0-6055-4976-ba81-8faef7c52253"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d5671d5-6bc0-40cc-ab01-cb064d23b525",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f075e3ec-ada5-4c06-ac01-5d3c9db749b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21a09bc1-98ec-4cd8-81c3-15135c62c21a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f2a2ca6-388c-4675-8987-84acaae52221",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "53238990-9efa-428c-aacb-aaa293309857"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d0d89cc-59b4-4291-8362-670f6c1d3645",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0169134-ddde-4b59-ae3e-37ef5addd3e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44a0270c-894e-4fc9-bd21-31e04b380b55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5232270-d70d-48a0-aa22-9350accd6431",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "79dcc7ed-ef80-417e-b0c8-4252c0373ba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419da9bb-f6a2-42a5-abd0-2070b7b71a13",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "614825a8-d8eb-479f-812b-b9d9ae3176b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5457f977-ccee-4044-8dc7-99b06f85c9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cb4542a-d6e8-46b9-a176-fb324e5f8a6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "09ab596b-1868-48bc-8058-03dd69cfb688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a2cba73-3231-49b5-b008-702b8e339af9",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9d69d28e-72d2-4dad-824a-7c1682d3383f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c35ff8a-151d-47f1-9296-a6bd227f9111"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2170625a-a901-4a3a-8689-5309303bd5e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "d85f9e7a-272f-40a8-b835-c017f8ecb2fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7722d301-27b5-4a6d-b19d-ac08169ddae3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d2a1b5f-b8de-4a2a-9037-54cf224f2c45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8a49aa7-56c0-4ca2-a842-16350a8a436a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06904a77-cf8c-49e4-9f35-5d780269c4d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "674cabf7-8813-4fe5-9ae3-41868050b517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ebf466f-f9f8-4547-8f35-ebb931099e31",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7bdae4a-c24b-4773-95aa-c860c34b4481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9472d3f3-6d69-4218-be3a-9b7e7b8a0011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c57adc4d-e399-4cac-9955-839e4807c39c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7a5bf2d-37ba-4220-bfec-a60c59c81be4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c4d312d-060a-44cd-9af7-990bcd82fb48",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1eb8506-70c1-4478-b9ad-c776fd396fb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaad4136-3a41-4f16-a651-49e5f2654e31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41570cdd-4567-406c-b11c-6ef90f0aaf28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1c14550c-2bf0-4d61-baed-b14d35a9f291"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a923252-e3a2-4b58-8889-54d396282dc4",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae05584b-a19d-4845-907a-28e8eeade769",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "554cd34d-171c-4d9c-9868-da6ece98af1d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbf2cdd1-f7ac-4d8b-bb76-a4f22010b595",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "854ee095-20d2-498a-908b-6d6b33c50229"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08e1a3e3-7555-4da4-9f44-74cc649bb0f1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a408f6ad-1ca9-4a70-9251-5d096817ed39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1419a52c-5e2b-4a3c-bf81-ac8e5799c8af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6310ea1d-ca62-47f2-a876-56549096d755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "beb3184d-a038-4260-b664-2010269f409c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7590f5a6-352f-427c-b6ad-3d11e4156a7e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c6f8b3-8931-4b9d-af81-14d5c517859f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aee30495-3158-4de0-8558-c30f1901bf6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86940f5c-4f39-442b-a7e6-dbd9cb793be2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e1f8d23a-1b6e-4159-8f23-6d3e053f8b23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d58f3ed9-4968-4271-af79-e386af4e70d4",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4894fe1-a3f4-4fe2-931b-e439c7f516ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d72194d3-32c4-4e6d-8407-8d6bb4725fc2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a4f72a7-c73f-4526-97f2-75a19f240601",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "29c378bf-7e0a-46cb-a990-594339977c77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "195463b4-bdec-46f0-be90-57fc6a57ed1d",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36edfa42-1789-4387-94ef-c912379f2494",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d8804df-f788-4d0f-8830-ae44964b3710"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28c445d2-ba5d-469b-8eed-299a08db0e89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "424f5e41-aba6-4fd1-9c56-005044b1e9fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde5ef9b-19b7-41cb-9d6b-dff47291f9a1",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cebdff61-c8a3-4314-bf8c-4b456ae80627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc4cbcb7-0ce4-4c54-9c3f-10e58eb1d24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10a609ac-9709-4487-8b94-c4d41d6ccd0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "c27c6285-a4c0-49ab-8d26-3fd6430b0424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d794f172-ab4e-41e5-99fe-218cb8de631e",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d896846f-8614-4ce1-a228-ec84ecf028a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d20ef05-2a85-4be9-8200-330a0c74b313"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03316fa8-3c6e-4fae-89b2-9d9667602bac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "69faf74b-d258-4476-8d8c-826b9a28c9e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83dc26b1-f70c-4f9b-ae70-2aa365561ef9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27551ae5-5dfb-4231-b5f6-271bd552c2d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f1d95d8-589a-4ced-9457-ef005abfda2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b8bda1e-499d-4bcf-826a-7510ea30ab75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4306a2b9-b5b5-436d-9f54-f727dad707b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6595da5-dab1-4beb-b463-18519b3dd82c",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874fe032-e0d5-44bc-a060-3c50097b8175",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a3f2a29-c8b2-413d-830b-1a2e56ff8a5c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a894dca-9db9-43f8-abfb-75e531d91247",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "87c99665-d023-4827-a251-c0eeab0502b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f832e33f-a62c-4160-9782-b5efcb9625dd",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e26af615-c1ad-474a-9f7e-a445bdbf4155",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "efd3f18c-4f85-4d42-bb1d-e91d983004dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0232642-2f80-4ed6-a36e-2629042abaf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7b6b464-0da8-4305-a216-6ebe8485343b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90de1b10-dc88-4b02-95cc-60e90f4904a0",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff68718d-561c-400e-a0f7-5491ef447414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8876b6b-68e3-4905-b079-95cfa60b5f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ddc9bec-1328-40e1-b5ef-5e7aa17f1b2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0a2ebcd-d0ba-4c1f-9eb4-3ccce5d045f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ad1a23a-053c-411f-96ba-472ce117bc18",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1da93359-f69e-40e4-b87d-2f44d03f8172",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cd72091-47ea-4677-82ac-d4396e63654c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e20a65c-f7f3-456e-b5d3-2d47b2cac851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "8dd62978-c51d-4446-9088-c41aac981e8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb408c32-e90d-46f1-be56-671fa6625d61",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f6f1a0d-7dea-4d49-99c0-8740e5add0e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8095c307-c797-4f17-8c2d-3353557f8703"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "40ec4baf-000e-4bbe-b6cf-f205f714055e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce900b0d-af33-4ddf-9896-0f2962f6d896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb13f488-401f-4d48-96ab-ea6cd32db537",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acbc9b68-364a-4507-a785-046783c72667",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06da54d3-11bb-4fc1-a344-061ed9d0bfb0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33c925ac-2345-4074-8d0a-709ef3bbf702",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8424e05-fd26-4dda-b690-513dc7f1c353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1f4e1b-fbcc-4ac3-83ef-d5aac3e9908e",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3751c2f5-46e9-41b5-857b-5f6d1317f422",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03e05162-cc8f-4e8d-80ae-5ea22029a94f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ce452b8-c3b8-4fb8-979b-b6ab8312e0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "5c1b885b-c1a4-4102-a4e9-25e8b85a12f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a4f9d35-5c21-4b0b-8f0f-e2e2dc8a0981",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d6825b2-0b38-4a92-ad65-bbbbc9f6566e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27b42ff1-551e-423f-b652-75ac7070cffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb480470-b690-4cbd-badc-994ce504ba69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1f7050c0-124c-4266-a814-15db2c01c18c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41fb4322-c2a2-4f4e-bd57-049e6b43402a",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf36be0-9972-45e6-ad8c-b3921c63ee06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7d6db31-7b5b-47d2-a245-a8f1285c3430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c0daca0-8fa8-4f0b-ae60-faeea7276e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "3f39d51b-3bab-443b-b0f1-262265482996"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9207cbf-39f6-4d1d-84d8-08243c5ebd7d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a94201a-7e88-4cbe-8351-5bf2ddf9e2fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50776123-5177-4829-ab6e-fcba5855d4c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a93ed78e-135b-4c2b-91cd-260cadee1521",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "839fc651-fda6-4077-a383-703d6dbedf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24d4679a-365d-4363-b4b5-73518df79f8e",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1945508-dd44-474b-8246-66d81f97a8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354fa39f-7194-48d6-a453-43df231bac5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c655bb2-abba-4b65-a0f3-5cbb869639dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "0708ca90-0aea-436a-a668-88bc84b90bd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54dccef0-a26f-4df3-8a2d-8f18782cb0d0",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf42b878-1527-43ff-9ca5-e106dbedf29a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df97839f-4724-4ad3-82f0-19802f1e5642"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42b88b72-4bc4-47f2-a07e-9c759ac95d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9f3d0f2d-6714-474a-9d19-114762deb9f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "289a1f78-5b57-4e1a-bc7a-e87d913c9f86",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ed3f20-f16e-462b-86dc-01b9122f116a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce362cf7-1d36-4178-a2af-4b494e39f55c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fed6510-835a-40c9-80c7-6da369466ae3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9c0ef6ba-8058-4faf-88e2-38bd3a1e23a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cd5f43-69dd-4954-8418-d9dea2340f6a",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdcaf467-ecbc-402c-9b5a-22d95c0c3fba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3503f010-3abb-45d2-a6dd-69dc8f042ac6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b67bd3c-f2cf-4473-b3e4-7d66e381ac3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7585865-2599-4ae6-831f-9a8e37e19b1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "066b3029-1ffd-4acf-ba0d-8fea0cdbbe1c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3ad7d52-e8f1-4e96-9983-725ea4dd2c26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8de9a943-944d-418f-8832-5a8208a23a04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b685ddbc-c949-4895-96af-9b8589be4c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "23d50806-7b92-4747-83aa-2853edc26b33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6282d7d1-460c-4202-9545-9fc47ec17176",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "caa73ab1-763b-4ead-9206-01bc709a0366",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b44a296-f53b-4491-83ef-db11a8233a9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "737922eb-8e59-43a5-bbf9-0074e54fb466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2b3331b-e506-4b13-be41-13c978fadaa4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a79da0c-e4ee-4bad-b18e-2a3d6c5e7630",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfde05c8-7ab4-4c47-905b-97cf96d99be1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0baed58c-a696-4e15-b32c-14e5802e6ae3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45569aae-5c33-47bd-a603-fc366177ce59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "4b119830-764e-440c-940f-249eb834a046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a31d095-6b01-43b4-bfe8-85bf1c25ee56",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ade131e-3dce-4f9e-8eb1-992202ea2476",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2671731-55c5-4569-bf5d-2ac3e22bbb23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79f3831-a027-44a4-bd0d-df9d0969fa91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a4bf575b-c2a5-4906-82a1-7dbef0462b62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89668111-33c3-4cda-89bc-6f1fb8586e01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67246c8d-b1c7-402e-b7d7-87052721d90d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f924472-e969-404c-a6b0-0fc845f3fbcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "415eafc5-d953-4a67-96cc-f33e613ee8a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "824c7895-047d-4260-8e29-519647d747be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7e9ff9c4-769d-4015-902f-e66986df2e23",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7946aab-9aa4-492d-b682-1dd3e7df6381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "923be739-14ff-45b4-9cf4-c1fd9f15a6ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0839c3fa-b292-4d0d-bc91-a7c012c891eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "add54082-9c61-4548-850d-0c19eeb2424c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9194cf5d-a4d2-4491-9afe-bfade346f082",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4378a1b6-5864-451f-9e74-15b868f130b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cda12fa2-45ae-4967-b6af-f5c612b6f9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeac5194-0309-4b32-9ee4-4b752e879902",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "1edfd7f8-0274-47a4-8900-512281f7f0bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5737a96-bc80-4940-b7f6-f47c87731ab8",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1cb5590-a98e-4adf-abad-0c4111b66b24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e921ca39-11cd-4f78-9f4b-2ba21d0d8ae6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a43ada2a-c4f1-4e8b-ab72-631ef7d4b6f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca9f21be-d4fc-44d0-8357-31351a792688"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f313631-735a-4ce8-9fab-05b6407ab41e",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31ac13a-ddee-4bd8-8a23-bfe99bdea759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ab9beca-983c-462f-9252-069dcc7108d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5900c6c5-ec50-44fd-b9da-d24971e5ed53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9dbd8c6-00d0-451a-8a4b-abaea0eb6ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac059a53-8b48-4f9e-9422-cd0e6d7d6a22",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9f8bdfe-5267-4280-81f8-e5bb4f26f551",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a5abb9f-0c50-48bd-a432-6841978f1147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e31f0e6a-1567-4e48-9a2f-41146d39a7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "854a92e3-e35c-4095-b835-908d87c9073c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ea7927c-676b-4555-8a85-0479cb874498",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b717c3-55ac-4b10-a963-fd553d6e453b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2db950e1-e9a3-4ee9-a43c-3d5edddaf2de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9703dfd7-0b2c-48a4-967d-d784fff03d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "52d6c32f-88a2-4738-a58d-9eb6bc4c0caf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c1a7b6-01d3-4de1-b218-1218921044f5",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42224f7b-0b26-4891-b5ec-c48eb8fd3685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2bbee1ad-515d-4f0f-8964-a3c0637bbefb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37dca9d8-c0fa-40ee-b4c0-e8eab99559a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a446de17-f749-495c-b867-7b450ec2d78e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87935f87-2cbd-46ea-83ee-3c0234431e60",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6b130f-608b-4925-8993-0865df93b989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c470b67-f981-4cd3-a961-2dfc134ec399"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "818a13ab-8ec2-4274-896e-cec45b6cace0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "44b234d4-f7ce-41b6-b3d1-26c1339c91d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d66739e-873e-4798-8c35-86d007916436",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "90c40c07-2055-46fe-8e8c-9f8e619c74fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef6faaf1-deaf-4e62-a9b7-73b74fdc9b3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "022844a8-f6db-4781-8189-7b37395030e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7f561805-c821-4539-94f8-d5db3249834d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b78f524-540e-40a5-9a8b-7e0b2d48c734",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6eedd2-3b09-4f12-a07d-b2f61bd8dbc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9022ba35-6b44-48a8-a4be-ff77276a632c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea2f693-22c7-47af-a0b3-2cda0b9ff39f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6bceb0a-7839-41bc-9baf-13fda81cee72"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5e08c30-d5bd-4c4a-b571-9e84066e35dc",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b252b7dd-4e52-4c8e-a11d-579b47d2a328",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf8c9b72-acb7-4a35-ab10-2f17cae193fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "638e3996-1734-4a06-8683-4b7a4e77ce16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "40c3c3a2-42e9-4bef-aa0f-db3d262a756f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf020be-d1b8-405f-96f8-2057f22e9bfc",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f97c948d-2943-46f7-825b-f7aab22dfc06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0680f642-6fa6-41c3-994c-df5f8b8298d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3101d0dc-a261-4ca1-9362-9f5d51f25864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc909f86-30cb-4988-a4c8-401b79cd51a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd7ee928-b1cd-4333-9a04-2a5ae883e665",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edcc4b31-272e-4bbd-aefd-03e8c0729444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9fc2defc-bd51-4e43-8b45-42bba83cd9fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4375842-c2ec-438e-8bfb-8d0937bc1788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "366644ef-85ca-453a-8233-3b7a203c41ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50961434-f27d-4781-be71-1741fb39bb38",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "335cef88-bb0c-4ab1-8654-d760e6ebc825",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eb52fff-84e9-4e64-b633-a70cc84f97ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81099517-922e-4fba-a91a-652e7b82d06d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "197fca4e-5c3f-461e-9b59-fb10968f559d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff475c13-c0b7-40ff-baa8-f7ec71f53fcd",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c54499e7-828f-4112-84e3-7104680eefb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "537acde8-42b8-44b7-ba83-8b8233578d56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c6e7e22-92d8-4e2d-83ab-ffc7311f2f53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d0b4c912-9248-447b-82a7-652e69df88d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "491ad8d8-7e7d-439c-8521-ecf10a7983b2",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bff4a32d-3d77-40c8-b593-3f96165a1659",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4ff9dd-9b3b-4518-ae48-d5f4f845a2e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9eb00247-0531-4177-a30b-715403384db9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "97c6b9ce-bcac-4564-8506-68d4f779d9f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f28ee0a2-c1e7-4c0d-b046-a49d8e84cb27",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54a4399d-9236-4142-b87e-3f97d101bb1d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f90750b-7d4e-4022-bc73-02aeee968483"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04ecc733-0061-4802-a71c-8517e1140e62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d725386-96da-457e-8145-d73dec724828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb5f1f0c-5f6d-4614-a3e9-76c2724e7337",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79109aa6-3581-4fe6-b7f6-1e0466209b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e62a2c0-8a68-4ae8-8842-cc46597d8ade"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15e1c943-862e-44b9-a73f-79e0a0432161",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6d056b64-2dbf-40b5-bb46-f53432d603c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66852d74-8692-4259-8dd5-5b5f63b93004",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53a880dd-1648-41ec-9238-88a0e18bdb88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "580fe65b-3d08-4e2e-a9b2-60616a4b6478"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f1b0583-20d3-4aa1-857e-6b5f433482bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0dade323-a2a7-426f-bbd0-e2084b9af139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c28f9919-3e7c-4d75-9a6d-158ccd709534",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5816656e-0515-456b-bf08-116f1761c293",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18a31d5b-a1ea-4477-9475-f94f62a0fdde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5ebdd96-aa64-4366-aaf1-68fa96cad1e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6981a32e-7613-43ff-82d0-d39ee4f62bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c90ef687-f95b-4a6a-92bd-24229b6e994c",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cad92ca-a2b5-4135-9c5f-2e05bc442f0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66f0c003-4fdf-423b-b75e-610b8851f533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f66476df-8691-45bf-b192-debe025d07af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "909b389c-554a-4b00-b823-34898e46b8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad64972e-38ae-4678-bbca-3dd248860206",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fd733d3-5383-40cd-b2c0-1d020ede775e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49982d97-929a-4e38-b923-bfa5413d8caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4a45d8e-ff04-41d7-9b9d-3070a7b3c264",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aef0d8bb-450f-40a2-a978-279a1b071a61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e436905-d00f-4385-b2ab-1d7ce66a5a29",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7901808f-382c-4ca0-86e1-12645baa8433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6a1b948-c01f-42fd-80e9-1bce455506dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92dfb9a5-9f31-4e66-b479-cc113681b60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a9ca088f-6317-43c0-8590-54d7f89d2bd0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae5f4ed0-ae3a-4472-a2c7-e28645ee4864",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c416a62-4811-4168-9afd-e4eb7b96ff64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0901300-8b6d-4eb8-8e87-c5397d5bfe25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae767bb0-0670-4ba2-85be-c7376ca9634d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8d772192-fb94-4044-850d-689627ead0a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adec8c4a-d91e-4546-ac6d-5c8a22781491",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02247bca-c0c6-427a-9aa1-5c5c27148b85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4d675dc-38aa-4519-83de-35bdcec3c4af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae46ce70-0568-42f5-8384-ff023329b61d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "72404671-da72-42fd-b842-54db2c7623bd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "174e48cf-c861-4b4a-9610-86b40f3af811",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9acf03a2-b4d2-4986-863f-4b58e8bc65e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab95cde8-9c27-426d-870a-8d0a429165e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d9bf1f-f4da-43d5-9c4e-503b731114da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "faba6fad-7654-4200-a48c-ae69c683313e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26fbace6-c64f-40e2-ae89-d0483ebd28f4",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fea3f3d4-d702-45d1-bfe6-eccf3dc5c826",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10cabfe5-d57c-4ceb-ae60-a4bf272e9df4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21938ba4-0a6f-459e-940c-fa795a89a3cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "05f8e0e4-0801-46c5-9662-05849aeabd40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdcf3406-4760-4569-afe4-c61aab202051",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cceb357-d015-4722-a98f-17cbb4cb0479",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61ce2faf-0e9f-417f-bd41-ab7541495e5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ab21d8-31b0-4221-b725-1a77c40f4203",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "765b9a20-e055-4f1d-9f5b-d24452e2990d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddd18103-4153-4411-b0d4-7af2a10fdd66",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eb92e0f-8c53-4410-bed6-52d1a10ba43a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e71e6eb-86fb-4834-bda4-303da9b7ac7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76b7495-5ff2-48bc-af92-7ea7500f99f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "7962095c-3a6d-47d9-a31b-a8e05c985bda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cd6165-7923-463d-9bec-b0a640332493",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3747352c-b89b-47b5-af22-e126bfef7aae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e7069172-97c7-4509-ab46-4100e45429ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e305bcb6-c710-48eb-8c27-85ccbb1f3169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "901ba7c0-bf92-4f56-a38e-5dc288cd67ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69017a61-2051-4472-8d31-f409bc6373f5",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2a5d46e-b88b-49a9-b30d-0c8ef6ad1fc3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fef52dd-1a44-403b-8efd-f3f3ce3013df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcab87c2-8bdf-4353-bd13-b2571af2b9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3748fb20-0f9a-4e81-aa02-f9f0bb679025"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc873aab-bfb0-4d84-9817-3e8873f2fc30",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cd9857-d858-4400-8e06-28aedb8773d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "adba7fa6-b38c-4be5-88c0-232f4f510b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4011a37b-0ddb-40fc-89ff-1994351d28e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "c4cd8084-5228-4c35-a9ac-b39e8c8b15e8"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "721bba92-77ad-4fb0-8ce9-5fb1d150806f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "db747058-88f6-40e0-a2de-081e2b157b19",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46627443-7b9e-47e2-a21c-06bf2c0ca421",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "acef6228-3a9b-41b9-b5d9-e5d04b1562da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d7b955-92f1-460f-b7c8-a28df2245c52",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7a846ac2-57ac-431f-b30d-dc2c54123ce1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3155b7b0-bc08-4706-a1cc-cbb356c6f8fd",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "edd57ed0-72a8-404f-b5ad-bf48b1689783",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e89a1f64-8076-4d0c-80e5-41621261c79d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01c73b36-c296-45f5-8fea-4fdf53c64de7",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "bb297b6f-5a0a-4de4-8e5e-eaab0069d1c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "329c7b41-ab3d-4341-b7dd-b1d743bd29ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9aa4a6b8-2d4c-4d44-85dc-e6ab881fce1f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "6c96f9d2-c442-4b96-9911-ed4699377cc4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bb4c6fa7-1f8a-4cac-b39d-073086f0a835"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4991d995-b294-479c-91e0-0e6a21cef717",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "feba8c94-d4fc-4e39-8c60-ddbb6bf8f91a"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "f0d7aec8-f188-4c97-b074-6adca67cf5ae",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7751ebfe-42ca-4563-af18-358371aac375"
                }
              }
            ]
          },
          {
            "id": "03a9b7e8-b380-44d6-a69c-905c6fcb296e",
            "name": "Positive Testing",
            "item": [
              {
                "id": "58666113-9f88-4330-a458-a3593f9dd44e",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b7e91667-4a85-4a21-8cb0-eb20e794b70b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "877dc586-c348-4c45-b925-6a5247b7e256"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5b472332-5fe1-4397-bf71-a38bb85a6cc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "e371d17b-f136-4839-b627-c03ddcc3bff1"
                    }
                  }
                ]
              },
              {
                "id": "e461d554-1f47-4727-bf29-6ca15a1974ba",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e26064d0-ce9e-4227-86e9-b238f6eb15fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2c6450f0-b89b-46ce-879e-08126dc1073b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b4ce1a21-c637-4d1c-9edb-397284e95ea8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "590fe082-3757-46b5-b5f7-95207f068be6"
                    }
                  }
                ]
              },
              {
                "id": "7d129407-acf9-4013-b74d-99b2004feec7",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cb3457f-efe7-43b3-aad4-a48b8e62ed76",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "20667b0e-4cb3-4bbd-8920-1a000631ec20"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ea6f560a-eb16-452a-87f3-64cb1657f960",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c6ef1b00-dd88-49e5-ac92-2cf2550de582"
                    }
                  }
                ]
              },
              {
                "id": "3090b639-1eb4-4f64-97bf-561ff436b96a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9585059a-251b-4aa4-ab1e-777984b3e742",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ed811e33-2cf5-436f-a45a-7a10f0bfb002"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fce1532c-3cf9-42ef-b560-414cf902c866",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7794fa4e-5298-4ddd-9e29-bc6076322a9b"
                    }
                  }
                ]
              },
              {
                "id": "c3d15c11-7a85-44ba-adc1-87494207f7ee",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6bc27eab-49b4-45dd-912b-8e3e2ab9a7ec",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "2ffac9f7-cf37-4312-9aec-8ab0b61496ec"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "31e1f4a3-7558-4664-86df-3364289eb6a3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4a311b8d-bd46-4a37-ba4a-dcb8785379c4"
                    }
                  }
                ]
              },
              {
                "id": "43249a58-7ae8-47ac-bf93-70d5eea596c2",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b039e584-1078-4509-9350-6ab54f230bcc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "029e7f23-a4b6-4596-9777-da826e366d1d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5e6488b-f3db-4a9b-bf2b-b685d12530a8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "d750a733-601e-4d38-8b55-7e9066d7d1de"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "fb353839-0b8a-4ceb-86b2-f64fcdaf8e42",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "12ab195f-60ec-454a-8b09-45e514df8a25"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "a7560637-9661-4f61-8555-1adc420b4e49",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1014764c-e8f1-42aa-be07-6f3e1796bcb7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "df5b692a-d875-4a58-aaa6-fa72f7c55012",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "bb068eb6-e1a1-44cb-aab2-b5b181378007"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "87c29e0b-6c8c-43a2-a4f4-be637b8ac0fe",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5256474c-d7cc-49e7-8514-8159b571058b"
            }
          }
        ]
      },
      {
        "id": "79920f3f-d6a0-47a3-82a2-6bb5dbd6767a",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d96f6f47-598c-4597-bc6d-f24f84decc07",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c3e134c-086b-4af0-aa02-e5275f455d18",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "e14ceafc-be84-4023-b08a-88856e5189e9",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27ff19af-8d6f-4a35-bfac-acd69cbcac67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a95883f0-d8d0-4eeb-9f2e-891471abafe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8452360a-a7e1-49dd-b013-0a89b5cde378",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1a9d76a8-67fa-4aba-92d6-05991cda7e77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed89f332-7ca9-4dab-9933-51c8409fb7c2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15dc6f8b-ccd6-4825-861f-a5d24a774cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65824955-11ea-4a44-a3f6-fb5046293f59"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aacce96-1e06-457f-a638-7368371dd759",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6f04f358-7f5b-4ce6-a01d-2ea55b5504db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec1548be-5ccd-43af-82ce-ce072da42419",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8163cb58-a5d7-46d6-ac41-a492bc26347c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f9c97f7-6f42-4a73-bacc-47b77738163a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2efc4347-a24c-41e4-9407-fd1481645f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "9170f97f-f418-4a54-9785-d8c113964547"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aab860a1-ef07-455b-9dd1-58bae17c6173",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f22cce42-e087-40a3-93cc-5649ceb61a2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c69e34ae-3b0d-486d-9bbb-8485bd29a648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8760738-800d-40f6-a5ce-5527e5c4e620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c95f1b82-8f7c-4a37-87af-db9cec8bdbcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a7662a-63b3-44a3-a096-89fd2e684689",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ace39072-d505-44fc-b373-ea5772e0c577",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2eef4253-7512-419d-9f4c-4211979b1da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13fa4033-c1c0-4cdd-8bc2-271713acaa85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c57f122a-60e6-4233-a52f-8740184344ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dbb7b59-1137-4d17-a5ff-cce7fb6745ba",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9847c30d-a1e6-432d-af47-4c3b05cc513b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91d65f26-cdea-4eb2-9ae8-b81be12250ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0666385-4423-4189-a324-ca388c6e8b27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "17e0306c-dd07-463a-902b-e81463914bd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c326a43d-88bb-4791-9a79-651326e241d3",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ae1b79a-1eba-4117-909b-fffa64d57ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "231a7439-f35d-4117-9f58-d7ad5b26c91b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee5648a-5ce1-4521-95d5-31e9b6eb2eb0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd61043f-5913-475b-b830-1440a6923538"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c89e951f-48e8-436f-8120-8f11aae82c39",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56a0e898-d607-4102-9f8c-ddae9731dce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "712896b4-681a-4da7-8ff8-512b72b02537"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af154c7e-0adb-45c4-9403-d27057b95d78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "41161019-a281-4585-b3c4-2598d19c8a01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b60eebc-6cd5-4559-b6bb-691dd45094a3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4831cdda-a761-4353-9442-beda898cbb0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1ec8f2-335c-4df7-aa29-f363e6104739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ca86687-5c5d-4693-a82f-c1c6753f50b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b539e85-caf9-437b-bc42-125d8c764e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acd72684-40b6-47fd-b990-75526c91b3a3",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0ccd84c-c28d-47a1-8591-e4ff6db11db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7226d3dd-9bf1-4596-8be1-ea0330e181ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3d9236d-8131-4445-8506-d0a4facd373b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fafeeb17-f8bf-4376-af30-642fe8779adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1323b246-4719-4873-aeab-8bba5565553b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9aa1396b-b5f3-42af-953f-b40987f1de8e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "91e408d6-6e24-4eec-9446-3bcedff15a1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14ff96a6-981c-4552-9c36-f72c6cd05b57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "23c1dbcb-ee15-4ccb-a5a0-c3802bd973cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38b5f539-f488-465f-81ba-15cc56eb799e",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9caa89c6-3753-4b40-adb5-746b82acf33a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176d3076-25b7-4c00-a534-a55c7f1f0995"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0fa29a2-a4b0-49ff-96db-b607e46b1589",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "61cf9783-a3df-42f0-b226-4493abe191c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d2860ee-20c8-43c2-8df9-cadee2cedf3c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59de226-167b-496e-b680-a194ac53a727",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "714a869b-9762-4dbe-94f7-672458efff80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7780db4-0195-4966-a1f9-35d7f2a47c2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4638be6c-0b3e-4675-b129-0534d24d2a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a95f765-1fbc-45fe-98ad-8f7db5ba96f3",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb17c3b8-b02a-442e-8fa6-e4cc47a158b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff6746df-19c0-469e-8ddc-29450e40ca12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f84a5b3-e2b0-4c33-bd2e-1482f6a96e2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "77344879-49d3-4286-8dfe-cc34ea7fc046"
                        }
                      }
                    ]
                  },
                  {
                    "id": "830ec0d9-3ff7-4f0d-bb40-499500c8a4a2",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc6e346f-327b-4258-9e98-19aaeedae142",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "255cfece-06c3-4768-9664-28a087b772d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b71dee4-b6d7-47e3-8296-18aa87e5372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "383b72f2-2631-4745-b352-f302c748710a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c7fb392-3c1c-4f27-b8f6-06a6c3a43b46",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3371f36b-1b7a-48ed-9b81-2b18fa89f6b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25669785-ae11-470d-874d-17e39c8b5533"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecf3cbb3-be28-4d3c-97dd-b5460de8abbe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "6df11218-7cd7-4f37-bace-cca985caf3e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1b82ad2-7a40-448e-a1a8-e76dfe8de2ff",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf8f6e3-12f0-4a6c-ad44-d2e0b7207683",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f92b4cf-5391-4b0a-8ed6-48b24e16c346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2d9127f-f3b0-4399-afc4-dd1454768ff4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fa82f7a-66d8-408c-a21f-e57562ba4a93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe571e78-304a-4559-9714-5b27973508e7",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f7f493d9-2c84-4352-9d3e-f242454e69f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afbb508-9cf8-455e-8549-7594da81cbf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f997bca3-096c-41d4-85d1-afe02e5ff089",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "3f83f4ca-2e7e-411c-bd46-68d61525bf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47e7352d-ac19-4740-95a7-40adbd2b7283",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe50db33-9b2c-4730-ba50-dfb3f58f13fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "85dab5b7-9be2-4957-a0b7-0ac0376cf116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7af41a1b-9a48-4146-a38a-727fc97667af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc8930e-a8ab-44c5-8133-7dacad23cfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1ef9b02-7c01-4d23-89f1-eafad2fea115",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc4f0a03-6d6b-4366-be17-a4b5010d8c55",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b4b59e4-8669-432b-adc6-b92c3b1a6ec5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e7ffedf-b28f-43b4-8bcf-60188371ba88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ae327d8-e270-4e26-9e5c-7c321b946367"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c42e267-580a-45f2-b54b-1626e774885a",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "397bfa5d-022d-4a20-93d4-88a237c02110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51af58cb-b6e2-403d-bef2-ef3683e9bc7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e329876-7bab-46ab-b9f3-0ed24558ab94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0915404-a97f-4347-a743-e4a9777c7e2c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1c6e06a-b34f-48a7-a4a8-491c884b441e",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3ff2b26-eb36-4666-b28b-a45f2fb54b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00159d24-d804-45e2-b5ef-226fbafe3734"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f418cfaf-4a27-473b-af06-157b2e62cf66",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82a75c87-5ae7-4156-a59e-aa094db89f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc9325e8-e6f6-43e2-b092-cc78ed92ca16",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b30a7e1-d3a5-4b7f-9e79-67bff888c088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "107bc797-c6bb-412b-a674-bd14a607d591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb0cf445-ac41-4d61-81a8-d287f75352a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eb20dfb6-ade6-48b9-92ff-f3ebbdb54633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecc3d83c-2252-4be2-b236-6a7c645e1191",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48034483-ab93-436a-ab7e-6618b5729191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "204a6c29-8fc2-4ac2-9445-88e845d0383a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2f6754e6-bb24-4f26-82e8-8b86b0df376d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "28c0705e-6ee9-480d-8041-947108a3b98c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "599cd74e-e27d-49cc-8125-321aa2e5f57c",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19067e5b-13b3-46fc-ad39-0c280f7d00e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93e20dc9-299d-4800-92c4-33823e1b2a10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64d9d276-122c-4861-92ae-de71ff1bac44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1011a3db-1b24-4e5b-bb13-2025ab3221ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a61df68-0ddf-4922-b58a-013327601cee",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e95c9c8-8a07-4a84-8bb8-43a489ba86d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f655f88c-9083-4876-8fd0-92af41a0d492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed00ba60-d6e5-4096-ac0d-2cd24e62ffd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e0972c5-6ab1-48fd-ad5e-e41c2cf29bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d64d07eb-6206-4e04-a760-1678f32ef48b",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a402eff-ba52-4d12-be3d-d4a88231c020",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0a5530fb-ef7c-4871-8e9c-6e82b857b134"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "725c169b-7890-4c5d-9790-5e937023ea4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a1ac089-8529-48ac-a589-db1988a830d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c58c62c-fa68-4436-b07c-384c2dc1075c",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb27d6f2-fbe2-4696-b26d-5decae04b7c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbf41b3d-59e1-4087-8f28-f092c1148618"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "301c7abc-287f-49a8-8cc3-81edd6b8ec0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6284109e-030a-4451-8e16-0f9a7fcf610c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c689ee87-01d0-4352-9aa0-9fb974f8e09b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61c54a01-5bd0-41e4-a03b-dac97713cc5d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "978179e1-7bfe-4a3c-b4b3-6e7e81710ed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6381318-ed9b-463b-87ce-d37daeb697f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e85bfb9-c26d-44b5-bfc0-4f5bb74936a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49162776-c187-4a19-8397-ae34fd19b84c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99917b19-4264-4c9a-92bb-2dad17847fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f124c8b3-5c7b-4c96-ba22-388b7669b8b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "596fa053-0991-4c95-8739-e3f3264c273a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c602193-98e2-4d21-ba73-b6a09e6e454e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1df8518-1995-45ac-9164-e89844d1a66f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5059b9f3-e497-4fda-8b4c-6a11346879eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281d02e1-07fd-49ab-a9fd-83e41559a40f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15f143a-a823-46ef-ad2f-c5c34e792f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0b04b02a-6468-4fd1-8259-abb3f5cfe1ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e901189-fab5-40ea-9e57-185ba8237c9d",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16a0205f-6e9b-4357-bd7c-9d8ed43c2610",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2649fa-f64c-49c9-8326-1d7b5b30bf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbcebefd-af4e-4703-91df-6b6907f9671a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2805d0a-818e-4b2c-a70a-49f13608bfdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c87cf629-a09d-42f3-a6cd-dd5a5ce41572",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "090982a5-943f-4b1c-be6e-a4e36d7f5142",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f4301c-6a7d-4186-a5d0-0114dc6426d6",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "40f8b897-a0c6-4e5c-bb7e-61b976c03804"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "047d0bdf-84f0-4aca-8780-f912b1845f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1d4dd373-8d8c-4694-90cd-d0f3b4158caa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "803e8347-f1ac-42db-8148-af89d837f3cc",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04348963-75f2-419c-98ac-176f29f6aaed",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "602e526a-9daa-4417-9902-77a40895e86f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c5d306d-4049-47b9-8386-003a22e4db0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a2e0b21c-fe36-457e-9f87-e344a47c624c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c5d268f2-49b3-46d3-aa76-2281cc868e50",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9e4d7318-bd69-4e9d-9870-c111e2ebb9a0"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "580d025d-3277-46d2-811a-ddd2bb81374f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "30bc53f5-6c1e-4720-8e40-a337394f7032"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4ee20f0c-7fae-48bb-b102-9ad5ea9d0142",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7efdcb1e-28f7-4956-8ae7-c6cc3170f15d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4a433ee6-7eaf-499d-8d99-7c1dbe454455",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "aef80963-7ffe-45db-829b-16e5444db593"
            }
          }
        ]
      },
      {
        "id": "453f5bea-d2fd-4ec4-9f25-fe95233f3b71",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "bf70e2eb-d1fb-4158-9000-a73844eff9a0",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7ee43e6a-0b71-481c-bc08-36a37fbf7aed",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7ef7aebe-1216-483b-ad0f-13b6f71fffee",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3851e4d3-834a-404d-b929-59cec5f10468",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "040aaad8-4e8a-4547-93a1-83dd23c71896"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2023b974-150f-4b6a-a3e5-6f6265b03058",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cf0958-4bf7-41cb-85bc-e8697c7be252",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eaf25f3f-ea4a-4da1-b213-9b7ba2f46fd3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ead5068-6c08-42a3-885a-a622ffea0257",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bd108e9-9701-4b12-9078-2a1c28f9a4fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9983da5-4275-4431-9388-e46ec7f37349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91c74318-c337-4eba-8ebf-5ad70d062d48",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52c8ed5f-163f-4747-aec8-806596a2d8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1364771-0dbe-4b0d-a825-427a5379a03d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ff582c-e13d-4396-ad13-8ed55bfcbac8",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c04fcf2a-dfc7-4aee-9065-22820db8c4d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e25edbe9-95d6-46f5-92d1-fc40bd8d9ae7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed1d95f4-5c2f-4350-9f9c-a074effb2666",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8eade64-c028-446f-8e32-8d7402c152f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d32f2244-bce2-4a62-b449-426232859769"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e8c149-34a9-4beb-8dc7-2da7450b325a",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f59befa0-ab2c-4800-868f-fb7ffd8230b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f12b2ae3-6cbd-430f-9004-c236008f5227"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc4447eb-c968-450d-8bfa-ecbc6fb1430a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe5172c2-1558-430b-bb65-c9bb4e2741b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca527626-a75a-4fad-8aa6-3fba533110eb",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b90c97a-7ba6-448a-adb3-f502cb0fcdb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf5a31a4-812d-42db-a86a-43fc69e97edb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ad5d8a5-e5c4-41df-a312-bb124faf9e9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35c8e017-f45d-4a7b-bfaa-4449e3364930"
                        }
                      }
                    ]
                  },
                  {
                    "id": "057350bc-c8af-4754-bc55-8f60c6763e5d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "500de9d3-740f-4d6b-93d1-31e60a38a9b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26fd55b8-9941-4d84-8ca2-f079aaa15352"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "71422efe-4028-4598-a75a-aa7238dcbc56",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "439c090a-2d12-49ec-824f-b8407f6a37f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3d5bda3-5fde-422f-8ad3-04323e2c8d3c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d737c02-1be9-483e-8acc-3173256aa678",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea68fed-587b-431f-800e-847d3bf58ffc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "140ed772-fae0-49be-b156-bea4e76fe190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b20ce9f3-b6af-4008-9bff-8b1e0444af32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8af7ebfb-1924-46e0-8ccc-6a225146c91a",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0747481-67d5-45df-b6b7-78aecb7425c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f2bc7cd-4c03-424b-a3ab-e7e1cc699638"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e24a94-edd4-4393-89a7-d129a2deac91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d740f36-d0c5-4c2a-b86e-0d54278f918a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b3f34b-af76-46d3-9730-77c3bfbffd9d",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56c42c1a-2125-4331-b269-27ec48391785",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8c29f977-97ba-41da-a744-2ef029ee095a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e57c0a3-c443-4241-a3f4-b1a6e9350df8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cdaf069-54eb-4931-b374-412cb645b118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8982fc63-38ce-492e-b7a0-6e9ea93ee7d1",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f343f80-0c9c-4be6-91fb-6588ca92515e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2903f6e8-b451-42aa-914b-8cd3952beae4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9ed8cf4-cb11-40e8-a735-e67db01baf76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48340b21-f6fa-4c52-b44c-8cb6ee08b5e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a175a0e5-9679-423f-9a5a-de37738f8430",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3958138-ec55-4e63-9960-b009ab8ca94f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c9046898-812d-42c8-8354-de55dc35a808"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c880b31e-c16c-4272-ac2c-dc6f418e9d62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b129607a-f96a-423d-93be-122ff3bf2b44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89d0ab36-3bd8-4b9b-b53c-47e34f035e62",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c9f3dda-8188-43a1-82a4-72a8925de7b8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "468f7064-58d4-4944-962f-6e354a288ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26a7b533-2b4c-4666-81fc-9b9296f4e4cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2accf2e9-345a-4361-8423-0f67cb126925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c292f2fd-1261-4ecd-b6fd-f29231f9cd05",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dd48f09-ee5e-46f1-be9a-990b1d2e8494",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "deaf6dc7-ee48-40f1-8373-9ce6376a52bc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "592df3fd-c6aa-4b96-bcf8-3addc460ead3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cba69ffc-655f-43fe-96cf-fbf845db5561"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7066b50d-11c1-4b10-a761-7c76f053db9f",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78e36c34-931b-4b11-88fc-288101effb65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe693da-0231-4723-bb59-d71e97c363cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "368f1b4b-7c41-4bc4-a20f-39431ca443ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7b706bf-c3de-4703-b48e-d9a3b8c81771"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8db54c73-9f6b-48b2-82f5-517023df4380",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94e5f56c-b8dd-42c3-a752-4bc0a4244702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87eb7d93-b31d-41e9-8901-2d4ce819dab4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54289f96-4145-4580-b480-a746ceeeeb45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "317ab8de-e0a7-49f1-a70f-c3e547cf1032"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d14d6826-b669-435d-bd24-3e047e93acb3",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d026c89f-3ec0-46b7-9ca5-f05a74f0047d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9609e849-49dc-4d29-b094-3bef34d9e843"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d43cae-a34d-4c19-8627-267a696634cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc73074b-f1e1-4706-a413-2c4daf7710b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a1ef1148-7955-4df9-accc-a02f73d090b1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6c28d6c-9eab-455a-8f41-f53d07708943",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a233152d-b34c-4734-a9a9-ccc1db83c459"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4db252b1-8177-4532-93b8-43aecd364329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ccec03d-c5ff-404a-952e-879c0e91a994"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f11921c-7e5f-4e25-9aaf-4709edb7559b",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d69a0dc-67d8-46fa-9ea2-e464767b5bf7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f9e22cb-00ff-4762-9561-75fc8b698cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "184025d6-a8bd-42a4-b9b9-deedf72be0fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3bd8b8d3-4061-4204-9b43-e37b4d71e879"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1097b724-8a67-4aca-bcbb-f94e65aa0a6e",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fab10569-fc26-4d66-afda-92b09591fd9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8858d85c-0968-4e92-86b3-c7d5ec0497b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6e472e-2e92-4eb4-8309-8192316560b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "379a316e-f40d-4170-ba05-0146655b1e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1835529c-672e-431b-a014-b9b1c9420c09",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67a9720-19d7-4bc0-a7d5-f13aab24da5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4259a9ed-2723-4249-8dde-ebaa9745981e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea7b0aee-6c8b-4e59-bbcb-0a11a0a6f906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "42183c1c-16af-4168-9137-2ef7ca0f09fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7c9f21-2449-45bf-b2d8-a26b3037cf5f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b915113-9b80-42b1-a57f-9003b922a237",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ec0693c-37c2-4450-8e13-f9fa998c3fea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91f43b9c-5eff-434e-ae12-6b2b18eed17c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65f63148-533b-41c1-9bfd-12324e89f03b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04cf4b3b-a347-4046-bd1f-a5b6204cec47",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a5053ad-5be1-496d-a09a-c1f81495f1c4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "09726fb3-8956-4cd3-b5cd-002d288d56af"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb83d88-39a2-452b-b8d6-86453d801ce1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5e787ce-994f-4a7f-8d2e-dfd814f14c4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c57070c0-dea9-48fe-b49d-78550717aa18",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed2663b7-3d67-4307-b6c8-0c26ab2f0da7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f99b1e2-9d7f-4640-be64-f51a1814c078"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "99ec6a08-0699-4ee4-8352-067352fe9a3d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45152d9-3aac-4211-a4d4-78993d4d4d01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95a37763-be38-409a-8855-d84cd951c4aa",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335cdf0a-d154-4114-a971-26dd24720cef",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11f46eb7-26c1-4113-bc9c-0b33c88c452c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12f7de4b-38be-47a7-aa83-11f9e479a5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3fba2cd6-0b50-4535-a217-1150da8c0e3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5617709b-b12b-4a79-9ffe-43d12def10fa",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fbc257a-ef0d-40e4-b16e-ac0f2994b2be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4d6af9b-63cf-4ca6-bf03-47b79955b3c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a0f180a-a548-4ede-8f32-92a4ef5e9f4b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03b256df-0076-4a2c-84e8-22e29857c6c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e13d8ce-e413-4d57-aca2-0c899d9d7dda",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5583add-50e9-46ca-84d3-0c7c6fca58b9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df2290c2-7292-4eef-966c-0678748227f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4143c74-1bde-43f1-8346-36a66a0802fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "152a3f46-058a-4fff-a4df-b6b653c91fbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d923c8c-42a5-4601-a4b0-0dcd5a0e6055",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "496c6ae7-754d-463d-aee2-9c887eb0776c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d74825c5-a166-47f3-947d-7f09f2f1efa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "114884b2-4ab2-4e27-b8a7-307db53017d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ae30d2b-8cac-4e65-b94a-f7f0e49b826f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2397ea73-6279-48ae-83f7-8e46442e13cd",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccd47f3b-fb94-4f59-b68f-28fa34d7672d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "11040dab-0d26-41c3-a868-28624100ae1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e99134f-bd32-4e0a-8985-c8eb6d2891e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0eddb9f-e391-4464-8c49-17c9938f9355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f68ce99d-92bd-4f71-a9b6-eb63d7496a7a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943277f5-fc14-4de7-b76e-41f9ccaf71bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcac8792-be05-4bb9-85c1-58b9e517c6f8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c776239-a4bb-4f94-bcb1-47166c05a8e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbafd0c7-eeae-4937-a5e4-3c48c2b7dde2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24cb686d-7f42-425d-a781-2cbf87ee25a9",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed78e96b-a651-4737-8142-7ff9aaeb7f27",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b79ec83f-d81f-4e6f-98a9-18ee091eac29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "157bf8c7-10ab-47fe-bed7-f4b7a836e44f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521437f3-346f-401b-b2da-6105edf49055"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dba7dec-425f-496c-ac18-cc6cbc88bc18",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c16752e-b556-4789-90e4-edf2b2833f19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc29ad3-615a-467b-b165-55d003a34181"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88890df1-8612-4739-a5c1-4e5acaac6040",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db452033-c3d1-414d-871d-a43a096e5c0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2013b1e-a3c2-4e7d-9c04-a3d03eb2a635",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d5c151f-7acc-44ba-9f67-19f0aef62a50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ed30556-1694-471d-8388-e2c7c786c9b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5010ac22-8def-4060-bae7-36008594bab0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b56cc5b3-0175-4b50-a8ab-c9b3376f70e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09e05b88-e042-4ef3-8210-4a8f59ee83ff",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518ad3cd-36c3-4900-9c09-4421b0fd6716",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5b1b719-4277-45c9-8a28-cebd6b205117"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc1850cd-7b9b-478c-9776-88ac0efdcda8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "780b26c7-3c45-4195-9e8e-e9e33d3b055a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "334b41df-7526-4e02-b9a7-9cc7f4a1e1a3",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a4739c4-7b55-4d25-aa69-ce0fed4d2d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7c1199d4-ded2-4d90-b805-ec442fe1f20f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed4459e-6bc6-4281-b70c-fb1549446b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d63fa1-8b88-45f8-84c3-6ad48cdcf46c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff25e10-ab9a-4081-af22-48f85a9ffb32",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "286832b4-ea50-4914-a70d-4274f4b3cfc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c609eaef-59f8-4bdd-b337-5f98235adc15"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbd25b75-7a0b-46d4-bfe0-07f9559770e7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d648d94-1229-4cdd-9d0a-48ae0ed07e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefc9b50-1c2a-4792-9309-779ba42e9ef5",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "494d03ce-1604-4c57-a617-0d9284674cee",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fad4bf99-6eb4-49a5-a638-171ab59993fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a7d185e-898b-4b89-9c02-9123e2ce76b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5421c1fa-ec11-4c44-bccf-085bbf23fb31"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c00f972-3ff7-407f-813d-9fac62c879fb",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6a75af1-7c13-446e-9d2f-d4db0dee0521",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21b71842-8918-4278-9fcc-978e97bfb619"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51d190ad-ceed-47b9-9c80-517f4595e77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cb312a1-8755-4cd5-b127-b7208d50c423"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0e25628-3944-4228-b4fd-27a4d66d5063",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd7c958a-980b-443d-ab7f-d2ce0f056752",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7507a564-bf69-4587-b6f3-9c4c26b909cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d88b7155-0f9f-4388-b1ff-15ef358aa5dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b84aa22-c698-4d8f-b07b-5ca32d633e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b18de0c9-ab88-4146-8e73-c48390928ed6",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e10d2d-d384-482b-932b-234a749af74c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81d2e5e0-3ef5-4816-ac8b-8025927d4b3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14968f15-a069-4927-a114-7912cb8dd2cc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10e466a-7b65-4c09-a211-96e282a4eac9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8736e25-9bc9-45f0-add1-f1df7ad3ad3a",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ed67a0b-8758-40e1-824f-6c23a75fa431",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c47f6a08-39c6-43d6-9ad3-e60ab053bded"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0aac6081-12f2-4356-93f0-2c1563b4275e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abcca289-19eb-481f-9286-037268f5bb9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cadd57be-013a-44a5-92d4-b504e02f0315",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7abfa54d-4a4e-4387-bd05-bfd28b3b023e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45a0ba3c-2cc0-43e6-b2b9-28052002e91e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbf997dd-195c-4e5c-b3c0-ea99fa8d26a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b0845f-c86b-44a3-8b1a-6665e3fbe72b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf473738-0dc9-4c3e-8645-be0ca1eb15ab",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18bed25-229d-49fd-b5e5-9cd5345664c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d68e659a-f4b1-4068-8a4d-5a16fe9a9045"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1714723d-3732-4f14-ab80-80070b104fb0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1acaaed7-ca2b-4ea0-a20a-ae130f7c898e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6954a55e-c611-4198-8416-df5b74bc0494",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9e5f606-3303-47c4-be32-4dfe66307cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "253819c1-8869-44b8-b11d-0425833d4a52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49219ec7-3f18-4ba7-9f4c-87ce282b5790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1023499-2cee-441a-8167-bd10419798d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c75cb86-0ed6-4d25-85ee-d865b5cc3d83",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b3371a0-a7dd-4c6f-b04e-37e05e341a68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebf25c54-50e5-47fb-93b3-7713d9385585"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f8f41c5-18f7-4108-a838-35682476d47f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e93b1098-33d1-4087-8578-23a4e341e263"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bb85584-a678-42f4-bff6-83f63d86774b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc12f8f-4b40-48e0-9832-0b1ba4ac8eae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a63c277f-ba71-4cbc-8a42-89849e6d41eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "829c6f1f-88eb-42d0-a05d-f76ca907a1fc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d093f736-48d8-4104-8dca-60f71c32bb11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd33cebe-fa00-46d0-b0ce-5c49b0eba51d",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84ffe274-6fb4-47da-a3f7-e63730402d5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b0cadfc-6bff-4012-adba-9e687a9f10fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3e2164-b799-4d51-9f72-56aa62e5fdc3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b9475d7-4a54-43d4-90a6-1d702ff9f18b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15d069d9-393d-4863-ade7-704b74514245",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63b0d173-8643-46fd-bdf2-41d47bd89ef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90336bc5-55c5-436a-b159-d88baadafcd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cb72b95-a045-467a-b115-170f0371e7e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "557f0d39-fb93-4d20-87e5-36eb3b9ab363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8477bb75-7c65-4d2f-a53c-a98c2ad159d3",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07c75415-003e-4d47-be80-19c9e893b399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "514c1218-64a9-45d9-9eb3-300d11e5a189"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "542218e3-3862-4095-87b4-3f4f308126fa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ad9a52d-8f99-4517-a162-f240c92d6389"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b092b0e0-0efb-4f54-8874-ace10a1064e8",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdfc07d4-8c52-4b66-9e54-3f37a1892219",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f4bf4ff1-05a7-45ff-92f8-64ff34feee6e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "582aaddf-77aa-4661-b6ae-5ba7cf35eab5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "13e2b26c-29b8-4008-94c0-033c1329ac12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf42fbd-7a94-4a60-b230-fcafc111ca01",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4ebe7c9-dc75-4c9d-afb0-bb4e91884674",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1512ce58-b5f0-4a30-8d45-c41b3cbf0aba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1458ec-3efa-44f0-86c2-4cda6fb6898b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b70430f-71a9-4309-a381-c420c9f4102f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233f2423-da83-493d-bfec-0a3dea934c0a",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2817e954-dbb6-4715-af5c-5dc87e211014",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb7d63c6-0e19-4111-9d10-50c9b917e2e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b28bce64-59f3-4d50-a2ca-b638077891b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4f54bb9-06ed-4e7c-b350-6c6f95ebd703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08cedd04-ac90-4621-b38c-688143ff3da5",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74989565-3f11-415e-be7f-40e09ad5bfff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "312a7530-abd4-4b00-9e2d-76601b42ee42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8da53796-973a-416f-907c-3868473cdfc4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f1efa06-4637-45e6-8729-36692d6644a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f772133e-6371-4af5-ae60-3a28cb5bde19",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85009939-745e-4a61-8527-74ae7968995d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "320f943d-7d19-4343-9e8e-6dd238cbdf24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "536f8048-2b20-4717-8803-f4b73bf7167b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "640e5253-b880-43c2-b3ad-77a3a5befb57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62347d67-c68b-435b-be19-aece516ea19b",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c58caca-b664-4361-b759-75bd223bdfb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86cbb0c-e92d-49d2-9133-6bfc410bf886"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9066e9d-635b-403d-946f-2c224ff0dcbb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fe64f7c-1417-4f65-8ebf-7d1c3057dc6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3b3ba3b-1fad-4c95-b44a-303777e59531",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f91a515-db81-45fe-8163-7416da21ebf4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e74e403c-c445-4324-a370-56836d9eee6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "849c9636-4cad-458a-a3aa-d9cc2eac6ef2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1099d866-9254-4ff9-a32d-82b5bf4d4f66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97908e3-1757-4f1d-8a3d-9365a73d0956",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89d3c693-5c6c-4f20-974a-4324f0060656",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa856701-dc40-48ff-9ae3-6dd6dae6b8e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b961750-5b99-4f6b-b8e9-0dff39c24e2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee19648f-d56f-4787-a229-be3b26e902e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10429169-816b-4f92-b4be-9005bf7b6abb",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5717dfe8-a603-46d3-b2bb-13ec1df06200",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c417467b-3143-496c-9080-0c1f0dc43721"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "513c363d-b1db-499c-9bd8-3accdd9ff6d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0017b32-851c-478c-9c92-51c6261787d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3059b761-3003-40c3-b1d2-c96b0c109233",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e49eba8-ebe3-48e9-a80d-5d38cb70dcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad5237ca-1355-4e5a-9d4a-521d7d28df91"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edec8861-166c-4437-bf1c-588d7cce528a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "540e6549-9b04-4a1b-89e9-e1d27f04349b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220875ad-fa4a-4105-8e55-81820a60836b",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46d67631-3943-40c6-9ca4-3f80d0581501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f6a9c00-5618-4860-8b7d-56378597a67b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44ae47ad-b98b-4f83-bdda-3d80e165ae5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9130b633-0edb-4f98-9520-466b0d48027a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10c55ed5-3125-411c-a840-99dcbd3f8983",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8e3fe48-aa39-4ae7-bdfa-0c59492da1c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a70fdbe-9774-4a3c-8682-a0b9c7b2cbf1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d19f173c-dbbf-47d6-acb0-18e8c2028741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8fb80a4-7b8e-40a4-b79e-03452e1e6e00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05cca8a8-bdfe-4a18-a6fb-4342148ab613",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d58ec032-cebd-4777-a4ad-fbeeef60f812",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5575f9c2-0411-4f41-9b84-21f0e797b676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28afe52b-74b6-4482-8601-db163b5fd1da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af27720-8bcd-47bf-8d36-9fa633333617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca4b560d-b415-4c35-8134-8abf437d3b93",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c5dfbac-cd2e-40dc-a9c5-71bf21a52ef6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e54846f7-9f8d-491d-b7fc-3b0869832641"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42bbe886-a35e-4ec5-afeb-b3a16e9e7bd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8d0ce58-2ee4-4b07-ac4a-e9b8007f8523"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be79076-75ed-4475-91d7-d5ed155769cc",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ed59f25-8e24-4877-b4c4-dd4fe58e1059",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6631c72b-5fc1-4ce7-9431-f536becbb007"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2659c227-23e1-4390-8f11-916e8e1fcb20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66cbdf8f-6a44-417c-881f-1f46d954b140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ae4ea18-bd64-4e51-a9cf-24276ddd56ce",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b1ae9bb-f4db-4028-b545-b9982f20889d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c4faa47-919c-443e-ba70-3a1cc50f21dd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d59a64b-61ca-4b8a-b1f6-181551eaf3de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "156d2408-687c-48b5-b3da-990515de2236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c181a6a9-98ec-4b2e-b9a4-62f86db38807",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02afcb09-5adb-497b-a665-e7a9c10371fe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8402a241-dec9-4e31-a100-95615ccfe977"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a6d38f-2355-45d2-887e-8e37cc5def0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9dacea31-62de-4470-92a4-748da1988117"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2cd115-7d20-4e52-ae57-3d8c8a52cead",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b393388-67a7-4502-bd34-4fc4f2aa0f08",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2949f942-d07e-4a68-8358-5ea0ff7984eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8065612d-8b2d-41a5-be29-62c0357af206",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f35c1c-f732-4326-a657-254b2e222b79"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9e69abd-4156-4860-b7c0-89a526905247",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8402f4c-39ea-464c-b931-c1f26dae07a0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1bd6995a-29e1-412a-9c20-9f627a8a0a29"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "11acef7d-573e-4ff0-803f-083acc9f9190",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b97ffe2-1bd8-4c05-9354-0319fb33e0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b28edc0-1e6c-456d-be36-55e0488aa5c7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05947fdd-a5aa-4703-90c3-f700adcb714b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "20f18a00-be28-4b36-a984-6128d1ef2860"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f387a535-5d4f-4424-9fde-ec44a398337e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da3f58b2-e4ff-4cfe-83a0-f68d54fe1820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2ae5543-968a-49a2-8263-5fcb3dda7da2",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53023b7d-5432-47de-b54e-f39bcfd73a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ac720f38-92e3-4019-97fc-3d54e26709c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2a8a0c-3f14-43c2-98fe-a67df37c5fbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11f9207f-fa98-46af-946c-cc060d171fa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "028e3dfe-49fe-453e-b70d-8b00203674fb",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "114cc774-74a4-47b1-9023-9fcd93311bd1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8994f4f3-a47d-451f-8d17-6b2d102f0551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d78b3bb4-4618-464b-ad21-01091246a755",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e919904-9852-45c8-815d-ce32a64d8203"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13649494-a3af-47a8-adb2-7ed1296d4514",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76102582-40fe-473f-9cb8-9cd51b8b5aa3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ca9178ea-d50e-43c9-8fd3-d1920b51c072"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fb9592a-de79-41c3-a7ad-02e9df3236e2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c747041-eb56-466d-8ea6-291851945256"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a886c6b0-fa23-42c7-8f55-f0546165bc1e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ba73ca6-3ce4-40c9-83df-9172d2f967e1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43dfcab8-cc62-4c6c-8de7-58fb92397d3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a657638-8edc-47cd-a6a4-b93859cc618a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b26506f6-9abc-4a77-aeb9-79a5f4c41733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a560510-e1bc-4437-9a1d-8f0df8a469b7",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938bf1a3-cde9-4904-94e1-b25f974692fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2f5bb84b-06a2-415d-a982-c0c151741d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1f219d6-793b-406e-936a-834789a6b56d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af735840-6543-406c-ab4f-9acea36309a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26a344de-5fda-45cf-8f32-52c0b6e0c78c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d3f7ef-f7d0-4b88-a8cf-1f76bcc9e875",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "217b1484-a75a-4fd0-a485-517a9b1699ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1155be-96ac-45af-b45e-52444d101ea6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "417853ca-10ec-4280-bf96-eea85f7cec80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8b1cdf-c010-468d-8258-2898afdb097d",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9440d17f-f94f-4713-9c91-038fdfd9e53b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28f742f2-9f43-4f45-8997-e4cad58f2114"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54324201-ad13-4f7a-941c-ee20f418dc45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e2ea7ce7-d7fc-4450-9210-4a75725e8d0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820af4f6-b0ea-4954-b892-0d8cd8628bb7",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "483f876f-6078-4cf2-b5f3-68a7967db710",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9aadb3e7-f289-42b0-9589-b0acdcc5aaed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6726da0b-b068-4ef0-905d-be5f88e28b96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38a3c4b9-4fe1-4cd5-a79d-e54f01d6005d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b7dc9c2-3a21-4940-9555-8409f46ae814",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a8fa9b5-ea00-450e-a0d5-83d1b5d27f81",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c02ec031-ceec-4ecc-8f46-1a421295e088"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a49f690f-599c-4762-a12c-3625a3bd0833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c2ed4a7-0d67-49ea-928c-99cae348e21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22a79ecb-6604-468b-9026-50fdfa058c43",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7630246a-3924-421d-9ee0-0a936e3f31b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5ddddfd4-3d2a-46ea-b7aa-e5cd9274edb2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20bb8615-d3e7-4d9a-9eb2-e724244ef5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea35cf55-f037-4e46-9407-9beaa5387dee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20a891ee-56fb-4a9a-b99e-ff53908cdec0",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18bbcd3c-9c2d-4903-a153-1bf396c96e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c99a1a0e-649b-40eb-9670-39a2fc4bef3f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fe7b80a-5d13-4325-8db1-39d6682e7475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0bfeddfc-c437-45b8-b598-b078c9dfd270"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15e28621-8953-468d-8b8d-96e6a8c528d7",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76611e86-db67-4508-b59f-ed9151431c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e05e4e4-db28-4b79-8bd9-fea22c7af6e0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b53729b8-c7f8-41fe-8ae7-c7fca5cdcb63",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4fbab20d-ace7-401f-bf8e-622ed987be5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad588ff1-c05a-4799-8c18-cecfa6b24723",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "713e7952-b4d6-4699-8bfb-1c96ad0f47d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "30477def-653f-40ab-8e93-7dd2092c7794"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e165f10-894a-43f2-b611-fab6618b612b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7399468b-cd52-4578-b3ca-3a32d3aacbd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "023643bf-f595-4005-ab48-08b234c05f7c",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a63f3114-1f97-47f2-a5a5-c7bcda38a4d9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c14a659f-7207-4915-afa6-7ebf9282bfaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "668d8e69-75ab-41b9-8b82-55f0bac25b28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2361e9e6-d8d7-416a-a3ff-1e1ac2fc4e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2da405fb-6c95-4195-b8d4-e8bd8c9b21ab",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e4f8c2-9231-4547-becd-042b33f59c4d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f75806f7-4fe3-49bb-94dd-5a4132d3d664"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "00cd892b-1da9-4517-b316-ae6440d95066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "351ea430-a793-4aa8-8d44-c9477f511e24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e81d280-40e9-44fe-97dc-4c132eeab85c",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5b95eba-8363-4448-b981-698571cb794b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34203140-7daf-4900-b9b4-0b91f87bd869"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1e4f3e1-e1ce-4674-8dd2-d0972b4813ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea238063-84f3-4f8b-9791-69616f2f95de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e7ea3dd-b291-4ca9-8d89-15eb65329ca7",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89433a1d-99b5-4a19-a24f-a6eeb0cd77c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "095e96c1-8587-4448-89a2-71ac1c35f9b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ccefd92-bc32-416a-a6a7-329e9d3fdd6f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e0034c7a-5bc6-4e0a-8752-94b474512e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "286f9ad5-e661-4cc3-bb21-d4427a1fb743",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edf34342-a9ea-41f9-801a-d9da8f35d8b2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61dd2780-3cba-4cc6-bf77-9d13ac2c1147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be68fc3a-1540-435e-baa0-b7d864b420f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c0aa7a-7eca-429b-a3a1-b9771790a16f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7fa1880e-5ef3-4c2a-b043-69e2038d6fa1",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30d8898a-278f-428a-8b7a-c30f8b4b9169",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44163635-5e56-434f-8658-add2acbc9b98"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c20fc9e-7c19-409a-9564-d4ba692ca1e6",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d50cc735-ae22-49c3-a719-a186d06cc101"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2335f94-cb5b-4302-b441-3b053487d7a8",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beb7fd50-4697-4c34-bcee-50b26ec68b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64e47be1-f8d5-4058-aae5-962f5bbdd933"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "05792cd1-b1f8-4bb0-ada1-247bcaf07b6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d264ca6-8af7-4122-8c60-98e0f8c56f4c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b339908a-428a-4695-99e7-03715a229d17",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa9e4f4f-b597-43b2-9ecc-ccac1f3bac37",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1c1fdf9c-04c7-4c31-832d-5a51ee00bc45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d1fbca6-5a57-4014-adf0-35e615b50650",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "678e79d7-ae5c-4b1c-adf9-e6ee743b8fc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5db3b7da-1923-41d6-8201-ce8d6e95feca",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5f2d784-f9df-46f5-88cb-49b116b751f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c72457b-50c9-4e96-9060-9b8a7ef1f35f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4ef8c0-a0a8-48e8-a991-a5d2485be1ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11412581-6d42-4e4c-8422-3f0d7971aafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3486b94-0e82-44a4-834a-6ea0c74dc942",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "193f6572-f72d-4524-a5fb-df5f84405305",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "16a65a92-4bcd-4eea-b3b1-ff326510892c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2f5802e-28f0-4eaf-9bad-002af91fb897",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec600445-c83f-4e18-a48e-eecf154fb4cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7704e42c-dccd-42f2-b64a-735a9b95dc8c",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b85b691-4440-433f-9180-d457607e7f44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "61bd7df4-9e5c-4304-a0b1-11068c4c6f38"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67e7570f-370d-4b74-8a8a-ae427b77d3b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06c658c7-0429-4d91-a5bd-ad6f9994e7f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4025fdb-382e-42a4-9b73-91a857a86db6",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b24da89b-70d7-4395-b3f6-4cdb203b1d6d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6af3268-0462-43ac-8e35-2fb91145f0d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cde2bc0c-f0eb-48d2-8889-c6bad36bfc9d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e580cf2-10f3-41b6-91ae-0b306dd53daf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c85c0e3-6326-4c8c-816e-36118291179b",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a987f753-6b29-4a24-9c02-3e858d315367",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c8083e2-7d8b-4a0d-a5f4-cc23ef09d2c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aae177-8161-4417-8d67-f23daba7e4a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceae60fa-8eef-4a70-a0df-eae17420848f"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e3e27565-1fc3-4be2-b6a4-fc6239c31280",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b5ddbd2d-96c0-4e79-8f7e-422789a6e012"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a9b9e7d-920f-4377-aace-9fdc9cc4ac62",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "63f40ac7-6e0d-4905-98a2-4b2b9f1ffb27"
                    }
                  }
                ]
              },
              {
                "id": "130acdfd-6df3-43bb-910f-df0b380db96e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "f0b6770e-5bb0-45a5-9ca9-71c541588cd7",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3082ac52-e53c-45c2-947f-015edc1d8d34",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "8c394d95-e285-40de-a362-550a9569e628"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e46765-9085-49d1-9689-5e74a1076dfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "35d58a3f-c471-4137-b1d4-dd12ec14c54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21e07473-0752-4f01-aa1a-9443864a8f5b",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ede4485c-e961-46f1-ab29-02a1b4969aac",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "14e2b64e-88e7-4344-be8c-e610e7a9f24e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "433dcfbd-a891-4634-a11d-5bc7abb95b8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48c5523e-4d8d-4607-8b99-aa02f9c86871"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a44f1290-982f-4424-b487-4cbef8d8f0ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3c6a9213-6091-4cd5-8066-e0aa98fd9968"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a281b6c9-5396-4444-9ebd-2aeba46a1db8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "114914af-b2b2-41c4-8084-5616c358a1d6"
                    }
                  }
                ]
              },
              {
                "id": "639c59fc-4573-4435-9303-8c97b5003440",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "4f820ec0-5f91-47da-8831-9dc94b3af15d",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72a461d2-e13a-4af1-9f8b-cb0f1e873f28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "7adcb215-7059-4d95-9b1f-983615757aff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21934994-fa36-41be-9bce-2455a00f9518",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca228923-31c4-449d-b850-82ff42a066b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "67d2ba9f-c63c-4cfe-9c71-69ae7faedf9f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7703e95f-8618-45db-b890-f8545b959126",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4995d82-0815-4f2e-a14c-1eaf4c1bb806",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e4e7af57-17fb-4f45-b927-7832028c1684"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d0967ef8-b0a0-486c-b56e-1500ec46da90",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "192c17f0-8e61-4f21-b1e7-5213fd1ba62b"
                    }
                  }
                ]
              },
              {
                "id": "9ce8a913-e1ea-492a-b6a1-58560547a0aa",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "79839a08-d859-445c-9ac3-aee614341793",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "37ce534d-85b5-43a3-983f-6e2a86028ee1"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3bae8bd8-c008-4bfb-bd89-1d142c56b491",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "340c0c77-ae54-46d0-8cfc-62cfac008c04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d51a905f-4feb-4af8-a08f-78524bda31bd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "b1dc683b-d4b4-4d25-a0ac-52a2ee87ab3a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7d582dc1-2211-46f1-94fd-84bc91edaf36",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5d219cb5-b0fb-4291-9398-e3a9b1a8b531"
            }
          }
        ]
      },
      {
        "id": "2f83a7a6-36a2-4553-9ecc-dc23c3034d54",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "dad35cb6-5a1d-4630-8800-adc831aad23e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d64360e6-6ea0-4f40-bf54-17e7cbcfcf74",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88a791dc-d0ef-4d7e-971a-7b40c8dded9b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "482299d3-5527-43fd-919c-cc0ff37c8b03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e7a7d5-41cd-4a76-b85b-5d3d81615fc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "da1aa5e9-a8bb-4a98-abc8-1fb54e8f36cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d7a5a64-dbbb-41cf-8897-6686bcdd951a",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c096e755-7b3f-4821-b501-a9045cd3bb40",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "43995ae4-5fbb-4e35-9915-6928eeee3f3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea0dd573-d301-44e9-89b5-c9461c83b7bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9432ff44-f343-44d2-aafe-3b7855cc67a7"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0f69e600-9c12-4ade-ae5c-b9f90f2546b0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7a1a9bf3-4f38-492d-8c53-7d91bc78c236"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b4363f42-160d-4199-9ff3-ef7801249c0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "12c50c68-4f8a-4f8a-859c-927fc44843c8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "294aba92-2828-47df-a65b-a555cdd2778e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e0bc448e-af07-412f-9d90-19386ea3d09d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "aff22ec4-e93a-413b-a72b-3b1c3812aa88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6e44fc91-5e69-4c7d-b7ce-58d7a60c54e6"
            }
          }
        ]
      },
      {
        "id": "b4ea1f64-c3e8-4c5d-b9a7-2a2a4f482a16",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "650f5fc6-3462-4e15-96b6-f688b1d1ca0a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5bd4a8f5-99fc-4f9b-bc9d-2ee5f7dc2baf",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "173d4662-0a0e-4356-b142-ce5839290f6b",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4201b435-01f6-4344-b081-c5b3e9952688",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c3d0fe57-414d-4cb1-9cae-ad7525b38d4d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8d78c17-4475-444e-a7b5-864ecdb4b4c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "83b43546-44be-4a2a-9b14-76c8c5cda148"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9510a30-e62c-41e3-bbfc-ed08fcb2fa75",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81c8046d-a2c8-4460-9141-1b1c5fd47af2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "081d41d7-442e-4a0d-bfbe-4c1895d83a51"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03f7dffe-1ab5-4272-ae44-ed4371ecdd91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "7c1507cc-387b-44fa-a0d8-da6e2e94f6db"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a99decc7-d08c-4ab6-a77b-e0fc19140e3c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "096da2df-f8b1-4888-9fac-b4698b40ab28"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ed5d258b-13c9-4488-98b2-02d555724a9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f32c273a-a7f9-4696-a72d-3dc55d0e74c3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ca66a5d2-fd33-4e32-aef4-23a7883abe4f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "f2853e03-3675-43ac-beac-6096380e72de"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6939e3df-21ba-43b6-864a-2a0c02ac958e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4c99bc69-e273-458a-8d9e-8efc07fe6b7e"
            }
          }
        ]
      },
      {
        "id": "8f3e2a78-9e1e-48de-bd1f-5f8650a0fda7",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "8a6b2464-0c21-4bb4-8dc9-c2337ec744b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2a4d82b0-5d94-4c3d-b689-1dabebef7e47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "961d323a-84ff-4648-bab7-5a58daf11b1e",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ddee954-d1e6-4aff-b7aa-28e9885112c1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d0c3213f-de00-452b-ad61-04ca7719eccd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "305c6cae-4e4e-4a89-9349-41114531a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e7a7c42-5d7f-4870-8e5e-77e2ab1eabef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b2a911-a0f3-481a-9443-e16d9bb3e18d",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcb32bf5-7d33-4976-8b98-05d9d96db28d",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "b5b67628-3b8f-44e7-b6cc-78d4a437f2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce651b9-7782-470e-8920-2e81e4d37bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6c041c28-63fa-40eb-a249-268db085b5c0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "26308b9f-74ab-4229-80ee-266261fc38e0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff784889-e10a-49dc-9d6d-79fab146043e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9bea8e43-bd2b-4f8f-85ff-da6bb279a554",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49b0d40b-5612-49dd-bb5e-498f74a63b60"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f3eabb2a-d4ae-44a8-9248-649d8c10cf0c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "33df6139-da7f-4e89-8da9-73d9ccc6788c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "e44c6a09-08a8-418d-a696-5812515efb5b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4f02433c-f4bb-43aa-9d8c-080793b476d9"
            }
          }
        ]
      },
      {
        "id": "ec702fbc-fd44-4cc8-9a57-100f5779cf41",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f729a6c3-5e35-42d2-ab68-fb398dcad8f3",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a8f9a2b-45de-4abc-9d5e-b8a05b81bed4",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "055faef7-3297-41b9-92b9-fb01f34f0655",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b4e9e2b2-1ec0-4ea7-8c91-2c866bc37043",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "36418540-b658-4d39-bfd4-6db86324a47a",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1909,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 260,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 251,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 509,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 959,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 665.7653846153846,
      "responseMin": 21,
      "responseMax": 6079,
      "responseSd": 733.9177345653039,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1680568606543,
      "completed": 1680568790135
    },
    "executions": [
      {
        "id": "a41a2fbd-103b-4660-8ff1-e4191201ae17",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 251,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "e0cc17b7-ea02-4e40-b73e-1dc4279c9e61",
          "httpRequestId": "240e2ca1-f2ad-46ef-ae35-2fabc98a29c7"
        },
        "item": {
          "id": "a41a2fbd-103b-4660-8ff1-e4191201ae17",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "9318a86f-21ff-4042-9224-3be1448cc01f",
          "status": "OK",
          "code": 200,
          "responseTime": 85,
          "responseSize": 0
        }
      },
      {
        "id": "1902dd9f-271e-4179-978f-dc133a0f6819",
        "cursor": {
          "ref": "f47105dd-f1ab-4216-b5bf-0b5a85f2423c",
          "length": 251,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "cc49e381-5f85-47ce-bc73-e3c64b4c32a7"
        },
        "item": {
          "id": "1902dd9f-271e-4179-978f-dc133a0f6819",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "341e38af-2d0a-44ba-ab67-120eeb63d025",
          "status": "OK",
          "code": 200,
          "responseTime": 21,
          "responseSize": 0
        }
      },
      {
        "id": "a346dcd5-d459-403f-90cf-f8f153c72b01",
        "cursor": {
          "ref": "b96cb992-5f38-455c-9486-037abdb46920",
          "length": 251,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "b9678d5d-b607-4875-89be-24e3131cab4d"
        },
        "item": {
          "id": "a346dcd5-d459-403f-90cf-f8f153c72b01",
          "name": "did_json"
        },
        "response": {
          "id": "e1f3d95a-f560-4235-9ef1-454f72d15c19",
          "status": "OK",
          "code": 200,
          "responseTime": 1383,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f859192-bb50-434a-98cd-fdc31212ef33",
        "cursor": {
          "ref": "e7c0cfed-4e33-4db1-a223-3c50d5976e92",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa4d2956-9c18-432a-8883-b7fb2c68f5e5"
        },
        "item": {
          "id": "7f859192-bb50-434a-98cd-fdc31212ef33",
          "name": "did:invalid"
        },
        "response": {
          "id": "7af176b2-f4b9-4d99-adc1-73583ed80a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f859192-bb50-434a-98cd-fdc31212ef33",
        "cursor": {
          "ref": "e7c0cfed-4e33-4db1-a223-3c50d5976e92",
          "length": 251,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "aa4d2956-9c18-432a-8883-b7fb2c68f5e5"
        },
        "item": {
          "id": "7f859192-bb50-434a-98cd-fdc31212ef33",
          "name": "did:invalid"
        },
        "response": {
          "id": "7af176b2-f4b9-4d99-adc1-73583ed80a6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1089,
          "responseSize": 398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce86a896-a0b0-4125-903b-7d0c8d5c919c",
        "cursor": {
          "ref": "7ef034c1-5c26-48d5-a2df-b9c222c6fbfa",
          "length": 251,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "bcfd8227-eb57-4707-90af-c188f8537013"
        },
        "item": {
          "id": "ce86a896-a0b0-4125-903b-7d0c8d5c919c",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "934ba3bb-c4ef-4277-ace9-626af82d242d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 991,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2adabe-1496-4528-87f6-a5d5c989ad85",
        "cursor": {
          "ref": "ea757f1f-a33f-42d1-9491-d4bbfb09e6f7",
          "length": 251,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "47c9e36b-01a0-4a90-89dd-bcb67e1d4cfe"
        },
        "item": {
          "id": "aa2adabe-1496-4528-87f6-a5d5c989ad85",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "b49cf9b3-39b6-40d4-a9f6-094b6e4f3e18",
          "status": "Not Found",
          "code": 404,
          "responseTime": 947,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4b5255-26df-4511-acbd-4ac1c55a96b2",
        "cursor": {
          "ref": "2a2353a1-bb1e-4c9a-bb0e-a3b1b0931f49",
          "length": 251,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5c4035f3-1766-47b5-90e6-bd6f9f9046de"
        },
        "item": {
          "id": "0c4b5255-26df-4511-acbd-4ac1c55a96b2",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f977f323-cbfd-4309-8fc4-90bc8c277735",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e0b8d6-7e38-49eb-ae4d-fd25e92bc66a",
        "cursor": {
          "ref": "d65708aa-0edb-4102-8891-8d071467edfb",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f6af8c3-1d5b-4d60-874d-f93214c91eab"
        },
        "item": {
          "id": "15e0b8d6-7e38-49eb-ae4d-fd25e92bc66a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9e82f9b8-0bbf-4cd5-bf8a-918528232a81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1037,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e0b8d6-7e38-49eb-ae4d-fd25e92bc66a",
        "cursor": {
          "ref": "d65708aa-0edb-4102-8891-8d071467edfb",
          "length": 251,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "0f6af8c3-1d5b-4d60-874d-f93214c91eab"
        },
        "item": {
          "id": "15e0b8d6-7e38-49eb-ae4d-fd25e92bc66a",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "9e82f9b8-0bbf-4cd5-bf8a-918528232a81",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 1037,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cf0f0c1-f071-4bc4-904c-20efc90227cf",
        "cursor": {
          "ref": "84f6cabb-cd76-465e-8bd4-7422aa44dd95",
          "length": 251,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5e61b567-a51e-4a98-8266-833f244ce034"
        },
        "item": {
          "id": "5cf0f0c1-f071-4bc4-904c-20efc90227cf",
          "name": "identifiers"
        },
        "response": {
          "id": "1d9f0096-24ad-4c32-a563-7bd7c26fc72e",
          "status": "OK",
          "code": 200,
          "responseTime": 1078,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993ff16-9186-4a9b-ac12-488c20aee2ae",
        "cursor": {
          "ref": "a8bfe7c5-137d-40d2-acf0-eb23a8f7e458",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5669fcb7-3c0b-47b5-bcd7-48b08c715a23"
        },
        "item": {
          "id": "5993ff16-9186-4a9b-ac12-488c20aee2ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cf1c8ab5-d4dd-4614-9bc8-cccbd805c73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5993ff16-9186-4a9b-ac12-488c20aee2ae",
        "cursor": {
          "ref": "a8bfe7c5-137d-40d2-acf0-eb23a8f7e458",
          "length": 251,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "5669fcb7-3c0b-47b5-bcd7-48b08c715a23"
        },
        "item": {
          "id": "5993ff16-9186-4a9b-ac12-488c20aee2ae",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "cf1c8ab5-d4dd-4614-9bc8-cccbd805c73e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 346
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71289d76-b62f-4384-9122-ce6a80ce857a",
        "cursor": {
          "ref": "06f91549-b2f4-4b52-a189-a7a9832c6b96",
          "length": 251,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1d4ca6bf-61ff-4baa-afaa-5de542ba63c8"
        },
        "item": {
          "id": "71289d76-b62f-4384-9122-ce6a80ce857a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "1aa45bb0-367e-4430-a60a-5f5a2fbd0c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56f08e4-1bf8-4996-882b-69ebf3e1e6e3",
        "cursor": {
          "ref": "d8d8d6f9-ee50-4a4b-9453-c1c1c71f6730",
          "length": 251,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d09872c6-3352-44ee-91c3-3bc9328b5576"
        },
        "item": {
          "id": "f56f08e4-1bf8-4996-882b-69ebf3e1e6e3",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "6f1fb279-ef3d-49e2-89d4-c9f2aeaf74cd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 646,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4516cf60-dba0-4fdf-837c-e179036fb8a5",
        "cursor": {
          "ref": "af6322c3-462a-449a-b419-dc47647da957",
          "length": 251,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "a266131e-700a-44d9-89e1-9a4121ecf133"
        },
        "item": {
          "id": "4516cf60-dba0-4fdf-837c-e179036fb8a5",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "b62f04a7-b496-45c8-bfc2-68e2d21393b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 550
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df95e3f8-fe4e-4af4-a949-775cb0be068f",
        "cursor": {
          "ref": "2a279f7a-2bed-4c9d-96d5-b7588d4a197d",
          "length": 251,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b237eae8-e0b6-4fe4-95a8-01a150a39739"
        },
        "item": {
          "id": "df95e3f8-fe4e-4af4-a949-775cb0be068f",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "95a6030c-165e-4506-a54b-ecad09d7070f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a6f67e-d5d3-42bd-9ba3-604e70795895",
        "cursor": {
          "ref": "c3bf6050-b82f-42ae-aa79-7165605ec229",
          "length": 251,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "46db1738-7244-4a36-a658-0a210db8ec7c"
        },
        "item": {
          "id": "04a6f67e-d5d3-42bd-9ba3-604e70795895",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9e285cf5-dc0c-4f7d-a13a-5015e0854939",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f89d8f84-7cdd-4517-a874-a47a90613982",
        "cursor": {
          "ref": "e6970870-a1dc-4405-bf60-b586ac20a0ab",
          "length": 251,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "5791e060-4ced-44f1-b0c6-641cef26b0ee"
        },
        "item": {
          "id": "f89d8f84-7cdd-4517-a874-a47a90613982",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "e2dd3523-627f-46ea-b6fa-e4b0f507948a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 609,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c63c8f38-3372-4829-b57c-5120fbbfbf35",
        "cursor": {
          "ref": "434cace6-6318-4b97-970f-d26e0e2dce72",
          "length": 251,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "3d46c91d-de3b-45c0-a604-52c9993a58c3"
        },
        "item": {
          "id": "c63c8f38-3372-4829-b57c-5120fbbfbf35",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "84360e35-9296-426f-a153-5f982548ab11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 616,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f4bf587-8994-4eed-a0ec-f88e04f908d9",
        "cursor": {
          "ref": "fa6d7971-cb6d-433a-b291-7e5f1f06a3b7",
          "length": 251,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "90c4879c-08e8-4641-bbc8-62e3a157a35b"
        },
        "item": {
          "id": "5f4bf587-8994-4eed-a0ec-f88e04f908d9",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "473ac51b-eafc-4871-a0c4-1786133e181b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3ea79d7-a1cf-49ae-889f-3347439da6a7",
        "cursor": {
          "ref": "61cb775e-5cb8-40fb-88db-8246743ebf85",
          "length": 251,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "11035cf2-c2ec-4f72-81c1-ff31ec0953b1"
        },
        "item": {
          "id": "e3ea79d7-a1cf-49ae-889f-3347439da6a7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d825e7e3-cbaf-4f9e-9d7c-c2992498e2bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07c0bbb7-fd3d-4da9-a4d9-6be99d61a247",
        "cursor": {
          "ref": "ca3df2cf-5199-48a1-bf6d-1bdce9b38a53",
          "length": 251,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "1a355452-689f-44a1-a57c-fdc3e430053a"
        },
        "item": {
          "id": "07c0bbb7-fd3d-4da9-a4d9-6be99d61a247",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "0a6742db-ed02-435e-b262-2ecc4004efdb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adf0c684-5fbf-4798-a251-9a7da033e27c",
        "cursor": {
          "ref": "f16bbbd4-7622-4cf9-963d-4eb852c985e7",
          "length": 251,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "1042888e-6656-4031-9465-8b1f61ed2c15"
        },
        "item": {
          "id": "adf0c684-5fbf-4798-a251-9a7da033e27c",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3a9e800f-352e-415a-908f-cd7824a1605d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 646
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbc46208-3ea4-418d-9bfe-682898a762c0",
        "cursor": {
          "ref": "be472d02-edee-4ff9-8c03-71e0a97718d0",
          "length": 251,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d67cd521-cc6c-4c5c-b9af-81f99bdd0b79"
        },
        "item": {
          "id": "fbc46208-3ea4-418d-9bfe-682898a762c0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c67e46b4-b819-4b28-a5cc-9dbe25c5d05d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e9809e3-7320-4674-af99-fa35a31a5005",
        "cursor": {
          "ref": "af33c5e1-9410-44c8-8cdd-7f4b87b6bd89",
          "length": 251,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "fa9b1c2f-476c-4689-945e-ee0c61c20436"
        },
        "item": {
          "id": "9e9809e3-7320-4674-af99-fa35a31a5005",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8b9b1724-8931-48ba-b9e4-2a5cdd18b3b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 542,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b3668e2-6a0e-4c4d-a31e-96cae636722d",
        "cursor": {
          "ref": "6515ca81-5eb5-4e75-ac2f-b1f0012494a7",
          "length": 251,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a47a7f7b-c052-4ce4-ada5-fd38726b3cf0"
        },
        "item": {
          "id": "4b3668e2-6a0e-4c4d-a31e-96cae636722d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "829e2f6e-9927-4513-8334-c862715e940e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fa3ea56-697a-4942-8bde-f5a51cc26c7d",
        "cursor": {
          "ref": "c7dad3b7-0ba1-4733-b78d-2b0ce3d6dba8",
          "length": 251,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "5b9a7d12-d538-4d6f-ba5a-b29ccca97fd8"
        },
        "item": {
          "id": "8fa3ea56-697a-4942-8bde-f5a51cc26c7d",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "7d8358ca-0daf-4f27-b259-cf9c5d775529",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a219944f-7d2f-4b01-af2f-42eecb175314",
        "cursor": {
          "ref": "c1026184-f9b9-431b-9f95-c85fb013e211",
          "length": 251,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "8c4d7583-a12d-4ea0-82dc-a6c3301bdbe0"
        },
        "item": {
          "id": "a219944f-7d2f-4b01-af2f-42eecb175314",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "99f8130f-83ae-4092-ad9a-303aaf2f6a23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 653,
          "responseSize": 666
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b883dbe3-22d0-4821-9fb0-61d7570be8a0",
        "cursor": {
          "ref": "d1ca4cc1-f521-488c-9363-0e523fddeb99",
          "length": 251,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "154a2b5b-306a-426c-bb9c-3942e831b47f"
        },
        "item": {
          "id": "b883dbe3-22d0-4821-9fb0-61d7570be8a0",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "75965f7f-0678-4e29-8f73-226ee01d86cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4daed72b-cc90-420a-8ebe-56b0b08dc8cc",
        "cursor": {
          "ref": "2bfd4f58-5a3c-460b-bf20-34ff7932329b",
          "length": 251,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "bc2eedad-7187-4e34-8b14-ec9c278d009d"
        },
        "item": {
          "id": "4daed72b-cc90-420a-8ebe-56b0b08dc8cc",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "22fe3695-234b-44db-ac04-432f7cf41907",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 954,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305c14c3-d689-48a2-9450-1b7d3448c03c",
        "cursor": {
          "ref": "f3d3c711-c2a0-4d8f-8470-b462c65595a9",
          "length": 251,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "04f862dc-17ab-4d73-a704-c3b810660ba0"
        },
        "item": {
          "id": "305c14c3-d689-48a2-9450-1b7d3448c03c",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "762b13c7-0c30-4e52-8069-8736001b3ad3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 912,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8d651a-cbcf-45c9-8436-e44fce428683",
        "cursor": {
          "ref": "8160e2b4-ba97-405d-a001-a74c47e2809b",
          "length": 251,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "1a9e0626-0544-452a-81a5-70fc34b9ed02"
        },
        "item": {
          "id": "af8d651a-cbcf-45c9-8436-e44fce428683",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "3be5bf85-9582-407b-9460-d4ba4ba80669",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 898,
          "responseSize": 588
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282338c3-1d40-485a-a39b-906ba75bced3",
        "cursor": {
          "ref": "e0f73aab-006b-4e8d-adc4-7f5172734097",
          "length": 251,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1535a212-47b4-4f91-ae60-c8023cf9ec83"
        },
        "item": {
          "id": "282338c3-1d40-485a-a39b-906ba75bced3",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "79fc66b3-3ffb-4079-b322-c9abd7b23b1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 625,
          "responseSize": 586
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fee87f7f-a422-468f-b8d2-331f61d0acf5",
        "cursor": {
          "ref": "610b7470-8049-494a-a980-4d6fb710cb84",
          "length": 251,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "be3b0a1b-1ed5-455e-887b-04393c5c72d9"
        },
        "item": {
          "id": "fee87f7f-a422-468f-b8d2-331f61d0acf5",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "36d6e55c-ad8c-4a52-ad2a-23c952c3e63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6fe75370-29b6-46bd-b58b-4563b0ff1cef",
        "cursor": {
          "ref": "edd4580a-f0a5-456d-ab76-3605617a5f45",
          "length": 251,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "1ee083d7-1c23-420a-bba3-474c1968aff0"
        },
        "item": {
          "id": "6fe75370-29b6-46bd-b58b-4563b0ff1cef",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "3cfcfc13-8346-421f-b38c-029251a237a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ec95547-d61c-4938-85cb-50d2484b8bea",
        "cursor": {
          "ref": "14f3c5ae-6a1e-4213-bcca-d774118d02f4",
          "length": 251,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "e3b1f0dd-957a-478f-bbac-33dad0d88268"
        },
        "item": {
          "id": "6ec95547-d61c-4938-85cb-50d2484b8bea",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e9ea58cd-52ea-4a35-b91c-ae92f3720511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 560,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1b62b0-85d6-4004-b2b6-80e54c1f1e3b",
        "cursor": {
          "ref": "17ef4661-75ae-4afc-9fd5-33d9d2f7903d",
          "length": 251,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "23ecaba1-9859-4b12-a4f2-472889cb1cc7"
        },
        "item": {
          "id": "1a1b62b0-85d6-4004-b2b6-80e54c1f1e3b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "2be40faf-d7dd-4e59-b99a-4ce520af2c82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 624
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d5671d5-6bc0-40cc-ab01-cb064d23b525",
        "cursor": {
          "ref": "b45bbf5e-dde2-44a2-9a1f-c4893180c802",
          "length": 251,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "9b15ced4-9900-48f1-a8d7-58b46e902c60"
        },
        "item": {
          "id": "3d5671d5-6bc0-40cc-ab01-cb064d23b525",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "5bed2387-7049-4a0a-bda6-eb8428539592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d0d89cc-59b4-4291-8362-670f6c1d3645",
        "cursor": {
          "ref": "66ac318b-6e10-4d25-9129-bd32f23e8fed",
          "length": 251,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "1f09d5ef-de86-467c-bd95-d2f5a56f7f4e"
        },
        "item": {
          "id": "3d0d89cc-59b4-4291-8362-670f6c1d3645",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "74af8cad-9fb5-478d-9913-3d6879c8fd9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 634,
          "responseSize": 623
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419da9bb-f6a2-42a5-abd0-2070b7b71a13",
        "cursor": {
          "ref": "ff615afd-03bd-45c3-8a27-3fe0d5d3b9ea",
          "length": 251,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "ad22251a-1834-434f-8f2a-dd3c06061a60"
        },
        "item": {
          "id": "419da9bb-f6a2-42a5-abd0-2070b7b71a13",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "f5041d81-e86e-4367-8531-d8b1096c4620",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a2cba73-3231-49b5-b008-702b8e339af9",
        "cursor": {
          "ref": "7c5a5141-3f5d-4987-af64-7253194ebf3f",
          "length": 251,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "55e10733-1c33-466d-b9f4-0d46b8cb84af"
        },
        "item": {
          "id": "6a2cba73-3231-49b5-b008-702b8e339af9",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "968578d2-7630-4334-8151-4def7a252c4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 546
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7722d301-27b5-4a6d-b19d-ac08169ddae3",
        "cursor": {
          "ref": "c91f9239-2349-423d-8f46-c2f9bb3b20e2",
          "length": 251,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "28679593-cd03-4c21-a7b9-add2329ca095"
        },
        "item": {
          "id": "7722d301-27b5-4a6d-b19d-ac08169ddae3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "0be4ac2c-f948-478b-8870-3388943af09b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 1046
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ebf466f-f9f8-4547-8f35-ebb931099e31",
        "cursor": {
          "ref": "c5a207ad-e3e5-446a-b3ba-6fe3fdef54f1",
          "length": 251,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "9cad113d-52d0-463a-b33c-56a57adf447c"
        },
        "item": {
          "id": "6ebf466f-f9f8-4547-8f35-ebb931099e31",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "9dddba89-9b57-4639-9e18-3a02da2d9ec0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 975
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c4d312d-060a-44cd-9af7-990bcd82fb48",
        "cursor": {
          "ref": "84b54171-a66c-423a-b3aa-d5916b6d0fd5",
          "length": 251,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "15c5f81e-a612-4be0-b4ef-5244376fb19a"
        },
        "item": {
          "id": "6c4d312d-060a-44cd-9af7-990bcd82fb48",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "044b361f-5e08-4e05-a1da-7ae3904da3f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 972
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a923252-e3a2-4b58-8889-54d396282dc4",
        "cursor": {
          "ref": "4adb088a-6eab-47e1-9755-0c5ad0407312",
          "length": 251,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "674a9bbb-5844-4606-9792-8618c39dc324"
        },
        "item": {
          "id": "7a923252-e3a2-4b58-8889-54d396282dc4",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "ab3aa903-4124-4494-bda5-cb39e7f91423",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 974
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08e1a3e3-7555-4da4-9f44-74cc649bb0f1",
        "cursor": {
          "ref": "1d1fb369-ad15-44b3-a2f2-bd0be0562489",
          "length": 251,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "28c779fb-e050-4458-9b73-f6e7b5ea31e7"
        },
        "item": {
          "id": "08e1a3e3-7555-4da4-9f44-74cc649bb0f1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "a08b964c-dd1f-4109-80b2-0b6980fbe262",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 1377
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7590f5a6-352f-427c-b6ad-3d11e4156a7e",
        "cursor": {
          "ref": "65b4d39d-aac6-4293-9771-4aabec2eacce",
          "length": 251,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "324e8421-403c-494a-9a11-45e3803899ce"
        },
        "item": {
          "id": "7590f5a6-352f-427c-b6ad-3d11e4156a7e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "9b68668a-84cb-46c2-87e7-9856acda2a84",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 643,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d58f3ed9-4968-4271-af79-e386af4e70d4",
        "cursor": {
          "ref": "aca2bfab-8e31-4564-853f-360968c3299b",
          "length": 251,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "41d2156b-d396-4eec-84f7-22fd8027a15b"
        },
        "item": {
          "id": "d58f3ed9-4968-4271-af79-e386af4e70d4",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "b17d95cc-913c-4e35-b088-077eaa6bbea3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1005
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "195463b4-bdec-46f0-be90-57fc6a57ed1d",
        "cursor": {
          "ref": "58669bc8-cb82-4d43-879d-53e89932b0db",
          "length": 251,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ccdf9770-2b16-4ff6-8e19-47f9f0241029"
        },
        "item": {
          "id": "195463b4-bdec-46f0-be90-57fc6a57ed1d",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "6ca81acf-eef5-4616-a491-d6e5d6aab85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde5ef9b-19b7-41cb-9d6b-dff47291f9a1",
        "cursor": {
          "ref": "fc2ea2bd-5d3c-4681-8c3a-248f29b05164",
          "length": 251,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "37f68d94-f4fa-4170-b2bd-e140142054eb"
        },
        "item": {
          "id": "dde5ef9b-19b7-41cb-9d6b-dff47291f9a1",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "be76b2d0-45b5-4dc6-81e4-33bf8a95b721",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 1314
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d794f172-ab4e-41e5-99fe-218cb8de631e",
        "cursor": {
          "ref": "e5576a7f-25e1-465b-82a8-d7845f34551c",
          "length": 251,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "98faee76-0c4f-4f6a-831c-69cfd70af0cc"
        },
        "item": {
          "id": "d794f172-ab4e-41e5-99fe-218cb8de631e",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "855eea59-0160-4ab5-a320-9216e982acdf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83dc26b1-f70c-4f9b-ae70-2aa365561ef9",
        "cursor": {
          "ref": "91f07775-c163-4eaa-a848-887f364e5409",
          "length": 251,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "74378a68-2a54-4aa5-b9cb-134089ec45bd"
        },
        "item": {
          "id": "83dc26b1-f70c-4f9b-ae70-2aa365561ef9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "cd1e07b9-cf89-4f9e-87b2-2aaeca709d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1313
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6595da5-dab1-4beb-b463-18519b3dd82c",
        "cursor": {
          "ref": "2d6ecb32-08a4-4265-b419-c76ddd4e838c",
          "length": 251,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "4d8ee25a-d3b4-4045-bb17-3b05cc2920bc"
        },
        "item": {
          "id": "a6595da5-dab1-4beb-b463-18519b3dd82c",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "6238cade-3e7f-4340-9799-50d41b45456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 1716
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f832e33f-a62c-4160-9782-b5efcb9625dd",
        "cursor": {
          "ref": "2167cd49-62be-437d-b35f-df9a909982c4",
          "length": 251,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "ad8f8060-12fe-4e5b-93ba-e50e9c1ee3ac"
        },
        "item": {
          "id": "f832e33f-a62c-4160-9782-b5efcb9625dd",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "c2d83ddf-dd55-4fee-b07e-c57acad3c0ac",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 656,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90de1b10-dc88-4b02-95cc-60e90f4904a0",
        "cursor": {
          "ref": "8e10465a-f576-4671-8145-73ff5dc08160",
          "length": 251,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "e7f137bf-7899-4919-98a1-7138e9c717b9"
        },
        "item": {
          "id": "90de1b10-dc88-4b02-95cc-60e90f4904a0",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "c2494cd9-79b8-46b0-9add-26c65995dbde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ad1a23a-053c-411f-96ba-472ce117bc18",
        "cursor": {
          "ref": "687656b8-8faa-4e87-9b5e-f0f7e91d6a73",
          "length": 251,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "452a713f-a4cd-436a-b1d1-50f4941bd472"
        },
        "item": {
          "id": "5ad1a23a-053c-411f-96ba-472ce117bc18",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "1f91925c-ff08-4034-9948-2c62b4e359d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb408c32-e90d-46f1-be56-671fa6625d61",
        "cursor": {
          "ref": "78ef6d44-5f51-4ab8-97b3-782a9f9e7d76",
          "length": 251,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "5075f9b1-8976-403f-bf8c-550acd6ccc83"
        },
        "item": {
          "id": "bb408c32-e90d-46f1-be56-671fa6625d61",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "74af88c2-f013-40d4-ad70-bc9ef2c325aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb13f488-401f-4d48-96ab-ea6cd32db537",
        "cursor": {
          "ref": "f0c83d32-9c38-47d5-8d22-72e90a98209c",
          "length": 251,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "4d18af4e-fdb0-464b-8faf-58f7dfab7185"
        },
        "item": {
          "id": "cb13f488-401f-4d48-96ab-ea6cd32db537",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f455a76b-d84e-49d2-808f-f128ee008bcb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1f4e1b-fbcc-4ac3-83ef-d5aac3e9908e",
        "cursor": {
          "ref": "a26591a6-4585-473a-8f4f-e39f4e94c05f",
          "length": 251,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "7de7a8ac-dc54-44d9-81da-6d06d31b6def"
        },
        "item": {
          "id": "ed1f4e1b-fbcc-4ac3-83ef-d5aac3e9908e",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1200ef9d-e26a-438c-8aee-aae308eba467",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 608
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a4f9d35-5c21-4b0b-8f0f-e2e2dc8a0981",
        "cursor": {
          "ref": "b205d4a0-7ee3-4d95-b860-a6f012572119",
          "length": 251,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "b998d20d-e654-45f1-a680-0e2b884da5f6"
        },
        "item": {
          "id": "2a4f9d35-5c21-4b0b-8f0f-e2e2dc8a0981",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a2366e26-dd4b-4bd4-8597-c1dda39162ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 606
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41fb4322-c2a2-4f4e-bd57-049e6b43402a",
        "cursor": {
          "ref": "d4d43657-7040-4210-ba65-aa64266a5074",
          "length": 251,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "d2684ece-b80f-4b0e-9089-59b75ce32f74"
        },
        "item": {
          "id": "41fb4322-c2a2-4f4e-bd57-049e6b43402a",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "01d3f187-4f7b-4991-8e94-40e1d323fe29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 659
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9207cbf-39f6-4d1d-84d8-08243c5ebd7d",
        "cursor": {
          "ref": "0887fe2f-2f75-4a42-bcd1-d8e33f64a85e",
          "length": 251,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "c1a5a6e3-b427-4512-b746-cadde06363bd"
        },
        "item": {
          "id": "b9207cbf-39f6-4d1d-84d8-08243c5ebd7d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "76397308-b3cf-4698-93ef-1074571585aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24d4679a-365d-4363-b4b5-73518df79f8e",
        "cursor": {
          "ref": "bedf577f-266d-4a9c-9833-cd0396cf1699",
          "length": 251,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "2725331c-b602-47ef-aea0-65d56c8f02cd"
        },
        "item": {
          "id": "24d4679a-365d-4363-b4b5-73518df79f8e",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "6a310e55-16ba-4011-b513-7dc12a545a80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54dccef0-a26f-4df3-8a2d-8f18782cb0d0",
        "cursor": {
          "ref": "7111853a-10bd-4467-b09b-b2e6c94261a9",
          "length": 251,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "aaf4a6a1-72db-4a56-8434-70786d61622c"
        },
        "item": {
          "id": "54dccef0-a26f-4df3-8a2d-8f18782cb0d0",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "9438df61-c5e5-41c6-94a5-a3c75c862f78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 642,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "289a1f78-5b57-4e1a-bc7a-e87d913c9f86",
        "cursor": {
          "ref": "534a55bb-6434-431d-bd56-c771d15716be",
          "length": 251,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "ecbd296f-6f1c-4a8c-a793-cd527fab749a"
        },
        "item": {
          "id": "289a1f78-5b57-4e1a-bc7a-e87d913c9f86",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "920947ed-989e-433e-8dfd-410bdf60464e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cd5f43-69dd-4954-8418-d9dea2340f6a",
        "cursor": {
          "ref": "8f877dbe-151b-4243-98ab-7b971f580e6d",
          "length": 251,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "89fd056e-daf9-4811-80f6-f383cb10d81c"
        },
        "item": {
          "id": "03cd5f43-69dd-4954-8418-d9dea2340f6a",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e618b929-5a70-461b-82a8-8dcf60726e19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 908
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "066b3029-1ffd-4acf-ba0d-8fea0cdbbe1c",
        "cursor": {
          "ref": "5c350f0a-80f0-4d91-a4b9-9d0fa57b1b24",
          "length": 251,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "1bcb016f-5800-4a78-be90-ac69f4327309"
        },
        "item": {
          "id": "066b3029-1ffd-4acf-ba0d-8fea0cdbbe1c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "0f77b9d6-2f90-4f27-b94d-9a4567f7a7ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6282d7d1-460c-4202-9545-9fc47ec17176",
        "cursor": {
          "ref": "c5eb1e5b-9f7d-4cec-baf7-c20a7d731ee2",
          "length": 251,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "9e8009da-124c-47c3-be17-c229a87d79f6"
        },
        "item": {
          "id": "6282d7d1-460c-4202-9545-9fc47ec17176",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "1e56057d-99f3-49a8-a8b0-c08ed33b8090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 1415
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a79da0c-e4ee-4bad-b18e-2a3d6c5e7630",
        "cursor": {
          "ref": "0858b2a3-04a2-47d1-9e62-63c93701f9e0",
          "length": 251,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "040da420-e388-44bc-a175-9d867b701f89"
        },
        "item": {
          "id": "5a79da0c-e4ee-4bad-b18e-2a3d6c5e7630",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f7cec170-01ed-4c01-a6be-86c0f486b9f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 1401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a31d095-6b01-43b4-bfe8-85bf1c25ee56",
        "cursor": {
          "ref": "aa674bd4-f673-48ab-b22a-3f216b644f10",
          "length": 251,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "755dacec-0554-4c98-a5a1-9e1f84a2fa1e"
        },
        "item": {
          "id": "0a31d095-6b01-43b4-bfe8-85bf1c25ee56",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0fc316c2-17b0-49e2-9bbd-9314e8b5ce3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 561,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89668111-33c3-4cda-89bc-6f1fb8586e01",
        "cursor": {
          "ref": "ebed1a03-af68-4fbf-adc0-620becc73b6d",
          "length": 251,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "74d09eb7-1fdf-4f8b-9287-58944433ba02"
        },
        "item": {
          "id": "89668111-33c3-4cda-89bc-6f1fb8586e01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "1518f8a5-f6d1-4011-aa52-fad38df8ea96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e9ff9c4-769d-4015-902f-e66986df2e23",
        "cursor": {
          "ref": "e4fd9c23-30cb-4660-aefd-eb3fd4644412",
          "length": 251,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "04b38774-dba9-4c43-8afc-5c863b96d03f"
        },
        "item": {
          "id": "7e9ff9c4-769d-4015-902f-e66986df2e23",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "6bd7b259-4d9f-4cf7-bf37-20553544b47c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1398
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9194cf5d-a4d2-4491-9afe-bfade346f082",
        "cursor": {
          "ref": "280daf53-cb81-43dd-b341-9835f5194b70",
          "length": 251,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "d4f1cf6b-2e65-49bd-abd6-397c2b2da284"
        },
        "item": {
          "id": "9194cf5d-a4d2-4491-9afe-bfade346f082",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "4a568108-5377-4f0b-a93a-93c82a255495",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5737a96-bc80-4940-b7f6-f47c87731ab8",
        "cursor": {
          "ref": "1e57347f-fc54-44cc-91c3-f6d2b824a3fd",
          "length": 251,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "a739569e-d645-40ee-93b1-93e64b4d7b8d"
        },
        "item": {
          "id": "e5737a96-bc80-4940-b7f6-f47c87731ab8",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "d3ad0c6a-fac5-4848-a4d5-f5723826eb59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f313631-735a-4ce8-9fab-05b6407ab41e",
        "cursor": {
          "ref": "85a79fe5-4222-407d-a34d-c43718203fb8",
          "length": 251,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "3868be1c-c7af-4011-b1f5-3499812acfd5"
        },
        "item": {
          "id": "3f313631-735a-4ce8-9fab-05b6407ab41e",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "12f03cce-4c09-48f7-a685-f59efad769aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac059a53-8b48-4f9e-9422-cd0e6d7d6a22",
        "cursor": {
          "ref": "6b59b12a-ea27-49e5-b9ea-169fa1c0edc7",
          "length": 251,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "693234db-724b-4854-bf80-782201dc361d"
        },
        "item": {
          "id": "ac059a53-8b48-4f9e-9422-cd0e6d7d6a22",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "21498005-1ef1-4d40-8771-69d88ed8bbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ea7927c-676b-4555-8a85-0479cb874498",
        "cursor": {
          "ref": "bee8d504-7d99-4f46-94b0-2bd412abf630",
          "length": 251,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "97898467-04b7-4914-88e8-e65084d78abd"
        },
        "item": {
          "id": "3ea7927c-676b-4555-8a85-0479cb874498",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "fd9c07cc-cd0b-438c-897f-59f41967e7c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 559
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c1a7b6-01d3-4de1-b218-1218921044f5",
        "cursor": {
          "ref": "0569b5ab-23b6-4a91-b69c-6d296496c463",
          "length": 251,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f9873e0e-2e87-4308-b95f-3139c27321ff"
        },
        "item": {
          "id": "d9c1a7b6-01d3-4de1-b218-1218921044f5",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "788ae8b9-6667-45e8-99fa-2eb30a2e8c13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 557
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87935f87-2cbd-46ea-83ee-3c0234431e60",
        "cursor": {
          "ref": "69f422f0-9782-4d8a-b44b-9906984a5569",
          "length": 251,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "cd0fbbc6-10fa-4d51-ac2b-511ea7ac41f1"
        },
        "item": {
          "id": "87935f87-2cbd-46ea-83ee-3c0234431e60",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "b82e4f87-6e5c-453c-8655-3e8ba06eee3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d66739e-873e-4798-8c35-86d007916436",
        "cursor": {
          "ref": "4f3e7e40-274c-4540-bae9-6e4c66f23e04",
          "length": 251,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "fde18bd6-52b5-4d04-9c30-ca4d68fb7cfa"
        },
        "item": {
          "id": "3d66739e-873e-4798-8c35-86d007916436",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "3e047278-d3a2-405e-b5be-49a3c0fe385a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 571,
          "responseSize": 836
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b78f524-540e-40a5-9a8b-7e0b2d48c734",
        "cursor": {
          "ref": "92afe66e-302a-483f-90c6-1b9fe2a45ef8",
          "length": 251,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "85f8fbf6-df6e-41d7-9cd0-fda2bcfedc50"
        },
        "item": {
          "id": "3b78f524-540e-40a5-9a8b-7e0b2d48c734",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "6bff9b40-ad31-43b3-b846-1575f84b28b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5e08c30-d5bd-4c4a-b571-9e84066e35dc",
        "cursor": {
          "ref": "78af511c-6b39-4d92-b44b-99c67847d7aa",
          "length": 251,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "10c1b3bc-9eb9-468f-9d29-789266fceee4"
        },
        "item": {
          "id": "a5e08c30-d5bd-4c4a-b571-9e84066e35dc",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "1b4517ba-7af0-4fbb-826e-150a8c445559",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf020be-d1b8-405f-96f8-2057f22e9bfc",
        "cursor": {
          "ref": "38589ece-3602-4354-9ef4-d0beeb03c86f",
          "length": 251,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "04f9d8fc-fa0d-4a08-9fb2-519f0d916c15"
        },
        "item": {
          "id": "ddf020be-d1b8-405f-96f8-2057f22e9bfc",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "a907158a-2a30-4469-889e-e5f55da99695",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 816
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd7ee928-b1cd-4333-9a04-2a5ae883e665",
        "cursor": {
          "ref": "f3d1b8d6-f2e2-4b0c-ad57-27f6c1bc99ac",
          "length": 251,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "879012a6-6375-4bfb-8d89-0175ab411598"
        },
        "item": {
          "id": "fd7ee928-b1cd-4333-9a04-2a5ae883e665",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9774321a-1c7b-443b-ba9e-d5bd4d287382",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 814
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50961434-f27d-4781-be71-1741fb39bb38",
        "cursor": {
          "ref": "56c5aa8a-3eee-4bfb-833f-9ab6049ac73c",
          "length": 251,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "13a07389-48f8-47ed-80aa-446ab8bc0b63"
        },
        "item": {
          "id": "50961434-f27d-4781-be71-1741fb39bb38",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "3f02e0af-8bf6-40f4-b113-cd27315a5091",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff475c13-c0b7-40ff-baa8-f7ec71f53fcd",
        "cursor": {
          "ref": "7c957d5a-6569-4c1c-83b2-f45abd45f57d",
          "length": 251,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0208b36d-8e09-497c-aee3-8c2034c8758b"
        },
        "item": {
          "id": "ff475c13-c0b7-40ff-baa8-f7ec71f53fcd",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1ef9a80b-3f2f-4800-9891-1f4ae1c074ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "491ad8d8-7e7d-439c-8521-ecf10a7983b2",
        "cursor": {
          "ref": "2949dcae-00fd-4a73-bba7-3801ebace401",
          "length": 251,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "3907df52-452b-4f2b-95cb-36849a862274"
        },
        "item": {
          "id": "491ad8d8-7e7d-439c-8521-ecf10a7983b2",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "3cb88599-d501-44da-8b4b-f164b3b3ced7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 634
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f28ee0a2-c1e7-4c0d-b046-a49d8e84cb27",
        "cursor": {
          "ref": "31eb831a-56f3-42bc-b19a-055e34a88872",
          "length": 251,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "a735af28-9b6d-478f-bb34-322462e4d87b"
        },
        "item": {
          "id": "f28ee0a2-c1e7-4c0d-b046-a49d8e84cb27",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f2fda2e3-895d-443b-9c42-b4320f8b9aed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 538,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb5f1f0c-5f6d-4614-a3e9-76c2724e7337",
        "cursor": {
          "ref": "395de5b9-b09a-49ac-bc81-dced46382acc",
          "length": 251,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e418e21f-9941-4993-9597-9453c18f6783"
        },
        "item": {
          "id": "fb5f1f0c-5f6d-4614-a3e9-76c2724e7337",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "bfc68d91-f6d3-4765-a606-a5739a7858d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 633
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66852d74-8692-4259-8dd5-5b5f63b93004",
        "cursor": {
          "ref": "477c71ca-9616-4f1f-894d-f0378c20f3e0",
          "length": 251,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9f784a81-0153-49d1-a1af-60b87f98bf3b"
        },
        "item": {
          "id": "66852d74-8692-4259-8dd5-5b5f63b93004",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "b747fdf2-8749-4867-9379-0ca32065620c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c28f9919-3e7c-4d75-9a6d-158ccd709534",
        "cursor": {
          "ref": "c35fa9fe-b1d2-4972-b4c2-013b5d548141",
          "length": 251,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "443e973d-2c0d-441f-a99f-9cfc4365a016"
        },
        "item": {
          "id": "c28f9919-3e7c-4d75-9a6d-158ccd709534",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "e8c55c2c-c550-4257-80f8-69956b6c6fae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 684
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c90ef687-f95b-4a6a-92bd-24229b6e994c",
        "cursor": {
          "ref": "65f490b1-1b73-4dda-9086-7000ba4aabb0",
          "length": 251,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c2f0b3e8-bf87-4b8a-b9d2-516029c74162"
        },
        "item": {
          "id": "c90ef687-f95b-4a6a-92bd-24229b6e994c",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "b94ea253-ad73-4ab1-a5c9-409991a2045b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 806,
          "responseSize": 679
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad64972e-38ae-4678-bbca-3dd248860206",
        "cursor": {
          "ref": "c81144d0-e271-4805-800d-d71bd6dc1841",
          "length": 251,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "800bff30-d3b9-49f7-aab3-cc810ef8ca29"
        },
        "item": {
          "id": "ad64972e-38ae-4678-bbca-3dd248860206",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "408430f8-a587-4d9f-821d-67995f207ce0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 837,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e436905-d00f-4385-b2ab-1d7ce66a5a29",
        "cursor": {
          "ref": "f5aa6726-1f10-4c99-9acc-72e1decc6206",
          "length": 251,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "b269b862-f7a7-4bb5-8d31-b0fa1c969a7e"
        },
        "item": {
          "id": "6e436905-d00f-4385-b2ab-1d7ce66a5a29",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "bbf78528-3cfa-454a-84c9-5bbf2162780e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 874,
          "responseSize": 653
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae5f4ed0-ae3a-4472-a2c7-e28645ee4864",
        "cursor": {
          "ref": "546568c3-b383-4b09-a0cd-b9109777ae19",
          "length": 251,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "f0ff7b85-e3c5-459d-a7bc-474a0d1d088c"
        },
        "item": {
          "id": "ae5f4ed0-ae3a-4472-a2c7-e28645ee4864",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "84e014f0-bffe-4a24-b3f1-17d40f9dc0ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1079,
          "responseSize": 655
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adec8c4a-d91e-4546-ac6d-5c8a22781491",
        "cursor": {
          "ref": "f7a3061b-ac39-4bd1-9c20-81962b30967a",
          "length": 251,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "af713944-e0de-4d2f-b8c1-d90d7ee409cc"
        },
        "item": {
          "id": "adec8c4a-d91e-4546-ac6d-5c8a22781491",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "35943ae9-5423-48cd-a778-32917d7b3be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1513,
          "responseSize": 677
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "174e48cf-c861-4b4a-9610-86b40f3af811",
        "cursor": {
          "ref": "c2b240d2-7c99-4d8a-95f3-3ee652ed229e",
          "length": 251,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "11f4516e-3532-4861-a2b6-d56182f09b69"
        },
        "item": {
          "id": "174e48cf-c861-4b4a-9610-86b40f3af811",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fe8f35be-32c1-4a2a-90da-d7b4255626f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 933,
          "responseSize": 690
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26fbace6-c64f-40e2-ae89-d0483ebd28f4",
        "cursor": {
          "ref": "50a3bfc9-c432-431e-998d-2639613216ee",
          "length": 251,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "3c55451b-901d-4edf-9ce7-cb79f91bedaf"
        },
        "item": {
          "id": "26fbace6-c64f-40e2-ae89-d0483ebd28f4",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "9f690c46-c48d-4b66-aedb-44ad1cf83691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1003,
          "responseSize": 953
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdcf3406-4760-4569-afe4-c61aab202051",
        "cursor": {
          "ref": "24d157fd-a127-48bf-9006-6fc2e160cfe6",
          "length": 251,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "4e7c9e66-6796-414d-927b-53df0498601e"
        },
        "item": {
          "id": "fdcf3406-4760-4569-afe4-c61aab202051",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "641c79dd-9bcd-4014-87f2-40ce1146e500",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 779,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddd18103-4153-4411-b0d4-7af2a10fdd66",
        "cursor": {
          "ref": "afc49e45-93ba-4870-bd56-100687d419e0",
          "length": 251,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "89f69ddb-c965-4eb5-92cc-0296125c1e76"
        },
        "item": {
          "id": "ddd18103-4153-4411-b0d4-7af2a10fdd66",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "f39cb58f-a594-43de-a367-dcbc076af43e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cd6165-7923-463d-9bec-b0a640332493",
        "cursor": {
          "ref": "fd5036e8-4f68-459f-9bed-6c6f267a7159",
          "length": 251,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5bef4b02-5738-4fc5-9b50-1dea98966dd4"
        },
        "item": {
          "id": "08cd6165-7923-463d-9bec-b0a640332493",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "9af977e4-1cae-4e7b-a00f-254628990777",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69017a61-2051-4472-8d31-f409bc6373f5",
        "cursor": {
          "ref": "43095b32-d0b8-4ac9-9538-9ac5d7730c0f",
          "length": 251,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "7381bb2d-c77a-49b3-98c5-782a2401e3a9"
        },
        "item": {
          "id": "69017a61-2051-4472-8d31-f409bc6373f5",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "203f0d5c-3a89-4908-a242-7cf359a79752",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 623,
          "responseSize": 927
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc873aab-bfb0-4d84-9817-3e8873f2fc30",
        "cursor": {
          "ref": "987af6ec-065b-4abc-8ac5-62d0e4fd923e",
          "length": 251,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f20c2175-e54d-41f3-b257-1231a9e5bf7d"
        },
        "item": {
          "id": "bc873aab-bfb0-4d84-9817-3e8873f2fc30",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "981ee464-ee6e-4568-b0e8-e0f652e7a1a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 753
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db747058-88f6-40e0-a2de-081e2b157b19",
        "cursor": {
          "ref": "04507727-7cf1-4827-98b6-b28e5ae4bb0a",
          "length": 251,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "9fb3dd0a-874b-49da-bee3-46a933dbc658"
        },
        "item": {
          "id": "db747058-88f6-40e0-a2de-081e2b157b19",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "7516a419-b0f5-4230-ac45-a1fc148c3a31",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3155b7b0-bc08-4706-a1cc-cbb356c6f8fd",
        "cursor": {
          "ref": "fb2de904-206a-410c-91cf-e0590e675b68",
          "length": 251,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "dbdcb76e-1a30-4b0e-a011-5b9cc795c908"
        },
        "item": {
          "id": "3155b7b0-bc08-4706-a1cc-cbb356c6f8fd",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "302b5889-eee7-466f-8589-095f0af69dea",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 622,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58666113-9f88-4330-a458-a3593f9dd44e",
        "cursor": {
          "ref": "00006784-2ca1-41b7-9ffd-d90d81253ea7",
          "length": 251,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "606fb7df-9ff5-4c21-b651-c92b6ff3f03c"
        },
        "item": {
          "id": "58666113-9f88-4330-a458-a3593f9dd44e",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a6f7ac8b-cf1a-4063-baa2-73b82dabebe2",
          "status": "Created",
          "code": 201,
          "responseTime": 6079,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "e461d554-1f47-4727-bf29-6ca15a1974ba",
        "cursor": {
          "ref": "b3aa2059-b91d-4619-b1a5-fb5e6a509a16",
          "length": 251,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "c048b4bc-5101-417c-b96e-4c0db58b84d9"
        },
        "item": {
          "id": "e461d554-1f47-4727-bf29-6ca15a1974ba",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "380e047c-51e3-4367-95d0-5e122b0043ea",
          "status": "Created",
          "code": 201,
          "responseTime": 5521,
          "responseSize": 749
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d129407-acf9-4013-b74d-99b2004feec7",
        "cursor": {
          "ref": "2c9c7e03-c4ef-4da1-9da1-0128f69732d7",
          "length": 251,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "5d2d6ed1-eb77-47da-9f40-36d734638360"
        },
        "item": {
          "id": "7d129407-acf9-4013-b74d-99b2004feec7",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "2233cad2-546d-4762-b7f8-0428585e3701",
          "status": "Created",
          "code": 201,
          "responseTime": 4589,
          "responseSize": 703
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3090b639-1eb4-4f64-97bf-561ff436b96a",
        "cursor": {
          "ref": "fb1f74c6-09df-4375-8dde-7e69822af5eb",
          "length": 251,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "7007afc3-e4be-44fe-9193-8803532b7c9d"
        },
        "item": {
          "id": "3090b639-1eb4-4f64-97bf-561ff436b96a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "aa6b50f8-e7ae-44a8-88ac-59aca7f5aad6",
          "status": "Created",
          "code": 201,
          "responseTime": 4418,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d15c11-7a85-44ba-adc1-87494207f7ee",
        "cursor": {
          "ref": "dc7a8a6f-0f90-44e7-bfef-5623f44abce8",
          "length": 251,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "96e0773f-a1e4-4094-a897-721b5e72ef63"
        },
        "item": {
          "id": "c3d15c11-7a85-44ba-adc1-87494207f7ee",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "d57f8f20-f943-418e-8bd0-e2a6f4d0a268",
          "status": "Created",
          "code": 201,
          "responseTime": 4511,
          "responseSize": 696
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "43249a58-7ae8-47ac-bf93-70d5eea596c2",
        "cursor": {
          "ref": "24115b81-43c5-44ec-9318-5f5638649bd2",
          "length": 251,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "4db5d419-7237-41df-bf66-6537fe7d0bd5"
        },
        "item": {
          "id": "43249a58-7ae8-47ac-bf93-70d5eea596c2",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "03a1b79c-afe3-42ac-a455-b294d2134b1a",
          "status": "Created",
          "code": 201,
          "responseTime": 5344,
          "responseSize": 1037
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14ceafc-be84-4023-b08a-88856e5189e9",
        "cursor": {
          "ref": "98bb2848-ddf9-4ccf-92d7-544fa62fc4c5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f905f50f-8762-44b5-87ed-5872de0a9929"
        },
        "item": {
          "id": "e14ceafc-be84-4023-b08a-88856e5189e9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "965cbe30-ae22-460b-9cff-69917e259a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14ceafc-be84-4023-b08a-88856e5189e9",
        "cursor": {
          "ref": "98bb2848-ddf9-4ccf-92d7-544fa62fc4c5",
          "length": 251,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "f905f50f-8762-44b5-87ed-5872de0a9929"
        },
        "item": {
          "id": "e14ceafc-be84-4023-b08a-88856e5189e9",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "965cbe30-ae22-460b-9cff-69917e259a81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed89f332-7ca9-4dab-9933-51c8409fb7c2",
        "cursor": {
          "ref": "dc09ae4f-8185-413c-8447-3f75fe3947d9",
          "length": 251,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "d2bfacf2-a20a-40fa-8a61-886cb86694c3"
        },
        "item": {
          "id": "ed89f332-7ca9-4dab-9933-51c8409fb7c2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "dfbf35ea-9978-4ddb-ab78-ffee15a53d77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 629,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec1548be-5ccd-43af-82ce-ce072da42419",
        "cursor": {
          "ref": "72089d44-dd7e-4ee8-abef-525464bde7f5",
          "length": 251,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "a46aed7d-4b4d-43ff-9a84-e8d711b18ad2"
        },
        "item": {
          "id": "ec1548be-5ccd-43af-82ce-ce072da42419",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "1f0b7a1d-a142-4078-a6c4-ade62224de13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 547,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aab860a1-ef07-455b-9dd1-58bae17c6173",
        "cursor": {
          "ref": "5a7aa301-2c00-43b5-8c07-fe783cc75555",
          "length": 251,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "f47ee2cd-8f1d-4b57-8fbb-00b7aa4d2b0f"
        },
        "item": {
          "id": "aab860a1-ef07-455b-9dd1-58bae17c6173",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "ef797ed3-9df4-4cc0-9ff8-c1d862b7d73d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 622,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a7662a-63b3-44a3-a096-89fd2e684689",
        "cursor": {
          "ref": "7bcf6bd4-646c-43b9-863b-ce93e0696fe1",
          "length": 251,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "4aeddf54-cdeb-4548-a3d8-1f5a78d9b226"
        },
        "item": {
          "id": "a3a7662a-63b3-44a3-a096-89fd2e684689",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "2cf1f6ef-ab3d-4ba1-8448-f360cedea311",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dbb7b59-1137-4d17-a5ff-cce7fb6745ba",
        "cursor": {
          "ref": "928e74e7-e02d-4889-b353-a4d403210d36",
          "length": 251,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "618fba87-f094-474f-8841-c8297ae72d2e"
        },
        "item": {
          "id": "7dbb7b59-1137-4d17-a5ff-cce7fb6745ba",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "1de0d2b3-557f-471c-9436-229da4a9629c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c326a43d-88bb-4791-9a79-651326e241d3",
        "cursor": {
          "ref": "2cc0cbdf-0c51-4c5d-b952-0d8127f12d6b",
          "length": 251,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "fccf7966-1fd3-4529-94f8-414ff174dc7d"
        },
        "item": {
          "id": "c326a43d-88bb-4791-9a79-651326e241d3",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "58307031-27ff-46f3-956c-6efb8f33112a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 584,
          "responseSize": 431
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c89e951f-48e8-436f-8120-8f11aae82c39",
        "cursor": {
          "ref": "d4c990ae-26bd-4c6d-abb8-1c08f771f0c1",
          "length": 251,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "3c0ca8f3-0972-48ae-8760-955d9659da75"
        },
        "item": {
          "id": "c89e951f-48e8-436f-8120-8f11aae82c39",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c6565db2-6222-4131-ab27-5342d2a59244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 482
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b60eebc-6cd5-4559-b6bb-691dd45094a3",
        "cursor": {
          "ref": "7b17e621-0f84-4e3c-b507-9d984f15bf45",
          "length": 251,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "af6575fe-6616-4fe8-b807-ff3a9af3a989"
        },
        "item": {
          "id": "3b60eebc-6cd5-4559-b6bb-691dd45094a3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "2510d939-8c81-4269-b217-9f1840859ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 479
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acd72684-40b6-47fd-b990-75526c91b3a3",
        "cursor": {
          "ref": "7ddb29fe-e33d-401d-9bfe-0692e94a3043",
          "length": 251,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fb01576e-45ea-4588-af29-8ce98298fbf1"
        },
        "item": {
          "id": "acd72684-40b6-47fd-b990-75526c91b3a3",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "4eac24f2-85b7-43ea-995a-80251094c60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1323b246-4719-4873-aeab-8bba5565553b",
        "cursor": {
          "ref": "2b86bcaa-ecc3-460d-98f9-4e93b1c5b634",
          "length": 251,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9301419a-4a67-4131-aada-e2fb26313ff5"
        },
        "item": {
          "id": "1323b246-4719-4873-aeab-8bba5565553b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "617359fa-ca94-4ad7-8ba7-7ef9d625266d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 545,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38b5f539-f488-465f-81ba-15cc56eb799e",
        "cursor": {
          "ref": "38794546-074c-4150-b6ac-7d5733ca51b6",
          "length": 251,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "7986b822-17c2-4fb7-8260-31d1752d86ca"
        },
        "item": {
          "id": "38b5f539-f488-465f-81ba-15cc56eb799e",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "d62401fd-bf11-4803-b861-f1d4e35734b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d2860ee-20c8-43c2-8df9-cadee2cedf3c",
        "cursor": {
          "ref": "ba33d5e2-fe07-4904-a041-ec2f172abf6a",
          "length": 251,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "6409dab8-5112-4cdf-900b-5d8717f84950"
        },
        "item": {
          "id": "2d2860ee-20c8-43c2-8df9-cadee2cedf3c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "692ae47d-44ac-4908-8b8e-cd0874cf2750",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 576
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a95f765-1fbc-45fe-98ad-8f7db5ba96f3",
        "cursor": {
          "ref": "c01229f7-2a97-4df7-89b8-904d4f91ec69",
          "length": 251,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "86230d92-2994-433f-bd6a-85c2a102f055"
        },
        "item": {
          "id": "5a95f765-1fbc-45fe-98ad-8f7db5ba96f3",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "059a9e52-d198-45b9-9260-2b03c498a89e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 588,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "830ec0d9-3ff7-4f0d-bb40-499500c8a4a2",
        "cursor": {
          "ref": "f88b554b-1b4c-411b-920a-911344af6658",
          "length": 251,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1d240eff-f6c7-4422-b37c-1b5dca1d0f93"
        },
        "item": {
          "id": "830ec0d9-3ff7-4f0d-bb40-499500c8a4a2",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "f0e28660-bd02-4d7d-adb5-05ee6df545e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c7fb392-3c1c-4f27-b8f6-06a6c3a43b46",
        "cursor": {
          "ref": "dcbb19e0-8aa9-4689-a14e-c662c91fdfc9",
          "length": 251,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "5d98dcc2-6dd5-46de-b0a7-7acf0253522a"
        },
        "item": {
          "id": "7c7fb392-3c1c-4f27-b8f6-06a6c3a43b46",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "1a238f3f-b48c-4a46-bedd-b9e029d1c3e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1b82ad2-7a40-448e-a1a8-e76dfe8de2ff",
        "cursor": {
          "ref": "fb55a206-3812-4baf-8e57-700c6d6ce425",
          "length": 251,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "e4f27dd9-e75e-4bb9-8659-decbbe7fec40"
        },
        "item": {
          "id": "d1b82ad2-7a40-448e-a1a8-e76dfe8de2ff",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "4d480aa1-af94-4488-945f-98f89dd0b9a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe571e78-304a-4559-9714-5b27973508e7",
        "cursor": {
          "ref": "54b36250-c215-4a95-bce3-973be58b3cae",
          "length": 251,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "b5de615b-f0da-403c-a775-f2e8839d6310"
        },
        "item": {
          "id": "fe571e78-304a-4559-9714-5b27973508e7",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "63b49be6-1369-44f3-b18d-ed6950a39782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 597,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47e7352d-ac19-4740-95a7-40adbd2b7283",
        "cursor": {
          "ref": "3d9c8a15-4bdc-4bba-9f6e-85f0ece871ae",
          "length": 251,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "ff087557-4c50-4a56-b8df-0713ca252d1d"
        },
        "item": {
          "id": "47e7352d-ac19-4740-95a7-40adbd2b7283",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e822dd32-7b79-4f3f-b796-583b56421d59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1ef9b02-7c01-4d23-89f1-eafad2fea115",
        "cursor": {
          "ref": "21b87e10-3fb4-4dc5-83f4-d36a11c804f5",
          "length": 251,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "147c0f8b-8c87-48ae-bd15-41a62452b3fc"
        },
        "item": {
          "id": "e1ef9b02-7c01-4d23-89f1-eafad2fea115",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4dfc775d-f63a-4c29-ae06-c2c2ed1c6cf0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c42e267-580a-45f2-b54b-1626e774885a",
        "cursor": {
          "ref": "1a434f7e-189f-4320-8a35-ede968ea7eae",
          "length": 251,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "ff5dd0d7-2041-4a9a-8ac1-a3bb7a1353db"
        },
        "item": {
          "id": "4c42e267-580a-45f2-b54b-1626e774885a",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4c7a2b63-b7d0-414d-adde-4516327bd5b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 506
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1c6e06a-b34f-48a7-a4a8-491c884b441e",
        "cursor": {
          "ref": "4061aadb-395f-4c9e-a139-a30c30796682",
          "length": 251,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "e9d5de0a-cb66-4c32-8c54-13b924ade052"
        },
        "item": {
          "id": "e1c6e06a-b34f-48a7-a4a8-491c884b441e",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "001d4cb4-2075-4947-95fc-69bb4869ad90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc9325e8-e6f6-43e2-b092-cc78ed92ca16",
        "cursor": {
          "ref": "97cabbec-9202-41c5-b4fe-517711743e48",
          "length": 251,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "0f4e3301-58c3-4f3c-affa-f13fc66f6319"
        },
        "item": {
          "id": "bc9325e8-e6f6-43e2-b092-cc78ed92ca16",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "a9c77da6-a6da-450d-b50a-8a7c0d47e8f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 505
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecc3d83c-2252-4be2-b236-6a7c645e1191",
        "cursor": {
          "ref": "62fb1523-286f-49a3-9f19-1186d62213b3",
          "length": 251,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "3951c97c-7fdf-4088-ae18-b528f172fe84"
        },
        "item": {
          "id": "ecc3d83c-2252-4be2-b236-6a7c645e1191",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f8f643c2-a83c-4cc1-8b06-d8aaf0092b8f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599cd74e-e27d-49cc-8125-321aa2e5f57c",
        "cursor": {
          "ref": "10cc8af5-ce14-4d5c-8a61-ca3c73db61e3",
          "length": 251,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "f09ffa27-7e6d-44ce-9d59-7dd354b981c7"
        },
        "item": {
          "id": "599cd74e-e27d-49cc-8125-321aa2e5f57c",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "fdfb068b-b946-4f4a-b1ca-92894a20fba4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a61df68-0ddf-4922-b58a-013327601cee",
        "cursor": {
          "ref": "40cc53a5-2069-4f15-9749-60befacb3b13",
          "length": 251,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "6a1ff2bc-8474-4ce6-b0f7-9089367b1cb5"
        },
        "item": {
          "id": "3a61df68-0ddf-4922-b58a-013327601cee",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "0afd7f2b-16b8-43e0-ac7b-02ab438ca581",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 532,
          "responseSize": 514
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d64d07eb-6206-4e04-a760-1678f32ef48b",
        "cursor": {
          "ref": "665f0fb6-ee54-431b-8f5d-30bb2e96f0a9",
          "length": 251,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "b4b10b13-298f-4d2a-8dec-47a1a72cd96f"
        },
        "item": {
          "id": "d64d07eb-6206-4e04-a760-1678f32ef48b",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "410cd82a-975a-4b9d-a3ae-6024621482a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c58c62c-fa68-4436-b07c-384c2dc1075c",
        "cursor": {
          "ref": "d3efb2c0-5c97-4f96-948e-5d5ace28d16a",
          "length": 251,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f999bcbb-2d84-4336-967c-b5b20422c99a"
        },
        "item": {
          "id": "2c58c62c-fa68-4436-b07c-384c2dc1075c",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "8f46a874-380e-49b9-ab2c-fd7ac2722b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 529
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c689ee87-01d0-4352-9aa0-9fb974f8e09b",
        "cursor": {
          "ref": "97e0f59a-c2e8-48d9-a910-c76825eb632c",
          "length": 251,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "068b798b-7336-4aa4-93e5-59b9c368c611"
        },
        "item": {
          "id": "c689ee87-01d0-4352-9aa0-9fb974f8e09b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "07d0c822-eba7-4364-a185-18f39d8462ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49162776-c187-4a19-8397-ae34fd19b84c",
        "cursor": {
          "ref": "76be292e-72fa-4ae6-86c2-f7a74d8b0a26",
          "length": 251,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "144d613b-a60e-414b-a34d-8b35a8f4e4c7"
        },
        "item": {
          "id": "49162776-c187-4a19-8397-ae34fd19b84c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "6f75a2d4-d277-4a7a-bf56-f58bf5bd5eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 528
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1df8518-1995-45ac-9164-e89844d1a66f",
        "cursor": {
          "ref": "a0eaac7e-6074-4757-9367-f6731bebd73c",
          "length": 251,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9da5f651-130c-4de7-917a-6f86ccef12c4"
        },
        "item": {
          "id": "c1df8518-1995-45ac-9164-e89844d1a66f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "22d2c7f0-5cec-427d-a96e-eb6d3dc7597a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 586,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e901189-fab5-40ea-9e57-185ba8237c9d",
        "cursor": {
          "ref": "1f24e2e7-4935-4d88-b0f2-da484b631215",
          "length": 251,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1cdd83d9-94e4-432e-a7a9-3ba001d2ae50"
        },
        "item": {
          "id": "4e901189-fab5-40ea-9e57-185ba8237c9d",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "36e7a4f5-5f5b-4721-8de9-2dcacaa766ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 620,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "090982a5-943f-4b1c-be6e-a4e36d7f5142",
        "cursor": {
          "ref": "9cbb91df-a7bf-4310-af00-d41bc0a0a2c8",
          "length": 251,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "c176b16a-606c-4c73-9911-435081af61e8"
        },
        "item": {
          "id": "090982a5-943f-4b1c-be6e-a4e36d7f5142",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c666e9a3-dcbe-4097-8a52-f6a0f396506d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "803e8347-f1ac-42db-8148-af89d837f3cc",
        "cursor": {
          "ref": "15f19b24-02d9-4e73-91af-315c67ca604e",
          "length": 251,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ca85489c-4a79-4402-a1e6-570a6513774f"
        },
        "item": {
          "id": "803e8347-f1ac-42db-8148-af89d837f3cc",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "8a048cdf-0d67-4ebd-a3bd-1aa29da0c603",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 551,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef7aebe-1216-483b-ad0f-13b6f71fffee",
        "cursor": {
          "ref": "1a758061-3622-46d4-910f-462043fcffd8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8642cb44-2245-44e2-a75a-afe607055ce9"
        },
        "item": {
          "id": "7ef7aebe-1216-483b-ad0f-13b6f71fffee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d7dde066-c072-4544-9ec5-e16acdeb9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ef7aebe-1216-483b-ad0f-13b6f71fffee",
        "cursor": {
          "ref": "1a758061-3622-46d4-910f-462043fcffd8",
          "length": 251,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "8642cb44-2245-44e2-a75a-afe607055ce9"
        },
        "item": {
          "id": "7ef7aebe-1216-483b-ad0f-13b6f71fffee",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d7dde066-c072-4544-9ec5-e16acdeb9144",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2023b974-150f-4b6a-a3e5-6f6265b03058",
        "cursor": {
          "ref": "f7df8055-bcca-4b59-9e23-a241d52c22f4",
          "length": 251,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d3255c29-6398-4e0f-8781-b25214810c7b"
        },
        "item": {
          "id": "2023b974-150f-4b6a-a3e5-6f6265b03058",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "26e7097d-8759-4810-900e-11ad5a39a7e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 392,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ead5068-6c08-42a3-885a-a622ffea0257",
        "cursor": {
          "ref": "0fa70d4a-a60d-4a22-b313-1142cb851c66",
          "length": 251,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "5aa5ce25-0e45-4046-a0c5-9146fb4e5ca8"
        },
        "item": {
          "id": "3ead5068-6c08-42a3-885a-a622ffea0257",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "cccd38e4-0ec2-4148-863f-1fd9a9207388",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 367,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91c74318-c337-4eba-8ebf-5ad70d062d48",
        "cursor": {
          "ref": "60c55ca6-1a88-4ace-92a1-a32be6f942a4",
          "length": 251,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "db0d642e-cab2-4e39-aff3-e2a778de00ee"
        },
        "item": {
          "id": "91c74318-c337-4eba-8ebf-5ad70d062d48",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c4f1b58b-5803-4e00-8279-5263cfa71f11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 644
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ff582c-e13d-4396-ad13-8ed55bfcbac8",
        "cursor": {
          "ref": "5a5d85a8-3f15-4525-a605-ad3779a80507",
          "length": 251,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "32707915-08b7-4e6d-9205-f65af6854ee8"
        },
        "item": {
          "id": "e4ff582c-e13d-4396-ad13-8ed55bfcbac8",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "a919cb9a-e3ec-4a73-9d06-25603baf4be0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 645
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1d95f4-5c2f-4350-9f9c-a074effb2666",
        "cursor": {
          "ref": "b9916275-9738-4baa-ab09-ca54899231e6",
          "length": 251,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "5fc8ba1f-7f50-4c78-9147-7a4e9024c9cf"
        },
        "item": {
          "id": "ed1d95f4-5c2f-4350-9f9c-a074effb2666",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "12bd7375-1e33-4839-9eb1-bf359c49f181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 643
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e8c149-34a9-4beb-8dc7-2da7450b325a",
        "cursor": {
          "ref": "63d7a66e-2617-428f-8db4-029926e1ae56",
          "length": 251,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "881e7dbb-0eb1-40f5-bacf-d74bcabae687"
        },
        "item": {
          "id": "93e8c149-34a9-4beb-8dc7-2da7450b325a",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "8e308eba-4149-4aa7-aa47-cdc941f805a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1311
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca527626-a75a-4fad-8aa6-3fba533110eb",
        "cursor": {
          "ref": "4cb93570-7713-48e4-b396-5f05e4021e9d",
          "length": 251,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "7cd30f98-01f1-4a0c-a711-c15e94899345"
        },
        "item": {
          "id": "ca527626-a75a-4fad-8aa6-3fba533110eb",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "2650669d-1c33-4e4c-aeb4-0e07b3372e33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 355,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "057350bc-c8af-4754-bc55-8f60c6763e5d",
        "cursor": {
          "ref": "56baab6a-d4a9-4e8e-9221-bf9cfb5809ef",
          "length": 251,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fff4120b-8f82-4f7d-9f08-e7aa6178d73f"
        },
        "item": {
          "id": "057350bc-c8af-4754-bc55-8f60c6763e5d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "20551566-73af-4ee4-8677-0f7a5fa6ed68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1468
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3d5bda3-5fde-422f-8ad3-04323e2c8d3c",
        "cursor": {
          "ref": "941b53db-4b75-48ad-8e04-0caf9f81adb0",
          "length": 251,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "47a8757f-0044-4806-a534-d7482507c2fd"
        },
        "item": {
          "id": "c3d5bda3-5fde-422f-8ad3-04323e2c8d3c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "1edb175e-7f6b-451e-bac4-a807cc550275",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 371,
          "responseSize": 1469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8af7ebfb-1924-46e0-8ccc-6a225146c91a",
        "cursor": {
          "ref": "70adc522-6f14-4f9f-95ce-1f39eb47641c",
          "length": 251,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "5f91773e-6299-4588-84d1-222db4a823d1"
        },
        "item": {
          "id": "8af7ebfb-1924-46e0-8ccc-6a225146c91a",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "48395e03-e47d-407d-8856-2e2c773a23d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 373,
          "responseSize": 1367
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b3f34b-af76-46d3-9730-77c3bfbffd9d",
        "cursor": {
          "ref": "aa44e066-7181-4bb4-9a57-92124601669c",
          "length": 251,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "98ca8add-078e-4daa-bfed-7b1f8f852ba4"
        },
        "item": {
          "id": "74b3f34b-af76-46d3-9730-77c3bfbffd9d",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fc2b8bbd-0219-4cab-8bb7-cad682dfe1e2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 387,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8982fc63-38ce-492e-b7a0-6e9ea93ee7d1",
        "cursor": {
          "ref": "30d47be8-7b61-4775-ba51-b55f1581f743",
          "length": 251,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "ac23ef35-c60d-4cd0-b83c-8cbccde644fe"
        },
        "item": {
          "id": "8982fc63-38ce-492e-b7a0-6e9ea93ee7d1",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "90316f45-9cf9-4357-9a62-6ca6928f6a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1532
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a175a0e5-9679-423f-9a5a-de37738f8430",
        "cursor": {
          "ref": "684d4b5c-afe9-4d6b-970a-a6994125713d",
          "length": 251,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "edb26a8c-450d-4c7d-9021-78f7d1f20ce4"
        },
        "item": {
          "id": "a175a0e5-9679-423f-9a5a-de37738f8430",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "26bcdb36-d1c9-4f94-a3af-3eaa11bf8045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89d0ab36-3bd8-4b9b-b53c-47e34f035e62",
        "cursor": {
          "ref": "8def1015-87e9-4b46-a564-d5b5393d55b0",
          "length": 251,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "efb58dac-5234-468b-a571-ce27fa4b05df"
        },
        "item": {
          "id": "89d0ab36-3bd8-4b9b-b53c-47e34f035e62",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "83a82030-0220-4a23-9bbe-a28d9306e38c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 420,
          "responseSize": 1521
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c292f2fd-1261-4ecd-b6fd-f29231f9cd05",
        "cursor": {
          "ref": "d304843a-ab92-4d07-b45d-c67f1dd0b816",
          "length": 251,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "6c31d791-4628-40b9-93fa-ca2287200cf7"
        },
        "item": {
          "id": "c292f2fd-1261-4ecd-b6fd-f29231f9cd05",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "65df6ad6-c70b-4fba-a9fe-2758a291b900",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 1522
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7066b50d-11c1-4b10-a761-7c76f053db9f",
        "cursor": {
          "ref": "a1544ce9-5ab4-43b8-8978-4919eef51498",
          "length": 251,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "1cc89994-5c1e-4a1a-9fa0-6e702300cdb8"
        },
        "item": {
          "id": "7066b50d-11c1-4b10-a761-7c76f053db9f",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "fcaad137-85c8-4a86-8355-aa7fbcb8b3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 343,
          "responseSize": 1420
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8db54c73-9f6b-48b2-82f5-517023df4380",
        "cursor": {
          "ref": "0dd15985-9e21-43df-bf96-e3e0ee31601e",
          "length": 251,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f93cb621-d6f9-4eb4-b365-5e194e87bf55"
        },
        "item": {
          "id": "8db54c73-9f6b-48b2-82f5-517023df4380",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "b675aa1d-d3f1-4653-8946-eaadb0da0327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d14d6826-b669-435d-bd24-3e047e93acb3",
        "cursor": {
          "ref": "20ef53df-784b-4e28-8eef-11fb576ad5b1",
          "length": 251,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "967d8bb5-ffad-4b24-a9d3-a5957f707c2d"
        },
        "item": {
          "id": "d14d6826-b669-435d-bd24-3e047e93acb3",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "222eddc7-698f-4b00-8665-73a9265c6a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 369,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a1ef1148-7955-4df9-accc-a02f73d090b1",
        "cursor": {
          "ref": "9b62e81b-feff-436b-9734-9c8bafc96824",
          "length": 251,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "34f96609-d257-4951-a11b-f18336a8a7d1"
        },
        "item": {
          "id": "a1ef1148-7955-4df9-accc-a02f73d090b1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "3dd6259a-3bf9-498d-bb26-7b2ff540e9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f11921c-7e5f-4e25-9aaf-4709edb7559b",
        "cursor": {
          "ref": "3d4e0bbd-fea2-4c6e-9793-2326d4c75186",
          "length": 251,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "6fc76231-52cb-456e-8040-c256fb5f50e2"
        },
        "item": {
          "id": "5f11921c-7e5f-4e25-9aaf-4709edb7559b",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "5a506b01-ca74-46eb-b1dc-efed6a290874",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 407,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1097b724-8a67-4aca-bcbb-f94e65aa0a6e",
        "cursor": {
          "ref": "736f4118-8358-4f0a-9ca4-794c2cd5e337",
          "length": 251,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "2ee12474-0909-4927-a212-3d162b8072c0"
        },
        "item": {
          "id": "1097b724-8a67-4aca-bcbb-f94e65aa0a6e",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "81129394-f933-4131-b809-3cbe754ae201",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1835529c-672e-431b-a014-b9b1c9420c09",
        "cursor": {
          "ref": "9c9ae55b-ccd5-42c0-8ed7-bbe184074cbd",
          "length": 251,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "044b1b46-8390-4c63-b754-20957e6929c9"
        },
        "item": {
          "id": "1835529c-672e-431b-a014-b9b1c9420c09",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "26cb353e-ea3d-47dd-bbb9-0b2f39022d92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1360
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7c9f21-2449-45bf-b2d8-a26b3037cf5f",
        "cursor": {
          "ref": "b86f0386-629d-4e26-bfc1-9b7d69bcb3b9",
          "length": 251,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1a3aa63a-4bc0-42a0-b0d0-8dcdaa4d2c66"
        },
        "item": {
          "id": "bb7c9f21-2449-45bf-b2d8-a26b3037cf5f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "0d72f5ec-f746-4caf-8f4f-1503994efc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04cf4b3b-a347-4046-bd1f-a5b6204cec47",
        "cursor": {
          "ref": "61596c08-49d8-458c-a83d-9839f8da0428",
          "length": 251,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "2c4e735e-a0a1-4837-9b04-0bdaeb5c94be"
        },
        "item": {
          "id": "04cf4b3b-a347-4046-bd1f-a5b6204cec47",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d462698b-c685-40ce-82f8-4818de13b131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c57070c0-dea9-48fe-b49d-78550717aa18",
        "cursor": {
          "ref": "15bad452-9ce3-418c-bf02-680943dd760e",
          "length": 251,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "0ff2552c-a643-44f3-bfef-7c202aa74b5f"
        },
        "item": {
          "id": "c57070c0-dea9-48fe-b49d-78550717aa18",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "201767de-07f8-48d3-8302-eb32193dc99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 377,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a37763-be38-409a-8855-d84cd951c4aa",
        "cursor": {
          "ref": "94fd675f-c4d5-4930-9d21-6fe9e5309561",
          "length": 251,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ac2f5dbe-fecd-4b99-89f8-1f54c6e248ab"
        },
        "item": {
          "id": "95a37763-be38-409a-8855-d84cd951c4aa",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "d2c4fca4-c27a-4c48-96db-043086d58f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 455,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5617709b-b12b-4a79-9ffe-43d12def10fa",
        "cursor": {
          "ref": "ca79ac12-3cfb-40f8-9bc4-f714bf18aa14",
          "length": 251,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "50e9de97-854c-4fb8-8d7a-4712bfead1bc"
        },
        "item": {
          "id": "5617709b-b12b-4a79-9ffe-43d12def10fa",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "0eb40412-64d9-4216-8743-0d0734706b9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 660,
          "responseSize": 1372
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e13d8ce-e413-4d57-aca2-0c899d9d7dda",
        "cursor": {
          "ref": "4f0993f3-a569-409c-b7e6-0217167835a1",
          "length": 251,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0f906316-0695-4ea4-bd52-6901da0984fa"
        },
        "item": {
          "id": "4e13d8ce-e413-4d57-aca2-0c899d9d7dda",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "0c62f63c-225c-4c67-9188-a3a3074817be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1367,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d923c8c-42a5-4601-a4b0-0dcd5a0e6055",
        "cursor": {
          "ref": "88f1add1-ec26-478f-9d49-f92d4481a894",
          "length": 251,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8995ab66-43b7-48ab-ac81-9a31cf35a155"
        },
        "item": {
          "id": "5d923c8c-42a5-4601-a4b0-0dcd5a0e6055",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "bb5e6aed-9a5a-4bf4-acbb-e294b9e2767d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1312,
          "responseSize": 1364
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2397ea73-6279-48ae-83f7-8e46442e13cd",
        "cursor": {
          "ref": "731731c5-a29b-4d7c-bf0b-bc4972db6ec7",
          "length": 251,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "2926f8b9-adeb-4d63-ad6f-9231127f0b21"
        },
        "item": {
          "id": "2397ea73-6279-48ae-83f7-8e46442e13cd",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "a6bcb1af-51d5-4b1e-a0ff-a7948cf76ea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1335,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f68ce99d-92bd-4f71-a9b6-eb63d7496a7a",
        "cursor": {
          "ref": "08dd9786-3d98-4c49-bbc0-69acd20c298d",
          "length": 251,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "17b3d0de-90e5-4159-b015-df2286a89683"
        },
        "item": {
          "id": "f68ce99d-92bd-4f71-a9b6-eb63d7496a7a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "059af508-ba7d-46b7-9f28-8773fbf77cb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1410,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24cb686d-7f42-425d-a781-2cbf87ee25a9",
        "cursor": {
          "ref": "d5e3304b-86fe-41af-9a5a-5be332e8cc65",
          "length": 251,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "bb506204-b266-4464-9dea-bddf5d7dbb0c"
        },
        "item": {
          "id": "24cb686d-7f42-425d-a781-2cbf87ee25a9",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "4ee6a1ce-2285-4f08-b1a4-6d44f4c6b7c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1086,
          "responseSize": 1354
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dba7dec-425f-496c-ac18-cc6cbc88bc18",
        "cursor": {
          "ref": "aee8dd0b-5f79-4eea-88eb-a93ffe0fa957",
          "length": 251,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "c6970568-fae6-4f31-bbbb-25b72d93a6a7"
        },
        "item": {
          "id": "3dba7dec-425f-496c-ac18-cc6cbc88bc18",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "4b047a03-6a2c-4d5f-889a-cafed794cfa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 918,
          "responseSize": 1380
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2013b1e-a3c2-4e7d-9c04-a3d03eb2a635",
        "cursor": {
          "ref": "aa1d7eab-16a5-4fd1-b833-f1ebd42eda58",
          "length": 251,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "aeebfad7-84f2-4713-9066-42ec331f26d8"
        },
        "item": {
          "id": "e2013b1e-a3c2-4e7d-9c04-a3d03eb2a635",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "328bf8f5-c436-4738-ab7e-4b78afc18a0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 980,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09e05b88-e042-4ef3-8210-4a8f59ee83ff",
        "cursor": {
          "ref": "706fc797-03fb-4958-bc8a-ff42539309d2",
          "length": 251,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "20157f14-0f21-42bb-aaee-ff62897e8a55"
        },
        "item": {
          "id": "09e05b88-e042-4ef3-8210-4a8f59ee83ff",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "73c210f1-1c0b-42a2-9573-c0e1bf37a088",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1158,
          "responseSize": 1801
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "334b41df-7526-4e02-b9a7-9cc7f4a1e1a3",
        "cursor": {
          "ref": "2de54deb-cdc3-4ba1-b661-8ad925958767",
          "length": 251,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "59aa5907-3976-449c-a8f4-031fa3ff06df"
        },
        "item": {
          "id": "334b41df-7526-4e02-b9a7-9cc7f4a1e1a3",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "b2a62f65-d7aa-42a6-bbf9-9304379e2df2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1341,
          "responseSize": 1787
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff25e10-ab9a-4081-af22-48f85a9ffb32",
        "cursor": {
          "ref": "510f2885-83fc-4aa6-80f7-39e7c0cfb5ef",
          "length": 251,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "42bc7184-cf47-40b9-8746-36911f6f90de"
        },
        "item": {
          "id": "1ff25e10-ab9a-4081-af22-48f85a9ffb32",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4bcd6d7d-62e3-479e-835f-f23fb2cb1ce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 987,
          "responseSize": 1785
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefc9b50-1c2a-4792-9309-779ba42e9ef5",
        "cursor": {
          "ref": "e507f468-3979-49ab-82a6-29dc2e37c169",
          "length": 251,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "6d3526a4-25ea-4b9c-b33e-98dd234f705c"
        },
        "item": {
          "id": "cefc9b50-1c2a-4792-9309-779ba42e9ef5",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "7a3d643e-09f1-42a3-8f60-ab561778d966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 705,
          "responseSize": 1786
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c00f972-3ff7-407f-813d-9fac62c879fb",
        "cursor": {
          "ref": "b0e38f92-a0af-442f-8f4b-e971d7cada81",
          "length": 251,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d0f31a22-6f6a-4dad-9da6-be64cb5c1fbd"
        },
        "item": {
          "id": "4c00f972-3ff7-407f-813d-9fac62c879fb",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1e46ddfd-15ea-4f33-8781-1980bdb82dc3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 704,
          "responseSize": 1817
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0e25628-3944-4228-b4fd-27a4d66d5063",
        "cursor": {
          "ref": "5b59a1ca-f292-4bd0-9e42-e8281b6d9c26",
          "length": 251,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "f8000ec3-7086-465f-a392-195740a44d40"
        },
        "item": {
          "id": "a0e25628-3944-4228-b4fd-27a4d66d5063",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "f4a26b36-7ee8-45ef-aa9c-2e39955b38fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 856,
          "responseSize": 2160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b18de0c9-ab88-4146-8e73-c48390928ed6",
        "cursor": {
          "ref": "b1183d31-1045-474c-9430-4ad8a18543f6",
          "length": 251,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9dbeec07-1e41-4996-9fd0-3ff5005e2ccf"
        },
        "item": {
          "id": "b18de0c9-ab88-4146-8e73-c48390928ed6",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "a842e50b-439a-4dd2-95c9-020acc49b976",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 643,
          "responseSize": 2146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8736e25-9bc9-45f0-add1-f1df7ad3ad3a",
        "cursor": {
          "ref": "f6747c86-5960-47cc-8758-f279a92a1dea",
          "length": 251,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "f1065864-9cec-4374-a172-582aee42b36b"
        },
        "item": {
          "id": "d8736e25-9bc9-45f0-add1-f1df7ad3ad3a",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "09415db1-e327-4202-b2f3-3d33ee2b3060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 737,
          "responseSize": 2144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cadd57be-013a-44a5-92d4-b504e02f0315",
        "cursor": {
          "ref": "d5040854-9cd4-46fb-8a98-827ba5ef2be1",
          "length": 251,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "3788b588-649e-47ff-963c-6f24cdc830cf"
        },
        "item": {
          "id": "cadd57be-013a-44a5-92d4-b504e02f0315",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "d5038700-d241-40db-bd46-dde28bec8402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 691,
          "responseSize": 2145
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf473738-0dc9-4c3e-8645-be0ca1eb15ab",
        "cursor": {
          "ref": "d8f3d17c-e519-49b0-a580-737ee52bdd67",
          "length": 251,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "18242015-42f4-47d7-88fc-e83c719800c0"
        },
        "item": {
          "id": "cf473738-0dc9-4c3e-8645-be0ca1eb15ab",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "46d7728b-403d-4749-9c0c-edf2902957ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 2166
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6954a55e-c611-4198-8416-df5b74bc0494",
        "cursor": {
          "ref": "b0886c37-a592-4036-a59a-a38d2bd780ae",
          "length": 251,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "a0ec787b-1ffe-477b-ada7-35310908c2f6"
        },
        "item": {
          "id": "6954a55e-c611-4198-8416-df5b74bc0494",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "a83a180d-e49b-4004-b879-cfe9cd36ba5c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 859,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c75cb86-0ed6-4d25-85ee-d865b5cc3d83",
        "cursor": {
          "ref": "36aeb0fb-d79e-4ef2-a8b8-51d3bf4cfdae",
          "length": 251,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "95c0b0c8-12d7-4bb7-95bb-8cb325ce6041"
        },
        "item": {
          "id": "9c75cb86-0ed6-4d25-85ee-d865b5cc3d83",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "c3be0b5c-464e-4006-8331-7daca0cfd898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1394
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bb85584-a678-42f4-bff6-83f63d86774b",
        "cursor": {
          "ref": "b29b0fdb-2a59-466b-be1c-e5f5d1d35093",
          "length": 251,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "cb164492-ac6e-4c27-84f5-ec81ef0a63c3"
        },
        "item": {
          "id": "5bb85584-a678-42f4-bff6-83f63d86774b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "f5d976d1-8b99-4db5-bc29-ba4e5cabc92b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 398,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd33cebe-fa00-46d0-b0ce-5c49b0eba51d",
        "cursor": {
          "ref": "e8cd7bd9-010a-4bd3-9905-95fd6271aef6",
          "length": 251,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "7c57be8b-bed9-47cf-bd44-4f9ef1c9e77d"
        },
        "item": {
          "id": "fd33cebe-fa00-46d0-b0ce-5c49b0eba51d",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "ee8c42da-4ea7-4208-aca5-53dfef54c58c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 384,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15d069d9-393d-4863-ade7-704b74514245",
        "cursor": {
          "ref": "c875a8aa-b409-419e-99f1-24502ffdf36e",
          "length": 251,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "09b2975f-9555-4390-a69a-8263bff33805"
        },
        "item": {
          "id": "15d069d9-393d-4863-ade7-704b74514245",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "701dd089-2c11-4ee7-b8d8-a98289f28fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 386,
          "responseSize": 1374
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8477bb75-7c65-4d2f-a53c-a98c2ad159d3",
        "cursor": {
          "ref": "c07e3766-a66a-4272-a760-b991e19ed570",
          "length": 251,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "4e94f0de-36e0-4619-8a2a-54da7f3303dc"
        },
        "item": {
          "id": "8477bb75-7c65-4d2f-a53c-a98c2ad159d3",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b89c3aa3-4935-4e59-ab09-5c46515efc2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 402,
          "responseSize": 1400
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b092b0e0-0efb-4f54-8874-ace10a1064e8",
        "cursor": {
          "ref": "9ec35a88-146d-44fe-b269-85af89ba8b73",
          "length": 251,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "11a31df1-ca9b-4009-8751-70ab42ef6ffd"
        },
        "item": {
          "id": "b092b0e0-0efb-4f54-8874-ace10a1064e8",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "e3f270ac-dabe-467a-b44e-4616c403e98b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1430
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf42fbd-7a94-4a60-b230-fcafc111ca01",
        "cursor": {
          "ref": "c8436e21-14d8-4dae-865f-8c710a56f4ad",
          "length": 251,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "59ee6d0f-a3e5-4980-b225-4cfabe26eea7"
        },
        "item": {
          "id": "fbf42fbd-7a94-4a60-b230-fcafc111ca01",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "20114c00-909b-4bd3-8688-97c646b2168d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 1373
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233f2423-da83-493d-bfec-0a3dea934c0a",
        "cursor": {
          "ref": "e94bdd9c-9321-4e56-be66-df6e1c49ee91",
          "length": 251,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e5637606-6d98-4518-be9c-43a333e3cbdc"
        },
        "item": {
          "id": "233f2423-da83-493d-bfec-0a3dea934c0a",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c7afa821-4009-4ca6-be21-0ab468b51b94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1874
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08cedd04-ac90-4621-b38c-688143ff3da5",
        "cursor": {
          "ref": "0bccf984-8a98-401b-98e6-db06b26e7aa3",
          "length": 251,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d13aed65-b3ae-4df6-9b6c-051fc265bed1"
        },
        "item": {
          "id": "08cedd04-ac90-4621-b38c-688143ff3da5",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "c8a71bf1-151c-44d5-8bd1-25a357659027",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 416,
          "responseSize": 1673
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f772133e-6371-4af5-ae60-3a28cb5bde19",
        "cursor": {
          "ref": "f4ead928-cf90-472e-83bb-f5a59af28c69",
          "length": 251,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d62fb66a-0f0b-4254-91fd-672f8ddcaf8a"
        },
        "item": {
          "id": "f772133e-6371-4af5-ae60-3a28cb5bde19",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "6c574a61-0e16-49fc-aee9-a61ff3b62df9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62347d67-c68b-435b-be19-aece516ea19b",
        "cursor": {
          "ref": "4aedb22f-64b7-4d93-8d32-2df4b4c708e3",
          "length": 251,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "107f5b12-3b25-48ce-82b5-82c151acd948"
        },
        "item": {
          "id": "62347d67-c68b-435b-be19-aece516ea19b",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "4b7e8961-557c-4bc8-879b-44616bad614d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 391,
          "responseSize": 1672
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3b3ba3b-1fad-4c95-b44a-303777e59531",
        "cursor": {
          "ref": "2ceadc3d-ce8a-4e40-94bb-628f18a63121",
          "length": 251,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "c3ce1545-78c5-4d4d-b105-97c5d1e11b92"
        },
        "item": {
          "id": "b3b3ba3b-1fad-4c95-b44a-303777e59531",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "68d24139-9e51-4450-8182-81336f11b527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97908e3-1757-4f1d-8a3d-9365a73d0956",
        "cursor": {
          "ref": "850a265a-1cbd-407c-85d8-6d8a6c57ff8a",
          "length": 251,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "e24c5b22-7c89-41d3-b1ab-6ca1ab4f31c7"
        },
        "item": {
          "id": "e97908e3-1757-4f1d-8a3d-9365a73d0956",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "bd13c625-b0c6-40d6-9b4b-05b5e50d11a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 382,
          "responseSize": 2209
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10429169-816b-4f92-b4be-9005bf7b6abb",
        "cursor": {
          "ref": "d5d7c7e7-abbd-479c-b930-a38a3018d979",
          "length": 251,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ce075c19-e875-4f26-8447-edd731d79818"
        },
        "item": {
          "id": "10429169-816b-4f92-b4be-9005bf7b6abb",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "e45ada95-78e4-431a-a2a2-833da5384d25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3059b761-3003-40c3-b1d2-c96b0c109233",
        "cursor": {
          "ref": "e77a5116-0831-40ae-b19e-feae30715750",
          "length": 251,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "062394ba-34c5-4c60-ba49-7aab6d61ff14"
        },
        "item": {
          "id": "3059b761-3003-40c3-b1d2-c96b0c109233",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "3504e053-1970-454a-86cb-a938497c78ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 2193
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220875ad-fa4a-4105-8e55-81820a60836b",
        "cursor": {
          "ref": "c309c297-7b7a-4b8d-9cd5-6b5e6fe18cd0",
          "length": 251,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "2024b6c3-dc99-4e1e-bba5-221bc303ed22"
        },
        "item": {
          "id": "220875ad-fa4a-4105-8e55-81820a60836b",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "9cdaf0da-c784-47ce-b76a-49972af32318",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 2194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10c55ed5-3125-411c-a840-99dcbd3f8983",
        "cursor": {
          "ref": "77ca2c21-4da0-44a6-8838-e22e4c28c6e5",
          "length": 251,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "8b1cd394-e2f6-4765-bd83-bb694863f26d"
        },
        "item": {
          "id": "10c55ed5-3125-411c-a840-99dcbd3f8983",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "d6eda202-5faa-4f54-88db-8cd6e12c970f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 378,
          "responseSize": 2215
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05cca8a8-bdfe-4a18-a6fb-4342148ab613",
        "cursor": {
          "ref": "b66827af-ef5e-437f-bfd1-6251a36ca05a",
          "length": 251,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "05abe8dd-6e36-4f4f-89be-55345d700c4e"
        },
        "item": {
          "id": "05cca8a8-bdfe-4a18-a6fb-4342148ab613",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "99945e19-62dc-46f0-b76f-c784ab593dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 389,
          "responseSize": 949
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca4b560d-b415-4c35-8134-8abf437d3b93",
        "cursor": {
          "ref": "2c3af41b-e863-492c-b9e1-c40ab2cacac3",
          "length": 251,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "a42b2dee-ccad-4623-b995-f0d857651a9e"
        },
        "item": {
          "id": "ca4b560d-b415-4c35-8134-8abf437d3b93",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "0a04da03-6218-496b-a8da-0bdf4204f197",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 357,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be79076-75ed-4475-91d7-d5ed155769cc",
        "cursor": {
          "ref": "37f51578-d7ec-4409-a38e-54f0326b1553",
          "length": 251,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b17ad954-2e8f-4433-9554-82448e004b5b"
        },
        "item": {
          "id": "6be79076-75ed-4475-91d7-d5ed155769cc",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "ae0a0468-bc3c-4cb3-8df0-b3b2633343b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ae4ea18-bd64-4e51-a9cf-24276ddd56ce",
        "cursor": {
          "ref": "ed6ca0dc-f89a-4a0c-a63c-89b459fe002d",
          "length": 251,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "da3be500-2273-4920-8345-20ad731c2527"
        },
        "item": {
          "id": "4ae4ea18-bd64-4e51-a9cf-24276ddd56ce",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "82e24fa9-5ad1-40e5-935d-4c89d835e4a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 960
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c181a6a9-98ec-4b2e-b9a4-62f86db38807",
        "cursor": {
          "ref": "c639726d-fe6b-4476-9bb1-eac96c71f024",
          "length": 251,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "6b1646e3-5b55-4bec-8c4a-cd557eb44002"
        },
        "item": {
          "id": "c181a6a9-98ec-4b2e-b9a4-62f86db38807",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "0623bb80-3fe1-4301-8276-a311506bc641",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 430,
          "responseSize": 962
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2cd115-7d20-4e52-ae57-3d8c8a52cead",
        "cursor": {
          "ref": "568e56e0-98ee-49aa-897d-8201c0ea50cc",
          "length": 251,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "3cda19f3-db2f-429b-849b-07eab7df2ecc"
        },
        "item": {
          "id": "5a2cd115-7d20-4e52-ae57-3d8c8a52cead",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "274c30e8-0968-421b-94e3-77f5abf2e2ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 375,
          "responseSize": 966
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9e69abd-4156-4860-b7c0-89a526905247",
        "cursor": {
          "ref": "49efe43b-334a-4f77-9f53-c96596634b8f",
          "length": 251,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "581e8f5f-aa0d-49eb-ab5d-006a9c69caa1"
        },
        "item": {
          "id": "b9e69abd-4156-4860-b7c0-89a526905247",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "9323736c-25b6-4d35-b6c6-38a699eaa661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 379,
          "responseSize": 1307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b28edc0-1e6c-456d-be36-55e0488aa5c7",
        "cursor": {
          "ref": "37a093a0-d0d9-4893-8634-413d76dc0ce7",
          "length": 251,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "4398cab5-6810-439d-b174-7dba100fb23e"
        },
        "item": {
          "id": "0b28edc0-1e6c-456d-be36-55e0488aa5c7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8cd5ef2a-666b-4ea6-a089-ba82a74f5dbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2ae5543-968a-49a2-8263-5fcb3dda7da2",
        "cursor": {
          "ref": "98c04e5a-f315-41cc-9a2e-0ea8b06e445b",
          "length": 251,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "fdf356aa-3144-4402-9b06-be0e1d0bdb68"
        },
        "item": {
          "id": "e2ae5543-968a-49a2-8263-5fcb3dda7da2",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "2322744e-f26b-4f37-afe3-97145f85a22a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "028e3dfe-49fe-453e-b70d-8b00203674fb",
        "cursor": {
          "ref": "8c32733f-2c3b-4826-a626-a7c18e8b9f44",
          "length": 251,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b00311d4-d889-4bdb-b337-f342265d54af"
        },
        "item": {
          "id": "028e3dfe-49fe-453e-b70d-8b00203674fb",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "0285eb6f-4860-4598-a5d8-2533be22a5b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13649494-a3af-47a8-adb2-7ed1296d4514",
        "cursor": {
          "ref": "bc831a19-8677-4b6e-b33b-9be13211685d",
          "length": 251,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "d4c95425-3a94-4f02-a5a8-5c73d16424ec"
        },
        "item": {
          "id": "13649494-a3af-47a8-adb2-7ed1296d4514",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "f5c49b4f-019c-4ed2-89f0-9c99deedec31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 372,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a886c6b0-fa23-42c7-8f55-f0546165bc1e",
        "cursor": {
          "ref": "d3f4929b-21af-4ab7-bb2a-f75335e13a61",
          "length": 251,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e0406c77-416a-4447-ae1d-7be491e546bd"
        },
        "item": {
          "id": "a886c6b0-fa23-42c7-8f55-f0546165bc1e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "aa48fa1d-f7fe-4365-8d87-5a365046b97c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 405,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a560510-e1bc-4437-9a1d-8f0df8a469b7",
        "cursor": {
          "ref": "cd1c70e5-8f77-4e30-a895-4f827563ddff",
          "length": 251,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "2820286c-0d7f-4141-8e76-6aee79bb55e9"
        },
        "item": {
          "id": "2a560510-e1bc-4437-9a1d-8f0df8a469b7",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "5800674c-3c09-4379-974d-b356f94d00cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 406,
          "responseSize": 1344
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26a344de-5fda-45cf-8f32-52c0b6e0c78c",
        "cursor": {
          "ref": "f2015133-7104-43f4-bcee-a3279589d007",
          "length": 251,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ba1a2d17-f152-4b4d-b6d3-d839cca26476"
        },
        "item": {
          "id": "26a344de-5fda-45cf-8f32-52c0b6e0c78c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "591a6b59-03e4-4f28-a5bc-4319e011be12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 394,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8b1cdf-c010-468d-8258-2898afdb097d",
        "cursor": {
          "ref": "a2572683-9c38-49f4-80e6-b60799008fbb",
          "length": 251,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6d73f76b-5fb5-4742-b929-5ea3c7445871"
        },
        "item": {
          "id": "cc8b1cdf-c010-468d-8258-2898afdb097d",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "dcc5491f-56d1-4f4a-9bea-4a0437b6edfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820af4f6-b0ea-4954-b892-0d8cd8628bb7",
        "cursor": {
          "ref": "1e887af2-0c3b-482d-9653-bcd450ae81b8",
          "length": 251,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e4ccb3fd-b09d-472f-89e1-4ded238bbd17"
        },
        "item": {
          "id": "820af4f6-b0ea-4954-b892-0d8cd8628bb7",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "ada5b327-76dd-4c49-917e-2109f8d20d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1318
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b7dc9c2-3a21-4940-9555-8409f46ae814",
        "cursor": {
          "ref": "6d4a902f-fac2-4bca-8708-ded0273d5be4",
          "length": 251,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "da426f4c-433d-4e49-8aa0-4852a2ea8669"
        },
        "item": {
          "id": "6b7dc9c2-3a21-4940-9555-8409f46ae814",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "672eeaee-d461-4dd0-b78a-6b9b451724d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 393,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22a79ecb-6604-468b-9026-50fdfa058c43",
        "cursor": {
          "ref": "e646bace-e6ba-4311-93a2-c1e709e91e58",
          "length": 251,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "39112c0b-ff50-4e80-b066-63227123476e"
        },
        "item": {
          "id": "22a79ecb-6604-468b-9026-50fdfa058c43",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92734621-d330-471c-ad2b-9a80a09b6c03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20a891ee-56fb-4a9a-b99e-ff53908cdec0",
        "cursor": {
          "ref": "21f27105-d2d4-495a-a944-d51e6fdc4cd1",
          "length": 251,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "272ddadc-652e-430c-9956-0b9648590f5b"
        },
        "item": {
          "id": "20a891ee-56fb-4a9a-b99e-ff53908cdec0",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "f596babd-a3cd-4ff7-b7b2-0d6747dfea12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 409,
          "responseSize": 1298
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15e28621-8953-468d-8b8d-96e6a8c528d7",
        "cursor": {
          "ref": "1ab9b2e4-fc2f-4b7d-ae95-bd96f28cd484",
          "length": 251,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "780ee50c-4b36-441b-a8df-37bb1ebe576f"
        },
        "item": {
          "id": "15e28621-8953-468d-8b8d-96e6a8c528d7",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "63be92f1-e1f8-414c-b0a3-d6c3754188e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad588ff1-c05a-4799-8c18-cecfa6b24723",
        "cursor": {
          "ref": "dddc135b-592b-4e32-8731-eab0aa354f8a",
          "length": 251,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "00217803-4982-4b26-9b04-233f191a34f3"
        },
        "item": {
          "id": "ad588ff1-c05a-4799-8c18-cecfa6b24723",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "aac7f3dc-6908-45b5-92d2-261139f55a15",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1233
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "023643bf-f595-4005-ab48-08b234c05f7c",
        "cursor": {
          "ref": "1960e680-4779-47f7-b2cf-c43076f305d7",
          "length": 251,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "8b9569db-3e82-4d96-afab-637eb3b1d50f"
        },
        "item": {
          "id": "023643bf-f595-4005-ab48-08b234c05f7c",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "a8de7e00-1e70-4f1e-a28a-b5fe26e57050",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1234
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2da405fb-6c95-4195-b8d4-e8bd8c9b21ab",
        "cursor": {
          "ref": "9a78d4e8-e6da-4c1f-bd1f-6d336d688acb",
          "length": 251,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "22b02a85-800b-49ff-833a-9b9decc8479f"
        },
        "item": {
          "id": "2da405fb-6c95-4195-b8d4-e8bd8c9b21ab",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "96fda18b-bcfa-4599-b528-3864fbb94e2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 390,
          "responseSize": 1304
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e81d280-40e9-44fe-97dc-4c132eeab85c",
        "cursor": {
          "ref": "c2a0bc02-2aa5-4158-bdd6-988f0320a3fe",
          "length": 251,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ad3c46dc-9f33-4595-80b8-78e7160437e0"
        },
        "item": {
          "id": "1e81d280-40e9-44fe-97dc-4c132eeab85c",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "fb8a434c-7415-4051-be66-adeb906e00d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e7ea3dd-b291-4ca9-8d89-15eb65329ca7",
        "cursor": {
          "ref": "81ed6227-523f-4396-b444-e9e5f14601ce",
          "length": 251,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5e9b08d1-49c6-4015-9753-f5441cc7b91a"
        },
        "item": {
          "id": "9e7ea3dd-b291-4ca9-8d89-15eb65329ca7",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "b2e0f2d0-286a-4577-af22-3bf3fa24c7df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 366,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "286f9ad5-e661-4cc3-bb21-d4427a1fb743",
        "cursor": {
          "ref": "ea5eb34f-2e41-4fb6-aa7c-2a019af46b19",
          "length": 251,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "07116e9f-669f-4223-95b0-32aa1bc73569"
        },
        "item": {
          "id": "286f9ad5-e661-4cc3-bb21-d4427a1fb743",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "b9355b94-60de-4b87-b234-8cc3bd33c9af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 1194
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fa1880e-5ef3-4c2a-b043-69e2038d6fa1",
        "cursor": {
          "ref": "eef17e49-0080-40dc-808b-c912b84a055f",
          "length": 251,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "13b48bef-b357-4306-a543-1d826ec58e82"
        },
        "item": {
          "id": "7fa1880e-5ef3-4c2a-b043-69e2038d6fa1",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "bb5097ae-c534-4632-9755-2cbf6edda3fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 1195
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2335f94-cb5b-4302-b441-3b053487d7a8",
        "cursor": {
          "ref": "31b22cf5-1ff6-424a-8c85-4031f85420c9",
          "length": 251,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "dc6d82d4-9203-45f8-9674-f1dcdd9305b8"
        },
        "item": {
          "id": "c2335f94-cb5b-4302-b441-3b053487d7a8",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ab4b9662-1778-44c6-bea7-921b6a1b2bc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 356,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b339908a-428a-4695-99e7-03715a229d17",
        "cursor": {
          "ref": "8d3ad76f-041e-4ccb-a268-8ad584964d6d",
          "length": 251,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "89f15e3d-d490-401d-8412-c3c4144c1cf5"
        },
        "item": {
          "id": "b339908a-428a-4695-99e7-03715a229d17",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "03f5b5e0-1479-4849-9b93-65347cb62b7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5db3b7da-1923-41d6-8201-ce8d6e95feca",
        "cursor": {
          "ref": "7d9f4d0a-7036-40c5-b470-918c3e2e0ed9",
          "length": 251,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6cc7428a-82ae-4ee8-8d75-9bed80fdc74d"
        },
        "item": {
          "id": "5db3b7da-1923-41d6-8201-ce8d6e95feca",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "fd700888-8f0f-4ba0-b57c-c8ef9381a1b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 397,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3486b94-0e82-44a4-834a-6ea0c74dc942",
        "cursor": {
          "ref": "91b6b38d-186f-4aa7-9059-05fd10ca90c6",
          "length": 251,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9ed09d5a-f60c-4639-a3ed-7f36d3d9cb42"
        },
        "item": {
          "id": "b3486b94-0e82-44a4-834a-6ea0c74dc942",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "3711e6be-ad09-4b23-90b2-369fb16eb2b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1323
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7704e42c-dccd-42f2-b64a-735a9b95dc8c",
        "cursor": {
          "ref": "c0a0dc8b-c694-4394-80c2-00f7b5e6c144",
          "length": 251,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "a255c857-ac96-4662-8963-314994ed623c"
        },
        "item": {
          "id": "7704e42c-dccd-42f2-b64a-735a9b95dc8c",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "93bbcc2c-4db9-48ee-ba85-d296bd6fc744",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1324
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4025fdb-382e-42a4-9b73-91a857a86db6",
        "cursor": {
          "ref": "78f046d1-bcf0-4ba9-84f7-1271ba13526b",
          "length": 251,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "d7ca7219-9a97-4205-9fa9-92cd4de98654"
        },
        "item": {
          "id": "b4025fdb-382e-42a4-9b73-91a857a86db6",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "6e11fcdf-3bab-4217-8750-20e88cb324d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 351,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c85c0e3-6326-4c8c-816e-36118291179b",
        "cursor": {
          "ref": "85a18199-4508-420b-b0f4-af163f6c6577",
          "length": 251,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "58c6f8b2-8f41-47a4-85b0-d2cb82f6a9c8"
        },
        "item": {
          "id": "4c85c0e3-6326-4c8c-816e-36118291179b",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "9c7cfb4d-39b9-403b-afb5-03eeee18d78c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 363,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b6770e-5bb0-45a5-9ca9-71c541588cd7",
        "cursor": {
          "ref": "cadb6d78-4e5f-4072-948f-2470e8d47d02",
          "length": 251,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "96e1b49d-bd1c-4ae8-9518-c9a3838d6339"
        },
        "item": {
          "id": "f0b6770e-5bb0-45a5-9ca9-71c541588cd7",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "97ac05ee-ab74-42c5-97a2-b63c3e75cad5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21e07473-0752-4f01-aa1a-9443864a8f5b",
        "cursor": {
          "ref": "81a4d624-8346-4136-908b-ee9252d20000",
          "length": 251,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "66282704-8775-4a75-b9f1-41106e95ea60"
        },
        "item": {
          "id": "21e07473-0752-4f01-aa1a-9443864a8f5b",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "2047c867-8d81-49c9-b5fa-f03683446c39",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 357,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f820ec0-5f91-47da-8831-9dc94b3af15d",
        "cursor": {
          "ref": "804c5a4a-33e4-4686-bd30-9605f6e5e546",
          "length": 251,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "6613e5ee-bdc7-4c9d-b69e-a8c8d329b0eb"
        },
        "item": {
          "id": "4f820ec0-5f91-47da-8831-9dc94b3af15d",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "76735aa9-e20e-41e3-b4b5-7f19dda0a2dc",
          "status": "OK",
          "code": 200,
          "responseTime": 408,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7703e95f-8618-45db-b890-f8545b959126",
        "cursor": {
          "ref": "38799b51-010c-4b84-ab57-b8446f292042",
          "length": 251,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "eb7b1b86-b58b-4445-a53f-48174153fef6"
        },
        "item": {
          "id": "7703e95f-8618-45db-b890-f8545b959126",
          "name": "credentials_verify"
        },
        "response": {
          "id": "95f77ae2-49c9-4939-a663-bc0a980e92c6",
          "status": "OK",
          "code": 200,
          "responseTime": 2381,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ce8a913-e1ea-492a-b6a1-58560547a0aa",
        "cursor": {
          "ref": "5d22e28f-6ac9-43f0-96bc-53f82a96ce50",
          "length": 251,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "979673d9-923f-4824-908b-b86f773d1542"
        },
        "item": {
          "id": "9ce8a913-e1ea-492a-b6a1-58560547a0aa",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "6d46d5cc-b1ce-4c9f-a751-d809b66a59dc",
          "status": "OK",
          "code": 200,
          "responseTime": 1567,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
        "cursor": {
          "ref": "8143379b-777f-44ec-8af4-37b12d9c0acc",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94d8004c-e47f-4762-944e-b3b3577b4927"
        },
        "item": {
          "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ad4a4c3-532e-4cb2-92c6-6873a01a9025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
        "cursor": {
          "ref": "8143379b-777f-44ec-8af4-37b12d9c0acc",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94d8004c-e47f-4762-944e-b3b3577b4927"
        },
        "item": {
          "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ad4a4c3-532e-4cb2-92c6-6873a01a9025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
        "cursor": {
          "ref": "8143379b-777f-44ec-8af4-37b12d9c0acc",
          "length": 251,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "94d8004c-e47f-4762-944e-b3b3577b4927"
        },
        "item": {
          "id": "6428f2c3-47ce-4607-a8b6-58cf7808c6dd",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "8ad4a4c3-532e-4cb2-92c6-6873a01a9025",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d7a5a64-dbbb-41cf-8897-6686bcdd951a",
        "cursor": {
          "ref": "3ce83987-7a12-4b36-a481-a673cb7b17cf",
          "length": 251,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "96b87002-299b-4e54-b2ca-82cb1aaf0bef"
        },
        "item": {
          "id": "4d7a5a64-dbbb-41cf-8897-6686bcdd951a",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "4521019a-6699-4eb1-bb92-b405c9d6a6b6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 359,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173d4662-0a0e-4356-b142-ce5839290f6b",
        "cursor": {
          "ref": "af13477c-6316-41ed-be9f-1538cb3dbc1e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ff4fea4e-efd9-4b47-8215-49998ab824ee"
        },
        "item": {
          "id": "173d4662-0a0e-4356-b142-ce5839290f6b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5cc71d63-6457-4f92-b34d-5482d35e9555",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "173d4662-0a0e-4356-b142-ce5839290f6b",
        "cursor": {
          "ref": "af13477c-6316-41ed-be9f-1538cb3dbc1e",
          "length": 251,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "ff4fea4e-efd9-4b47-8215-49998ab824ee"
        },
        "item": {
          "id": "173d4662-0a0e-4356-b142-ce5839290f6b",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "5cc71d63-6457-4f92-b34d-5482d35e9555",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9510a30-e62c-41e3-bbfc-ed08fcb2fa75",
        "cursor": {
          "ref": "757368eb-3e96-463f-a40f-c73d29ea238a",
          "length": 251,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "c298f062-984e-4b01-bcea-0244e73755c7"
        },
        "item": {
          "id": "e9510a30-e62c-41e3-bbfc-ed08fcb2fa75",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "80038806-0d20-4400-a80d-2e94ec771f82",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961d323a-84ff-4648-bab7-5a58daf11b1e",
        "cursor": {
          "ref": "9f383b25-8135-46f3-a083-4ff91dd0707f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04cd8d6a-0dae-488b-bab4-662cbc45a4bf"
        },
        "item": {
          "id": "961d323a-84ff-4648-bab7-5a58daf11b1e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6457be4e-7199-460b-a8e6-4f573bdbffe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961d323a-84ff-4648-bab7-5a58daf11b1e",
        "cursor": {
          "ref": "9f383b25-8135-46f3-a083-4ff91dd0707f",
          "length": 251,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "04cd8d6a-0dae-488b-bab4-662cbc45a4bf"
        },
        "item": {
          "id": "961d323a-84ff-4648-bab7-5a58daf11b1e",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "6457be4e-7199-460b-a8e6-4f573bdbffe0",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 66,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b2a911-a0f3-481a-9443-e16d9bb3e18d",
        "cursor": {
          "ref": "f4f85836-6dbf-4f42-887d-88806f8c5e23",
          "length": 251,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "ced483a7-3377-4016-a55c-dcde8303e66a"
        },
        "item": {
          "id": "d5b2a911-a0f3-481a-9443-e16d9bb3e18d",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "2568047b-8645-434c-afa1-922a0124c428",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 546,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}