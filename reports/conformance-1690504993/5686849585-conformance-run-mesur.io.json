{
  "collection": {
    "info": {
      "_postman_id": "4bd78d4a-8f35-432a-a4e9-9e5a47c7c93c",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "7aaf5a72-a52e-458e-a95a-1a3df04eb48a",
        "name": "Clear Cache",
        "item": [
          {
            "id": "cc4277f8-e864-4fae-b4d2-87aa4f761f04",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "105ee21b-f106-441d-ab5d-ed782f0b0d8b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "2c871fe9-629a-489c-9bb0-ab550b436e2e"
                }
              }
            ]
          },
          {
            "id": "a96311d9-6423-48a2-be6d-511e8ca86291",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8d15bf1a-e671-48b3-98b4-9347b5de6639",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "4629bd0d-b7e9-493d-b373-aec7d02e9e63"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "48869507-3674-4257-94b3-08badb02a9b6",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "6e4d36f9-9ccf-4db8-81e4-e4ea68b52a47",
            "name": "Positive Testing",
            "item": [
              {
                "id": "590abe2e-017d-42d8-9f65-39d52856fb41",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "553096ed-2d29-4a68-9d75-55c9fc6dddc3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da0cf88a-cc3e-42cf-b3b0-bd34fb520f1b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "31688656-fd78-460a-97bf-e38c53d76c56",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f12044b-c0bc-4db8-bd7a-6b34236407a0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bc3addef-d68b-4ef3-a74b-959eb5dab2b0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ab5b3230-bbe6-494c-b754-7705c6e1ea74"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0a38b349-3f6a-4ac7-ac16-d0d34aae802e",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "4e114c40-8d6b-4bde-b151-e903657076b8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "75a5650e-8a47-4515-9f44-8fae3f8bbf34",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f1cca346-1ff7-4093-8228-5ced2dd36540"
            }
          }
        ]
      },
      {
        "id": "0e66765a-1bac-4096-ad9e-e63d4693ce62",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "626d90c0-c44e-485c-82be-f009cf2231cd",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8a07d8c6-379a-4df5-bb98-aae2147861a8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "b9b1e81d-e8ec-482d-9597-ff77b61c1866",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c769e136-1155-48e3-9e15-5b2c07733163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72ab12cc-90cf-4fa1-af3c-882fc5594b4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f031e32d-f9f3-47a4-a27e-14dadb48108a",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5786eebd-e6d4-48ab-9026-8d619a297413",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1e258262-91c7-41bb-9dbc-b335e1f13925"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dac1baca-5a57-4a70-a447-1f309e984057",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4f3eb1f-9db7-4aba-a49d-2c0ab50d3522",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "73f48624-968a-46d2-8594-4b7e4dfbce96"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "5b5de482-7e90-47ae-9ce1-97705ff63b9e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "20e70d67-8a36-409c-b1c4-54db815eadf1",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ab34dbb-dd73-48ed-b58b-4387ffffd745",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae3225a3-3bab-4001-92ae-1d1657b1c9b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13095d37-3a2f-4e24-904f-48bbce4014fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7188bc49-521f-47c6-9cca-530483eea7d3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "02757813-4ade-4c8f-8989-aeda6de184ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6b49a513-1ed5-42d5-b390-a467bec73d44",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "4578838b-d012-469a-9cc3-e9cc61359f0e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "081de2fe-8f76-4af0-a9e4-b0a239c1a780"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5917f035-f05a-437c-bdb5-b4b76db76c2f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "59097f12-5f0c-487a-8aa5-25d0fd07e249"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2269677d-c13c-40b2-9733-4bd8907e9754",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1123e439-1d86-42fc-bb47-c7e4787123e2"
            }
          }
        ]
      },
      {
        "id": "fc0ed2cd-4fd8-4ad9-9e1d-42a9bab15cf0",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "363fced9-af38-4d34-89ae-47650fcdc2b7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e3ea0a2d-6c8f-4f8e-b616-58f1bac07dfd",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "deba03dc-e5a9-4a24-9284-61af437c2148",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22f7d62d-c0dc-49bc-98de-e98f19df6b38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e0b3a9c-1b76-4d54-93f8-9068a9726add"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a48b07fa-e327-4f27-88c0-263d9c901f60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cd536097-f780-4d01-8476-6d6d8dfab556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "104464fb-fb83-4688-a0da-7b955496a3c5",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9be9d018-c688-49b7-b9a3-8aa15e6338d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ada6ef2d-b0c0-4b0b-8ae5-6156c87fa4fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e99e3b-b769-46e1-9942-0fdf9bde201d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1e6e8866-86ba-4ec2-b52a-0e1e50ba8548"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8562ff6c-6003-4978-b0fc-bd0d16f0ab52",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bd78da0-be8f-4799-8ea6-2ef7558ecfb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03731a12-4415-4264-b1e7-1e5e08997b91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1563def4-6764-4a9f-a19a-1bb04a86296e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "25f5fae3-e8d5-4657-9524-eec5ad455492"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cccf48b-cdb8-4219-a1ca-16a28eb7d61f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdf6814-66dc-48e0-b73b-79221f747e0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a36e0c2-1a3f-41c5-941b-241661faaacc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d68be6a3-e7d7-4938-a177-414284ae5361",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cf100cad-dacc-4e42-8035-a2497d9a671f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc101c5a-cc55-494a-a36d-0e446604ac21",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b861e298-9c27-4d74-b20c-f50dcd24f428",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911eb510-d7db-4dd7-bff5-dfc0963fb991"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45f5ffb9-d4bb-49b0-8a97-a1e2a1e49ed3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8fb7a484-dc83-4369-820d-7565919c5118"
                        }
                      }
                    ]
                  },
                  {
                    "id": "172ba8b0-c7da-4232-9f7d-01cca2f2367b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "668409d6-faf1-48ce-93ff-ea95dfd35f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4078cb4-3383-4674-9eed-fa3ff5a4d9ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3543b4-7e47-452f-aeca-cfa6ca48dacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a30a8549-ed70-4903-b448-ddb05e061090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e8f21e-a906-43e6-b3e7-35f86fa342fd",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "971d2afe-aa35-49f4-8453-ca4b64d87c04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71539096-7cd6-4cc0-9a94-9fb8afd54b44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "040462dd-e158-4085-a8f1-65eba0de25dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b335b649-3f6f-4ecc-aa91-80c3108104bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4c9b42b-378f-492d-8a01-e6d96493506a",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88dad9fd-3632-4034-b6bf-72ce8546d3a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "892525fc-2e56-4c71-8946-dd9294f2e981"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c144bd-9042-4c21-951f-6e9b7132c0dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1ab058b8-d51c-4c1c-b40f-40670c619f7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13a6ecc3-c86e-4e4b-889d-29d196cb9292",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62ce0d28-aca1-4d48-a3b6-61c4bf3afb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b56cdf02-2f26-4ff3-a871-73fe57e08a15"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3da6659-f039-4c7d-b6f1-ac58a78f0b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29c4e54f-3f88-41c2-abc7-588640e0d76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb0821a-5ef8-47d1-a2aa-8c6fd2695269",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e52efaf1-a3b7-4dac-ad66-e0dbf6617729",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b91ff67-b190-41da-a713-ced5ccb873d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67525ed8-8a70-49c5-a781-1325e556187a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "47052888-3319-40fc-87f0-0f4fb8675ac0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "feaa104d-37e5-4c8c-98dd-59287c0531fe",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9f79c5-b133-4193-b67b-0baefb1853d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7dc452d-9477-416d-8684-d97b6f7eeaac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68df325-e0be-4e5e-9c90-1128809bac45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ac497dc5-ac54-4c35-b157-d0ffdcdc6401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f16d5ff7-bc6f-4d6a-bbd0-1e6fc9052156",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7580c2a-f5b1-4262-8e5f-39fb453fd4c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f00865a-ff0c-4f03-baa7-d9bbbc8bb4e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1289c760-076c-4b7d-b3f8-51e1ba329286",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "244e0198-f493-4349-a28a-a5f6c1736eaa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4de368ff-3531-418e-9264-cfe561a1cf2b",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "24495851-e68d-4c87-ba91-7bbb467b8ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79bad8b0-40f7-4779-b5f4-385517463d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8e1d036-131a-4303-8468-bfeb66957d9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cc20228d-024e-4a36-ade4-6769e74858d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4228ccd-8ae2-41c2-b399-5d2e534f8d74",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7b2a3e8-3ebc-47f8-9d11-f5466b1ec7bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79662fc4-e604-4780-a8fa-53f3066d3c91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c887694-5fc7-4228-bd0a-3ab852364d9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "21857911-7af0-4c7b-a1b4-d4aa77bfa421"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4212af3f-a218-43c5-976c-d6bbea6fd23e",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d6da729-018b-480c-8bde-2d526efb7688",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96eb8499-a713-42a4-9dfd-ec134e915ff3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2e349ca-5b8a-41db-9ce9-c065332ba372",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6ca08745-7a57-46b9-be55-19e52715967e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57525f45-d81d-4a8e-b6a1-830e35f19bf7",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "859945e9-7a1c-45d9-8921-17bb624298bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6761e6f2-af81-4924-8ff4-5eee220e7840"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11bd1eb6-440e-4848-84d5-d4d3b2fd9460",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a2d085e2-d5a4-44b5-b325-dab9d4f7795a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90f132af-8c1f-486d-8e38-ebac453c0e80",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ea7e35-ad8d-43e9-9e5a-04065aa162dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d3e3806-20a7-4aca-b742-e6bb39854e65"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6ed97ec-bd48-4aaf-a84e-d60461fc407a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62441102-5b71-42f2-a832-43a45dd1ec16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fe4915f-e2d9-4e5d-b948-577eafdb3c35",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4f9b22-4c1f-4a0a-86f9-41811492762d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11d09ff1-ac92-46a4-8367-000a5ab162a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b900cfab-2ff3-49fa-aa78-2c08aeee1a6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b63c0b0-f515-4103-aeea-0ea4110272d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09f47e68-61c5-4756-a3ff-59fb32c796f8",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc09a777-a2be-4ba1-a0be-f98e4488c775",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6ff767c-bf92-4c55-8286-bf6d3e79c3ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b583b251-bee1-42fb-acdf-99b48cf1aebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60d6e468-3513-49b1-9b10-34a1326e3b9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23fbcdf5-44c8-4b61-a0b5-19d5c909a00a",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b944bd42-2fe2-48d4-b543-b8e395fd12cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff491ec8-07cf-46d7-84cb-12212aee080d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37013950-5cb5-43a2-9245-6647ed4cc326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "45d61948-9e80-4731-90a5-a9a6a2291fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99810f19-40f6-418d-8a44-3395cc66f98b",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8349bba-c8db-4cec-be86-8a02a55c372f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72dd9381-699f-464d-aed8-fcfd7c0de336"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efa20cce-de32-4800-b9b6-03e5a75c6be0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b0de6084-30cc-462a-9fe8-53a09fe170c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07430079-85dc-426f-81da-0284365da0db",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fccfa0-34bb-46c4-9d55-414b42c179fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "49edd0e8-b645-41b6-bac4-c8a85e062739"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2ae5f3d-5242-4daa-844e-41bab6c815af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70042726-a890-4384-958d-15b696f61b9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "237d834a-bb80-4733-97da-ae61e29f43a8",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc81356e-bdab-44ed-bdb8-68e5b1a8dcba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e1540b4-61a5-4dd2-b7bf-f059f42b2bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb11a6c2-73aa-4aa9-8284-0c6dad27f1e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a308431f-ecbb-424f-8471-722feeac5666"
                        }
                      }
                    ]
                  },
                  {
                    "id": "551b9312-79fc-46d0-94c3-f1f9cc11cc18",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea84f43c-cc3e-428f-aa56-c7d8db65ccb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc7ba704-0c95-4c2f-878b-260fe044ad08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20c5f448-e2dc-4db0-958f-241752a0409e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "90a20eed-e816-4ea1-9050-405010d4a712"
                        }
                      }
                    ]
                  },
                  {
                    "id": "100f78c4-bcb0-41b3-bbde-00660fe5e2ce",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f85eedb-e2ec-4bba-b7e2-c9c9037645d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ece2aca9-9cbc-447a-96c0-503ce387f636"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eedabd73-855d-4e8b-b455-43f5a227d84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d7ad827-f922-42df-952f-2c5bafcd2dc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1db9092-915d-431f-ae8b-ee214c92e439",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b7593f-94fd-4692-aef6-950f1f709942",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e718172-f2f4-49c8-a5be-95155fdd8d6d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fd67477-6f6f-41d4-b388-a350981f0971",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ad9d31d5-712e-493e-90ab-82a837012cf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1360fc48-ab3d-4b95-9e3b-5db94b9d3621",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10dd726a-a754-4b93-8952-165cb522554a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e69406c1-5db2-483c-801d-0f1ee85e7c1b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "932c8c42-aa2a-434f-8de9-ba1549daf1e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "332db194-422c-4ef5-a239-3d37e7420f7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aad3886-6687-442d-8b31-37b9c24d826e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c52e6a3-6fa0-4074-a218-068f0fa28ebe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f76fd1eb-16fe-4ffe-a80b-5da943418839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0edb0798-95ac-42dc-9a33-7611fb5488b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d3cde4-b014-436f-8eef-db6028b4078a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4948d3b1-6bd1-4135-89d2-acc05b726f31",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4ad93be-0b30-43c3-9a0d-c42176e743a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdeb1e49-9993-466d-992a-569dc551e67b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36068080-c6ca-431c-a7be-03ed2ef706c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36840fdb-dc10-4003-a804-eef1c63ccc09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb1b6187-31ae-4b30-9e39-733ce4b0da05",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53c3858e-4230-486b-8276-4955dde7c87a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0f96e195-9a18-4538-b26f-7a16c356c512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f4517bd-a954-417a-ac9d-74a62b7517de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "53487ef6-44c0-41ea-9fa8-64d45c447f8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdfb953e-8dd4-47eb-a4af-cb657aad66d1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a403338-36bf-4b6d-9ea2-0634b8e14662",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37054e57-e354-4f78-a27e-0749e7258287"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cfc552-d54e-48f5-a466-148acd7fdd2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d997ae9-74d9-4321-9d0d-b2b3289ca827"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b652a1d2-3c9a-45c5-87e3-4cfa82091ea5",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd79d346-9808-4043-902e-60ab2fcf8d61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec8ad42a-9b51-40bc-bc3b-4bb389f853f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "026f69d7-2d0b-4c8d-a042-06fb02bb4bbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4a4f24be-71a2-4e07-a552-3371fcbb1e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29c5315a-50a0-411e-8eda-aeaa854f6d38",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8660732e-762c-4d72-80ea-82edc5c69f3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97d6a85-f01e-44eb-8171-564efc659b01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32de4fc6-b21a-495b-ac3c-6d80a9373ca6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0866e40f-523f-4402-9e4c-289448a32283"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10858503-f632-4ac6-ab2d-e6f98445a99d",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f402e64-a422-478c-b9d8-0b20e9bc1107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16cfbfa5-3fad-4a0f-92ca-a85bf74c1034"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec3dd93-3b9c-4709-b670-d87d89493977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cba9261-2212-4338-b78f-b1c62103e608"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbc2f238-4991-46ca-b925-34056abb6789",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0a0bc51-96d9-4120-886f-15a791be95fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67df1756-5792-4583-bd58-0645c6b17ed5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938c4168-defa-46fc-a502-5fee5d68459d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "65b906b8-2884-4a66-8ef6-8cb7a6cc6e95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0f4ce21-8665-48f1-8390-d61d3d057581",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a85fdc54-032f-4c47-bc48-5f6359633370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d5b9f33e-4ac8-4dfd-a5e2-69ce8e83ecc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "945fb191-a390-43e0-abdd-5e467c8ab119",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "b444a9cb-7512-476d-9ba5-790565a5d6a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "667bf9e5-68d5-4490-9e67-35ba7050592b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a7e377f-248a-4f81-980f-e3b1e3a10028",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9317aa82-4c69-480f-9593-f3e3e304fad5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cfa2487-41ea-4ed8-a619-fe83b7a5f890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "52556a9f-e9da-419f-9c48-6662a83404a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c3a8de9-0449-4188-8a3e-bc03e2ae2ac8",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f660995-3cc2-49fc-ba85-6c585e023856",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48069b70-902f-4020-9d6d-875206c6cd60"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02e4d8b0-33f9-4a20-a646-dbac91085cae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "db4e1124-9667-452e-bb73-66967f603b01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0bfec01c-7908-492a-8147-69e18617a617",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf318538-d4b1-494f-aed2-785283cf1c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3725452c-6fef-4940-8923-135678984ec1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c7e2ef4-99fa-43b7-aa3c-2eb3a2fc2eed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "d223cd42-6597-4f45-a904-d4484a5d3c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1bbb275c-362e-49df-84a8-b5b5533eb852",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c61fda7-380a-4d32-bcb4-a9c85b41364f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0943977-7e44-408f-bb71-3f06fbe8932b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b1181ef-636f-46ee-9b61-00c44aa62d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "077a0431-b970-4b0c-ace0-a1acbc4f43a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "461cbc35-a89a-44fe-8910-7c643e51cf22",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c841adbc-d161-4d3f-924c-24828c42c0d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4dc7aa0-3982-4d26-95f5-fb8906e0ba2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c29aa6b2-3e7f-4aaf-85e3-59da24a247ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f1b03d1b-6939-4c08-a2ad-cdcb8aec9553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4133dc-4617-4619-b771-ba594ec6135d",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3c3df4e-235b-4abb-a7ae-deb2b46a68e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c810944-d065-4cf7-98f8-45ceb605da07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8497571e-ac04-48d4-a72e-72e45ce76329",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "505228b1-7b97-4b54-8451-96ca2a39c3b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5def6607-230a-40f7-a44b-a6369f8610b9",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1908419-81d8-44eb-ac45-f598a0412690",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6cd1164-92f0-4e18-a445-73b237bd4516"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e5d8d2b-560f-456d-ac18-9d61ee2d2890",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "53d0f0a4-95cf-4506-9e85-5aa00a9fc053"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5fa2bea-6cd6-48aa-aa0a-19fa547ab513",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0fcdb16c-9491-456a-b96e-b875ed842f3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "078defbb-625f-48f4-bf8a-9b682bd13194"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5749dc3-51ef-4d68-b8f2-443b768df6f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc7b7db7-45da-4738-99e0-5cca140bbf43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32d6bde9-3229-4cde-a8ef-bc4fe7074576",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "746a8caa-8b96-4db1-90c5-48cc9223b243",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98be8ecb-155f-48c3-ae4a-aa9e0652fae9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6449d458-96db-417d-8b08-c64ad3a403c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "6e959852-cd7f-4a2a-9f48-694dd4e553f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f36dcef1-a79f-4676-ba76-faa0cd23ff5e",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "913800ae-05cd-4645-9434-b124b3a961b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e98f1a-3698-4f87-931c-c53e68a154e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9286d83-61e6-43a3-a218-4251d0e73844",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5cacc676-3ee9-4e61-840b-ce5d2c267494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4202f111-a3f4-4efd-b0c7-e6920f64e990",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a3f633d-8b5e-4beb-b9be-d391b081a9d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "412d2886-06a6-48d3-9ca9-982e98b10149"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb60b249-5e1f-4c2f-bf27-edf6bdf822ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "61678aea-134b-41ca-8f6a-ab10d1418686"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9054ff51-6c99-48bc-a58b-4ba002d60fc5",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c98b9213-b44f-49e4-a835-5ae2dddc8c6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "94ff78f0-afaa-4c24-a2e6-487bf8e3f063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42e61c30-6942-48b2-b54c-1cab250369ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "7ed811f1-42a9-4034-860f-4aa51bc1f33a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649780a8-2faa-430d-8af0-6b6d3649b657",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd2b96b-ef35-4ef3-9202-88f393b36a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e120674-d11e-4a8f-85f4-99625db41479"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92eda722-aabb-4798-b8c9-de62fda93b39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c501fa1a-6d0e-41f4-81d6-6b4e112a72d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f57bafa-45cc-4d3c-a5b6-c7e9d311dd17",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b2e871a-2c9f-4647-9e89-f9c46098b696",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d358353-dcb6-44fc-b1c4-9523c500c583"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec5723f-b08b-4ba2-bea8-0d446f55e847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c98b7180-128b-41d7-91d7-56c9fcec93f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e553ef3-a368-4ec7-9b45-652ac3243ca2",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09bbe965-0057-4a02-aafb-261915c6b8c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7298135b-8cb6-4e09-95b4-dc4db09048da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71ad3797-6e89-4922-ad41-9f0c406ab14c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7ea07-af25-41c8-8676-6af06feecf25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33b21832-dbcb-41fa-81f9-d001e3762288",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28299605-7e98-40f3-a44b-7819b43c4632",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "525d578f-29b6-48cc-8c19-a50d52636cc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fd7478e-c7e0-410f-8d66-403ab953b75a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "64d1337b-130c-4cf0-8f4b-220a30c56375"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ea1fb5-da8a-4287-9fdb-70f7017c5137",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38d75f64-8a9f-4f6d-ba78-9dc9904f5df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b74ee544-8f77-4dd1-9ddf-85451a138cb5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "744b299f-6427-42be-a06a-a2aa8adb77cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "33658ed5-ccd8-469b-824c-f2875f806bc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "daa0695e-612a-4161-ba93-16856eff3cfb",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe8de9b-fe41-4b20-a890-5c70542b6fc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a52472c2-9326-4fe7-b645-a27103d0ba14"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb8232d3-3c49-477f-83c9-c490409816f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ee1a1262-2459-41d2-a5bc-933eb8a73e25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132ef11c-6302-47da-a397-f7c8806b3036",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753eb53f-9c75-47b0-a792-4eda9accc8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecd411c2-cbe5-4679-962b-84b542694e46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "102ab0bd-3fbf-4027-a559-e4507688b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb756d14-e312-4a6b-a0d3-d8d17d001667"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e04be64e-5e51-41f1-889b-2fd9c56df4e3",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfdaea20-8f49-4faf-8145-d058c32ac339",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6068f3-0455-421e-b38a-659735da6964"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e78d45e-89af-4621-9e00-35f896648fb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "beba0b94-a57d-4be5-a0e3-ddadd09af76e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34c20d39-0659-4078-942c-d2f0969f4ec2",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "933d3ada-4ef8-407d-83e6-8d1c7a62caf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8051a9a-6617-494f-8eab-3f677107a5ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67a2f31b-5d8b-4ff5-a029-2f68486b028e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a77e23f-d02e-42f6-8ce6-7fd50d576b45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32e0ea4b-f0c1-482f-af86-8ca83d540a01",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c78896c2-fdad-439a-9aba-1a1a54ef0496",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10eea209-f263-4424-bbb8-5ac09b5299ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f215b20b-fb6a-4609-84e3-ec4b92ff6ec2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6369b92c-61fc-4dc9-8898-cf3c1922bea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "767d66e8-02d1-428e-b983-f177d8a124d4",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "263bb0b5-c000-4333-8212-5ce4a0ea9245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae8b4da2-18ce-4f9c-9457-7c82e4fee1c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fe7ec5e-992a-41d4-85bf-da8005cea936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "9036102c-2c59-49a5-93a7-e454805e03b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68300ee4-480d-44ac-9169-0b039676f6d6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "389a9945-3dec-4b42-b907-98037414e5cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b5ee5b1-5804-4a9d-9beb-b236629ad4a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce92d71a-4dec-4c60-b39b-89039cb8ff94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "65b9dcca-5949-43c1-aa0f-92c4c1c7d696"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6f4ddcb-558b-436f-840c-9a6e7beb4c37",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89b66e8a-b73d-4a05-b4d6-3e9247bb0f8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02363e9d-f524-43f4-8ad8-2f4482373932"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a93d79b-2c71-4f50-bf08-494dcd0a0720",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "136ecde9-20e0-42d8-b9e0-51f2911a437d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2870672f-de1f-4dd3-85a2-f08ece9ea4c1",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a84a05f5-79be-4c81-9235-2614138561dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e458563-7a53-4027-9fc0-844dc521dc99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4fb6c52-163d-4552-a154-5289d7f3770e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "44ca91e6-f57d-496b-9d29-c260c399ac5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa70d16-ff34-4855-a6ac-2f58e03db348",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1e2d62-d443-4726-9bec-6d01382b0184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "843f96e8-faf3-4a60-a250-576c0f9941e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b62c9220-0a8f-4f7b-86c2-e73b893c3c61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "bed12785-913f-4cdd-b875-a6e968e7c7fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a5d9dfe-d6bd-477e-8ee4-db5f453ef211",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eff54b15-764c-418f-9fa0-fa903da1c082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4f47f44e-0663-43ae-a065-b785dc11950f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "877dc375-604a-4e86-9bb0-25f7cafeedef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "46dbdf96-1716-41cf-baf9-a1ca34c44733"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f228139-b370-49b1-9faa-c1e662de2f00",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b19ec6c1-d4ee-480d-813d-a06ee56bba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e0cb17d-7131-4f43-8a7a-c259a204de5a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4bf1743-b75e-4e45-b782-96d70013b2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "57153bbb-46c7-40b1-96b2-c73133604537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06cdd696-8792-4688-9975-980dbcf68d40",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "469ff3a1-a9e0-4d2f-a430-e53cbbd55add",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cb2bf59-e167-4a87-a6f7-dbf824477a89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c3ce1ae-376c-4ad4-8577-eb0ee0c874c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "990a1955-1ffe-450d-b52f-1165365c4443"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c602e69-00f1-42f9-8e36-6a9a65cbc895",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93923226-4959-47f6-b274-1e54549eff40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "87c646dc-832b-431e-83ca-1f4d6da9d495"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94482019-cba1-440f-a845-cc8e68e80e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2c564f9e-3ae5-478c-b455-8cc095bddaa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a605046-662f-4e85-b8f3-d664357babbe",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfb320ad-f987-4770-8d30-98f89dd306ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "86614015-f1f5-48c2-b35e-af2cab34ad37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16230c4a-bc71-4320-ba6f-761a791e3f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda3a262-3070-4d35-867c-4b72f163756b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdd093f0-7d48-4e9b-90bd-925f22e64527",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31194912-5e05-4796-8411-6f699f888547",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d392cd54-6c68-4ced-8a5a-fa74bdb0ed17"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "24263aab-b6f2-4cc4-8214-efedc187e539",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "50ba597b-9e96-4206-a771-bd70d4b16cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72505f2f-9628-47f2-9430-359cb3573e45",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cc31ffe-32e2-4e04-b656-002a686a6fc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "708830d0-3bec-435e-bbbe-c3bda5f0f378"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51e81d92-c821-45d2-bff0-047660e90eca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c85eff5a-2c52-408d-a607-1540e5a1b936"
                        }
                      }
                    ]
                  },
                  {
                    "id": "590e852a-38bf-40c8-a69c-5bc580fbc651",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eb91040-05af-4876-8ae1-c5d4cf0c1066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8256748d-2e18-4917-8797-a65bc104b55f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c3650e-0550-454d-974f-1205b8741c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9658e565-5019-4379-8c7f-ee84c81f8e71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0348845b-b783-4a80-b03c-3b3a7b644aa5",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f29a425c-181d-42c2-9ebd-8db29c9f9a7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d04d31b-9732-4121-919a-c694d794168e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2425b785-3b21-43b2-9c4c-1acaed1f5593",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ecb8a33-095d-4c78-a6e5-298295703f0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af962f44-c3ae-4fe4-8a57-4c38757c3da7",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c7a8215-d5b0-4b03-bee5-978fdbf434d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68a87e7c-0d41-4650-9430-9831936e9fac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9f47fe0-a8a6-4769-968f-ee987ab73910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8d0b3058-239f-49e2-a0df-9d7d3172ac6e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c700d52-ba1f-4c23-a22b-5252cf75d540",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02d0eff3-8e05-4e1d-a478-393ca7e503bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3feccb17-1fa7-4bcd-b45d-281be7cb2b0c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c94d71c-9771-49d5-b062-a639d6f6d24c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d81ebac5-1b5b-49ab-864b-9057f52fafab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92488dd6-b290-4338-bf86-4aa54e84e887",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ffd3c309-8a75-4734-a8ab-d0635eb5c5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a94c98ee-92c2-4574-87c3-c8d459effd23"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cc4ebc7-9999-4dc7-bbb0-87b313c822ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c0869284-d431-45aa-8251-4dc303943e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "133e81a1-1fbb-4e28-9b5e-b1c849b5c3cf",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8faf362c-0944-4d8b-8ada-4396bf5122cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e19dcaea-eff9-4995-93f8-23c9a6b2a27e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b5a0e0f-6fbf-47a4-9da1-d5b01909621e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1b5dcac8-af1d-4d84-a982-20a13f4d8a33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2a1270e-2247-4722-802a-f9461a3cfb67",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d57a9df9-f793-47f1-81d3-0037b43cd338",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0e4cb7e-8de0-46f3-8c54-49e18591ae30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5e70b5a-2f2b-44de-80ab-66c61130a6e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a3933779-bd5c-4f4f-b712-88a4069e21a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab795fab-bfc1-4f5d-ba9f-81d441e74c3f",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c7e63d5-1c26-452d-9006-6e5dc63391a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9160f3d6-8155-41e3-bbaf-52aad4ed2755"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a69a14f-9f80-400d-b5c2-85f7e0e09fca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f35bf0f-0ef2-40e2-84a0-d2b884e5e76f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba309f5c-8a02-4ce9-809f-11ae348a36c7",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f217a6-11ae-4e88-a057-8e5c6cf04cbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b4fd98d-4b28-4117-8d83-11018d23906f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53bb4cf8-b564-47c4-9886-c2bbb095ae88",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dec4ae6-e341-4eef-ad87-9e15343e9f88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c06bfe-2372-42f5-aa97-dd11c6484dec",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01d97024-1220-4609-9c43-04369c7000df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "655d6660-370a-437e-8e4e-e2c112c66200"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9fd336c5-8b42-4836-8548-80bbfb5daf64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f5e71ce5-a08d-41df-ad9e-9285f74c1baf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a61e6910-6172-4cfa-bf12-aebbf0a77962",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f21105-9a66-4e05-8193-315370ce5ea0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae17485c-278d-49a8-9718-eef574c27f21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5a15742-65db-405b-b1ac-29475bbb78ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a8c0452-f156-4174-96d4-46cef31f1028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7345722c-3aa7-4b24-8dee-f9255e3b1d14",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ab637c-436b-4cf1-b94f-07c928a532a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "46e905e0-4fdb-4ef9-8bf7-8021f0cab5f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7eeec99-f152-45f4-8ce2-b67b33eccda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25a3042b-d86f-4794-9357-e3631e404d09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ca167b-1bab-4002-9413-85fa61e41df6",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "07147e63-defe-498c-a28b-078c617ada45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33ae1b31-9b3c-4940-a59a-43a76989e661"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bd79551-58a0-4bea-9791-456afa90b317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cf144ce-ccf1-4787-a2b8-46432513ef2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b02dff5b-6a3c-4118-8b93-38d966c2351e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e22e273-5ef0-48de-8a30-a4b968308eac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "011a554d-1d1b-43de-8836-2de4e6abb314"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4aea0aea-014a-438d-9050-52dfad2b77d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "54dd60e3-52f3-4a10-9fc4-99d23de06be5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "280f8832-8ef5-450d-a5b1-49be96d4b595",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dee7813-1f37-42da-b1fd-111223a7a89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78602b16-a215-4cc3-a711-05cea210e383"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01f09bc9-1e18-4332-856f-7e181fc5f19a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1f1276ca-6511-4987-bc9a-e2fc39436943"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d668e2-012e-4643-a2ab-e7f0f4727b5d",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bc44d22-1c2b-4334-b702-5b86bb476466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fa97552-08d1-427f-9319-4b1fe0791040"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "231345f1-7501-4306-a7d7-025895dc7158",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "49283537-58dc-479d-bf4e-ce21091c3363"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2034820-02e6-4568-bb95-a68b2ae317b1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c4218f5e-34fc-4559-ae5d-f53d772e3862",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d148489-fd4c-4e68-86c8-ff4ca15138a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ce16dbd-bebb-49d0-9c8a-283027909230",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2ba2eaeb-03ed-4479-8fc0-5ec54c96ef90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6488b6d8-a232-4ee1-8521-6fa31249fa2e",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ad6b414-9732-4eff-b138-6d89a8a330e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4362b0ba-640f-47a0-b682-21944f08f93b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e3bc86-a965-4cde-8e2d-ad194045603f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "cab9e201-8d92-48df-bed7-2826d3b90d16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05247322-9539-4648-b412-6100ca0d5b1e",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "791ad667-064b-4ff9-8a6a-6be3b4a7c152",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fb3230c-8723-48e5-9db5-762929aa7555"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da248cad-73fb-4710-98a7-ec611d4b18b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b2db63e-e8d5-49ff-877f-7508f241bb87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c48fa14-ded5-4fee-866b-cb91634ec16a",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1c9b351-a4f2-4727-958b-8adda2cd7738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e5a276-50bf-40b1-8b75-a24df6c4217c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d66d37e1-f58c-4b0e-80b3-4d1640dd58b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f0e1ad16-fdb5-46f4-a9a1-8a052ba42402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "169697a0-c2d8-4747-aaf3-e4d43dfe7e7d",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4656fd5-eaed-436c-bfdb-2f269eaa1181",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf86b0aa-471e-4bdf-acb2-aa6ba1531261"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "deb83484-a1cd-466a-9a6a-f6d3b5be265f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec47ab57-9a51-4b05-a63d-8b5394f8cdf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "305ab6e4-08f7-4de1-8cc4-02c43146f4b0",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0595e422-f6dc-4642-ad09-ba685405ac92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "b5bc4d49-b39e-4319-8d7e-77df128b6d76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c435ece2-98f0-4485-8178-6f69ddd9cc3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "0eda5803-3975-40b9-9f7e-54e973df9384"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3f0d3314-a23c-4652-96da-0481a2dc3dbc",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1f7c4c4a-0100-41e2-af22-17d360641af3",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d50146c3-a761-45fd-8629-ca34f32a5ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a7460d48-b066-4286-afab-58ae85185992"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7aebec2-7c2e-495f-b9e9-800fef324791",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8d2e5946-6f8b-4fd3-994d-583979c6cde8"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "c2f87810-7f82-4ce0-8c1f-8d9177b870e9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "49b351e1-e96c-4cc8-bf03-edfb46e0e934"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "75677fb3-771d-447d-a549-759f44d10b6a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4f74758b-eaff-4004-93d8-dc9eca0d7eae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c3dec9c2-b38b-42ed-a435-098e4183825a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2f97fb79-2612-458e-9ab7-7b601c6b99dc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "b1c43886-08be-4b8d-9aa9-5586254e0b73",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4c173062-faf4-4b79-9d7a-1d4f8419621b"
                }
              }
            ]
          },
          {
            "id": "b21d77dd-eae9-4217-b5d8-4bb6f90ec4cf",
            "name": "Positive Testing",
            "item": [
              {
                "id": "59f37b19-42dc-410d-bebe-d95b8f856f15",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "818466c0-7319-4200-9712-939331248127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ae6843e3-1689-424e-851c-c321316a8788"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "63538674-2632-453c-9df3-6a82f1b643f6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dd913bce-091e-4c4b-9add-601451ec7522"
                    }
                  }
                ]
              },
              {
                "id": "aa865875-7488-4c92-a664-a04f24f4ca16",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74f8d432-e184-46d8-9d23-19e5ff58df01",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39e3a6ac-4662-44b9-a0d2-d12be56fafe3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61e36c87-dbce-4ba5-a3ca-2094927525fc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "40806292-2677-4033-a8d1-75e9feb088f6"
                    }
                  }
                ]
              },
              {
                "id": "bf3ff1f6-c02b-4ac4-a4a6-cbfb57f8bb95",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "417cf441-7c41-4292-b0dc-bc83224cfe50",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "800f52b1-bc69-4697-84f7-d90dcced61b0"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dbee2ffd-9176-40e0-8fdb-7f27861d7ece",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "b4679b7a-f833-402f-8d72-325e84071731"
                    }
                  }
                ]
              },
              {
                "id": "8ab19d09-e7fd-45de-8f2e-e7877dbda887",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "736cea92-9eb4-4ddc-803a-808131dd75db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "da300816-d447-4cdd-88e7-bb0ad5b49118"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b9234fd-83d4-43b2-a750-48d2d58b4515",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8e4e26ab-ec01-4c0f-9e8e-a8e1b11835cb"
                    }
                  }
                ]
              },
              {
                "id": "dc01617e-a347-4fe1-a920-4c98dd821115",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "647467b5-f66f-487c-b082-54faf71adf46",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e0366c25-d397-490a-ab31-72115f70bcd9"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cbe36d85-f4a5-4495-9f47-c27b1c116e92",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "661b4a41-35d2-4c6c-ac51-b970e2b60a0a"
                    }
                  }
                ]
              },
              {
                "id": "35efdd9f-d470-4ffe-ad25-a695375e4018",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7ff063ac-6024-4918-bbba-37be66e7d900",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "adc4e2b9-f4d5-4ea4-a0e0-2b730e5cc9f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b53a7c0e-aabe-4a17-be9b-829e3a3f3d8d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f99a40a5-5c98-40ea-b588-cdb7312276ed"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3bc7352c-ba04-4efa-a65a-865e55adcd57",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e44ba1c0-ec6d-46db-a1e7-d4fa65133603"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "8d4185b4-cc3e-4835-a8c4-a6975207d59c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "56011ffb-e622-49a3-b65a-17d9a3b02a9f"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cda417ea-f052-4d48-b71a-b464ba3ad58e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "2201f0f1-80d2-4ebe-a591-a653ab05e188"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d0f62103-4094-4c39-a941-23bdb0a782d0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1693ae03-dc39-4078-bbf4-212926a58dca"
            }
          }
        ]
      },
      {
        "id": "7f6ec0cd-46d7-43ae-8abd-84db0d8d6676",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "d9ea0801-c73a-4898-89b5-fada0b5df57c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "53989a11-ff2b-443b-9654-24a2ea5e5f51",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "67083d77-8ab8-4469-b7b3-e7d869ad92a3",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc26dac1-75c9-4532-98d1-0645ea511614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49c22f2-2434-4f8a-8df0-ff8d8481259b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "446417b8-e57e-41a3-a821-87f848a99bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "6685150f-dc78-4392-83b9-f8312391ab58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14f815d9-64b1-4f00-a5b2-2b20b50e87be",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4856a3dd-56dd-431d-b921-305f551be9ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "254ab45b-f25c-4ea8-af82-4c87d9117c30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac57b7d2-0f70-4156-aa15-7f1897e48168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "802e9d63-530d-4301-af4d-c74e26547a09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b3939f5-156c-440b-b6d0-4a3d0cb714fd",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c334b13d-494c-48df-b855-a9e333d33ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2c0c43d-a070-4815-8668-d2164fa4e411"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1371db01-acad-4944-bfa1-ccd98a7d1edc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4b0f5720-e646-490b-b160-800e33d3ef05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07ebce15-d4a2-4840-babe-f7eaa0f83d14",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b502cdcd-438a-42c5-bf11-2819ea4e0386",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ba653b55-258d-4bcc-b5e1-cf8ba8adf744"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f7eca823-3e1b-46c3-a81a-0e4b9c8c9414",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "633b376d-47e4-46f9-9cc1-7ab63156025a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8873eabf-6ec6-4be8-bd2b-25161d0b0fad",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e59aac3b-b524-4ee3-b647-818dd593e23e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48b9e575-ffd6-41c1-ab0d-4d901938df99"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85ab5059-b5b0-49df-8486-88fbc3bec6e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "177c8ead-add6-45fd-9b78-f2b1e8522eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5063bb3-4023-4d02-a14d-7c6866cc4ac1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422940bb-45db-41df-9ee8-cadb7c5c9dcf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30e97ded-910e-45a1-b967-0bb69e8dea53"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3e9eee3-df3d-4003-9c1e-c5e9f275d8d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f7c465f7-4af8-4907-a0f1-2937849d8b61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9f37901-c604-4776-b589-9ca8eee4124a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "170a6bf2-2e40-4bb1-a81f-1fd7ac2d737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21043369-8863-46f7-a64e-36caed423ac4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90a11d08-e179-4ce7-bba3-2100ff3daa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "a724c554-f7ee-4440-bc33-d11832ffc8d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0e724a-5b14-4b90-980a-76cbb1cf21d8",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a86b7e1-14f6-4f3d-997b-68fb67235e42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8ccbba6-69b6-4657-840a-30a0b4a0059f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e36385d7-7c33-414b-9ed0-a8a9b2d09b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9992ed6-d26f-4a61-a623-8d8141aa08e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16f7f1be-5b64-4f8b-ac65-41f083b1be64",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2e87e7f-1e03-442b-ac7d-411e6f671ed6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13b67578-6117-4010-928f-4a898843c6ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35a4dd66-b334-4b2a-a474-47026584a76a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9b6ce334-a728-4bec-916c-654c9e8eb6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e6702a4-8f68-4467-a289-2a2ec20fda2e",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e75106-4512-4953-8bbc-258d52bd0126",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdccad49-ad11-4edb-8c60-3027fb432902"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51305a29-d034-4bd1-9d54-bc112c7199ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "505a14de-ef5a-4ccf-b6bb-8baedc307026"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d664776e-18c8-4d30-8119-f614d64099b3",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3dec6ae-7526-4a66-9c5b-5c5f386b6fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cd66cdb-3a55-47dd-a753-a172abd4d6e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "659b2987-e51e-4537-8fe9-9dabf386c617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4cd666c9-74a5-4b27-b150-fbce2024e338"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4263b3b8-0195-4801-bd0d-8b3e88209782",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2976eef3-dced-458a-9023-70dce60e5ea8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9603727d-975c-47b2-95f5-117fca64f839"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c928d5bb-88ec-43a8-a409-143efa1a07ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9410559a-2732-49b4-a9ba-e0d208bee24f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43b71b5f-c3b5-40a7-8abd-15a25723cc4e",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "360aace9-b1c5-4663-aae7-720a4226fffa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39d07671-7b28-4d5a-84e3-13e85b15b8b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb9dae23-e15c-481b-997a-82191a14bf18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3bc8084-ebba-427d-a6ab-d82d2eede81c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a48a812-b322-4fad-bdd6-ffac82c9346b",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3283fd5-c262-49e5-ba04-59d1cf6b61bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e30dddc5-ee1a-4170-850e-fd2abd32970b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f27a5e7-f42b-4cd0-9c76-7da98b5d9963",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "af6d35f7-3d8c-4cde-bc0a-cd53bd934872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaaf87de-524a-4e68-bae1-1f8a685259e4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "de435784-156a-4f9a-bff7-3fa4d1c615dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53baa9d4-451b-4a5d-b430-7d3c35de0d2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc2750a5-66e2-47b1-9d36-4e7074b058b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "9d64e5fd-9e3b-4748-b443-f8ee7ea2882b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b68c8bb-353b-4508-a7c5-61611d55e03d",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954cd859-db50-4d58-8330-4f5f0f7ec69a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5c3717f-682c-4c06-b460-ede3c5d6051f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ed7794a-e200-48db-8fed-1edc62125132",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5995e982-69d7-4fee-a77c-2e6453ba530b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec74d07f-2979-4426-bd25-b70a588dcba2",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec1e2cb1-be77-45d9-bdfa-567ca476e6fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b8879884-a8d9-4ee8-a055-ab0fac7237bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "030b59ef-a5cd-4dcd-8be5-121512871d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "73506315-fd94-4969-a676-d8b87670ccbd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4c9d088-5bcd-4b30-be54-6815b8954370",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5698797c-9d8f-40ee-94d5-3fa0837e4c78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1656b931-4170-4955-ac45-83b3564b45ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "204ba13d-05b5-4c52-81c4-cae59ce23f8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "16a7d3a5-ca29-440d-a1b6-c0723ddd4ff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5816096b-3cb6-4246-9bf7-11e1f3c9f545",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96d1a42a-31a5-493b-bbe0-f00a2f85991d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdd54d57-11d9-4e25-923b-a9dd37a2dbcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08150f80-ffe6-4f7f-9973-84a8026ae784",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ade5fb11-2842-499b-a6ec-74ef49481027"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50ca6369-7411-4ae6-9841-af9ce6828f75",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c95f0cf4-8b8a-45cb-9c0e-5541e5bc0438",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f26f55fc-cf93-421e-a514-95ba408f2c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a96c6412-2d41-4c4b-a694-e52904e59b0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debb3a48-9bf4-4531-bb2e-1cf36bd22945"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cef41aba-ebee-4850-a790-37c25725c102",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97526135-dc7a-4096-8051-f16add0fe958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d784f309-9fec-43a5-928f-2bdb7a6f7c96"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1f35c3d-a17a-40df-9d00-47a64e918aba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cc151bb4-eaa3-42c1-8080-99294d0833e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f69de31-f5d9-43fc-9173-0948d167bd7b",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e80c56-d570-453c-9c90-71fedc2538fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b6f9cb1-0347-4e6e-a784-35a803ea60fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dba11c95-3a4e-4c3d-a2c7-0f33f8f79cd2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fc758db-5681-438b-9b2a-db98b80532ba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dca5c31-c4a9-4e61-932c-2046c4f13ba9",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5194599-f7c6-4419-ab84-216c07d1d55a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24de1d0d-5a6c-4012-9820-25caedad92a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b21989fb-cee8-4cf6-a867-49ceb07191c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "80bf24a8-8377-459d-b298-e1e3e15b41b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a407e0ea-c758-4682-b1a4-a46b4bbfb6ed",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f7a05c3-968b-4931-a5ed-9051efa6e48e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad54e4f1-e070-41db-92e0-1289926227cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec0f3d11-48db-46df-88dd-5c03f5487e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "064ceed1-2170-4a71-8937-50a198072e88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c658307-284a-49de-8980-63f9bbb20345",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e0de9e6-5d99-4112-ae34-2f49d08f2fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08be3940-b41a-4f4f-a6f1-796a1cada68c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "339d8359-9709-415c-9be2-ce93325ca070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e6c299c-2dc7-456a-b11a-e773981f693c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54ed9470-dbf9-4bdd-a6a9-9f3c4f756dc5",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "74876e26-b11c-4623-9ba3-564d9a1be8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5a17d8c-0047-44d3-91b3-a2e8eac9032d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0d19d9-64f6-48e8-a86c-daabfb0d12ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66188fec-6f13-41e9-a5c6-ecd1a91e2889"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce17d98e-e7af-4175-a855-a845d09fa368",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2335408c-4141-4ca7-9809-2932d4591277",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ee85a289-8cd6-4cdf-b162-5cee52f41af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfb162e-d42b-45bd-b955-c865b8fb01b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b30ff37e-175d-41ce-91bb-fdb092db9162"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e74efe3f-f73a-4332-8b8b-08d0641567b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cabe7dbb-3bec-45c5-a612-90ad4d9a9319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a28ff5e-8857-405b-aa74-e710d97d63ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a072fcbf-a616-4f01-b126-fa307cd59384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf4942d-1020-4f93-a2c5-a23786f57366"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ecb94b8-6ffd-4142-9d28-d9f7b4ecae63",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08136d31-da74-475a-82c3-ab1a4f3a5f0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b84ec7-5ca5-44a2-8876-4b1b8365789d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "509e4c01-1ca0-4c95-affe-1b09335f95da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1430ca01-ebbd-4d8b-9e67-20484f4cb349"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e97fc754-343d-430e-979b-31bcff44be93",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6bd6641-94a3-4505-8aa5-febdfd37f567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4cc544b-9309-412e-baaf-42c6063ed2ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2174c0c1-7c67-4ec0-8a8d-4558864d43bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0dba1536-ac49-4522-b65e-8300b22b5765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f6912b-4528-441d-9cdc-503cc66383be",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6660c5c6-77fb-45c4-9871-a231e1412a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2135ac3-3479-4b4e-8e5a-b7a7ac7153ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6be34c6-7ff4-4f22-a5e7-23a2cbec9ca5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "54d3946c-4837-4e7e-9697-5697c6c8e3fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d92123f5-98f1-4e1c-aab1-8698b11c118e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db07cc53-c04b-488d-9d88-fe99a2886ba8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31d0f336-6ff1-4662-b7e0-9285c76615af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9d0e62e-6a32-418c-9b55-fe2e4134e670",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d31260e-544a-47ce-9c53-ef314f900d50"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef1033ba-6232-41fa-83ab-5b84db11259a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0675253f-302e-4be5-b4a8-9ddea611e87e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e3e9e89-697f-47f5-851a-ab4a67aad09c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "a9042bf4-2d86-489f-8308-c6f1ff12d9ed"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7f8b068-1ddc-444b-8d03-ec11a4b2c333",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "71aa4aa5-ee65-4c82-b246-f8454b32b2b2"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ab4946e0-dba1-4a91-b638-b397d2ca0fb3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eb57cc03-c2c3-4f7f-97e4-78cf34868ade"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ae4b0349-37f0-4c61-8bc5-7629b083aa24",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2c82a3f4-6aec-439e-93e7-e6cfc5678323"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f71fe9f5-462d-4f03-8192-32b5dc8f28e4",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0ac8732d-91aa-4f6a-8d3b-4d46275ae70b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c6f1a34-6ff1-4b0a-8e2e-9916c0785395",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ac608915-2f0d-49b0-8d86-51fc3a19371c"
            }
          }
        ]
      },
      {
        "id": "72710658-e625-4be7-8a58-10aa833b47b0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "04bb4ab1-0fe9-4284-8103-9d2a15f0b8ed",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c33579fe-ecc4-41fa-87d0-8fc413fcdb59",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "772f7aee-9ed7-4da6-be1e-075f38c1d338",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "585ecef4-a867-4729-8c42-35960b32e864",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4657e25-08d3-481f-8765-aca940f3f01a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "681db44e-fc31-4f6c-89af-b895f02e72e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "d0a1c786-8286-45f2-a150-68ae25fd4c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091511f5-5840-4fa6-a301-8444c3d10d8d",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f402bb08-846f-4dad-9586-c4ce59245e4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45ebbed4-4f0e-49b3-8536-3a02e8b984c2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a559c5d4-a7b3-4a31-a3a9-14e66baa0762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4754814f-8ecd-436e-962b-91e7cb1f4f52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08813178-91f8-4e0a-830a-8b140d3d3c88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab7e2246-554c-430f-8529-39ccf974956b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1fc9c47e-d630-4ad0-8f60-b47bb76c3afd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06685eee-cded-4272-bc7d-0ad42a216a12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "cdd0e958-46cd-410e-82ef-559efca29aa1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7c80810-eb64-44dd-8120-98cb2dde8937",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2ce1082-e55e-49e5-aada-b17019cca7ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9dccb1f1-7ae4-4408-8d4e-83ba836579e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1194b974-37c5-47ec-b5a4-1e8c0365559b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "7557e056-ac04-48bf-b7e0-87a604376240"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ade75444-80c5-40fe-8038-65940e25e920",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1885f321-9479-4f76-a4d0-262498dffca0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c79f8429-7872-402d-9117-546a40739719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e6e0f8b-0a18-4bd7-866c-73e87c138848",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cb5783ad-c14a-4773-a23c-107428c0e4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc46cd3-5376-47f4-93e3-e6a83d3ccd6f",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2385f749-7e78-43e0-8bf1-292e7c976cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2f3a7f-5f0e-4ec2-be40-65db2b982472"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55ad47d6-2669-434a-8064-23f43853d885",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "03fcda97-a500-43a0-bc18-ecc68e4deb47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "821e0b0a-6d07-459b-a6be-dba4e30f786d",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e36caf7d-54a8-4a20-b06f-fea6142abd0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61a35d02-7ec8-41a7-984b-b73b36689372"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca302b19-b731-4ff0-a36a-570f431c6de6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "0f903270-8114-44a3-97cf-51358b32a38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e281dae2-dd13-493b-adcb-29aa4a67c8d0",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "025e99d5-74c5-482e-b9f8-16cab5296513",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7afcc64d-62bc-40f0-92e3-f5734a6c6020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49b5bba5-d843-48da-b6d4-6147337de845",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1094d872-a055-4201-abd2-9c0dbdee4acf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5d36c2-509a-438c-8d62-05be42007492",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e98d3cc6-be9d-42b8-b603-bfb84831feb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1fc1814-f91b-4aa3-8878-50ac1b5b2191"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e1e6cb0-4790-4e75-8e85-d7d1c9cf33d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "53643d7b-578e-4bc4-a8c5-2eb8a821ec10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1123b68e-e829-4aa0-b28b-6c97ae2365a1",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5781f9bb-e039-41ed-94f8-b6adf3c0c321",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476de457-d45a-48e1-acbd-1816bd2a0bbe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf43c2ea-6aca-49ff-b962-bdd128798ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "da709fe9-ed90-4d6f-873e-97cc268b0d86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "371e6159-2ec6-44fa-a426-b3aa7e57fb51",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df552c6c-1c38-4ab6-b6a4-3594fea7d35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d8cc193-3f9b-4315-bf9e-da6cc5b7f32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ca6302b-697c-4b99-909f-95d43f997ee3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "aa8410d0-0b3c-436e-82d1-7678710432b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9119091-1059-4b06-bdc0-a198a7f134a3",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94028bdc-c98b-4a22-a025-a801e4174395",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08c1a748-84ff-4c2a-b335-1b71a186f7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98799f08-1caf-4465-86be-18e067d33b7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1237931a-e6cc-4446-a14b-a426ac04a531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3763c6f3-7904-4aa4-a6c0-aa87130e3436",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4612ffff-0e60-4a48-a87d-68afef000f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "096bbf83-65b0-43dd-809f-2f8825df1136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46262ffa-4a44-46bd-9dd5-3cddbad80081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "759583bf-042c-4166-b26f-840c6cf8044d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48d14373-cbfa-4923-8a1e-6db0ce30e689",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea6aa1f0-765b-41b4-b908-698f2a909c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a450716-c87d-4fdb-95c2-e9a887e59594"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1963de5-d145-4514-a1ae-ae475d225f57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "baa3556a-e8a1-4afc-a1a5-e83f5f2f0b07"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02078234-8f2e-41b7-928a-f4d6cb8aeaa0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66299480-af3d-4f14-a09f-578d76c5be1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "943d01a0-351a-45fb-9477-bf4c5a24c4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f225d5fe-9197-433d-a368-f01d3b30f5e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af503a0-9610-4b96-ac0d-412860a10470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73af9e53-b579-43ab-af35-2276b1755d56",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f4293fd-00f1-415f-a23f-64ab33211af2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8df77d30-f8d6-4774-b0df-8cbdd4920abb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa23a055-53da-4c44-b4ed-7ab9c21622a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "adce34e3-87f8-4cf1-b350-2dfec1705ecc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30b6b522-63b0-400b-b63b-ad01abe584b5",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac074145-f0ea-40b1-92f9-7c284b1efc0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0bed97-d45c-4c38-80aa-ec1392b39fe5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e73bcbf-d761-4305-93f0-b070b9963ce5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecd7218-f4ee-40fa-8186-8b2471825aef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe432a41-6830-49e4-a497-0fa34e9d2c6a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7171e2fc-8e68-4ec2-bc8d-2c7fa9c87f67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9e660ef-9ce5-48b8-998b-9e52a2bcd50b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac6319d2-0ae8-464f-bb9c-450adf19115f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "98b3695a-c470-4938-9ce2-14cd4d97fe68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc375f85-3da0-42f9-94fe-f6c4a9186ca9",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7063d30-712b-43ca-93d4-307affd44c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f11205f4-b591-4424-a266-a5b614d83689"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95562fcc-05ae-4396-ba94-a0db45321811",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "76602651-41db-4fe2-a879-043e31c329c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f29e3e38-00b9-4213-b86e-3bd5b03e9d3e",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f74f52c0-f694-4c12-9041-c59fc2ca34e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "131bbab7-4382-4c40-955d-0b3d6c98af04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29e9356d-5d3f-4b08-9077-eca198a33a29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "115dfbe1-4b58-4edf-b0ca-c010a17b9354"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfab5e81-72d6-4c83-8a6b-7196d2d6a855",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "270d763b-0af1-425d-be4b-bec0e6aef5d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00dcb0ad-1bfc-45a5-8f91-5c9b1f4e1d54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d093026f-ce21-4aed-a314-2cffafba29f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4af3a754-097f-4ba6-962a-67b04f188642"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbabd89d-2895-497a-934b-88547135c7bf",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30cfd457-6e92-4295-a0af-aa1fb184da90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e1c0c5-c26c-4cbd-ae55-579765c40267"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db39404f-5830-46f1-a66d-899fcd053185",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "851e3ee2-e04f-473f-9fa0-21a33514abc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a0ec68b-7bf6-4a92-bf26-f6a65c9beba7",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7062db-c709-4723-bd2f-8940b9bdee68",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3f2b0e2-b3d5-454a-822b-531885ba5a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8316a8b6-aa5c-4f80-8a95-ec6637871f04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4c0b33-ce95-4e60-9269-897704b827dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283dfc5a-5bf9-47f8-8541-622a3743e776",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "113954bc-d9f1-459a-ae68-623ebddc9858",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2af0821-3c9b-4d57-a383-0696623ea0ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d656bb4-d9b1-4302-a747-bd889f1b93a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6a441aed-cb63-4696-a48a-c556d43e1787"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a246e96-d7cf-4d5e-8cbd-78408ee111ee",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7123f6-be20-4900-ad1e-8eeb80947e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a7cb3d32-cb0d-4432-b892-954f40ac829b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc43abb8-0ba0-4e76-9517-28a1bcd86d3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "384d9c5f-e77a-456c-950b-82c663ff6fa6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "538944e8-81d3-40f0-9015-e9624197c411",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79698efb-e308-4cf6-ad22-7cc7ca505170",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb22dfbe-6c0d-42bc-8a7d-30fc9bcae812"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e372e180-efed-4a7e-aad5-417af01f8a38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66c7dd1c-927f-4efd-be9d-54e31791803b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2553fee2-aa92-4bf1-86b6-b797476566c6",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "954c9afe-a8bd-451c-99ed-c7ed37e04a8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f7b9b4b-64d2-4e07-b9ff-2bdbbda3e271"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c6b7cf2-41af-430f-8279-e8381a2860d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "632b9b0c-c4ab-47ec-8b32-3eb2b2c77511"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b62a00b-ff44-4ba1-926b-15c1209ccad2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e9b605dd-d6ae-4876-9958-ff6ef2bd49a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b05797d-70ed-489a-b25e-f81a1317a591"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6283d733-d7bb-4b7f-9ed5-03a5d21a297c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a8b18a03-bcbf-4f6d-88c9-354f6965c9c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0072a586-3594-49b6-87f5-85405e7d03af",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f816e710-5633-408d-8550-dee827392d83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "162301c2-3dd1-4100-8316-e404bd9b752b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82273131-a59a-44d2-9895-a1590c1a9554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a0e744a1-973f-4bf5-9543-58a83272c9e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6c756b0-cb02-4d10-a72f-f13c5eedee43",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a94158a-9a8b-4f37-bd24-f4c637d3a8f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d07f667-2c45-4515-aac7-eefcc74e1d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc4ea69-3613-46fc-9fcc-92ebc1547518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "39f699f0-bb87-47e3-bc90-fd8a0fb4d450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe348ed0-ee32-480a-989f-f5ec97d7db0c",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b263d4e-0113-4447-942f-abb46dd01b92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c6ecb73-3457-425e-95ac-ae1198e93d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7aca01f-85c5-4e0f-81e8-e52364fd5b9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3be0429c-0de9-4ca1-a716-93d6879a99e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be181ea-e0b3-4aa8-98fa-e9f7e5281068",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1a31984-37cc-4895-977b-48eba09583b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12a48315-338a-4c49-90a9-b99b2dd44376"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29a873fc-f582-4ef8-b9db-334f6e507ae1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "753961ef-17f1-408a-a115-01aea67f8f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4122b668-052d-4994-a4c2-8c912b7cdb60",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ee70342-ddf0-46f4-9dc1-d1b225b8a918",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff3fcc44-ad9a-4aa2-8658-1b75e87f5bbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caad3b60-f4c6-4b8d-a488-137cc496bbf3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1ef451ca-a12c-4b89-8ab3-e88e9e18bea2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff0361fd-8902-455f-bfdf-b04eedf16e56",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbc941ff-036d-4559-8f57-97ea3aa3c7cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9323788b-2773-4acb-b2cb-1b6f5233a1f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31248528-42af-4788-943b-20cab5d04ab9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "debbc8eb-ffd3-44c1-bb84-dde83ba6bf45"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5549f51a-3c1f-479d-8f40-b40c213e317e",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf77eea3-242f-49fa-810a-30369070ae99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fe6e8fd-02eb-4916-a729-adeef5e8c028"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "73c15cee-ad08-4186-8326-a5a97c638ebb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b26c723e-d456-45df-a73e-fb928a6b3ef9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69599b62-5db0-4fc5-b1ee-03377134abbd",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "817be8ad-acb3-4910-8d14-07253947a2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "44ea72e2-fbea-4d6e-9867-5de853e43442"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afd1f57d-e1d3-4215-b679-c4d1eb77611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b1341ad-8f3d-465a-80dc-d4472cf30cf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "063431ad-be99-47a9-9527-3cca4e6a9f47",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "711ebebd-7260-40c8-885d-aa20793a93bc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3b0bf83-60f5-4add-8598-a2b35cd0b0a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1882494-3912-4a69-909e-163ce60d81d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "70fcea66-ea23-4c9a-9ca1-1f4d59c6e17d"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "76e68a60-61a2-454c-912e-832f5c86abcd",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "7fe80256-c4d2-4adb-80f6-0491ac6f5a1a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312ec3c3-d062-4481-9398-95a1cce2645a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "5567ae97-eaac-4165-a008-02b4b7f82cba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1049dc1a-3d38-4213-8d56-17998e5a8ee6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a8bb9594-47b4-4d01-9830-8232c2f3fcb0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7fb1dfab-1030-417f-9753-6d3b88ec0b1f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8099ef08-696e-4817-9d6b-052d4382e8cd"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5445c8ad-0210-4981-a2be-cd67db191c5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a240a33c-5182-455d-bdc2-913bd29f8da2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e8c57b86-f6ee-43b2-a74f-58f9199b7a93",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "64b2bc8e-c296-4629-b3b3-4a5889452cea"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "72609a22-1aa0-4b19-8e5e-86106c99c2e5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71b267d0-83fe-44e6-a5bf-08bba18c1807"
            }
          }
        ]
      },
      {
        "id": "c4646fbd-b32e-4931-b690-8c8c89feaff1",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "1a35121e-a6a1-4366-bbe0-5b5c284082a7",
            "name": "Negative Testing",
            "item": [
              {
                "id": "06f887d5-7923-4719-b33e-cd65482e7ca1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "8b4ea2aa-7fc2-4612-be4a-36718b0f9647",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a2d59f5-4b41-4a78-972b-b9f056472ace",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "839b767e-b348-4335-8d70-e5b5b475db29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd4ccc4a-4eeb-4b45-a4c0-84ce985afbbb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e84fe0b1-d8d3-4820-b1a3-6667849855f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f2f62802-0155-4793-89d2-881cc9209075"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc1a5039-5240-4711-a830-384e0d653181",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35d0b9dd-7096-4b1a-9b5a-5f7e8e5ab86a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbd4a596-fcb1-4522-9bb3-442b5dfdd530"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f80b6a-fe43-4493-9b84-0919715cb6f0",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "997104c7-d31c-4988-bcf5-e9c9d3e549a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c6bc0d9-777f-4df8-b803-59f49b0238ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13c8fe65-9ffe-4095-b1fc-832fa0b98ef3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ed1b52c-832f-4838-8c18-ff5cadda7d02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87cff7c6-cb7a-49c4-9e8b-11dd0bf7b321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93274a5-e5e5-4eb5-8619-65bf922b7330",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26d688ed-fc95-4e65-9dbe-28c25dc63d68",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6cb7813-8b9e-4d43-8bfa-d6d2563c4564"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9c51f7a-5547-4b0b-ad17-79c36093f3cf",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "357d0b7e-27d8-4741-88ff-f12264e0532f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a3cdf28-07d4-4b18-b600-9820bc8655a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae7da9d3-4129-4b69-b59a-646543135ce7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23c8cbf4-b27d-4d59-bd10-1cff56d77395"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4061a29-3425-4d3b-9500-87360820f482",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1332e140-8f68-451e-97cb-26e8a7b17f64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f71b9d9a-6cb8-4e8e-8065-fdbca033f132"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "93629e4d-8435-4953-921c-c10de7c8e741",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2e94983-e0b7-4445-ac2d-7d8bc9e98272"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50fab8fe-530d-41b9-9460-47209456c0c3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "141eeb14-6207-4ce6-87b4-23ba835df67f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d67b3666-1fb4-41ad-9706-b2df386b5bbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "357383f8-d236-4299-a6d6-a73b95ab2543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5f55db8-6ca3-421f-b158-202a4df369df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b46354ca-e35d-4775-bd8d-cc6f54e86e9c",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc613cf0-9c70-4242-ae16-d22ec1987155",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05dfed8e-dbbd-455d-b10d-57e9a922e450"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67bfd6d1-8c71-46b8-b82f-c95edfe879d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c51f346-2a34-42d5-a860-c38e3809b00d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33da25e4-35b2-4024-a392-533d616f4754",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49ac711b-d1bc-40a6-8238-ca06e6b42f8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4dccba2-8a44-465f-b958-ceeeb00c3446"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "970df985-180e-481f-a6ff-b250fb967f18",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e020c70-34d2-44c4-b90b-11305d21b108"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20652ab1-f6a2-4961-a7a6-8cabeb5bf80a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc0ca982-2ce9-4465-9fbc-688c769c9fa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28af8257-07d0-4cb5-b55b-1ac0da4bbd72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c900d860-b5ba-42f6-922a-36e9ae1bdfe6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3aacfa9a-b5af-4414-b0a0-d3c7bcdbd3c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "850eb00a-7193-449a-b65e-b19488be1a5c",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d81b825c-3223-4c2e-9475-4fdce21fd7cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f8106d65-7a38-46f7-9d78-40e4736b8521"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2ced235e-63fb-4767-9076-f4eb8d35e669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f452975-7d89-4406-b1ec-0b93e990a034"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c23dc819-7b32-41e9-bdb3-1c944d0e6f27",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "307350c7-b526-40fe-9237-5b87ec82572d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fbe5d431-6e7e-4f8a-a710-f95487405b64"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88c869fa-0755-4630-8674-67891736c115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8765dca8-c1c4-4c67-8c45-f9a2121aab13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4d8cbe4-2713-4066-bf5e-25e055c1081e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70e8c7b4-0c59-43d7-b92e-505feaa5258d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d4e11ee8-b77f-43ba-be5b-9ca1d7775fd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e65b140-f8fb-412d-aed6-b720211cc969",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e257787e-2191-45f9-b87f-5d51d9784b5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c441de05-02a1-4f60-bc2c-a39efcc3b436",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bcac8e8-25bd-44ae-abd3-e12f882e16e7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c41bff8f-09b0-461f-8511-bb8e09d0a56a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "64887f8a-44b8-4a85-ae64-14d7c56f3332",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f77ca2b-50dc-4f15-bec0-701a6c61c90c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d44b1f-780f-42c8-8e63-8bb771263c19",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb1e2f72-90c1-4f13-b580-27773787e5ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06e319e7-bb4b-4e16-a522-7a2e1da81551"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3fa4ff6c-87b0-496b-842e-637ee1c92d9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f43b02ba-0c4f-433a-87a9-3170e3f972ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93b43f64-afe2-401d-aa3d-ed5987255446",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fa184f8-4663-4a13-a87d-696f2e37022c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3cc9f21b-3842-4d01-bcae-01e60059e944"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36b9838d-490c-4ffd-93fd-c3cd1cdbfcad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97d0b422-cbf1-4b0a-b751-8a033129a6d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "88122971-a9d0-454f-a73a-077e34da8cd2",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8285b13-fb4f-481e-a624-80898728b876",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f7f72f-f055-4b32-87ec-7467fcd2ff33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4a7547a-7f6a-4612-bb87-a5c30b4e2419",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "10808c22-8d34-42a0-b248-92cad898a665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62d428f9-0c89-41df-b40d-3021e241a274",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e071b535-7d4a-45d0-8574-c55ae1751769",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3ebea0f5-884d-4712-a272-d25a1f910fe0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b9035c1-405a-4344-8d87-27ae930d6dbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4f042ac-1896-4d52-9b15-43d6552ce2a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07440176-feaf-410c-b7f4-76d841dfb976",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0116640a-d5b3-40bd-bd32-d11e6fd0fa8a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "69b9ba18-a058-471f-90be-798aac2ca85b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17f0ceb9-5ce1-432b-b045-e802778e5a35",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "481bf90f-5367-4888-9403-a08fad1b19d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e61b5d89-91a5-4711-8881-06daaff02337",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0ba6633-8470-4cfe-b7d6-782015810b36",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fca1a0f5-2711-429c-8fd3-38021338be23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e69ce7a-5e50-46d8-9a48-022055c77702",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47868a40-1bd9-4aaf-a7e9-a9a720f8591c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f98ef42a-11f0-4f39-9d4e-d509d9e24e88",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6989364-6012-41f0-8d11-38dd05ab7c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "56f022a9-dd8a-4bf4-a122-6090a2d069b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf965c46-eeb4-4303-a759-cc9f7a77919d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa02932c-bca5-4bff-b3c9-a191bf8faf8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b932658-909b-43ab-945e-654814a8c1a4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1422abbb-41e1-488d-9e44-f26a5c142be5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c31662d6-8265-4e66-b05e-63cc06668157"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3a56474-2a58-4e31-a434-f0b0c3c51ed7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f6d4efc2-743b-4958-b075-549602520e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357b1bfd-f313-4b26-8f6b-78ab6a4aee05",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f950ea-5a33-4505-bbd9-da4bdaa9f30c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b97642b-9ce4-401e-9eee-a05cb7397f06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0256f1dd-407c-4a7b-b661-fe843569746a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3af2001-ae51-4506-89f6-e5440c27fb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55329359-1f32-4c3e-a063-df940f74917c",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "009fac14-32a6-418d-a720-a4a31f0c17f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "168d793b-084b-419a-8094-2b39b425ee16"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e33623-2148-4f99-b848-84178097d2f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78933cd8-1519-4245-aa52-d590ee172eab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9d9313f-917d-4eac-88da-488e23974396",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1c92023-3491-4973-baeb-2930fba04180",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d65da086-b977-4ad9-9bba-7e511fdac1c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8541ee6d-5aae-4172-ba18-825c54469a0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd6efc12-fe35-4bf0-afe6-fce75c3e3bbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39744242-2e9e-4ac7-8643-f60be92614de",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a436b643-448d-4159-ae90-f8a836e96465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "845fc321-c86f-4588-86b2-32b256346470"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "875bc310-367b-4c48-ae21-b750fc2ba9c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "939261b1-410f-4411-9682-ffd28e8eb784"
                        }
                      }
                    ]
                  },
                  {
                    "id": "894640c3-0a2f-4076-ba25-0bdd7f250ec9",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e10aa06e-629b-43b2-9a2b-77569c93ec9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f22c2db7-053a-4ced-ac4a-d5a623c634e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de2291e-5357-4248-8d7d-edb2caa1990c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ab9c7f8-476f-46da-8580-55406f65340e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f37bc05-89d0-4d61-87ea-092e7dd77ab7",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe7a921-b82a-4c65-83a8-d2d48e8e5849",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3253c32-734b-4fbf-8d48-fcc39f814e24"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dddcca6-e71a-4bb7-9040-030a13d2693c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "776ba33a-d857-441f-a6c7-7de74a7a5ffd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6326458f-a808-40bb-85f6-cdbc530c43df",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4542fadf-f9a8-4ac8-a7b3-db8b7895ddbf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c50a2238-8dcb-4efc-b0da-ea08e70570ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf24df04-0367-4263-8f58-ece87e5abf67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84763430-16eb-4f7b-9c22-2ab8ad01eebd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66200ced-a5f1-4a24-857c-6a7b7e660c2a",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e13ef367-f11c-4178-8e9e-5b24ca3d9ced",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1d2fa72-bd47-4970-8452-290050672dde"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7091d12c-c94f-44de-8bdb-fc74e22564ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70c3485b-04f4-4c00-aea6-ba11ea4faa33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0201f390-9d80-4f52-a78e-44039494473c",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6affaf88-5d72-4745-93ea-9d1f38558c99",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dca17ab4-25a3-4a0b-b77a-ad45300ba54f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7dfd7313-f18b-4b5f-9c61-43e077b38c7d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "67f930a0-1818-431a-a0c1-9cc8da0fb2bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a860662-9e0a-457c-99f0-c4f1d98ab6bb",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f193c65f-e046-4a46-9ab1-617603a1f793",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6242fb79-f18e-4342-b067-beb09ae46014"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f13eca6-dcce-4b1c-9da6-a961cdb74911",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a6d89e40-5812-4850-a479-1701b32c7f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a53a1eb6-a711-48ef-adb9-1ee88b78bcd6",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63da8c66-7632-4e45-9318-9a5db475e6cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a71eb07-b4ee-4312-95c3-e8fa7987a12a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6c1bc0-cf55-43ab-92ac-778d68269fad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c42ffc7-2d8d-4c55-86b7-340a24674a6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "426513fb-8bf3-4406-a592-837cd28ca729",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "641547fb-e18d-493d-9f59-3d8c769ccec6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbe2f800-c33f-47a9-95e6-45b4385ff8c4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e23db7bc-623c-4f05-b8ec-e86faf160608",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39699687-519c-4427-9166-9cda1703e513"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b39bc7b8-db44-4df2-b7af-f53d643681aa",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ad2708-092c-4c10-b447-f5edd2ce17f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "46b6c266-2406-43c9-bc9e-d0e51ad348c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe9540e5-472c-4c0e-9552-9492b4040ca8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79ef5f7a-702c-48cc-bf9f-73c2d5fbc953"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2804907a-126b-4668-b2c4-4509b067b364",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fa8bff7-f58b-4a02-8d9b-36171dd634df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3dcc1afb-03ed-4fed-99d4-f893b8fef65d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39700225-3209-4712-9078-4d31969281ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b54ccbf5-8765-49a0-92c2-4e19763b5e2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02690dd6-e815-4b81-b823-b21a1de63b1a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f750a8e-eb2e-4549-9bc5-f498930e8319",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d612f63b-5952-441c-9c4f-3f9feeec049a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54cf33d8-ebb1-43a7-836e-add6714d9aa2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6a92435-7870-4392-9339-e9a0ccb56d87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dca85bda-f19b-4c95-9a23-c0d8d9194b44",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3fc75dcf-c4af-4e66-9669-be2ceb937495",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08087f4e-a13d-4f4c-8c5b-0e4dfa4973e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28b943c2-eb66-416f-a029-89a33a158ac8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01f4872d-999f-4daa-83a9-dca81507d484"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9516943-be6f-4fb7-80cd-06ebc01d4bf9",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "573039eb-45f8-4fd4-abe0-5f26cf54c113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfe7c1a6-21f2-4c07-ab84-dad4f5ad27fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80abfc33-2534-417b-b83e-8056e5075938",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8149ee1b-66c1-48d8-b30e-06c33b84a8b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c1cb148-4b40-4945-bfe9-aa69d3108621",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61d3fe01-97da-4e6e-b984-b04739fc4437",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "484711bb-eb25-411c-9766-a25ce1353f11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9650b92-bb71-44e6-96a4-a89ddfe6ef75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e0c4325-d4db-456f-ae13-903c057beab4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750a8964-40f9-4b7c-a525-59e265d2cd48",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b11c993-9008-4c9e-9a14-9db8ab856e1e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3d3e74b0-ef96-4937-97a6-8a11bfbfdfc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45e914da-e574-44a6-93b5-d31e98580c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac0b0503-2138-40c6-b16c-ef60e2311190"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99e154d7-baed-42e6-a069-955cc562c0e2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3444dd6-5dfe-4103-8b13-5f6aaafc5115",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8fedbdf-7ca1-4aba-a46a-78923473a5ab"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f5e8cee-5db8-40d8-b293-bc5190933de6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5d548c8-2e56-49d5-b7c8-52ccf4644d4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c611df4e-501e-421a-8752-44b47cfb2f39",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bcf1713-ad1b-43b2-a88f-a6ef200e5d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32cc64c-2c14-431d-b748-f49fd1a4c29e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed4f59de-490d-433a-88a8-90d6b6a192eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86af2891-75fa-47e8-945c-f30f763b5c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93e8986c-dc84-43da-84df-2c4f7beef528",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "697b76ea-95a9-4ae8-9ddc-a96c1ae17d97",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124263bf-fe8d-4e16-95fd-f58dfba5bccc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9610da2b-7e06-43f2-bebf-f8a90a641180",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58dc42ab-9c38-412c-bd49-ec65261e99c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3dd6f58e-ba49-4237-ab13-6a69c1a15743",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65ba4bd9-784c-48b4-a045-ad725f8ccc32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d90b2b4f-c817-492c-afbd-876f52cb98ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6275e2dc-8993-4bed-bcd3-27a5db9c5879",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db83b983-29f7-4041-a837-f8373843de68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498b2976-a7ec-4cd6-aa21-e5698d7cd695",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18d31d4-c7db-4626-92bf-0948a2082968",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1f24f578-3b0b-4b4a-9bd9-91d75a202f90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be88762f-c9e8-4429-9244-177f8d1077ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43b7e5f6-0df6-4f66-9d01-01d1c27a9465"
                        }
                      }
                    ]
                  },
                  {
                    "id": "475aa3ae-e35d-41e2-83ec-0d26d6179b8f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c96fc55-f251-44b8-b4a1-9b9968b7ca9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af31fd3d-68bf-44c2-b4c3-80cf5028e166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb1c6db2-5e57-4da1-ba9e-bc770b385ee2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20191575-3cf5-4b07-a4a0-fc1fd131bdf1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "892f2be9-1f2e-45b5-a8ff-2caa7b12894c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c2c1f9b-4019-483a-a7ad-0b95534b6802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "124e8ab6-3572-482e-970e-c32f18a512da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6c0d05a-8091-4f60-90dd-d88c23afca0a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e85ab8e0-81ee-4368-827e-0d5a9155e284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5f2a77b-39f9-4e2b-bc92-05a862447c05",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd5bbc2e-66b5-4f02-80cf-ad3f51f8e45a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e10dcc35-2a2a-406c-8567-420d2ce5eff8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26734b34-1e96-40b0-810f-12c2b7397ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd5d2958-fea0-4781-b672-e3fd56cc6336"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00123bcb-4891-4d32-bba1-54c6aaa44258",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1af35fcf-66cd-43ce-8a00-50358aebc979",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf1e7ed8-0909-4384-bbbc-c506290b3668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17149c5-1a85-403b-aa7b-b0bf2e953143",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15ed7f1d-ced2-4569-aefe-39d2f1c332ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e85e4f88-1af3-4a18-96a8-ec8e208da319",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7be8785e-64d6-4234-b28f-32cd77ed6484",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7200f13f-537b-450d-b143-4c2448cdd5de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca7f95a-70f1-43b1-9d9e-048ee89f53a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7a7b7f4-143a-4fcf-8d40-9a6298adb5bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3bdc1a-da2e-4eec-b0a7-fcffe89e4a53",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "718f959c-673a-4c7c-a2f6-24ef34e16802",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbf7f4d3-59ca-4564-9662-5b155598fc58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bdf5656-59cd-49cd-a920-a0c2267941ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b09b953d-30e0-4968-9f73-de53b9caeb1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fe2451a-9305-491a-9331-0fcb29dfa37f",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13aa0d67-6871-491f-9132-9938b804ec59",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1ba2781-4e4b-44c6-9225-8362adafcede"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7399c77-7d02-4669-a13b-2a2785ac09ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21ad5000-5717-442b-aeda-77e356dba494"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34d269ce-f8c4-4550-ad3b-551904492b0c",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06f6aa95-79e4-4681-9df6-fd8b79a12337",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fff35d90-3191-401a-965c-89fce3b6e54d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "97d52707-0d5c-4197-a65f-a8ae5ab6f39d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2391c45e-9755-4ea6-b7d5-e610ab4e80b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04c2be56-6b3c-412f-b173-e08cf7cfcaee",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba5740d-5406-4206-91c5-d21de3bed616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "895a7ed0-bc15-42f2-8cc6-75a30124ca2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66971353-c7e0-4c59-a2c8-4a548804fd4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d30a130d-8c5f-4bba-b74c-42d70417d314"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad8e0f2-5200-4376-a6da-fb8ba5b42baa",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c408c52-b8d5-4e83-8465-fb5dfc645abf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24d8fd3e-d9c4-443d-a3ba-49f47d28107f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "021bd20c-3f84-4065-94e1-27107cfa7142",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "386f0e1e-bff0-4e9e-ac2a-c30827036db5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaf01c94-16d8-4e7b-b8b5-e6628926e48f",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc36d61f-8531-498c-a1ac-0ebc134dab43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d37d3af3-8e32-4720-9dbe-8fe28cc95f79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fa566e-4e87-45be-b186-324e71fafb39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c8f2c40-f846-4410-8340-2477da3abb85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81c0ffc4-68e6-4a07-a6a9-82ea2f18253b",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8fcbe05-513c-41df-943d-64afc5efa543",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67625e1-7b1f-4467-8393-91a33d74907c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06286971-011c-4514-9c3c-6ab54e21f618",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63881ac-4c2c-4612-b400-ace0a88f3fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a603636a-5a9a-4f5a-afac-f2e73eb44cba",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ad1ce77-b61c-4b0b-9c89-12735319f849",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e6f4d483-19ca-43ff-a72f-717d94681d11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3871aa1a-be73-44f2-a0bf-5688a20b2fa0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "773f7cb8-b698-4e44-84c2-4b926e3f47ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813124bd-c7d4-41cb-b1c5-cb250492d5dc",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "27729793-e3b2-47d2-b52d-54d3d53c2183",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "035752eb-e8b6-4c4c-bf6d-9b608cf4333e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcc03aeb-c193-4092-bb64-d14c986b0242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5cdc5f4-dc58-4b8b-91f3-de5cddaa67de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e86a614b-19e6-418f-b784-8a7c2da6fc88",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91d86446-2f84-4b02-9b33-2224ba6a0288",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d06c0a2-e003-43a4-a971-e80d1e4db115"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "77bfa82e-6599-4242-84af-fe747f5f4125",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd8b259c-b53a-4cf4-81a0-51ab9d448964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96b56b3b-9211-4c93-8a16-fb018963d83b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcbf33ca-b8e6-43c6-80ab-44c1b9466fb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2a71afd6-5133-4083-ab72-74f6b8f88ab5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91de2a74-7970-48d8-9882-fa9c228af28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "617d7988-70d6-4fc8-b7cd-bda24415249a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3650de52-927a-4380-952f-f673b2dedffb",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ffbca957-484d-460c-9e47-533f34a4c308",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7775eb7-101b-4edb-935b-8a1af51e1145"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a42d243-b997-47da-b351-9be9b1ad193b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afaae250-c198-4996-8380-7f41b73c2605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06134532-aa40-4842-8086-ef0a2a9d9586",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "014bebbe-617a-4261-b20f-f07db6735b33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0638dcce-8d31-4255-a8e0-a8a1e0e58724"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6b3f7c9-2eae-4a0b-84f2-678381eaa4f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2f20aaf-9bec-4ec5-a937-442ae94bc17d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aef53c19-6964-44de-81c3-b2a93d90dbdb",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b4e3b6a-ca04-48c4-bfa2-a4f30cf40318",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bfb60f6-92ac-4fe3-a7ca-c2880c4ad9e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "29261140-d851-4a78-bb42-00612de822e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a84fe59-6c9b-44fc-bf69-21674992525c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d141c02-436b-4815-92d0-556e94a6ee0e",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ee94ac7-440c-4130-8461-e318f4846519",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fcb0c452-5117-4773-b93d-3fc38422e003"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfe9df00-2c00-4f88-8c23-a7a9d06e0399",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0eef165c-ae3f-400a-a326-9ca7e51dc262"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de946bd2-2933-4482-a225-20a16a911afe",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d65a7810-038c-452e-82bb-89d7b6ee9ed5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3066925f-dc6b-446a-be43-e401f13721db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e51f74-8344-4341-be8e-111bdeabf0d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a4f67fe-622d-412c-99bf-e61ffd55240e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "176a0b46-499f-495d-8335-958a3a0584a8",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4beef565-71a9-4830-b8c3-86ffffce536a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef2a474b-3f78-42a0-a560-d3ebb5ea43db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c53ae62-f57e-4531-b5a7-c877ea975c45",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0f542ea-2eb9-4eef-beb3-d94cf786ed40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e67c64db-21e6-45ec-96f9-92f3a2a6b991",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bd4256c-8247-4cf7-b555-20ca0b5fc735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4711d8fa-db83-40d1-b1c7-a4ddfeb8f912"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "20e107e0-ec43-44f1-ac04-49ef4377f1d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06ab41c5-864e-4503-b322-c955633fbf98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f5157539-559e-407f-a703-3cff73f2edda",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a6fae37-89a4-4e8b-93a9-9774a95fe8a8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b7a2eb6-f769-481a-8128-b32b9525333d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a394db8-8ecd-4920-acc3-49b25d93f1a1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20aa856c-ac0a-447b-a7bb-991c49e56eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a110616c-28d4-47ea-b864-6c0a31784858",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9049d78-efd3-4671-893f-2d97d136794a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7080d685-d508-4d72-85a4-9fa7dc53dcb7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c163f8ba-0fbb-4006-b354-db072f7af71b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4c7d452-c0b9-4d16-a3d9-5f27b2635562"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d585b7b-eec8-44c9-bea9-d6d9de293e2d",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d9674a7-8ac9-46df-8678-7144d61facb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9019ea5-c828-4624-be94-5e27dbf69745"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe4b9f56-73b9-4803-9397-057c38893a09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98d57de6-272d-4d56-a3ab-6dcb93f03f5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "477c0bef-368c-43a7-b191-4453ed27c7a6",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "667eda71-30e8-4df5-8443-c6cb5b162915",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "31ce4cfb-3111-476d-a92e-fe02719d5c9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0be94394-9ab4-4f3c-85da-35f9864287e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9928641-8c76-40e9-855e-da5db36c3a12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e9039c3-5f09-4796-b7cd-017d6d30baa2",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1ace473-4c13-4c2d-a4ae-2946bb2e1884",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "40c6464a-5666-41fe-985c-0263cd7ae05d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a12c9f1c-84de-470f-b829-136240a5d486",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43ec35f7-ddf6-4aa0-b7fb-e9e7f5abbfec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60f08de8-a024-4ff8-87dd-4d6ce5b3ba6b",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37b9512c-170c-4cf5-bccb-27eb4f4133c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e326de9e-0371-432d-91df-93fb891ad465"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4fa552-6ae1-4216-991a-82527b1fcdbc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b43097a3-7eb2-4e46-a8c8-31bde8f01ea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30d030b3-2c0a-48bd-9bb4-ca3abcf1ec8f",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f27f2769-d68d-4bd2-871c-8906eca7cb35",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "08e9e7e1-bcf4-4135-ac4f-eed82d40fc06"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "688a47b1-c30b-4958-acfd-621ebb1b4465",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc4cadcf-33f5-40b3-9ed2-efe3a9140532"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17e45dd6-d54b-49c7-9e95-f179b7a69959",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4756ba4b-b762-4f10-8c26-3c594c18fb9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2dd2d263-2f03-4e6c-9ac9-cab8739797c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b34e6f3-0f7d-470e-b030-952fb0b169ef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "283c81c2-d3f4-4c57-b3c0-fa1a54b64cd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcc4947-8892-4ac7-9955-354cb10b0bdf",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d3ca8ca-d25e-459a-9022-496df78952f8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2b9c5959-10bf-40b2-b010-7c0949497535"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5215b7d-d525-4a1e-bc13-ada406e709c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "201e794e-990a-4125-a8a4-4bb3bf2a4605"
                        }
                      }
                    ]
                  },
                  {
                    "id": "613cf217-1b5c-4ac6-ae8e-ab6746052f0a",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22e887de-5ae0-4ba4-881c-3036d67fa3d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d190f1c3-bc0a-43ee-8e65-edd117a5baa3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "049ef979-b19a-4caf-b023-0d9a60304877",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bcc3f5-01da-4c7b-b424-a6d9a4d113f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72838f4d-cdd5-44dc-8fbc-61bf1bb65f6d",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68efa318-0887-4ebf-b7aa-d2deb3ab1cb7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eabae4bd-4c0d-49f9-b12b-e5461f8cc79a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4e63336-59a1-44bf-a676-e79aab096967",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cad60f2-2010-48ef-8e55-a31692c30478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fef0ef79-b444-459f-b6b4-5cb45f359b3b",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "025a6d7c-8ff3-42f7-b21c-95c2f91c8833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "807aaa58-58c6-4bc2-80ef-41ecd951ebb4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf225390-7424-4383-8d63-6bb781cc8347",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52cfca45-6110-4692-ad33-f5bd11ddf79c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9eb0124d-b25f-4224-b5fe-2555b571770b",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee96d7ed-6075-40ab-81d9-f8a57d2078cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df1de735-80b5-405e-8f3b-7f6f91520593"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5ff3a9c-0daa-4ab5-80ec-abc511abbcb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "faa48319-88e9-4da4-b622-3c96522f46bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed742dc0-06f6-4fbb-91e0-21fdeb1a48e6",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f16ea44-8478-4d90-b749-fa3e78fda1d1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5276875-ca71-440f-a82e-af8527fd4ba2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "771bc534-8010-46b0-889a-f2b93cc236c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "747477a6-7d51-44a0-950d-41a0e464b652"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f870e7ae-5a75-4cce-878e-a7ca68221e63",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4d189a-da94-4ac8-91a8-b1346993c1a9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7f804ec5-3f2b-434c-af95-6751b100aef8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f66f6224-bb7c-4f53-8e05-5d571183adca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b807e9c-3bfd-41ea-9fb1-fc6ec8fe9c59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "338f2285-d5b8-4f34-b8af-e6b54d7400d0",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163037a2-fbb9-4863-859c-bcc0ad1843f9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81315581-ec67-4f89-aa68-fef648bb50ac"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6c59078-d29c-47a8-a2a6-276ec494e89e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480856cb-82aa-41e3-8fe3-ff8ff36442cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ee53ce5-e2cb-4192-a0e9-ccbfe5bf1f5f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c69a45-2a11-4d9e-a9f4-a2fba2ec5595",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d2a7233-7e6a-4e87-8bd5-39341041ad45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9ec1fd0-a7f6-44fd-946f-faaa2801aa37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "687157d1-ea51-459a-b73c-8be33261afb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04f99d1-89ff-4fcd-9479-5841ffd05adc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a36589f8-d16c-467f-818e-2d6960e389b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ecb7aa4-8b29-40b0-812e-423a95be7290"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3759a1e-fd2d-4a85-9ce1-f586fbee018c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9306a877-40f2-4ab1-acc9-55a6c78fecff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cdf8f532-f0a1-46d1-96d9-206e6883e1ff",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7684de4c-0517-4cc8-a8ff-f4a1de2a6c4f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04953d0e-6c22-46d2-b388-5b1ac228f4c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1de3eac-8d3c-4282-a60c-550ab0c6cbfb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "877cc816-e126-4992-a100-633f960bcd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4b79d78-292f-4273-99a7-9800aff4ffce",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aafacf7e-2e33-4f5e-be72-e9d5c02386ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8dbf6566-afbf-46d6-bb93-ba2f4a860c92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8312796c-bebf-43d4-83b9-29bda42a85b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c05b741-26c5-411b-be69-89f2240ad6fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd80106-726a-4aec-aaa4-c321d1aa1695",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5976672-50fa-4ff4-a847-b76c87a22d5e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "68f28815-0d38-4c86-bcb2-99addc76c1d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c633bf06-3828-485a-a10b-6ab56349ad65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "98e5b87f-a414-46d7-aee3-370454a8fbe7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a5e46fe-04f6-43bc-b9f3-b9b32489204d",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f2fc0bb-0aec-4300-beb8-70e346b84315",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f350ada5-a8dd-4b64-8386-6c38cc46752d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d1bbd10-bd8b-48e5-9ccd-337871d00d8c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70fc5744-76d2-4a68-8bbe-43a125929987"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3541be-bd6b-4c3a-b391-50bd7e33c6ce",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6b80692-f1fb-411b-9202-4b358093a5d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "295f1d3d-b56f-470c-8dbd-ed95ced7ff3d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efd4ee0-99ac-40fd-98f8-09489e63fce3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0ea56ab-d495-41ee-82e6-136bcf23e98b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e53f4d12-2f84-4ede-915c-d1150b08fc32",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48a2eee2-df9e-4c59-885d-d16ff271100c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6b2b117-07e2-4614-8952-916b77f89dfb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2150c22b-ed93-447f-bd1f-2c2042b36335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af4240fd-1831-4bbb-b34a-5e5dc8669d98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "101300f1-e31d-4549-9114-d04909374dd3",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3832c8a7-6ffb-4c6d-92d0-c32fe6a30010",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "352f2795-c5d5-488f-bdf0-b872683e5778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3bbe5-0daa-4e23-b227-f629ec87603b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e0405b9-a180-4613-9c41-945e1a7c7c05"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05b983ab-c6c2-4df3-a097-0cfd883cbe62",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef4e09ce-c122-4621-95a6-76a63c23a2cc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8c28e64d-7f52-41b4-88e1-3b38dbed6743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "56b6b984-9d60-45ad-9a96-409a631f1100",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80ed39a3-07c2-4029-8556-8ff6f048f561"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "416cf9ae-3dec-486c-b46e-fb026ae7f5ce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "d06a69ef-ac07-46aa-bd46-7af297cb0a9f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a96ae409-b0f9-4e74-8043-7c23df9f5c91",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e35375a9-9f32-4566-a800-2fc75e7f3227"
                    }
                  }
                ]
              },
              {
                "id": "0cf01dcc-8cdb-4400-8f69-af71e2af663b",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a38fb41c-ef0e-438c-a6fe-2a91f9438800",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98ebe096-2b66-4db6-9fcb-8e6e58c59290",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "3f1930f8-b272-4d4f-8f5c-15496cf1907f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f96dd2d5-0294-4c6e-85b8-c501c8b49799",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2ddd02e1-277e-4a38-8192-a2a8e933ce72"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "faec990c-0a10-4794-908f-a45726bb3ac4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9b53329-acc3-43c4-8fbd-4c85548f9867"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7c302f04-bbeb-4764-a414-d16a42a640bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3301fe04-fb40-4431-be33-2fb847f40c01"
                    }
                  }
                ]
              },
              {
                "id": "f5ca8e0f-9632-4dae-adf8-e1ba91eb61dd",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "690b108f-43e4-4fe8-a69b-32e3feec9655",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e7e17a3e-054b-423a-942b-6cce8d06bf0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "88272749-4324-4930-bbea-72595b33ed45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb35861d-9395-488b-b3aa-4aedd344ee57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d671f7ae-59ff-4e74-a384-da0412020bdf"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "fd2070ed-5580-4eff-b119-def7d2a34bdc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "2b5cf85f-67e2-4b33-b10d-e1edd744d9e3",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "5ee00ef8-9d25-46eb-943e-288dbd4f9501",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "78dcf815-6d43-4212-a117-cf59e0204f1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fa4cea23-017d-402e-b26a-e6185e87eab7",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "41174057-abe7-432b-a197-919b64047da7"
                    }
                  }
                ]
              },
              {
                "id": "c6ff6b0f-c5be-4245-9733-d50e6d4e649b",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6e4b27aa-924f-4f1f-bd51-531caa0e0706",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "09e29421-11d9-4046-860c-80ca2598d2b4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "79b7209b-0fa4-45b3-9497-de44bdd3ce83",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2d64da15-47e6-48da-9d68-c4f5773e6d9a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "108f9888-af75-4975-8a8c-b6c6e843a611",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "afdfdad4-5d53-4ef1-9e09-22ad1d5c40b9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "017ebb96-645b-4d36-998f-c542e3bd7e0f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "71340d58-9118-4728-9d8c-536d9d31cf67"
            }
          }
        ]
      },
      {
        "id": "d6e6cab7-c5cc-4ecb-b008-5441f9db5667",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "83eba386-1cf5-49bb-acf9-35f38c3641d5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8bca9fc1-cd8d-46a2-998c-e3c9a97330d4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "22131ec7-52ec-4b5c-8e62-414bcbda3856",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6fb747d-cc05-4db7-ae6a-7bd3f87b5e07",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "8aeb9504-1764-43f8-bed7-b35910a4b367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "913756ba-ea05-4856-8c38-a91a4b3c6e9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4407a46-e4da-4b1c-8b59-44b4b4543834"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9e6c30a5-a6a9-465b-a268-0b93f5ea13e6",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a60cc132-e895-481d-a9d6-ff8d2818785c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3d3eb268-16d6-4db4-9e52-dda991db3118",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79f9fd5c-b17d-4106-b3c7-53ab53ff4c67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6ad43b2f-da49-40fa-8454-ff65cb851769",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "3b6ae1fe-0627-403c-8e6b-f7555c0cd2f4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "eea5be95-d176-48e2-941b-cae1eca0f425",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "2a20a926-c4bf-4655-bd6c-d2e9680d113c"
            }
          }
        ]
      },
      {
        "id": "daf957f2-0034-4580-a487-00b3467d6cdc",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "a66d0f5b-df1d-471b-a8d4-614f286373a9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9fbbf231-ce91-4452-beb8-46f58995d1d8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "9531df4f-9721-476d-995f-10392f14127f",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00ccbe6d-1838-4eeb-9782-f5bd74350b2b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9183dcd1-deb0-447a-84f3-b1eb0009601c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "532c5755-51bb-4377-b53b-11f4347ebadf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a0af0d81-3ad7-4e66-babc-94250795e12b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7c9a6461-416b-4916-91df-0f7c4b9b17f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7229652e-2c9f-487c-af60-3d60ead9f7b5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "ca49b8d1-cf22-4fe1-ad72-a47b42b7dc05",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f8837866-6594-4b1c-8783-fa1a1a483d63"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1f74f24a-3ea7-4b04-9514-1af929ec1abe",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "122848c9-4fb4-46c3-b092-c7827be348c5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "2c6d0230-3134-4fd8-ad0f-08f62054d757",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "1171eb3a-5bd5-4140-9e7d-a0d4b756312e"
            }
          }
        ]
      },
      {
        "id": "4207267f-661c-42a5-8462-59e4e27fadfd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "03a52586-5731-4ddb-b721-3c3d05d87768",
            "name": "Negative Testing",
            "item": [
              {
                "id": "800fe5dd-9002-4299-8d90-bf031329a0e9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0d44b8a1-926f-49c7-9da3-71a77caa9a5f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78cb03d-803b-4a04-bfd7-45cb4dc59f55",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f9f29dea-16db-4a12-9de1-6691e9d02d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c5ebe78-500b-4d2d-9d2d-bd5630337edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "389e7ecc-d689-4028-9026-796d4360097f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ad5ce8c9-f89c-474d-a808-0f9a9f70db0e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9844b617-2d37-4d04-abf1-4954e0a2fb2c"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a95285cc-399d-42da-98f9-a0615754e9ad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "641acf4e-0c76-43cd-8724-2c236b3664c7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "be0f0958-73a6-45bd-911f-87dc136b5574",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "098029db-e31d-447a-bc17-557ad3ccdd2e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6f50927a-fdff-4d1e-a703-1472f35206f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e894e865-2970-4786-9375-5d492027d24d"
            }
          }
        ]
      },
      {
        "id": "d568f1f4-19b5-4de0-b170-e9120e39c999",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e029c7e3-51c2-431f-bbce-2ef30d737e32",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ca754891-d992-4fc7-ad44-5e5fc82bf272",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "a012e350-6cf8-40fd-a51f-402067eae980",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5b67db49-b7c7-4603-b3c8-f9ce179d5bd6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6cb4f57f-481d-4886-abc7-5e49d9c647b5",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2083,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 284,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 282,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 571,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1046,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1037,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 13.003521126760562,
      "responseMin": 8,
      "responseMax": 260,
      "responseSd": 16.684837140906332,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1690504704679,
      "completed": 1690504721707
    },
    "executions": [
      {
        "id": "cc4277f8-e864-4fae-b4d2-87aa4f761f04",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 282,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "04e6950a-0e51-4696-9b5a-62c9b449a612",
          "httpRequestId": "311aca32-11d8-42da-837a-ad2c8c21c4fa"
        },
        "item": {
          "id": "cc4277f8-e864-4fae-b4d2-87aa4f761f04",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "f6755c1f-7252-475e-b878-8643c019f190",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "a96311d9-6423-48a2-be6d-511e8ca86291",
        "cursor": {
          "ref": "f43a55b6-f850-4d2c-bd39-43142cf404ab",
          "length": 282,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "76c3b985-adfc-4c6f-a78f-6db510e01bdc"
        },
        "item": {
          "id": "a96311d9-6423-48a2-be6d-511e8ca86291",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "360f39b7-cf01-42d8-8966-921b32a5a4a7",
          "status": "OK",
          "code": 200,
          "responseTime": 8,
          "responseSize": 0
        }
      },
      {
        "id": "590abe2e-017d-42d8-9f65-39d52856fb41",
        "cursor": {
          "ref": "1a3184b6-e8ef-4348-8afb-aa60b3b4777a",
          "length": 282,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "68796ff5-79ab-4931-96eb-7b50a7a86232"
        },
        "item": {
          "id": "590abe2e-017d-42d8-9f65-39d52856fb41",
          "name": "did_json"
        },
        "response": {
          "id": "3f06d696-e889-451d-a988-e9e402856bcb",
          "status": "OK",
          "code": 200,
          "responseTime": 54,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1e81d-e8ec-482d-9597-ff77b61c1866",
        "cursor": {
          "ref": "9ea01d4c-9e5a-413f-8bb9-3688e3a5abfa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b629bf5-01aa-4810-bb8e-1fbe27faa277"
        },
        "item": {
          "id": "b9b1e81d-e8ec-482d-9597-ff77b61c1866",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a344d15-118e-4d70-aee0-34f9ce1eb0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9b1e81d-e8ec-482d-9597-ff77b61c1866",
        "cursor": {
          "ref": "9ea01d4c-9e5a-413f-8bb9-3688e3a5abfa",
          "length": 282,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "2b629bf5-01aa-4810-bb8e-1fbe27faa277"
        },
        "item": {
          "id": "b9b1e81d-e8ec-482d-9597-ff77b61c1866",
          "name": "did:invalid"
        },
        "response": {
          "id": "2a344d15-118e-4d70-aee0-34f9ce1eb0cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 13,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f031e32d-f9f3-47a4-a27e-14dadb48108a",
        "cursor": {
          "ref": "e7f2dc89-4612-40ba-854f-95de038b6df2",
          "length": 282,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b0a1b6f8-129b-43c5-ad35-18ad4721f9d6"
        },
        "item": {
          "id": "f031e32d-f9f3-47a4-a27e-14dadb48108a",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "27a3885d-ecc1-49ff-8cad-29dbc10272cc",
          "status": "Not Found",
          "code": 404,
          "responseTime": 47,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dac1baca-5a57-4a70-a447-1f309e984057",
        "cursor": {
          "ref": "fab71039-3bbe-4bd4-b37d-efbc059b47c0",
          "length": 282,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "683121ea-e966-4ecc-bb95-ead58d93ab5a"
        },
        "item": {
          "id": "dac1baca-5a57-4a70-a447-1f309e984057",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "6c573b9b-cb5e-442c-a7af-74386f930c1f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20e70d67-8a36-409c-b1c4-54db815eadf1",
        "cursor": {
          "ref": "dbb847d3-e269-48fa-92ca-6ef4947ff907",
          "length": 282,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "8e47b390-8e3f-4b6d-a623-b66d7a1cebca"
        },
        "item": {
          "id": "20e70d67-8a36-409c-b1c4-54db815eadf1",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "bd5b0579-3849-430e-8078-357e4d08922a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 11,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b49a513-1ed5-42d5-b390-a467bec73d44",
        "cursor": {
          "ref": "7075d4ed-661c-490e-900b-652b137983f5",
          "length": 282,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ab8d7d56-ad22-415a-90a6-157c25fa7de0"
        },
        "item": {
          "id": "6b49a513-1ed5-42d5-b390-a467bec73d44",
          "name": "identifiers"
        },
        "response": {
          "id": "fbee3e84-4c9f-4aeb-bb1a-8e25ec07c1f0",
          "status": "OK",
          "code": 200,
          "responseTime": 46,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "deba03dc-e5a9-4a24-9284-61af437c2148",
        "cursor": {
          "ref": "d8c385d5-d95c-4b1d-bff6-68e2759b45d2",
          "length": 282,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "c143ef62-a36c-4814-901c-a906ec17f8c7"
        },
        "item": {
          "id": "deba03dc-e5a9-4a24-9284-61af437c2148",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "e1caea79-9b45-4256-a9d4-e034dc646bcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "104464fb-fb83-4688-a0da-7b955496a3c5",
        "cursor": {
          "ref": "39105b2c-aa35-415f-8273-5124189b234a",
          "length": 282,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "dff7cc50-07ef-464d-9427-b71adb33669e"
        },
        "item": {
          "id": "104464fb-fb83-4688-a0da-7b955496a3c5",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "46df13ff-a837-4990-b746-3fe5b9cdc70f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8562ff6c-6003-4978-b0fc-bd0d16f0ab52",
        "cursor": {
          "ref": "34ace0ba-d7b3-4d3b-9b0d-2aab30028439",
          "length": 282,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "62ef80d7-710e-49e0-80f1-8d27cd071c2a"
        },
        "item": {
          "id": "8562ff6c-6003-4978-b0fc-bd0d16f0ab52",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "bbd42744-f5b3-4ee4-ac96-ccf2a606d558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cccf48b-cdb8-4219-a1ca-16a28eb7d61f",
        "cursor": {
          "ref": "d4205110-9f2b-4e4f-b426-d07d86d3b37a",
          "length": 282,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "f3d1b21c-a8b8-41ff-8217-1d7afd3909aa"
        },
        "item": {
          "id": "2cccf48b-cdb8-4219-a1ca-16a28eb7d61f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "7e89237e-9103-447d-beb2-72ab1c7fb9d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc101c5a-cc55-494a-a36d-0e446604ac21",
        "cursor": {
          "ref": "91d8091b-7b2e-428b-8565-4c313dc4b49c",
          "length": 282,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7d63af06-25c7-42c9-9a18-af6167ec9dff"
        },
        "item": {
          "id": "fc101c5a-cc55-494a-a36d-0e446604ac21",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "5517c039-cca0-49f6-bea9-0720855885cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "172ba8b0-c7da-4232-9f7d-01cca2f2367b",
        "cursor": {
          "ref": "da4f8038-2f65-4e70-8176-8dff52081ac8",
          "length": 282,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b77f1a88-9602-4192-9afe-aa11198dba1c"
        },
        "item": {
          "id": "172ba8b0-c7da-4232-9f7d-01cca2f2367b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "d6a20cff-9819-4f2f-8b36-123a11036911",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e8f21e-a906-43e6-b3e7-35f86fa342fd",
        "cursor": {
          "ref": "d03fead3-7f5a-4132-b032-ad948114c70e",
          "length": 282,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "eb60daaf-a237-4559-a534-2654525149b8"
        },
        "item": {
          "id": "f0e8f21e-a906-43e6-b3e7-35f86fa342fd",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "9dccb7e6-7a89-4ca7-86df-7c2fb40b4ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4c9b42b-378f-492d-8a01-e6d96493506a",
        "cursor": {
          "ref": "6da15fc7-38d1-481e-a2dd-9632c333958b",
          "length": 282,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "bc1574de-70f0-4765-acce-82891e8c822b"
        },
        "item": {
          "id": "a4c9b42b-378f-492d-8a01-e6d96493506a",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "5879e02d-4ef0-4bfb-b36d-db69aa6b52e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13a6ecc3-c86e-4e4b-889d-29d196cb9292",
        "cursor": {
          "ref": "764a42cf-ad73-4745-b34e-2e33eb8c970d",
          "length": 282,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "f174a376-b3e8-411c-bb13-37ff753f4412"
        },
        "item": {
          "id": "13a6ecc3-c86e-4e4b-889d-29d196cb9292",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "cca13c9e-2fd8-43db-835d-626cf5c32d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb0821a-5ef8-47d1-a2aa-8c6fd2695269",
        "cursor": {
          "ref": "0704e4a7-5502-41a8-b883-15d47a2ce297",
          "length": 282,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "60c68957-ce45-4a6b-918c-f9b291fca738"
        },
        "item": {
          "id": "3eb0821a-5ef8-47d1-a2aa-8c6fd2695269",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c6affa0d-d813-46f9-9305-f6ead6c41946",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "feaa104d-37e5-4c8c-98dd-59287c0531fe",
        "cursor": {
          "ref": "24b69d3e-e1a7-41a6-8a39-2c4c82ba0a51",
          "length": 282,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0dff2a58-75f3-44a0-8a86-278ec692928a"
        },
        "item": {
          "id": "feaa104d-37e5-4c8c-98dd-59287c0531fe",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "2922d428-7634-4dbc-b091-2ab4c5c74c46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f16d5ff7-bc6f-4d6a-bbd0-1e6fc9052156",
        "cursor": {
          "ref": "2a9e287d-e246-4965-a5c8-432c159315e7",
          "length": 282,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "310fdb36-02e3-48e3-90c5-023d90fb11d9"
        },
        "item": {
          "id": "f16d5ff7-bc6f-4d6a-bbd0-1e6fc9052156",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "6a371c7f-c7e3-47f6-aa74-eddcbba139e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4de368ff-3531-418e-9264-cfe561a1cf2b",
        "cursor": {
          "ref": "76b5c1f6-22f9-4742-914b-cf714347d57d",
          "length": 282,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "dd4223c9-b118-4b22-8fcf-e00d295a1b58"
        },
        "item": {
          "id": "4de368ff-3531-418e-9264-cfe561a1cf2b",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "1583d017-df5c-4123-b4f4-6a56558c32bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4228ccd-8ae2-41c2-b399-5d2e534f8d74",
        "cursor": {
          "ref": "fccc0cde-b7d2-415b-92f6-e6d2af840991",
          "length": 282,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d331b745-09bc-4fdb-9139-c31f3f26a8fb"
        },
        "item": {
          "id": "e4228ccd-8ae2-41c2-b399-5d2e534f8d74",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "8c6e628a-9836-46ad-8a72-c5bb283b73b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4212af3f-a218-43c5-976c-d6bbea6fd23e",
        "cursor": {
          "ref": "4c49f9f5-a6d4-4652-8826-d17c865e2d9c",
          "length": 282,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "c111541c-258a-427a-bd2d-426913095bed"
        },
        "item": {
          "id": "4212af3f-a218-43c5-976c-d6bbea6fd23e",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "fc878416-447b-4ef3-b6b5-6800cdd9cd55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57525f45-d81d-4a8e-b6a1-830e35f19bf7",
        "cursor": {
          "ref": "1c16f5ed-898d-401a-bc7f-dfe103f60d25",
          "length": 282,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "a5de55db-1f88-4b12-8a18-2c74ad0b11ec"
        },
        "item": {
          "id": "57525f45-d81d-4a8e-b6a1-830e35f19bf7",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "cc16ea29-73bd-4683-b481-48ec6e8aa41d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90f132af-8c1f-486d-8e38-ebac453c0e80",
        "cursor": {
          "ref": "c2f6d4c9-cbca-4d26-a907-5bb4dedce271",
          "length": 282,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "3a038686-1f5b-4667-8059-85e3fcd757c1"
        },
        "item": {
          "id": "90f132af-8c1f-486d-8e38-ebac453c0e80",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "003597d2-e350-4ea2-b4be-6def560c441c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fe4915f-e2d9-4e5d-b948-577eafdb3c35",
        "cursor": {
          "ref": "d4ad622e-998d-4f0e-a8b7-499d92415007",
          "length": 282,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "a00cdc23-59d8-4b1a-8cc6-8d6fd0afb7c9"
        },
        "item": {
          "id": "0fe4915f-e2d9-4e5d-b948-577eafdb3c35",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "1d239c6e-b5c0-43eb-9a2a-6853d387ef1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09f47e68-61c5-4756-a3ff-59fb32c796f8",
        "cursor": {
          "ref": "0f4ef1e2-27c5-467e-9603-d0284000f175",
          "length": 282,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "0eb969db-2888-42a5-9a95-1b0d948c9316"
        },
        "item": {
          "id": "09f47e68-61c5-4756-a3ff-59fb32c796f8",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "6e433f43-d8b4-4bbd-89c3-c8fafd8b1561",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23fbcdf5-44c8-4b61-a0b5-19d5c909a00a",
        "cursor": {
          "ref": "6b0150be-6b9b-4d56-bf74-d7d27a9c2638",
          "length": 282,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c6e839d9-085d-4673-9684-7add1b848358"
        },
        "item": {
          "id": "23fbcdf5-44c8-4b61-a0b5-19d5c909a00a",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "99bc7dfd-4917-4169-8808-9da406852558",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99810f19-40f6-418d-8a44-3395cc66f98b",
        "cursor": {
          "ref": "dac51aa1-50b2-45b5-9f57-beb6aad4ae4a",
          "length": 282,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "aa8ef332-a788-43b8-b305-1f4f9046005a"
        },
        "item": {
          "id": "99810f19-40f6-418d-8a44-3395cc66f98b",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "35c3ab6e-eb11-412e-b8b7-c889b5e9fd76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07430079-85dc-426f-81da-0284365da0db",
        "cursor": {
          "ref": "f584b7b8-b382-4b81-af31-20b696b10961",
          "length": 282,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "e7716fc5-7f02-4280-a929-7ae554be9c26"
        },
        "item": {
          "id": "07430079-85dc-426f-81da-0284365da0db",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "bee2ac55-0d63-4dd2-b97b-b8af52bc7cf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "237d834a-bb80-4733-97da-ae61e29f43a8",
        "cursor": {
          "ref": "b178b01c-f6ee-4420-befc-b8f51bb50856",
          "length": 282,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "395650df-cb88-4616-9889-4a495491c7a7"
        },
        "item": {
          "id": "237d834a-bb80-4733-97da-ae61e29f43a8",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "db853c79-81a6-492e-a770-6406e9538443",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "551b9312-79fc-46d0-94c3-f1f9cc11cc18",
        "cursor": {
          "ref": "5cb32e6b-a51e-4faa-afdb-f1b9d2b887b4",
          "length": 282,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3fc53ec2-b324-4a1f-83d1-096803e0729c"
        },
        "item": {
          "id": "551b9312-79fc-46d0-94c3-f1f9cc11cc18",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c1c72403-6654-4ad0-9d80-f3951c87b38f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "100f78c4-bcb0-41b3-bbde-00660fe5e2ce",
        "cursor": {
          "ref": "346e3146-e5b9-40a3-9438-28b0ea348a01",
          "length": 282,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "6f775cb0-ee73-4c79-b666-41fc31adf320"
        },
        "item": {
          "id": "100f78c4-bcb0-41b3-bbde-00660fe5e2ce",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "46a6130c-fa21-4f86-9a88-42637b95c768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1db9092-915d-431f-ae8b-ee214c92e439",
        "cursor": {
          "ref": "c5c23188-cfc6-416b-b6d2-ca809ca477e0",
          "length": 282,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0c5eca60-5701-461b-8c70-63ab52848a8f"
        },
        "item": {
          "id": "f1db9092-915d-431f-ae8b-ee214c92e439",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "4941cf3f-c1b9-4efa-a361-7219207c2154",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1360fc48-ab3d-4b95-9e3b-5db94b9d3621",
        "cursor": {
          "ref": "d6d5dac2-b51b-40d5-98a3-ca9b25f9db6d",
          "length": 282,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "4171429a-9cbb-4e79-b506-5608e9017764"
        },
        "item": {
          "id": "1360fc48-ab3d-4b95-9e3b-5db94b9d3621",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "6a442c4a-b10b-4b60-9307-c499d9ea9f41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aad3886-6687-442d-8b31-37b9c24d826e",
        "cursor": {
          "ref": "46ae4c8a-8095-4b6a-9429-1d34d4b5ebf9",
          "length": 282,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "39a4eba7-c636-4937-9a6a-5fe008448451"
        },
        "item": {
          "id": "9aad3886-6687-442d-8b31-37b9c24d826e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "415a5c2d-248f-4773-b879-8854c87383d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4948d3b1-6bd1-4135-89d2-acc05b726f31",
        "cursor": {
          "ref": "24027437-d79c-4208-ab64-c96a8956a76c",
          "length": 282,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "e090ff28-a6d5-408d-86f2-1c8f6f8efee3"
        },
        "item": {
          "id": "4948d3b1-6bd1-4135-89d2-acc05b726f31",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "966bbd14-3d99-49a7-8a38-e58a2054f53c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb1b6187-31ae-4b30-9e39-733ce4b0da05",
        "cursor": {
          "ref": "5920942d-22f6-42fc-9863-9cc40bb2b29b",
          "length": 282,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "f3c09a3b-c81b-4914-95ea-d53f81c39a34"
        },
        "item": {
          "id": "cb1b6187-31ae-4b30-9e39-733ce4b0da05",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b63350c9-9271-4ea9-96a7-074dfa711699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdfb953e-8dd4-47eb-a4af-cb657aad66d1",
        "cursor": {
          "ref": "69cce5d5-8f12-47ed-bc39-5d361fa9f4ad",
          "length": 282,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "86598321-c8f3-4336-b2c6-fb68b2d64822"
        },
        "item": {
          "id": "cdfb953e-8dd4-47eb-a4af-cb657aad66d1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9b3326fa-50cc-4acd-8228-319c09d65730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b652a1d2-3c9a-45c5-87e3-4cfa82091ea5",
        "cursor": {
          "ref": "f23e6167-66b7-41bb-847e-ef03a022969c",
          "length": 282,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "a6d9fd16-bb79-4e4b-9807-cad05b274b81"
        },
        "item": {
          "id": "b652a1d2-3c9a-45c5-87e3-4cfa82091ea5",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "a42588a0-deac-4c63-bd67-46229c4a6eca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29c5315a-50a0-411e-8eda-aeaa854f6d38",
        "cursor": {
          "ref": "20170986-651f-429e-aeaa-d951e30afd3f",
          "length": 282,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "41b8b092-38df-4eac-a95e-980a7bd4ed8c"
        },
        "item": {
          "id": "29c5315a-50a0-411e-8eda-aeaa854f6d38",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "78b867b9-7d33-4d0f-a7b4-9baaba9e21ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10858503-f632-4ac6-ab2d-e6f98445a99d",
        "cursor": {
          "ref": "87c2d71f-8b11-4901-85d9-b8b210291903",
          "length": 282,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "e2631ad2-b66b-4d43-a16b-4a86fbf13f2a"
        },
        "item": {
          "id": "10858503-f632-4ac6-ab2d-e6f98445a99d",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "b9a87cb4-5df4-4ce2-8ebb-f4f55f4589bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbc2f238-4991-46ca-b925-34056abb6789",
        "cursor": {
          "ref": "98dc2a78-00d4-48af-8eea-a08a932dc3bf",
          "length": 282,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "a04548da-11b0-402c-b9d5-3afa29363c88"
        },
        "item": {
          "id": "dbc2f238-4991-46ca-b925-34056abb6789",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "5918b728-2c09-4ea4-8872-b8a2f01b0227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0f4ce21-8665-48f1-8390-d61d3d057581",
        "cursor": {
          "ref": "63672392-aae8-42b4-898a-789b1ff5d6f4",
          "length": 282,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "66fe0877-ae0c-4237-b3b0-0e6bb9ad6082"
        },
        "item": {
          "id": "b0f4ce21-8665-48f1-8390-d61d3d057581",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "a990d495-279f-43b0-9753-a3d806c11725",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "667bf9e5-68d5-4490-9e67-35ba7050592b",
        "cursor": {
          "ref": "5785b3c3-ab8a-4d3d-ba8b-ecafc3e111a3",
          "length": 282,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "fa730b78-ec68-4c2d-a3ff-367aa37abda4"
        },
        "item": {
          "id": "667bf9e5-68d5-4490-9e67-35ba7050592b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "6e320833-0670-4491-8908-9b145c8c4ecb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c3a8de9-0449-4188-8a3e-bc03e2ae2ac8",
        "cursor": {
          "ref": "be8cc3e7-9753-4f50-affa-6f2c58dc467f",
          "length": 282,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "3fea34f5-8ce6-48e9-a528-158eaaf57416"
        },
        "item": {
          "id": "3c3a8de9-0449-4188-8a3e-bc03e2ae2ac8",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "dc6f2b82-7cec-49fd-9c07-e732ef96c08e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0bfec01c-7908-492a-8147-69e18617a617",
        "cursor": {
          "ref": "62ff1aab-8b4e-441b-adc8-333f83e30a4a",
          "length": 282,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4144c0ec-2752-4783-9acc-59ef7444327d"
        },
        "item": {
          "id": "0bfec01c-7908-492a-8147-69e18617a617",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "ea568e11-2d61-4067-a6e5-ea6e93b2e46c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1bbb275c-362e-49df-84a8-b5b5533eb852",
        "cursor": {
          "ref": "10144cde-07c2-46c5-920a-6c8438231157",
          "length": 282,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "d1087dfb-96aa-4122-a958-e7a06273ca6a"
        },
        "item": {
          "id": "1bbb275c-362e-49df-84a8-b5b5533eb852",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "c689a103-0c4f-4e4a-965f-a6240b2a00e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "461cbc35-a89a-44fe-8910-7c643e51cf22",
        "cursor": {
          "ref": "31b63030-80eb-4db9-891d-28d9d9241049",
          "length": 282,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "4615a030-25eb-4c44-a1e5-8d533eaa5212"
        },
        "item": {
          "id": "461cbc35-a89a-44fe-8910-7c643e51cf22",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "5921f628-d823-4526-8b48-526cbca2da69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4133dc-4617-4619-b771-ba594ec6135d",
        "cursor": {
          "ref": "ee54a4da-3543-4305-86ad-0eea95372fbf",
          "length": 282,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "b596b831-3820-4ded-b336-aaf6a5ce9b3a"
        },
        "item": {
          "id": "de4133dc-4617-4619-b771-ba594ec6135d",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "cf30e08a-504f-4c26-83b7-b0bd8a6ce62e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5def6607-230a-40f7-a44b-a6369f8610b9",
        "cursor": {
          "ref": "5cfe56b1-a074-4150-a1ff-24d958bef097",
          "length": 282,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "64e67241-7acc-4db3-a006-40c30566de02"
        },
        "item": {
          "id": "5def6607-230a-40f7-a44b-a6369f8610b9",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "11fa3a18-6167-477e-af39-7f579221318d",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 19,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5fa2bea-6cd6-48aa-aa0a-19fa547ab513",
        "cursor": {
          "ref": "7c895d86-b18f-424e-91b6-d294d2c09a6a",
          "length": 282,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "5312efcd-e017-4beb-bfe2-3fa25b3e4f8d"
        },
        "item": {
          "id": "d5fa2bea-6cd6-48aa-aa0a-19fa547ab513",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1c10e825-b41c-4c94-8fb7-6d5a97e607dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32d6bde9-3229-4cde-a8ef-bc4fe7074576",
        "cursor": {
          "ref": "f3ed5bce-2a2c-41cc-bb9e-0a21e93f9d9a",
          "length": 282,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "dae1b9d0-8565-42cd-9abe-b784300ad920"
        },
        "item": {
          "id": "32d6bde9-3229-4cde-a8ef-bc4fe7074576",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "4e246145-6c83-4b02-814c-8cb8d3aa196b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f36dcef1-a79f-4676-ba76-faa0cd23ff5e",
        "cursor": {
          "ref": "e91a4b73-8f82-4601-8a6a-7e9cd79a8be4",
          "length": 282,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9cce5ce8-f6c8-4cd1-89cc-2b001517384b"
        },
        "item": {
          "id": "f36dcef1-a79f-4676-ba76-faa0cd23ff5e",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "8a8df6bf-ed47-43d9-84b5-d10df0672968",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4202f111-a3f4-4efd-b0c7-e6920f64e990",
        "cursor": {
          "ref": "d8dc1a35-d65a-44db-ae1a-70d193d8eaa2",
          "length": 282,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "97cb071a-5e9a-4156-83ba-1bbf30c680d2"
        },
        "item": {
          "id": "4202f111-a3f4-4efd-b0c7-e6920f64e990",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "f0a2b78c-a172-4d0b-b9ed-edb34f8f0fe9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9054ff51-6c99-48bc-a58b-4ba002d60fc5",
        "cursor": {
          "ref": "4277e300-a013-4145-b27e-739e4aba94b8",
          "length": 282,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "d0ba50d2-c48a-4cdd-8aa8-a43aad6ab6fc"
        },
        "item": {
          "id": "9054ff51-6c99-48bc-a58b-4ba002d60fc5",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "609c737c-9fed-4045-bf39-7038e8f22886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649780a8-2faa-430d-8af0-6b6d3649b657",
        "cursor": {
          "ref": "603ffa22-c6bf-472e-8ef0-5c90f322ce17",
          "length": 282,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "46d7f068-4f1d-443f-ad6f-c313d3772bd7"
        },
        "item": {
          "id": "649780a8-2faa-430d-8af0-6b6d3649b657",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "2d9f191e-723e-4d9e-b3ca-19f931149f42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f57bafa-45cc-4d3c-a5b6-c7e9d311dd17",
        "cursor": {
          "ref": "ffb3b839-0a07-44cb-ac07-f8e0d07f466a",
          "length": 282,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "e07d25d5-1b11-48ff-92be-2266a1f01b33"
        },
        "item": {
          "id": "6f57bafa-45cc-4d3c-a5b6-c7e9d311dd17",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bc40ce58-a6f9-4e21-b46e-33df80cd774c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e553ef3-a368-4ec7-9b45-652ac3243ca2",
        "cursor": {
          "ref": "bb4a7913-c7b7-40d9-8a0b-e42becb67193",
          "length": 282,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "09daff1f-e07b-4525-8df3-f8a69224edc9"
        },
        "item": {
          "id": "3e553ef3-a368-4ec7-9b45-652ac3243ca2",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "140c4295-ec1f-4f5a-b0a4-9ed79b709c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33b21832-dbcb-41fa-81f9-d001e3762288",
        "cursor": {
          "ref": "5319e980-87bf-49a5-ae91-8ed5e0271b0d",
          "length": 282,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "92511a27-2b1e-4b97-b877-943eb03dbdcb"
        },
        "item": {
          "id": "33b21832-dbcb-41fa-81f9-d001e3762288",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "26675828-58d9-485b-b9c1-4bf49168fa94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ea1fb5-da8a-4287-9fdb-70f7017c5137",
        "cursor": {
          "ref": "a6916487-152f-46a4-ba8e-b47b3ac38865",
          "length": 282,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4480a196-d156-40b6-bcde-d67fefe8d039"
        },
        "item": {
          "id": "47ea1fb5-da8a-4287-9fdb-70f7017c5137",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "64bfc354-c912-44d7-a3c7-c5be81a3e603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "daa0695e-612a-4161-ba93-16856eff3cfb",
        "cursor": {
          "ref": "6b1755c3-b660-42f6-9480-7b43dd77352d",
          "length": 282,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7c448365-916e-492c-bb8d-a21b2ef87ade"
        },
        "item": {
          "id": "daa0695e-612a-4161-ba93-16856eff3cfb",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "56fe8670-8de4-4e21-aee9-930f17d81f7c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132ef11c-6302-47da-a397-f7c8806b3036",
        "cursor": {
          "ref": "f9e4ebab-3e0e-467e-970d-9c5812ee0e2c",
          "length": 282,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "15068f68-3dc6-4c44-a55f-4f197f6e8521"
        },
        "item": {
          "id": "132ef11c-6302-47da-a397-f7c8806b3036",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "71d44610-b640-487d-b9d0-e1bf94a2a6fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e04be64e-5e51-41f1-889b-2fd9c56df4e3",
        "cursor": {
          "ref": "693e8d83-1e49-4e4d-af37-5668f5156845",
          "length": 282,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d413a74b-8d8c-4f9e-97fb-4507e0420b98"
        },
        "item": {
          "id": "e04be64e-5e51-41f1-889b-2fd9c56df4e3",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "735afcbf-ac60-447e-8ce3-0e8fa401feab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34c20d39-0659-4078-942c-d2f0969f4ec2",
        "cursor": {
          "ref": "b422e8f6-c6eb-486e-9fc8-42da5982d7e9",
          "length": 282,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "e91e2bf0-6cc3-4ff4-af88-870a4a6bfd9d"
        },
        "item": {
          "id": "34c20d39-0659-4078-942c-d2f0969f4ec2",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "b2bdb226-511d-4867-81a7-d51733c30538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32e0ea4b-f0c1-482f-af86-8ca83d540a01",
        "cursor": {
          "ref": "573c36b4-3466-4642-b8dd-bf07848de624",
          "length": 282,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b0520a0c-3109-4d0e-bf82-2660c3d1dcae"
        },
        "item": {
          "id": "32e0ea4b-f0c1-482f-af86-8ca83d540a01",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "b2218fac-1031-4553-8029-3a27ac8da251",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "767d66e8-02d1-428e-b983-f177d8a124d4",
        "cursor": {
          "ref": "1ae0388e-85d6-4c6a-9c03-2af716321ea8",
          "length": 282,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "584bff37-cb6d-4b2e-96ba-581167e0f72e"
        },
        "item": {
          "id": "767d66e8-02d1-428e-b983-f177d8a124d4",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "55153a4e-3a51-4f3b-9f5c-b807f93cb87f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68300ee4-480d-44ac-9169-0b039676f6d6",
        "cursor": {
          "ref": "8b721e16-1772-4498-be8b-d88418645aef",
          "length": 282,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "272a2020-a764-4906-8ebb-ba5aec75584a"
        },
        "item": {
          "id": "68300ee4-480d-44ac-9169-0b039676f6d6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a780f27e-df87-40c7-a335-8444d0d28734",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6f4ddcb-558b-436f-840c-9a6e7beb4c37",
        "cursor": {
          "ref": "65f521f3-db6a-4280-9584-389e3718d28e",
          "length": 282,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "0344d1a2-2b81-48bc-bfca-55985531f8e4"
        },
        "item": {
          "id": "e6f4ddcb-558b-436f-840c-9a6e7beb4c37",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "7f19f7fb-cfcc-464b-906c-e57a8c6a61fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2870672f-de1f-4dd3-85a2-f08ece9ea4c1",
        "cursor": {
          "ref": "0764c219-127b-4afb-95ca-3e84bc299787",
          "length": 282,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "4551bd76-a6c7-4d8c-8268-5f9596fd2432"
        },
        "item": {
          "id": "2870672f-de1f-4dd3-85a2-f08ece9ea4c1",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "336757f3-7701-485e-90e0-935175724b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa70d16-ff34-4855-a6ac-2f58e03db348",
        "cursor": {
          "ref": "63882cbf-85bf-440b-93a5-7f470a60ca88",
          "length": 282,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "f7f199ab-a661-4511-a3ea-6c4d40ca8893"
        },
        "item": {
          "id": "4aa70d16-ff34-4855-a6ac-2f58e03db348",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "f41b137b-67b0-4516-be26-ab6b3dcd1d94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a5d9dfe-d6bd-477e-8ee4-db5f453ef211",
        "cursor": {
          "ref": "81388697-d7fb-4509-ac37-56b661679303",
          "length": 282,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "b56f38c0-1384-42fa-8d65-308c3d6acc37"
        },
        "item": {
          "id": "4a5d9dfe-d6bd-477e-8ee4-db5f453ef211",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "49dd5f82-41d2-4a82-a977-f741fbbfc30c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f228139-b370-49b1-9faa-c1e662de2f00",
        "cursor": {
          "ref": "99c3ae6b-e8ab-403c-b095-a97e1d07f619",
          "length": 282,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "cb8747f3-4c93-49d2-8620-7b208cbb3149"
        },
        "item": {
          "id": "7f228139-b370-49b1-9faa-c1e662de2f00",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "f02d4c6b-ea8e-476a-a7c0-df1156783dc7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06cdd696-8792-4688-9975-980dbcf68d40",
        "cursor": {
          "ref": "d0b1ef35-9220-4529-9100-43fbc9fd377c",
          "length": 282,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8036b510-55a4-4807-9cf8-04049cac7716"
        },
        "item": {
          "id": "06cdd696-8792-4688-9975-980dbcf68d40",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "496267a1-b884-410c-be31-e63f0077ede4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c602e69-00f1-42f9-8e36-6a9a65cbc895",
        "cursor": {
          "ref": "ce3b9039-dfac-47b6-99b2-f40dc4513b56",
          "length": 282,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "aeecdf8f-8176-45ab-9597-7f08e30dc99f"
        },
        "item": {
          "id": "3c602e69-00f1-42f9-8e36-6a9a65cbc895",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "758e7c2d-65fb-4803-8239-29d7b8127060",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a605046-662f-4e85-b8f3-d664357babbe",
        "cursor": {
          "ref": "c9f6122c-708e-4a77-a9c9-68212f7c299f",
          "length": 282,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "0ceb1e5b-65cf-4704-a17e-51733d913775"
        },
        "item": {
          "id": "1a605046-662f-4e85-b8f3-d664357babbe",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3e971bd9-2c8b-4e34-84ee-22a06d8b89bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdd093f0-7d48-4e9b-90bd-925f22e64527",
        "cursor": {
          "ref": "21a6cd53-4a0e-4c8f-ab77-01e630e1495a",
          "length": 282,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "70141e00-bd18-40f4-a8c2-881803f2fbf2"
        },
        "item": {
          "id": "cdd093f0-7d48-4e9b-90bd-925f22e64527",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "b42c4ca9-b5d1-439a-90f2-df8c3c06ea27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72505f2f-9628-47f2-9430-359cb3573e45",
        "cursor": {
          "ref": "511beffa-b34c-4ce0-b7d4-9bf1bf404e08",
          "length": 282,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "c2014af1-d63c-409e-9f47-f0d47bfa1cc8"
        },
        "item": {
          "id": "72505f2f-9628-47f2-9430-359cb3573e45",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "431b7e48-f186-49e1-b1aa-504bd7ec9884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "590e852a-38bf-40c8-a69c-5bc580fbc651",
        "cursor": {
          "ref": "dcba1d98-212a-4084-a672-ecd1dc3acbf6",
          "length": 282,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "35911ad9-5992-4a93-9048-2f6058a3ad7f"
        },
        "item": {
          "id": "590e852a-38bf-40c8-a69c-5bc580fbc651",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "6f00c45d-3c1d-4410-b0f2-65584fc96b26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0348845b-b783-4a80-b03c-3b3a7b644aa5",
        "cursor": {
          "ref": "4cd1cf2c-669a-49e5-92b5-d5665d0d3e37",
          "length": 282,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "a0d5baf1-b234-492e-be41-e8251777d1fc"
        },
        "item": {
          "id": "0348845b-b783-4a80-b03c-3b3a7b644aa5",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "4edb0483-42c8-4268-b83d-32c3bdd43a8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af962f44-c3ae-4fe4-8a57-4c38757c3da7",
        "cursor": {
          "ref": "84cb5545-6117-4e14-9fa8-0f46071d25b3",
          "length": 282,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "156335db-3591-4257-9dbe-019726f04dbb"
        },
        "item": {
          "id": "af962f44-c3ae-4fe4-8a57-4c38757c3da7",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "8891312f-fcc0-4d82-a3a7-095322fa20d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c700d52-ba1f-4c23-a22b-5252cf75d540",
        "cursor": {
          "ref": "5434c63a-34c8-4cd7-875e-523b714c8b82",
          "length": 282,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "117424a0-d110-4991-b5e0-ded585d4e72c"
        },
        "item": {
          "id": "4c700d52-ba1f-4c23-a22b-5252cf75d540",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "617ec877-fa4a-45dd-91b2-420255b02542",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 20,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92488dd6-b290-4338-bf86-4aa54e84e887",
        "cursor": {
          "ref": "6efd2bc3-d379-4634-8427-6fc969cdb303",
          "length": 282,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "092bb650-3b92-4e32-9e23-feb6edddd85d"
        },
        "item": {
          "id": "92488dd6-b290-4338-bf86-4aa54e84e887",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "8575f90a-4cd7-46e7-9ce5-9183d85d493e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "133e81a1-1fbb-4e28-9b5e-b1c849b5c3cf",
        "cursor": {
          "ref": "a9f3ae7d-a855-41a9-b59a-4b7f46c170a0",
          "length": 282,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "86e7f73c-bf6e-400c-8271-535407719b8a"
        },
        "item": {
          "id": "133e81a1-1fbb-4e28-9b5e-b1c849b5c3cf",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "08f0952b-99d8-4076-bb49-0f76543fb2d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2a1270e-2247-4722-802a-f9461a3cfb67",
        "cursor": {
          "ref": "f52e17e9-37f4-41f6-a7e7-31a14905ddb5",
          "length": 282,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "37b2a761-bb05-4307-9ab9-7709c95eda51"
        },
        "item": {
          "id": "a2a1270e-2247-4722-802a-f9461a3cfb67",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f52c5857-44df-4608-8672-438b62a898d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab795fab-bfc1-4f5d-ba9f-81d441e74c3f",
        "cursor": {
          "ref": "642ac480-7a99-4f07-b2c9-52a5719792e2",
          "length": 282,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "33831cd9-43b3-41c1-8dec-d89154864b31"
        },
        "item": {
          "id": "ab795fab-bfc1-4f5d-ba9f-81d441e74c3f",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "122f2aec-ec09-4dc9-a63f-6f8adaba3ac8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba309f5c-8a02-4ce9-809f-11ae348a36c7",
        "cursor": {
          "ref": "560768db-f7bb-46d9-bd81-77552e2734f3",
          "length": 282,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "c6a0e738-b621-4eeb-804b-edbf16fc7cb8"
        },
        "item": {
          "id": "ba309f5c-8a02-4ce9-809f-11ae348a36c7",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "7cc5ce6e-653f-43e7-b89f-bb04e6a7c7b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c06bfe-2372-42f5-aa97-dd11c6484dec",
        "cursor": {
          "ref": "224e6750-6420-46ac-9fca-dfccedba9e52",
          "length": 282,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "cc67563a-fecc-474b-a6c7-9fe330c96494"
        },
        "item": {
          "id": "01c06bfe-2372-42f5-aa97-dd11c6484dec",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "fefaab72-94dd-4710-92a9-fab3a5c85ad9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a61e6910-6172-4cfa-bf12-aebbf0a77962",
        "cursor": {
          "ref": "b7047cc8-8f05-4027-b4ee-fcaa7c06aad6",
          "length": 282,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f08bd3d0-641c-4fcf-9c22-b6ba9c6282a0"
        },
        "item": {
          "id": "a61e6910-6172-4cfa-bf12-aebbf0a77962",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a9e3d036-2128-49f2-946b-5185d21bc9a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7345722c-3aa7-4b24-8dee-f9255e3b1d14",
        "cursor": {
          "ref": "6416071b-728b-4997-8255-10a149fe4339",
          "length": 282,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "87f2728c-bad5-499d-afbb-7f52c208ed44"
        },
        "item": {
          "id": "7345722c-3aa7-4b24-8dee-f9255e3b1d14",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "63eff3ed-2c42-45a0-9f45-a0b21fb48dc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ca167b-1bab-4002-9413-85fa61e41df6",
        "cursor": {
          "ref": "824f1350-4d1f-4ed9-b6d3-2efcc05c3fab",
          "length": 282,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "eb9bc057-e93a-4f21-ab1e-ad348dff2f67"
        },
        "item": {
          "id": "35ca167b-1bab-4002-9413-85fa61e41df6",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "03a9e50f-95e0-4347-b113-69f6dacefd7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b02dff5b-6a3c-4118-8b93-38d966c2351e",
        "cursor": {
          "ref": "68816592-742e-42ad-83bd-cb03983374b2",
          "length": 282,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "34f95554-c424-402f-885e-20ffe7a571b1"
        },
        "item": {
          "id": "b02dff5b-6a3c-4118-8b93-38d966c2351e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "b94e13ea-188b-47ff-b9d2-9ed8a22eeb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "280f8832-8ef5-450d-a5b1-49be96d4b595",
        "cursor": {
          "ref": "16b038da-b12b-483a-b289-516eccb992d2",
          "length": 282,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "74954d66-80af-4d49-8b9c-345a952f20e3"
        },
        "item": {
          "id": "280f8832-8ef5-450d-a5b1-49be96d4b595",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "0163349b-9447-4864-937f-2407ffdadafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d668e2-012e-4643-a2ab-e7f0f4727b5d",
        "cursor": {
          "ref": "404cc2e6-fe5d-43f2-b798-ab0e616d34ad",
          "length": 282,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "60f19123-91aa-40d6-bbee-78456978b8ea"
        },
        "item": {
          "id": "e2d668e2-012e-4643-a2ab-e7f0f4727b5d",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "6ab33792-44fc-463d-93f2-da06f83c7d9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2034820-02e6-4568-bb95-a68b2ae317b1",
        "cursor": {
          "ref": "6e30e464-5628-432f-87b2-225e8641c088",
          "length": 282,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "a47cc78c-6007-49f4-80ca-8d382087572f"
        },
        "item": {
          "id": "f2034820-02e6-4568-bb95-a68b2ae317b1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "0774efb3-e7b9-4142-98b6-7e27f7c63f6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6488b6d8-a232-4ee1-8521-6fa31249fa2e",
        "cursor": {
          "ref": "1326dab3-2fb2-4edf-b2af-c92f23e7cc6e",
          "length": 282,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "06aefe51-e692-4aab-9cce-aa7ba5c77258"
        },
        "item": {
          "id": "6488b6d8-a232-4ee1-8521-6fa31249fa2e",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "677d9db0-08ef-4139-807c-59f646da1221",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05247322-9539-4648-b412-6100ca0d5b1e",
        "cursor": {
          "ref": "4c041742-7c4f-4319-b2d6-783cfd2f94c6",
          "length": 282,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "2ccf7d5a-e72a-4c64-b846-0b210144f752"
        },
        "item": {
          "id": "05247322-9539-4648-b412-6100ca0d5b1e",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "e30e4a0d-a112-46de-9a7a-ed085f511082",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c48fa14-ded5-4fee-866b-cb91634ec16a",
        "cursor": {
          "ref": "22677ddc-5718-4d92-8213-263c49b556a9",
          "length": 282,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "cb058b26-ec17-408e-bab4-c751d69a3811"
        },
        "item": {
          "id": "9c48fa14-ded5-4fee-866b-cb91634ec16a",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "eff43cf6-88ac-401f-a685-b6c46590bf8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "169697a0-c2d8-4747-aaf3-e4d43dfe7e7d",
        "cursor": {
          "ref": "20f6da5b-bbfa-4ff6-84c3-aa1b0f84aa4f",
          "length": 282,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fe0fee8f-9390-4f9b-8a2c-e8ea0ac0363a"
        },
        "item": {
          "id": "169697a0-c2d8-4747-aaf3-e4d43dfe7e7d",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8cc2c46d-d4cf-4fe0-bb14-939d9986c67a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "305ab6e4-08f7-4de1-8cc4-02c43146f4b0",
        "cursor": {
          "ref": "2c71e0e9-a882-469f-936f-ead4433c0a24",
          "length": 282,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "02a52bb0-893a-4d41-aa50-66edfa7117c0"
        },
        "item": {
          "id": "305ab6e4-08f7-4de1-8cc4-02c43146f4b0",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "b62e20c6-a4cd-4dd0-8012-1ad1a8e9b2f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7c4c4a-0100-41e2-af22-17d360641af3",
        "cursor": {
          "ref": "2845aa4b-20d5-4f14-a402-11b83cf002bc",
          "length": 282,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "cb63a1bc-2f34-4835-9199-a72886e8d95b"
        },
        "item": {
          "id": "1f7c4c4a-0100-41e2-af22-17d360641af3",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "a37dd848-6c18-4419-be4d-f10a8dc9a459",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f37b19-42dc-410d-bebe-d95b8f856f15",
        "cursor": {
          "ref": "b38bf1fb-3500-4ee8-bbe6-609802aebbe2",
          "length": 282,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "06d2a228-8b13-48b4-9b42-c6145edb1dcc"
        },
        "item": {
          "id": "59f37b19-42dc-410d-bebe-d95b8f856f15",
          "name": "credentials_issue"
        },
        "response": {
          "id": "d4140b15-5e85-4c07-920c-b11c15d5a7a2",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa865875-7488-4c92-a664-a04f24f4ca16",
        "cursor": {
          "ref": "7dcd2c0d-b305-4ef9-aca8-2b4b32d76b52",
          "length": 282,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "d8c74669-6e0e-40ec-b00b-9859bd8e1b3b"
        },
        "item": {
          "id": "aa865875-7488-4c92-a664-a04f24f4ca16",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "39fe484c-500e-47ad-abf1-e49a04b2fc0c",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3ff1f6-c02b-4ac4-a4a6-cbfb57f8bb95",
        "cursor": {
          "ref": "6c3e9126-334f-48f5-9477-865b49352c04",
          "length": 282,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "6c1b8a1a-4560-4bce-8532-01d41ac78b4c"
        },
        "item": {
          "id": "bf3ff1f6-c02b-4ac4-a4a6-cbfb57f8bb95",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "d24d3c20-1327-489a-adbb-dbeb7315a2bd",
          "status": "Created",
          "code": 201,
          "responseTime": 32,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ab19d09-e7fd-45de-8f2e-e7877dbda887",
        "cursor": {
          "ref": "93115d64-68b0-4beb-8cf8-dd1bdc1fb253",
          "length": 282,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "79573535-907e-4ded-9a8a-e0ed2f53ddf8"
        },
        "item": {
          "id": "8ab19d09-e7fd-45de-8f2e-e7877dbda887",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ea8114cb-dd5c-4569-8148-c74905f081c3",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 928
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc01617e-a347-4fe1-a920-4c98dd821115",
        "cursor": {
          "ref": "849ec6fe-a911-4b84-8f3b-5e30fd6d7ac9",
          "length": 282,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "2a4904c0-48f1-4b21-be87-22f419bf71a0"
        },
        "item": {
          "id": "dc01617e-a347-4fe1-a920-4c98dd821115",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "34676e4f-44c9-490a-bf96-30a46cfb8531",
          "status": "Created",
          "code": 201,
          "responseTime": 28,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "35efdd9f-d470-4ffe-ad25-a695375e4018",
        "cursor": {
          "ref": "7000d7cb-c39d-4fb0-af28-c4e220cf18ea",
          "length": 282,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "e7026738-7197-4fdd-a4c4-3bfb7ee55679"
        },
        "item": {
          "id": "35efdd9f-d470-4ffe-ad25-a695375e4018",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "83b90262-7d32-4167-9a74-aa349c74a03a",
          "status": "Created",
          "code": 201,
          "responseTime": 36,
          "responseSize": 906
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67083d77-8ab8-4469-b7b3-e7d869ad92a3",
        "cursor": {
          "ref": "58a850bd-9451-4fda-b767-f82dc0883566",
          "length": 282,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "1eb07f0e-4a43-438b-b7b0-ce3d5e7e159e"
        },
        "item": {
          "id": "67083d77-8ab8-4469-b7b3-e7d869ad92a3",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "ba89cc11-7d9a-49a0-860f-2c1015fb10e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14f815d9-64b1-4f00-a5b2-2b20b50e87be",
        "cursor": {
          "ref": "56f931ba-cfc6-4f5e-a0f4-2b425e5e71c6",
          "length": 282,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "a567e22f-fa0c-4ad3-8085-64e1e978b680"
        },
        "item": {
          "id": "14f815d9-64b1-4f00-a5b2-2b20b50e87be",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "7c994075-8624-4ce0-bbe5-cbda068aa6ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b3939f5-156c-440b-b6d0-4a3d0cb714fd",
        "cursor": {
          "ref": "9c2dafa9-9301-415c-bfdb-11d8c0d14125",
          "length": 282,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1b8368c6-9285-4fe5-ae19-9171370b8820"
        },
        "item": {
          "id": "6b3939f5-156c-440b-b6d0-4a3d0cb714fd",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "275396e2-9647-4087-b664-949c7d8ecdf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07ebce15-d4a2-4840-babe-f7eaa0f83d14",
        "cursor": {
          "ref": "cfa7f8cf-d609-4aa6-8ce4-6fe75e361c97",
          "length": 282,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "42f83fd6-a945-4495-8a33-5e2c12bd22c9"
        },
        "item": {
          "id": "07ebce15-d4a2-4840-babe-f7eaa0f83d14",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "14b81c75-fe18-4c35-b8ae-0bce892cfd9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8873eabf-6ec6-4be8-bd2b-25161d0b0fad",
        "cursor": {
          "ref": "955fb6e2-ed47-4bb3-9c46-b71d19d8df5f",
          "length": 282,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "ce4e5a25-de96-4d80-9254-8fee055c3b99"
        },
        "item": {
          "id": "8873eabf-6ec6-4be8-bd2b-25161d0b0fad",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "32c563d1-53fa-4bb7-a350-e05c9ed313fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5063bb3-4023-4d02-a14d-7c6866cc4ac1",
        "cursor": {
          "ref": "dfcb67ba-b886-4f48-8f46-5edeb41e7ee2",
          "length": 282,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3f88f00b-4f27-4426-ad7a-81bc2dad814d"
        },
        "item": {
          "id": "b5063bb3-4023-4d02-a14d-7c6866cc4ac1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c99c8938-71e3-47a4-8038-c73b01989d74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9f37901-c604-4776-b589-9ca8eee4124a",
        "cursor": {
          "ref": "3aaa5c23-1ecb-4902-b9f6-a13fbf183b97",
          "length": 282,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "1f25b468-4d12-447a-8283-d6e5f1e9cae2"
        },
        "item": {
          "id": "e9f37901-c604-4776-b589-9ca8eee4124a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "03982e91-65f1-40f9-860d-189f88e12a50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0e724a-5b14-4b90-980a-76cbb1cf21d8",
        "cursor": {
          "ref": "9e451a1a-6617-4ce0-87a4-bd284a0a00e2",
          "length": 282,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "3a298055-535f-4611-992f-3e77f6c688ee"
        },
        "item": {
          "id": "4a0e724a-5b14-4b90-980a-76cbb1cf21d8",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "8653cb0d-6e8b-4f39-a452-11f62bc139ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16f7f1be-5b64-4f8b-ac65-41f083b1be64",
        "cursor": {
          "ref": "97e81051-f2d1-44ac-9cc4-e9603467d065",
          "length": 282,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "c1cab46a-5d26-40fd-b3a7-4a25a26a800b"
        },
        "item": {
          "id": "16f7f1be-5b64-4f8b-ac65-41f083b1be64",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "a6264a7c-99b2-47ab-bda9-3a742da95583",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e6702a4-8f68-4467-a289-2a2ec20fda2e",
        "cursor": {
          "ref": "4e3effa4-2b1f-4203-a3d8-e4a7f6326d01",
          "length": 282,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "725b1986-a93f-4e02-bd3a-8dbbff62899d"
        },
        "item": {
          "id": "9e6702a4-8f68-4467-a289-2a2ec20fda2e",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "61518830-307f-4e47-9d97-09feafac123d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d664776e-18c8-4d30-8119-f614d64099b3",
        "cursor": {
          "ref": "f7d2e8e2-6348-4e54-96e1-0e94a3018ad2",
          "length": 282,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "85236f0f-0a6a-4ce0-99be-0579fdb6a4fe"
        },
        "item": {
          "id": "d664776e-18c8-4d30-8119-f614d64099b3",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "12453285-a104-44d0-8b81-edffd8039df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4263b3b8-0195-4801-bd0d-8b3e88209782",
        "cursor": {
          "ref": "17de84b1-d6e3-4f28-b269-2db282e05033",
          "length": 282,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "2ac17ec8-0090-4246-b8ac-5c481ed47b1c"
        },
        "item": {
          "id": "4263b3b8-0195-4801-bd0d-8b3e88209782",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "2e6b1c1a-50a1-4119-9343-b43ad880ad40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43b71b5f-c3b5-40a7-8abd-15a25723cc4e",
        "cursor": {
          "ref": "fe0a27d2-cada-4d48-b571-120c82350cfa",
          "length": 282,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a2f174b9-a0a9-4fee-b137-23a97184901c"
        },
        "item": {
          "id": "43b71b5f-c3b5-40a7-8abd-15a25723cc4e",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a6425d9e-02d7-48ea-9e53-d8b6a652a358",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a48a812-b322-4fad-bdd6-ffac82c9346b",
        "cursor": {
          "ref": "2ed42f07-858f-41b3-b9b7-9769fc210e9d",
          "length": 282,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "3629082d-01df-40ee-b5c7-b700ecc595c5"
        },
        "item": {
          "id": "1a48a812-b322-4fad-bdd6-ffac82c9346b",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "dddbd585-0f25-4ab8-a45e-d9a19592a5a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaaf87de-524a-4e68-bae1-1f8a685259e4",
        "cursor": {
          "ref": "bda17397-1c69-43f2-b29c-1c73e8de0720",
          "length": 282,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "ccf9181f-bb17-44d0-b621-ca71fd3c85ce"
        },
        "item": {
          "id": "aaaf87de-524a-4e68-bae1-1f8a685259e4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5513f6be-3d3c-490b-a4b4-82577c244dae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b68c8bb-353b-4508-a7c5-61611d55e03d",
        "cursor": {
          "ref": "513e19a3-8f0d-4701-9f8b-261f500b3903",
          "length": 282,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "89acfaf4-cbd5-426d-a525-a797236e0ca7"
        },
        "item": {
          "id": "4b68c8bb-353b-4508-a7c5-61611d55e03d",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "55a656ec-e004-4801-ae7c-ab321c82ea9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec74d07f-2979-4426-bd25-b70a588dcba2",
        "cursor": {
          "ref": "6756194f-21b4-4ddb-ad34-4fa0f72651de",
          "length": 282,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "386bb821-c206-4a74-823f-f0c11fa6a032"
        },
        "item": {
          "id": "ec74d07f-2979-4426-bd25-b70a588dcba2",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "64e7112b-0380-4766-a337-8d366bbc46db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4c9d088-5bcd-4b30-be54-6815b8954370",
        "cursor": {
          "ref": "430f4c6b-6900-4d00-b65c-294a2348a0ea",
          "length": 282,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "48f91dd9-5c10-4d8e-b8ab-e051982b6dfc"
        },
        "item": {
          "id": "f4c9d088-5bcd-4b30-be54-6815b8954370",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2f10d0b6-747c-4909-8633-95115fc8376e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5816096b-3cb6-4246-9bf7-11e1f3c9f545",
        "cursor": {
          "ref": "a9fa922c-eca3-46e9-8b91-453d4b6366b1",
          "length": 282,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9a705445-a63f-4bcc-bdae-3f5efa623e0c"
        },
        "item": {
          "id": "5816096b-3cb6-4246-9bf7-11e1f3c9f545",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "76914442-9408-4c50-8ce3-3ab0020d8c76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50ca6369-7411-4ae6-9841-af9ce6828f75",
        "cursor": {
          "ref": "14edd27b-c789-4865-8497-6faf99ce0966",
          "length": 282,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "85d2f8ec-af4c-4dc9-8b4b-a67a417793a8"
        },
        "item": {
          "id": "50ca6369-7411-4ae6-9841-af9ce6828f75",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "421f02d0-94cc-43af-8fb0-91c2c2b014c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cef41aba-ebee-4850-a790-37c25725c102",
        "cursor": {
          "ref": "fabfcef6-6836-48d2-b3c0-403c421e1bff",
          "length": 282,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "1d8e8917-3ddf-45a0-9350-9c64eb2bce6b"
        },
        "item": {
          "id": "cef41aba-ebee-4850-a790-37c25725c102",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "36ccc9e6-f8ff-4a10-a9cb-0cb23ea5e153",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f69de31-f5d9-43fc-9173-0948d167bd7b",
        "cursor": {
          "ref": "ea4910c8-a99f-43c0-bcd2-02c0234b87df",
          "length": 282,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "e1f802e9-f3ca-4a5f-ba17-b324e3b3f879"
        },
        "item": {
          "id": "8f69de31-f5d9-43fc-9173-0948d167bd7b",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "9b9ea4cc-f2b8-4418-9beb-48ab085a536b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dca5c31-c4a9-4e61-932c-2046c4f13ba9",
        "cursor": {
          "ref": "7d242ebe-a2fe-47fb-a7fd-ee16941c41cc",
          "length": 282,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "50df28dd-1df2-4299-9f52-ce004ee48be4"
        },
        "item": {
          "id": "9dca5c31-c4a9-4e61-932c-2046c4f13ba9",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c4e5b0cd-3133-4e72-997e-31c709ad433f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a407e0ea-c758-4682-b1a4-a46b4bbfb6ed",
        "cursor": {
          "ref": "b0b9061c-4061-4a43-81c6-f7493864808a",
          "length": 282,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "29c54b8a-37da-43dc-9fc9-1c0cd41aff54"
        },
        "item": {
          "id": "a407e0ea-c758-4682-b1a4-a46b4bbfb6ed",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d53845d8-8584-44b8-a280-0474da6605db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c658307-284a-49de-8980-63f9bbb20345",
        "cursor": {
          "ref": "2d39491b-ac07-4d68-a5bb-324f2518868e",
          "length": 282,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "97b827c8-8ef5-453b-b1ea-cafa4f7faf2d"
        },
        "item": {
          "id": "2c658307-284a-49de-8980-63f9bbb20345",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "004fb6ea-e537-4804-96c7-fd7b77ab5fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54ed9470-dbf9-4bdd-a6a9-9f3c4f756dc5",
        "cursor": {
          "ref": "384374a9-2362-4058-b4ed-841caaeaeb46",
          "length": 282,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a6424fe3-0e77-4e53-a81f-a2d0e80555c8"
        },
        "item": {
          "id": "54ed9470-dbf9-4bdd-a6a9-9f3c4f756dc5",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "41d28519-b13f-40b4-ad00-18d2c527360c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce17d98e-e7af-4175-a855-a845d09fa368",
        "cursor": {
          "ref": "952cf09c-5a6e-4b7c-91f6-13367665070d",
          "length": 282,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "23baf81e-32f7-40d2-8d6a-09c034082e32"
        },
        "item": {
          "id": "ce17d98e-e7af-4175-a855-a845d09fa368",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "f742985c-410d-41f0-89f6-6cc534a1e450",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e74efe3f-f73a-4332-8b8b-08d0641567b8",
        "cursor": {
          "ref": "59827cfe-96f3-449e-8574-4d0383377223",
          "length": 282,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e1e71d1a-d3d9-4dfc-b1d8-1fc79fa69f47"
        },
        "item": {
          "id": "e74efe3f-f73a-4332-8b8b-08d0641567b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "c2a60593-b797-4264-af1f-85959ba5b612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ecb94b8-6ffd-4142-9d28-d9f7b4ecae63",
        "cursor": {
          "ref": "be175543-58e6-4437-a99d-9277a8125c58",
          "length": 282,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "1f88d4bc-287e-45b0-a3da-be6db44634db"
        },
        "item": {
          "id": "7ecb94b8-6ffd-4142-9d28-d9f7b4ecae63",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "01df0fa9-24c3-4cf1-baa5-549fdbfbd05f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e97fc754-343d-430e-979b-31bcff44be93",
        "cursor": {
          "ref": "430ca6b9-b44e-4a65-a27a-0dd4bd7f34f2",
          "length": 282,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "475e8fe3-df87-4be9-a909-0a66a39f1393"
        },
        "item": {
          "id": "e97fc754-343d-430e-979b-31bcff44be93",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "36dc5494-90a2-46c0-aff1-96524dfad2f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f6912b-4528-441d-9cdc-503cc66383be",
        "cursor": {
          "ref": "5c602182-3311-4cb7-8419-142057e0c545",
          "length": 282,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2c9bdb61-59a6-4277-9fd4-91ff0b91f8d3"
        },
        "item": {
          "id": "38f6912b-4528-441d-9cdc-503cc66383be",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "ccf7539e-0b34-4dc1-b68b-bb0b601ff851",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d92123f5-98f1-4e1c-aab1-8698b11c118e",
        "cursor": {
          "ref": "085a5250-a614-4ac3-8857-357e6fde36bd",
          "length": 282,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "49bfcf31-38ba-4fe0-8017-23601ea4ab60"
        },
        "item": {
          "id": "d92123f5-98f1-4e1c-aab1-8698b11c118e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "ad7d9ec7-0dbe-4cf8-9f0c-9f32538ef508",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0675253f-302e-4be5-b4a8-9ddea611e87e",
        "cursor": {
          "ref": "641df36d-2b5d-42bb-9f7a-827a240978cd",
          "length": 282,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "c8328833-a700-472c-9352-a7beb41f05cd"
        },
        "item": {
          "id": "0675253f-302e-4be5-b4a8-9ddea611e87e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "3b4bcbde-d3ca-41b3-b7eb-c71a518fc845",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "772f7aee-9ed7-4da6-be1e-075f38c1d338",
        "cursor": {
          "ref": "56001040-4c3a-4c4f-9fac-dc1d6a614ba1",
          "length": 282,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "1ea61c11-c2ac-4dcc-859f-5061db352cd6"
        },
        "item": {
          "id": "772f7aee-9ed7-4da6-be1e-075f38c1d338",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "97477e3f-13a0-4f7f-b8ee-58b4f8e2f6ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091511f5-5840-4fa6-a301-8444c3d10d8d",
        "cursor": {
          "ref": "17892ea1-e69b-4e22-991d-2211175345dc",
          "length": 282,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1fbf24f8-e627-41c3-a458-b4c430d25ad7"
        },
        "item": {
          "id": "091511f5-5840-4fa6-a301-8444c3d10d8d",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "f9421e1b-fefc-4d22-8449-427fdf30a214",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08813178-91f8-4e0a-830a-8b140d3d3c88",
        "cursor": {
          "ref": "8651434d-3593-43f3-b943-6191504e89e2",
          "length": 282,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "1f6cae0b-1686-4b25-8fba-6b38ff2c8772"
        },
        "item": {
          "id": "08813178-91f8-4e0a-830a-8b140d3d3c88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "0721c92c-0ba3-4f30-8aec-41c73d47cf74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7c80810-eb64-44dd-8120-98cb2dde8937",
        "cursor": {
          "ref": "2f01b193-4454-432f-9fd8-420e6fc1d495",
          "length": 282,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "b42af13f-ea63-4641-adfc-696d5b03d93b"
        },
        "item": {
          "id": "c7c80810-eb64-44dd-8120-98cb2dde8937",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "6e35452d-2953-4906-a2f7-911941f1203a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ade75444-80c5-40fe-8038-65940e25e920",
        "cursor": {
          "ref": "d3669cf0-709e-4dda-b491-bbcc340e9abb",
          "length": 282,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "a9545f2b-02fd-42d0-b611-6f44bc4a887d"
        },
        "item": {
          "id": "ade75444-80c5-40fe-8038-65940e25e920",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "3a8c5570-e7d4-4b09-9e98-ae37401f14c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc46cd3-5376-47f4-93e3-e6a83d3ccd6f",
        "cursor": {
          "ref": "d1347af5-0885-40d2-8198-cebb1e53b74d",
          "length": 282,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "7126aab7-38c8-4b58-8869-2e1b8af239a0"
        },
        "item": {
          "id": "8dc46cd3-5376-47f4-93e3-e6a83d3ccd6f",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "4be41c40-e57a-4d60-beca-f3fa71ee3ee7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "821e0b0a-6d07-459b-a6be-dba4e30f786d",
        "cursor": {
          "ref": "21c36f9c-160a-4f17-a40e-60b1e62652ae",
          "length": 282,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "8d67bece-4db8-4ec1-bac5-cc5f63cba66b"
        },
        "item": {
          "id": "821e0b0a-6d07-459b-a6be-dba4e30f786d",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "0525071d-36fc-41ec-8a0d-76113d07ae63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e281dae2-dd13-493b-adcb-29aa4a67c8d0",
        "cursor": {
          "ref": "0cdcdd90-7da3-4c32-b9e1-69ebefa2ed28",
          "length": 282,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "6d62dafb-e909-4cc6-af49-0a32a44b8163"
        },
        "item": {
          "id": "e281dae2-dd13-493b-adcb-29aa4a67c8d0",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "74182afc-3909-406b-bd7b-c3d03a4d5814",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5d36c2-509a-438c-8d62-05be42007492",
        "cursor": {
          "ref": "f34290a9-c03b-4099-a152-99277ddd099b",
          "length": 282,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "35704624-3a05-4c62-a629-8eafcd03d256"
        },
        "item": {
          "id": "1f5d36c2-509a-438c-8d62-05be42007492",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5d07065d-892b-4071-b272-1eda940594ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1123b68e-e829-4aa0-b28b-6c97ae2365a1",
        "cursor": {
          "ref": "fd0d9e55-1aa0-4e9e-a339-5622ed2c1c90",
          "length": 282,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "abebef57-8cb6-4f3f-9986-136df4d675a5"
        },
        "item": {
          "id": "1123b68e-e829-4aa0-b28b-6c97ae2365a1",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "cc39f41d-9548-4628-ad8b-287ab3829fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371e6159-2ec6-44fa-a426-b3aa7e57fb51",
        "cursor": {
          "ref": "ed8ca703-fc17-4d48-b1a5-cc43039cf5c8",
          "length": 282,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "514c8d6d-8ca5-447f-a809-3f7b53c27186"
        },
        "item": {
          "id": "371e6159-2ec6-44fa-a426-b3aa7e57fb51",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "85b257b3-0222-444c-bfc6-f38c7e740588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9119091-1059-4b06-bdc0-a198a7f134a3",
        "cursor": {
          "ref": "f277287e-468f-4af5-8e26-768c8aaf67a8",
          "length": 282,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "fbcc76b0-5833-4ef9-b703-a7942df2a2ea"
        },
        "item": {
          "id": "a9119091-1059-4b06-bdc0-a198a7f134a3",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "c75ed970-102e-4fbe-b5e4-e7faf046ff07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3763c6f3-7904-4aa4-a6c0-aa87130e3436",
        "cursor": {
          "ref": "520d984b-6eb6-4eb4-9b19-d6e422e821d6",
          "length": 282,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "71db1afa-686b-48c9-bb7d-82236b7511e8"
        },
        "item": {
          "id": "3763c6f3-7904-4aa4-a6c0-aa87130e3436",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "ea9adfeb-d4ac-448d-8e60-9991835dfc4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48d14373-cbfa-4923-8a1e-6db0ce30e689",
        "cursor": {
          "ref": "2a97bf91-6408-4e41-8aed-6edfa162a6f7",
          "length": 282,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "e746e910-1741-4622-8fec-cda2219f45ad"
        },
        "item": {
          "id": "48d14373-cbfa-4923-8a1e-6db0ce30e689",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7daecbd8-9d6e-4e03-aae5-c47fc3f0a040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02078234-8f2e-41b7-928a-f4d6cb8aeaa0",
        "cursor": {
          "ref": "d61ce1a6-079b-4c54-ae32-932bc68edab1",
          "length": 282,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "abb546aa-58d7-4b8e-a066-65fd2a87c916"
        },
        "item": {
          "id": "02078234-8f2e-41b7-928a-f4d6cb8aeaa0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7ad3046f-d107-4957-aff3-ee7273ae8295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73af9e53-b579-43ab-af35-2276b1755d56",
        "cursor": {
          "ref": "67a33959-580e-4148-bd5f-2a6b22900820",
          "length": 282,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "4f6a8903-c572-48d8-8456-69f644c54cd0"
        },
        "item": {
          "id": "73af9e53-b579-43ab-af35-2276b1755d56",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "5dc4f648-30ca-41c6-abdc-4867808c31fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30b6b522-63b0-400b-b63b-ad01abe584b5",
        "cursor": {
          "ref": "5ceba185-6afc-46a4-b075-bd80143f86e0",
          "length": 282,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "921360f6-715b-4c47-9ebe-bafda85854ea"
        },
        "item": {
          "id": "30b6b522-63b0-400b-b63b-ad01abe584b5",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "2eec7268-9380-4cdc-b228-62bfc31a7633",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe432a41-6830-49e4-a497-0fa34e9d2c6a",
        "cursor": {
          "ref": "20ff6849-c24d-49a4-9037-1f8b889fcb0d",
          "length": 282,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "a78ca1b6-cd9d-4bd8-9ade-f0da7d759532"
        },
        "item": {
          "id": "fe432a41-6830-49e4-a497-0fa34e9d2c6a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "e3855055-1d1e-44bf-a6e1-f604809653ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc375f85-3da0-42f9-94fe-f6c4a9186ca9",
        "cursor": {
          "ref": "4557ec1f-1a1d-4d42-8eda-44b7987fac02",
          "length": 282,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "7e126660-0d20-41d4-bf2e-3f080f6a0c73"
        },
        "item": {
          "id": "fc375f85-3da0-42f9-94fe-f6c4a9186ca9",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ce5c8bb0-c525-45ac-bf17-8519471b8884",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f29e3e38-00b9-4213-b86e-3bd5b03e9d3e",
        "cursor": {
          "ref": "ac01ad35-319c-4c52-9749-df0b668d0055",
          "length": 282,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "dbd877f0-a089-46aa-a34b-ba3dc968e7d3"
        },
        "item": {
          "id": "f29e3e38-00b9-4213-b86e-3bd5b03e9d3e",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1317f3e0-9b45-48de-a4ba-c0fed0c14888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfab5e81-72d6-4c83-8a6b-7196d2d6a855",
        "cursor": {
          "ref": "1c815450-feba-4fab-a00a-ee19fcf320ef",
          "length": 282,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "95fd2a75-29e3-4eab-bc9c-6075af91e2c8"
        },
        "item": {
          "id": "cfab5e81-72d6-4c83-8a6b-7196d2d6a855",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4cda82fd-5a8d-4023-842e-a7c986398ff5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbabd89d-2895-497a-934b-88547135c7bf",
        "cursor": {
          "ref": "3ca0cee6-3165-4edb-8fa8-bbf819707e71",
          "length": 282,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "2a779acf-8d53-46d3-a17e-2494364d3db9"
        },
        "item": {
          "id": "fbabd89d-2895-497a-934b-88547135c7bf",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "cb534a8b-9806-4341-80ff-ff238562b66e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a0ec68b-7bf6-4a92-bf26-f6a65c9beba7",
        "cursor": {
          "ref": "90c48756-8bc7-487f-99fe-ba64f5b64c00",
          "length": 282,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "12b4f2f1-2f6c-46cd-aa3c-4ac4d04d92e8"
        },
        "item": {
          "id": "0a0ec68b-7bf6-4a92-bf26-f6a65c9beba7",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "d8a0a3ec-79b2-4144-af59-eabd29d2e70e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283dfc5a-5bf9-47f8-8541-622a3743e776",
        "cursor": {
          "ref": "966cbaad-dbe3-4888-82f9-687b422967b0",
          "length": 282,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "1fa42118-7915-479f-8304-004eecfecde3"
        },
        "item": {
          "id": "283dfc5a-5bf9-47f8-8541-622a3743e776",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9268e730-e74f-4c97-b8ea-32d37819c1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a246e96-d7cf-4d5e-8cbd-78408ee111ee",
        "cursor": {
          "ref": "bff10e1d-5f0b-40dc-a1b6-c63003feffb3",
          "length": 282,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "e7595f9e-1fc5-4a7f-ac55-5943eb362494"
        },
        "item": {
          "id": "4a246e96-d7cf-4d5e-8cbd-78408ee111ee",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "05fb3e33-d57d-47d5-8688-1e4d98dc7986",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "538944e8-81d3-40f0-9015-e9624197c411",
        "cursor": {
          "ref": "c2638eb9-77d6-49e3-923a-f913b97347e0",
          "length": 282,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "c037aaad-54c5-41b0-ba47-d6fc86d62cec"
        },
        "item": {
          "id": "538944e8-81d3-40f0-9015-e9624197c411",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3a7a9ed5-82f5-4f02-a996-7f8399d0685f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2553fee2-aa92-4bf1-86b6-b797476566c6",
        "cursor": {
          "ref": "5f46f35f-2b97-4238-b97c-d6a3c874468b",
          "length": 282,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "64e078d9-cae2-4819-8b28-d7ea439fc054"
        },
        "item": {
          "id": "2553fee2-aa92-4bf1-86b6-b797476566c6",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ed8c2206-32ef-4e69-a7f0-8e14869eb34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b62a00b-ff44-4ba1-926b-15c1209ccad2",
        "cursor": {
          "ref": "6a7c1df3-5c06-417c-b311-9d4e06877b85",
          "length": 282,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "abf0e640-7c10-4253-a840-382589eab595"
        },
        "item": {
          "id": "7b62a00b-ff44-4ba1-926b-15c1209ccad2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "3b0a4eca-bebf-40c2-a01e-5a8df6373011",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0072a586-3594-49b6-87f5-85405e7d03af",
        "cursor": {
          "ref": "629306df-b42d-4450-87e4-fae2e70b6574",
          "length": 282,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "7018bbe8-696c-4e04-be1f-b689d0bd2a4a"
        },
        "item": {
          "id": "0072a586-3594-49b6-87f5-85405e7d03af",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "53a4f040-62a0-4479-9b4a-49a19d490a28",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6c756b0-cb02-4d10-a72f-f13c5eedee43",
        "cursor": {
          "ref": "99fc22c8-c942-4dd6-b6b6-2f46654a5a9d",
          "length": 282,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "e3246b5f-0861-4a72-9a92-81af6c9f74f2"
        },
        "item": {
          "id": "f6c756b0-cb02-4d10-a72f-f13c5eedee43",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "0bca2b29-16f7-4205-b5ce-290e2febe63b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe348ed0-ee32-480a-989f-f5ec97d7db0c",
        "cursor": {
          "ref": "a2b5d91d-cfd3-4d4b-bfff-129f76038f15",
          "length": 282,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "64a5c540-cae1-41f1-b0cd-3fafe5c3950a"
        },
        "item": {
          "id": "fe348ed0-ee32-480a-989f-f5ec97d7db0c",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "e432ccad-26d7-4c75-b874-e30d5283d0ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be181ea-e0b3-4aa8-98fa-e9f7e5281068",
        "cursor": {
          "ref": "779d6011-d51e-461a-a1bb-f5aa1dd371fc",
          "length": 282,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "a4eed556-c777-4a4a-8068-9d785abe8c13"
        },
        "item": {
          "id": "5be181ea-e0b3-4aa8-98fa-e9f7e5281068",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "078c0f46-3374-412f-b687-fe38a9c6761a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4122b668-052d-4994-a4c2-8c912b7cdb60",
        "cursor": {
          "ref": "26853299-47a8-483f-8416-252f30a321ad",
          "length": 282,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "0eaa8774-06a7-4c2d-bd1d-704ec6db7864"
        },
        "item": {
          "id": "4122b668-052d-4994-a4c2-8c912b7cdb60",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "23b8058b-2ba5-472d-aaa6-86817db93a1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0361fd-8902-455f-bfdf-b04eedf16e56",
        "cursor": {
          "ref": "4dbf0004-1e7b-4407-b89d-2cb8c321a367",
          "length": 282,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "87eb03e9-34bf-4748-ac4d-d09ad5130987"
        },
        "item": {
          "id": "ff0361fd-8902-455f-bfdf-b04eedf16e56",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "e084cd3e-37da-443d-85d7-d36f30a92019",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5549f51a-3c1f-479d-8f40-b40c213e317e",
        "cursor": {
          "ref": "5c03664a-0731-4103-99ac-ec92eb21bada",
          "length": 282,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d6d8971c-2eaf-4193-afad-1d7acbbcb5bd"
        },
        "item": {
          "id": "5549f51a-3c1f-479d-8f40-b40c213e317e",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "b66a67d5-5e95-4520-8656-c7156c57d54c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69599b62-5db0-4fc5-b1ee-03377134abbd",
        "cursor": {
          "ref": "a50ab051-dae2-40b9-bc5c-711f0555ce30",
          "length": 282,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "7349a838-5787-4f39-a87c-9614d9c6d83d"
        },
        "item": {
          "id": "69599b62-5db0-4fc5-b1ee-03377134abbd",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "7b478218-3770-49aa-8fc4-5a2a66a942a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "063431ad-be99-47a9-9527-3cca4e6a9f47",
        "cursor": {
          "ref": "c2c55edd-44b9-40d7-ba37-fd4533dcdbd7",
          "length": 282,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "5a8b7081-d1d5-45b5-a92a-b338c3e8279c"
        },
        "item": {
          "id": "063431ad-be99-47a9-9527-3cca4e6a9f47",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "2b3cf54b-bef2-4593-9438-3a29c100009c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7fe80256-c4d2-4adb-80f6-0491ac6f5a1a",
        "cursor": {
          "ref": "eeb706b6-5334-4155-bf2e-3ea30ba4beff",
          "length": 282,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "034cfe9f-b037-4917-b25a-7ec41160066c"
        },
        "item": {
          "id": "7fe80256-c4d2-4adb-80f6-0491ac6f5a1a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "c41e39ef-6189-4eff-aa74-31dc7d099a83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b4ea2aa-7fc2-4612-be4a-36718b0f9647",
        "cursor": {
          "ref": "2381a7ae-0521-440d-9c40-64590ba59b55",
          "length": 282,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "3968bdad-147f-4a6a-8744-ec68dbee6cf2"
        },
        "item": {
          "id": "8b4ea2aa-7fc2-4612-be4a-36718b0f9647",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5451518d-4984-4219-a221-0fefa7a5ca36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd4ccc4a-4eeb-4b45-a4c0-84ce985afbbb",
        "cursor": {
          "ref": "74951d70-e055-4e49-9367-9a4f380b70c7",
          "length": 282,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "d18269f0-265f-4ae9-8b92-e44acc829690"
        },
        "item": {
          "id": "bd4ccc4a-4eeb-4b45-a4c0-84ce985afbbb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "e609b44e-9baa-420d-a5f4-d94ccf22a172",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc1a5039-5240-4711-a830-384e0d653181",
        "cursor": {
          "ref": "a5811ab3-f2fc-4948-b921-31421f2dbb29",
          "length": 282,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ba775fb4-e6e3-41fb-abd7-369e9b0c0d78"
        },
        "item": {
          "id": "bc1a5039-5240-4711-a830-384e0d653181",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "dc907bf9-5134-478f-b25e-e7a1d60653c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f80b6a-fe43-4493-9b84-0919715cb6f0",
        "cursor": {
          "ref": "6ef50d2d-511f-4e85-bb0f-e3e3dec223d4",
          "length": 282,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "c1caddde-32b5-4b32-999c-7cbc9a28198f"
        },
        "item": {
          "id": "93f80b6a-fe43-4493-9b84-0919715cb6f0",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "461a3bb6-b057-4d73-9db8-88114d1138ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13c8fe65-9ffe-4095-b1fc-832fa0b98ef3",
        "cursor": {
          "ref": "62e34dda-e663-4a46-afbd-45ca268280f8",
          "length": 282,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "d6ab5c5e-5440-4e0e-8fce-a38de40b916a"
        },
        "item": {
          "id": "13c8fe65-9ffe-4095-b1fc-832fa0b98ef3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "09528206-bfd3-49a0-8e2e-b4fb3a7bb753",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93274a5-e5e5-4eb5-8619-65bf922b7330",
        "cursor": {
          "ref": "385729c7-9cc5-4f9b-9726-ad7e56f47524",
          "length": 282,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "d69b4aad-2370-43b2-be6d-e48ddc761619"
        },
        "item": {
          "id": "c93274a5-e5e5-4eb5-8619-65bf922b7330",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "310b60fa-ae82-461d-874b-47d0fc0a4e64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c9c51f7a-5547-4b0b-ad17-79c36093f3cf",
        "cursor": {
          "ref": "366b045d-b30b-42e5-8e67-f8432b8e7b3a",
          "length": 282,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "189f2a33-c668-45f3-9dee-f353413f0b43"
        },
        "item": {
          "id": "c9c51f7a-5547-4b0b-ad17-79c36093f3cf",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "54319510-b571-4079-b4e1-8a8584e53eb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4061a29-3425-4d3b-9500-87360820f482",
        "cursor": {
          "ref": "be44d3ca-42db-4d58-a72a-bc934699900f",
          "length": 282,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b958756-47fe-403e-9a8a-010d7e24cb8c"
        },
        "item": {
          "id": "d4061a29-3425-4d3b-9500-87360820f482",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "3a0e665f-27d0-4384-861a-3489047099db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50fab8fe-530d-41b9-9460-47209456c0c3",
        "cursor": {
          "ref": "d24b3b59-685f-4de9-b56f-823ba54a9b36",
          "length": 282,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "b03c7699-9e1f-4b6b-8997-39e876b5c4e8"
        },
        "item": {
          "id": "50fab8fe-530d-41b9-9460-47209456c0c3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "b5526c4f-b4a6-4216-827a-cfd303ad50c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b46354ca-e35d-4775-bd8d-cc6f54e86e9c",
        "cursor": {
          "ref": "a711c7b1-6770-436a-8c35-d3e780c4cc5f",
          "length": 282,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "6977197e-af75-4c6c-b67e-12e3e80c18d3"
        },
        "item": {
          "id": "b46354ca-e35d-4775-bd8d-cc6f54e86e9c",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "b12bce4b-f161-4180-aa18-6ad2fdf17643",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33da25e4-35b2-4024-a392-533d616f4754",
        "cursor": {
          "ref": "dd2f0932-283f-4938-b1d5-d704edc29bda",
          "length": 282,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "40f1b213-b260-4ebf-be7b-192a2dab308c"
        },
        "item": {
          "id": "33da25e4-35b2-4024-a392-533d616f4754",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "f70a5463-c387-4746-9737-9a3df1538569",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20652ab1-f6a2-4961-a7a6-8cabeb5bf80a",
        "cursor": {
          "ref": "2c486f7f-d060-4b75-872f-b3146ed5a945",
          "length": 282,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "0e21b907-3e2b-4c90-9853-8598f494a4c6"
        },
        "item": {
          "id": "20652ab1-f6a2-4961-a7a6-8cabeb5bf80a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a360cd82-0c73-4008-b158-ea2ddbc7217d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "850eb00a-7193-449a-b65e-b19488be1a5c",
        "cursor": {
          "ref": "06055f36-4fdd-4bbe-b0bd-3943be225222",
          "length": 282,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "05494257-dbf4-40f1-8208-fcd26ca6447a"
        },
        "item": {
          "id": "850eb00a-7193-449a-b65e-b19488be1a5c",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "6cf3362b-3e5a-4caf-8b07-112eef955ec6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c23dc819-7b32-41e9-bdb3-1c944d0e6f27",
        "cursor": {
          "ref": "b935d98d-6dc3-4448-b56e-cf22885581bf",
          "length": 282,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ae713f18-bd8d-4d60-b509-4c40cbe3f54b"
        },
        "item": {
          "id": "c23dc819-7b32-41e9-bdb3-1c944d0e6f27",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "85a2e202-f39e-418f-ba49-61b916ac7b74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4d8cbe4-2713-4066-bf5e-25e055c1081e",
        "cursor": {
          "ref": "ad2b81f9-1982-4f3e-8143-ce7e74c6abe5",
          "length": 282,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "c62b2895-1cf9-4ff6-a1fd-1d3231974ec4"
        },
        "item": {
          "id": "c4d8cbe4-2713-4066-bf5e-25e055c1081e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "f87b518d-a452-48b5-a2c4-67350aa97f33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c441de05-02a1-4f60-bc2c-a39efcc3b436",
        "cursor": {
          "ref": "f4564b32-a6eb-4c90-ad0a-55abeb8e5f79",
          "length": 282,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "72f0637b-7b88-4a2c-8e99-d5b5e64cf7d9"
        },
        "item": {
          "id": "c441de05-02a1-4f60-bc2c-a39efcc3b436",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "63135a49-4ffc-4af7-a7c1-2e359e57201a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d44b1f-780f-42c8-8e63-8bb771263c19",
        "cursor": {
          "ref": "fe28742c-271c-4691-9a3e-1da549dd2fcb",
          "length": 282,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "bc274de5-4eb6-4803-8a5c-92cde9b33139"
        },
        "item": {
          "id": "55d44b1f-780f-42c8-8e63-8bb771263c19",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "be6433b8-1cea-43e1-bb17-5a85bb49eb10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93b43f64-afe2-401d-aa3d-ed5987255446",
        "cursor": {
          "ref": "790b82d1-628e-407a-b94b-e2a6c78fbd40",
          "length": 282,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "31ca68c7-8b4e-4aab-93a3-1066b24be662"
        },
        "item": {
          "id": "93b43f64-afe2-401d-aa3d-ed5987255446",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "8be902d2-5864-4027-8ce0-68271b33a781",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "88122971-a9d0-454f-a73a-077e34da8cd2",
        "cursor": {
          "ref": "b0bfd39e-8b31-46b1-8fb1-0f0d23b4a128",
          "length": 282,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e96b702f-57c5-46bb-87ab-d62a17ece232"
        },
        "item": {
          "id": "88122971-a9d0-454f-a73a-077e34da8cd2",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "66f095b5-37e4-45b3-98b7-7c9635046747",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62d428f9-0c89-41df-b40d-3021e241a274",
        "cursor": {
          "ref": "ef994053-9976-4299-95a0-d9a635a78d3a",
          "length": 282,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "8a868bdf-d3fc-4fe7-9733-e72dd96b735d"
        },
        "item": {
          "id": "62d428f9-0c89-41df-b40d-3021e241a274",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "eac2d97e-c7c2-40c5-b96b-89dde2153ed8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07440176-feaf-410c-b7f4-76d841dfb976",
        "cursor": {
          "ref": "00854c93-5002-43b0-b58b-116df5327afb",
          "length": 282,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "6114154e-c986-4f29-9265-30997f7e4859"
        },
        "item": {
          "id": "07440176-feaf-410c-b7f4-76d841dfb976",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "831a7625-bea8-4ac7-a42d-f4a391ddb11b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e61b5d89-91a5-4711-8881-06daaff02337",
        "cursor": {
          "ref": "bd8a527f-9ef8-4512-b90c-0e6ad50dc97a",
          "length": 282,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "21ed3c92-13ac-4099-8cca-9908517c607a"
        },
        "item": {
          "id": "e61b5d89-91a5-4711-8881-06daaff02337",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "118152c3-7dc7-48e0-bef6-605377c3e878",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f98ef42a-11f0-4f39-9d4e-d509d9e24e88",
        "cursor": {
          "ref": "5cf09e0c-ad1d-4f0b-a608-9d65544d4927",
          "length": 282,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "8c36f84a-3ca0-4f7d-b5a0-408b0807eec3"
        },
        "item": {
          "id": "f98ef42a-11f0-4f39-9d4e-d509d9e24e88",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "24edd174-6f7c-49d5-9969-7bec7e624320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b932658-909b-43ab-945e-654814a8c1a4",
        "cursor": {
          "ref": "845e3dae-d3e8-424d-8723-6aee9ebba7d5",
          "length": 282,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "c1f9e369-e223-4a2e-ae59-bf367fec418d"
        },
        "item": {
          "id": "2b932658-909b-43ab-945e-654814a8c1a4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "1e3d27e2-7449-4e35-931b-d91b8f29534f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357b1bfd-f313-4b26-8f6b-78ab6a4aee05",
        "cursor": {
          "ref": "35ed03e3-1920-4c24-b8f2-bd68c31c8bb5",
          "length": 282,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "2ddf8b2d-ba71-4329-bf70-d4be4617254e"
        },
        "item": {
          "id": "357b1bfd-f313-4b26-8f6b-78ab6a4aee05",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "bb91096f-31b1-4cb7-a141-a7b81911f47f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55329359-1f32-4c3e-a063-df940f74917c",
        "cursor": {
          "ref": "4c7f3b2a-c6a0-438f-8fe8-7494afdad031",
          "length": 282,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "60429318-43e6-44ac-97cb-f3962d8d3d73"
        },
        "item": {
          "id": "55329359-1f32-4c3e-a063-df940f74917c",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "29477b41-52d5-4ad8-a9ec-286c248f15e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9d9313f-917d-4eac-88da-488e23974396",
        "cursor": {
          "ref": "78892a53-e209-4239-a25a-70923bbcd016",
          "length": 282,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "317b9156-63c1-4bc4-9c92-65c5f6896bb8"
        },
        "item": {
          "id": "d9d9313f-917d-4eac-88da-488e23974396",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "37ab4ae6-fcd8-466e-82e5-eaa04faf69ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39744242-2e9e-4ac7-8643-f60be92614de",
        "cursor": {
          "ref": "c71f5c92-8960-4858-b11e-faf956037ad2",
          "length": 282,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "1d73f23c-104a-4588-85a6-eb09c11f14d3"
        },
        "item": {
          "id": "39744242-2e9e-4ac7-8643-f60be92614de",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "05c9c597-b447-42dc-a175-4079f30508c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "894640c3-0a2f-4076-ba25-0bdd7f250ec9",
        "cursor": {
          "ref": "08da45a8-3d1e-4bc2-a892-6ecdf48f9e4a",
          "length": 282,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "94392057-0011-4570-be8c-eb3b7c393285"
        },
        "item": {
          "id": "894640c3-0a2f-4076-ba25-0bdd7f250ec9",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "10b6cf33-2e43-4cba-8766-8291c895f390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f37bc05-89d0-4d61-87ea-092e7dd77ab7",
        "cursor": {
          "ref": "4c3842c1-8124-4991-bb75-17425b079f87",
          "length": 282,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "d199567e-4684-41ec-b147-a48b3ca66fe5"
        },
        "item": {
          "id": "2f37bc05-89d0-4d61-87ea-092e7dd77ab7",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3c717c7b-1a83-45d2-b596-205c4979e3f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6326458f-a808-40bb-85f6-cdbc530c43df",
        "cursor": {
          "ref": "4e2f0e3c-d2bf-4434-888a-2e5cd1b58b2c",
          "length": 282,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "b6c16194-23ae-406f-970d-577d03e70ecd"
        },
        "item": {
          "id": "6326458f-a808-40bb-85f6-cdbc530c43df",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "26d25ba4-e88f-4414-afa9-d85d767e72eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66200ced-a5f1-4a24-857c-6a7b7e660c2a",
        "cursor": {
          "ref": "6f1500f5-3e1c-49c3-9c4e-9ad0f571fe22",
          "length": 282,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "bcb73cab-8ffe-484f-a4b1-c275ee4cb2c7"
        },
        "item": {
          "id": "66200ced-a5f1-4a24-857c-6a7b7e660c2a",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "72b38bc8-b384-48c0-ad7d-dd477105b50a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0201f390-9d80-4f52-a78e-44039494473c",
        "cursor": {
          "ref": "e609f709-3746-43b7-8962-8907e66aa4d5",
          "length": 282,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "300502a1-e1af-4b19-8982-cbcca96eb280"
        },
        "item": {
          "id": "0201f390-9d80-4f52-a78e-44039494473c",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "b49f0ab4-b3f0-4058-adee-f4ba3909bc87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a860662-9e0a-457c-99f0-c4f1d98ab6bb",
        "cursor": {
          "ref": "c23e1875-f5f1-4129-b2f5-1b6789fdadc9",
          "length": 282,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "fb4c672e-6cd5-4bde-93f8-b6f986419c3f"
        },
        "item": {
          "id": "1a860662-9e0a-457c-99f0-c4f1d98ab6bb",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1e2ba358-b419-402d-b25b-a41bf98f1db1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a53a1eb6-a711-48ef-adb9-1ee88b78bcd6",
        "cursor": {
          "ref": "27ff0d9e-3d57-4caf-9b3a-f5aab47884df",
          "length": 282,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "8ac0a85b-106e-4269-a911-8113e49066f0"
        },
        "item": {
          "id": "a53a1eb6-a711-48ef-adb9-1ee88b78bcd6",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "0525abec-a722-4fda-9f66-9167c8b6e76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "426513fb-8bf3-4406-a592-837cd28ca729",
        "cursor": {
          "ref": "4355306f-5182-4a3f-a2a2-84a42351b65e",
          "length": 282,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e5ac2250-e08d-4f94-97dc-5a1d7e40bcab"
        },
        "item": {
          "id": "426513fb-8bf3-4406-a592-837cd28ca729",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "2cd2bebe-1bb6-4dde-ad66-dacd043f0665",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b39bc7b8-db44-4df2-b7af-f53d643681aa",
        "cursor": {
          "ref": "5dc72fb9-1546-48f1-a43d-f8426a9e42f2",
          "length": 282,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "b7b0ecac-add7-4e15-bd46-e7a13e2200d1"
        },
        "item": {
          "id": "b39bc7b8-db44-4df2-b7af-f53d643681aa",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "6982c872-31cc-4240-b23c-71b18499cec5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2804907a-126b-4668-b2c4-4509b067b364",
        "cursor": {
          "ref": "3e07b82b-2934-447c-92ed-499768980ad9",
          "length": 282,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "b549c281-e1cf-4859-8676-45f223cccf06"
        },
        "item": {
          "id": "2804907a-126b-4668-b2c4-4509b067b364",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "2e9ad4a6-a5a5-424d-93d2-c80437ec960d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02690dd6-e815-4b81-b823-b21a1de63b1a",
        "cursor": {
          "ref": "c0f24746-d760-443f-aa60-0e27181a0e43",
          "length": 282,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "4d3834ae-8128-4120-8bd9-b9a9226a897f"
        },
        "item": {
          "id": "02690dd6-e815-4b81-b823-b21a1de63b1a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "3306e973-51dd-4947-9e68-afaca6ca149c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dca85bda-f19b-4c95-9a23-c0d8d9194b44",
        "cursor": {
          "ref": "8aa6d212-a0a7-4ef2-91de-b2f6a7fafd05",
          "length": 282,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "f09d53cd-4a14-4479-a15e-263b2a3baa28"
        },
        "item": {
          "id": "dca85bda-f19b-4c95-9a23-c0d8d9194b44",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "9d6c8637-5df0-4854-a228-41070d915285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9516943-be6f-4fb7-80cd-06ebc01d4bf9",
        "cursor": {
          "ref": "73dc8c72-d5ec-4470-a9b2-7462e7be1728",
          "length": 282,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "1d135cb9-958d-4024-9fe4-c2418e78b2bb"
        },
        "item": {
          "id": "b9516943-be6f-4fb7-80cd-06ebc01d4bf9",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "0dbb7b73-2dde-477b-b676-7d45d281095e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c1cb148-4b40-4945-bfe9-aa69d3108621",
        "cursor": {
          "ref": "45135837-a93d-4015-b893-adc544f97be5",
          "length": 282,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7b862df3-a5cc-4328-b50e-937243158ab7"
        },
        "item": {
          "id": "7c1cb148-4b40-4945-bfe9-aa69d3108621",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "8c76b7c2-ed43-4ea6-b3b2-7bce5ef4ea65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750a8964-40f9-4b7c-a525-59e265d2cd48",
        "cursor": {
          "ref": "3392e6a3-40c0-4828-b8ed-177db6cb6172",
          "length": 282,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "020b5f59-bf0a-4e2c-b59f-bc9aeb4dca9e"
        },
        "item": {
          "id": "750a8964-40f9-4b7c-a525-59e265d2cd48",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "c3a960ca-72a9-4aea-a0c0-22f9de4bf35b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99e154d7-baed-42e6-a069-955cc562c0e2",
        "cursor": {
          "ref": "668bab32-e0f3-4475-967c-42b859acc216",
          "length": 282,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "b915bb73-a89d-420c-ab38-861df6fe33ac"
        },
        "item": {
          "id": "99e154d7-baed-42e6-a069-955cc562c0e2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "208f7272-6b59-41c8-8b34-c090057d54e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c611df4e-501e-421a-8752-44b47cfb2f39",
        "cursor": {
          "ref": "fb244bc1-b99a-4f04-9b7b-6aa711d6c92c",
          "length": 282,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "d34661f8-852a-46a1-855e-881fe0c151fd"
        },
        "item": {
          "id": "c611df4e-501e-421a-8752-44b47cfb2f39",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "28b3058a-31da-47a8-b64e-4fe935b8dc46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93e8986c-dc84-43da-84df-2c4f7beef528",
        "cursor": {
          "ref": "8cd21967-124a-4e57-ac59-ae49577391c6",
          "length": 282,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "ab3194be-84d8-4113-bdbc-f22b6036d6f1"
        },
        "item": {
          "id": "93e8986c-dc84-43da-84df-2c4f7beef528",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "d2b64371-53f8-49ca-84b3-548ba22283fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3dd6f58e-ba49-4237-ab13-6a69c1a15743",
        "cursor": {
          "ref": "6eee52be-b284-48a5-8d9d-cd033b5b5073",
          "length": 282,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "0ee699e1-b41d-4ce6-bb64-e026cfaf4501"
        },
        "item": {
          "id": "3dd6f58e-ba49-4237-ab13-6a69c1a15743",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "2653c274-8608-4ba2-9b88-22b4617beba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 14,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498b2976-a7ec-4cd6-aa21-e5698d7cd695",
        "cursor": {
          "ref": "9ae6d679-3e59-446a-8adb-6687f4792aac",
          "length": 282,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "66ac13f5-2232-4f59-959f-632dbae95587"
        },
        "item": {
          "id": "498b2976-a7ec-4cd6-aa21-e5698d7cd695",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ae09056b-5f91-463a-b78d-6b7ea000d14e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 18,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "475aa3ae-e35d-41e2-83ec-0d26d6179b8f",
        "cursor": {
          "ref": "7deb3186-9bb4-461e-a7ff-0fd6a689ee8d",
          "length": 282,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "dde25da2-3a50-4877-9569-e221c7cb5243"
        },
        "item": {
          "id": "475aa3ae-e35d-41e2-83ec-0d26d6179b8f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "a9663443-3e1e-49d6-a7ac-c1851f67c187",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "892f2be9-1f2e-45b5-a8ff-2caa7b12894c",
        "cursor": {
          "ref": "90cbcea6-7198-4601-a697-9636d070400b",
          "length": 282,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "2af511c5-eba3-47e1-8a09-85d8dc2ab266"
        },
        "item": {
          "id": "892f2be9-1f2e-45b5-a8ff-2caa7b12894c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "7b12ccde-c813-4fcd-95ef-624096295f34",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5f2a77b-39f9-4e2b-bc92-05a862447c05",
        "cursor": {
          "ref": "9381f16a-3bbb-4f43-b18c-461605017524",
          "length": 282,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "90e1ac32-d720-4538-959b-369eddf172e6"
        },
        "item": {
          "id": "c5f2a77b-39f9-4e2b-bc92-05a862447c05",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "1a5a0121-ad49-461a-964f-058bc0915eff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 17,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00123bcb-4891-4d32-bba1-54c6aaa44258",
        "cursor": {
          "ref": "db43f4f0-477e-4e02-be0c-9fba893bab1d",
          "length": 282,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "49de4632-8026-48ed-977e-cf9f4e77504a"
        },
        "item": {
          "id": "00123bcb-4891-4d32-bba1-54c6aaa44258",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "94d723b3-624e-46e6-b1be-3ae16cb49aaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e85e4f88-1af3-4a18-96a8-ec8e208da319",
        "cursor": {
          "ref": "0dcb25c3-60e8-4e7a-bdd0-aa56e5e70e87",
          "length": 282,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f7e86159-d266-4e97-8526-2b4e56df7f84"
        },
        "item": {
          "id": "e85e4f88-1af3-4a18-96a8-ec8e208da319",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "0ba39fc1-ff9d-4343-9e66-e4c418eb0de9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 15,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3bdc1a-da2e-4eec-b0a7-fcffe89e4a53",
        "cursor": {
          "ref": "b7cfd5f0-e093-4b11-b4e4-a524bf83c763",
          "length": 282,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "e4d2b5ec-bc87-4c74-9510-01605087f69a"
        },
        "item": {
          "id": "bf3bdc1a-da2e-4eec-b0a7-fcffe89e4a53",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "af3198c8-25ad-4559-b502-0f9c8ad2bdbb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fe2451a-9305-491a-9331-0fcb29dfa37f",
        "cursor": {
          "ref": "35bad1bc-5f41-4bc3-bd7d-f4dbcbafe6ac",
          "length": 282,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "92e88533-41b6-4581-aa19-0a5df00436b7"
        },
        "item": {
          "id": "8fe2451a-9305-491a-9331-0fcb29dfa37f",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "3b1e5785-e3bc-4e9b-83e3-d84e75ddcbaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34d269ce-f8c4-4550-ad3b-551904492b0c",
        "cursor": {
          "ref": "b0604042-44a6-4623-ab4e-e6859ac6f06e",
          "length": 282,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "7289a334-15d4-40bf-963d-a3c39ce92353"
        },
        "item": {
          "id": "34d269ce-f8c4-4550-ad3b-551904492b0c",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "21f82317-d53f-472a-893e-cf057c1d0338",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04c2be56-6b3c-412f-b173-e08cf7cfcaee",
        "cursor": {
          "ref": "0d11fd8f-5078-49c5-a4af-4ebe2a0697fa",
          "length": 282,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "c6a77b02-943a-48da-947e-9670c5acaea2"
        },
        "item": {
          "id": "04c2be56-6b3c-412f-b173-e08cf7cfcaee",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "45203b2d-e189-485f-ab3d-d090bffe6913",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad8e0f2-5200-4376-a6da-fb8ba5b42baa",
        "cursor": {
          "ref": "4f072249-a87f-48f6-b769-01f7a8e680b6",
          "length": 282,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "f97b121d-b1bf-4b4f-a97e-fe8f9494a7c4"
        },
        "item": {
          "id": "bad8e0f2-5200-4376-a6da-fb8ba5b42baa",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "16aebfc9-bcca-4ab8-bb8c-659fb8c3af92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaf01c94-16d8-4e7b-b8b5-e6628926e48f",
        "cursor": {
          "ref": "cd474ed9-d150-4aba-aa0c-b47b05ff56e6",
          "length": 282,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "fe351791-e098-4cf5-9cdc-88f85dd1ce02"
        },
        "item": {
          "id": "aaf01c94-16d8-4e7b-b8b5-e6628926e48f",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "c96e0801-9cd2-4ad0-a670-2f2480c1cd7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81c0ffc4-68e6-4a07-a6a9-82ea2f18253b",
        "cursor": {
          "ref": "971ee3a7-6cfe-45f9-bdb4-417224db8436",
          "length": 282,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "1d413222-87ba-46cd-a61b-057a035a5168"
        },
        "item": {
          "id": "81c0ffc4-68e6-4a07-a6a9-82ea2f18253b",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "1ffe82f2-5ce1-4291-8dbe-06bdaeade8c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a603636a-5a9a-4f5a-afac-f2e73eb44cba",
        "cursor": {
          "ref": "ce4a8226-1b11-4e49-b7e0-beb123ad3130",
          "length": 282,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "cafccd86-d9d1-4cd4-b63c-54fed3a3c945"
        },
        "item": {
          "id": "a603636a-5a9a-4f5a-afac-f2e73eb44cba",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "1d937170-2a85-423f-b742-14aa64098f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813124bd-c7d4-41cb-b1c5-cb250492d5dc",
        "cursor": {
          "ref": "5cf29779-4f4d-4876-a1f0-6ef69176a56d",
          "length": 282,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "6c4152aa-ba34-430e-8a82-cd1ace674478"
        },
        "item": {
          "id": "813124bd-c7d4-41cb-b1c5-cb250492d5dc",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "40ed3d13-ccba-4ab7-a052-064ed8fa46e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 16,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e86a614b-19e6-418f-b784-8a7c2da6fc88",
        "cursor": {
          "ref": "128c6199-d1a1-4f40-8186-be7226c9cb6d",
          "length": 282,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "9a265d7c-dd01-4d9b-8b3d-6badabfb7cd6"
        },
        "item": {
          "id": "e86a614b-19e6-418f-b784-8a7c2da6fc88",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "c262d463-0a67-46ee-a205-8273856266b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96b56b3b-9211-4c93-8a16-fb018963d83b",
        "cursor": {
          "ref": "f4f0a8f2-2282-4226-9d35-cff736588e12",
          "length": 282,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "5c418a4c-7511-4bc9-a89f-1295b9f6ba1a"
        },
        "item": {
          "id": "96b56b3b-9211-4c93-8a16-fb018963d83b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "ab7eef96-38fa-4725-9077-a0239648f208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3650de52-927a-4380-952f-f673b2dedffb",
        "cursor": {
          "ref": "daff5250-c09d-4569-a891-5187d16f2e1c",
          "length": 282,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "92160718-1767-4cf5-8e84-90e5529271a8"
        },
        "item": {
          "id": "3650de52-927a-4380-952f-f673b2dedffb",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5c135b3a-5571-4d2c-b7e1-64a4e16c7fc5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06134532-aa40-4842-8086-ef0a2a9d9586",
        "cursor": {
          "ref": "5dc4d57d-f2b7-4a63-bfb6-b09c514c9f74",
          "length": 282,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "377d6d52-b979-4d2e-a700-6da87c40387b"
        },
        "item": {
          "id": "06134532-aa40-4842-8086-ef0a2a9d9586",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "0e941a31-9ea3-4d4a-b672-2f0622193689",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aef53c19-6964-44de-81c3-b2a93d90dbdb",
        "cursor": {
          "ref": "910d1029-9aef-4809-acaf-696b495571d0",
          "length": 282,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "0d5df615-07cf-4478-9d5f-579cf4ca3492"
        },
        "item": {
          "id": "aef53c19-6964-44de-81c3-b2a93d90dbdb",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c631d24-e57d-4458-bbf7-c970ea65c664",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d141c02-436b-4815-92d0-556e94a6ee0e",
        "cursor": {
          "ref": "f42d1175-4c12-4fa9-af4f-a3e99404f16e",
          "length": 282,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "45d519f9-215e-4d29-bb4e-dd7d3f364eba"
        },
        "item": {
          "id": "8d141c02-436b-4815-92d0-556e94a6ee0e",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "40825813-b53e-4d42-96af-ee85b52780be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 12,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de946bd2-2933-4482-a225-20a16a911afe",
        "cursor": {
          "ref": "1b6c85c0-842f-442d-8c85-2348acce5b3c",
          "length": 282,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "5a4cc354-5a2d-44f9-9032-261efa222708"
        },
        "item": {
          "id": "de946bd2-2933-4482-a225-20a16a911afe",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d0dfe609-e979-43ba-9b05-7e1c1a61de78",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "176a0b46-499f-495d-8335-958a3a0584a8",
        "cursor": {
          "ref": "34bbc5cc-cc36-4f26-8bb8-a36d310f4d82",
          "length": 282,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7beaad6f-c967-490a-810a-43597e42c3c4"
        },
        "item": {
          "id": "176a0b46-499f-495d-8335-958a3a0584a8",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "56f8014c-572d-4d6f-8587-9ac89b0ced97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e67c64db-21e6-45ec-96f9-92f3a2a6b991",
        "cursor": {
          "ref": "f05bd68b-c82d-4db1-8fe9-79e264e9e51e",
          "length": 282,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "0f55f739-b152-4c2d-ada3-ae406f135861"
        },
        "item": {
          "id": "e67c64db-21e6-45ec-96f9-92f3a2a6b991",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "985a7f07-2464-46d2-9881-8ca79d7e9637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5157539-559e-407f-a703-3cff73f2edda",
        "cursor": {
          "ref": "49f152fb-1251-4800-8524-1b13b96d41ef",
          "length": 282,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "58c50875-37cf-411a-a499-ebeb65066b24"
        },
        "item": {
          "id": "f5157539-559e-407f-a703-3cff73f2edda",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "b14f71f4-184a-4bac-bcab-d0aa17d639ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a110616c-28d4-47ea-b864-6c0a31784858",
        "cursor": {
          "ref": "bd9f40bb-7049-4c49-b1b1-aafd648aa41f",
          "length": 282,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "852f5fa2-c643-449a-96a5-674b287e656e"
        },
        "item": {
          "id": "a110616c-28d4-47ea-b864-6c0a31784858",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "7f427264-7ade-4c1f-91af-2f2bc563bbd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d585b7b-eec8-44c9-bea9-d6d9de293e2d",
        "cursor": {
          "ref": "a6346a09-6b79-4fa4-81f2-4b0daab06d08",
          "length": 282,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "e4c97bc2-9ac4-434d-85c8-6857f562bbe3"
        },
        "item": {
          "id": "1d585b7b-eec8-44c9-bea9-d6d9de293e2d",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "8ea5c291-cd8e-443c-bfe8-e32e2f2ee360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "477c0bef-368c-43a7-b191-4453ed27c7a6",
        "cursor": {
          "ref": "218447f9-dfe8-4799-8d1a-c540c994fab3",
          "length": 282,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "ede28dd3-9657-4637-8375-93a54233d274"
        },
        "item": {
          "id": "477c0bef-368c-43a7-b191-4453ed27c7a6",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "dcad91a7-a110-41e9-96b9-cc43625efafd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 9,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e9039c3-5f09-4796-b7cd-017d6d30baa2",
        "cursor": {
          "ref": "794f62f6-291d-4d42-90e5-697ec95d5afc",
          "length": 282,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "04f40235-eba7-4015-8d01-619a45a70397"
        },
        "item": {
          "id": "0e9039c3-5f09-4796-b7cd-017d6d30baa2",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "d5c817c8-4643-40ff-b858-f6532490f51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60f08de8-a024-4ff8-87dd-4d6ce5b3ba6b",
        "cursor": {
          "ref": "9d54c180-6ed0-4b1c-92d3-07be18b1f384",
          "length": 282,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "70a99100-1a66-4198-951c-7532774f5f82"
        },
        "item": {
          "id": "60f08de8-a024-4ff8-87dd-4d6ce5b3ba6b",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "50b4f525-e7a1-411d-927f-d954290ab828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30d030b3-2c0a-48bd-9bb4-ca3abcf1ec8f",
        "cursor": {
          "ref": "6fcf1b95-4625-4e36-9ac0-991743741fd7",
          "length": 282,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "58d46eed-d856-4d7e-91c7-10be7ac08f57"
        },
        "item": {
          "id": "30d030b3-2c0a-48bd-9bb4-ca3abcf1ec8f",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "04bb4475-94ad-4cd2-9626-7fc648947bb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17e45dd6-d54b-49c7-9e95-f179b7a69959",
        "cursor": {
          "ref": "3619e376-c0d9-4ef4-8878-0772bd491e21",
          "length": 282,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "f791be87-b557-4edd-a39b-bbdb35824c67"
        },
        "item": {
          "id": "17e45dd6-d54b-49c7-9e95-f179b7a69959",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c6a95c3d-5b30-4631-a6d0-a066738c28ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcc4947-8892-4ac7-9955-354cb10b0bdf",
        "cursor": {
          "ref": "7df7cbb7-a7b3-4046-a58d-e83c154f8940",
          "length": 282,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "440f368f-4ec0-4a22-b6b9-a776722c58ed"
        },
        "item": {
          "id": "9bcc4947-8892-4ac7-9955-354cb10b0bdf",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "54833fc1-8571-416b-b540-ba69976cc506",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "613cf217-1b5c-4ac6-ae8e-ab6746052f0a",
        "cursor": {
          "ref": "05588d61-6fe5-42ac-9147-63d014a819ef",
          "length": 282,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "22087701-e605-4bc6-891b-9e3dbca8dafa"
        },
        "item": {
          "id": "613cf217-1b5c-4ac6-ae8e-ab6746052f0a",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "4b6ce419-326c-4f09-8ef1-a241c82d5870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72838f4d-cdd5-44dc-8fbc-61bf1bb65f6d",
        "cursor": {
          "ref": "deaf4b5b-e66a-4c6e-aa44-6369c35c299e",
          "length": 282,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "dcbf5d5c-2a00-4928-8cf6-db4fdbc2b4a7"
        },
        "item": {
          "id": "72838f4d-cdd5-44dc-8fbc-61bf1bb65f6d",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "b786a062-f283-472d-a93e-c840f1768d9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fef0ef79-b444-459f-b6b4-5cb45f359b3b",
        "cursor": {
          "ref": "dd7941e1-5f97-479a-9027-859629071f7d",
          "length": 282,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "af45ec4c-2d97-4798-a208-60854adce9b5"
        },
        "item": {
          "id": "fef0ef79-b444-459f-b6b4-5cb45f359b3b",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "aa187ce5-b6a1-4974-8b38-608d291f5c95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9eb0124d-b25f-4224-b5fe-2555b571770b",
        "cursor": {
          "ref": "84ccf268-96fd-4618-ab8d-76200e4e9247",
          "length": 282,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "01c9eb11-c617-4233-8101-4ea68dadfaca"
        },
        "item": {
          "id": "9eb0124d-b25f-4224-b5fe-2555b571770b",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "0483efaf-20b1-4a4c-b750-0bb8f7baf18e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed742dc0-06f6-4fbb-91e0-21fdeb1a48e6",
        "cursor": {
          "ref": "8936d17d-7a37-4a09-946b-240cdc9635b4",
          "length": 282,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "cabdc315-e17f-4a33-bd29-1652be78f870"
        },
        "item": {
          "id": "ed742dc0-06f6-4fbb-91e0-21fdeb1a48e6",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "da265812-3ab7-4ddc-9736-53a8b5f2c21d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f870e7ae-5a75-4cce-878e-a7ca68221e63",
        "cursor": {
          "ref": "dd1f2dd3-d7c0-4deb-8cb9-3b127430d52d",
          "length": 282,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "57ae4560-f8d9-45bc-9e74-e6a8c80e6f64"
        },
        "item": {
          "id": "f870e7ae-5a75-4cce-878e-a7ca68221e63",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "0f600425-42ca-4730-9e62-781769a7d6b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "338f2285-d5b8-4f34-b8af-e6b54d7400d0",
        "cursor": {
          "ref": "2b1cc368-d4a8-4479-a381-2c4d6fe78a5b",
          "length": 282,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "4c3bba82-40d6-4bf7-8c40-8c0a6f251783"
        },
        "item": {
          "id": "338f2285-d5b8-4f34-b8af-e6b54d7400d0",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "1abbce13-f9a7-46e2-9c07-df79f247de3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ee53ce5-e2cb-4192-a0e9-ccbfe5bf1f5f",
        "cursor": {
          "ref": "3303e500-c931-4516-83dc-7648b366e2e1",
          "length": 282,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "6e88b1b5-cc39-43ff-9a60-cebb1cc02d87"
        },
        "item": {
          "id": "4ee53ce5-e2cb-4192-a0e9-ccbfe5bf1f5f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "769dcdf4-29dc-42fd-b0ca-7fa0e18bde26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f04f99d1-89ff-4fcd-9479-5841ffd05adc",
        "cursor": {
          "ref": "e0f83e08-a3db-4c0e-9475-1745e96885de",
          "length": 282,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "e28123c2-796f-47c0-9925-248821490c1e"
        },
        "item": {
          "id": "f04f99d1-89ff-4fcd-9479-5841ffd05adc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "969177b9-2e06-4921-897d-28b3c00495e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cdf8f532-f0a1-46d1-96d9-206e6883e1ff",
        "cursor": {
          "ref": "7df79308-bae3-4dcc-bc6c-1b357e296128",
          "length": 282,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "bf55c7eb-3d32-43b1-850a-8561997708bd"
        },
        "item": {
          "id": "cdf8f532-f0a1-46d1-96d9-206e6883e1ff",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c84ece72-6c27-4904-a70d-b6eaac1bf023",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4b79d78-292f-4273-99a7-9800aff4ffce",
        "cursor": {
          "ref": "8286b88a-1074-42a4-9b2c-cbcf5cd4117e",
          "length": 282,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "e17618cc-ffb5-4a9b-bf0f-17005cf161af"
        },
        "item": {
          "id": "a4b79d78-292f-4273-99a7-9800aff4ffce",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "577203e0-a421-48cf-ae27-4ef59b4aef50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd80106-726a-4aec-aaa4-c321d1aa1695",
        "cursor": {
          "ref": "f5e33e42-616c-4880-8168-dbae4821719c",
          "length": 282,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bf5a4591-f3d5-4e43-94de-15cbf2b6715b"
        },
        "item": {
          "id": "0cd80106-726a-4aec-aaa4-c321d1aa1695",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "582be8f7-4807-49bb-bc5a-b46a0d627173",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 11,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a5e46fe-04f6-43bc-b9f3-b9b32489204d",
        "cursor": {
          "ref": "60f82f49-83a5-4bcb-bd30-cdbc29432a49",
          "length": 282,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "c6486289-a3a3-4d7b-9c6d-c8bfeeb844e4"
        },
        "item": {
          "id": "0a5e46fe-04f6-43bc-b9f3-b9b32489204d",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "c16b0cdf-be8f-426e-8960-9a03b1619ed0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3541be-bd6b-4c3a-b391-50bd7e33c6ce",
        "cursor": {
          "ref": "34169be8-a700-445c-b74e-1d8b17988368",
          "length": 282,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "f7f72598-44e5-4d44-b09b-2970ecb2ce2e"
        },
        "item": {
          "id": "8a3541be-bd6b-4c3a-b391-50bd7e33c6ce",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "c65f4317-1d2a-40f8-8acf-717ef2038e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e53f4d12-2f84-4ede-915c-d1150b08fc32",
        "cursor": {
          "ref": "3602b122-58e3-4303-8b4d-7a411dd22382",
          "length": 282,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "eeadafa3-0c49-4fea-bb96-66c64c5fa097"
        },
        "item": {
          "id": "e53f4d12-2f84-4ede-915c-d1150b08fc32",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "7e8e2917-d23b-460d-9003-cfdc03e957c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "101300f1-e31d-4549-9114-d04909374dd3",
        "cursor": {
          "ref": "047f11a1-fc97-4842-820f-10f2233d1dc4",
          "length": 282,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "5d0592aa-4c83-48d6-bdfc-7dbc14817cb4"
        },
        "item": {
          "id": "101300f1-e31d-4549-9114-d04909374dd3",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "46c7cecc-88f3-416e-b5e2-5ca52636c6e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05b983ab-c6c2-4df3-a097-0cfd883cbe62",
        "cursor": {
          "ref": "86c19f21-72e5-4eed-98ea-404da1a5274c",
          "length": 282,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "42e20455-aac4-467a-83b8-41c3a37c5ce8"
        },
        "item": {
          "id": "05b983ab-c6c2-4df3-a097-0cfd883cbe62",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4d78808e-527d-4f74-9a94-cc55ac6caa4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 10,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a38fb41c-ef0e-438c-a6fe-2a91f9438800",
        "cursor": {
          "ref": "1b06fe8f-0e7c-458b-ad30-2a92f7ce9334",
          "length": 282,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "6814a3d7-8460-403a-b9d4-8056a970e7b4"
        },
        "item": {
          "id": "a38fb41c-ef0e-438c-a6fe-2a91f9438800",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "8188009c-84d7-4ed2-ac82-03af9926911a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690b108f-43e4-4fe8-a69b-32e3feec9655",
        "cursor": {
          "ref": "c7c58559-98a1-4f7f-be6d-a76625f7d73b",
          "length": 282,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "4e34c70f-5873-4688-b25c-21ce1ada7808"
        },
        "item": {
          "id": "690b108f-43e4-4fe8-a69b-32e3feec9655",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "c92a7ac9-9833-4792-b05e-e46c20db6288",
          "status": "OK",
          "code": 200,
          "responseTime": 12,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b5cf85f-67e2-4b33-b10d-e1edd744d9e3",
        "cursor": {
          "ref": "3d75a97e-8b84-4506-9b17-b289be722f0a",
          "length": 282,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "048fd352-bfe9-4299-bc4f-8bab45ef19e8"
        },
        "item": {
          "id": "2b5cf85f-67e2-4b33-b10d-e1edd744d9e3",
          "name": "credentials_verify"
        },
        "response": {
          "id": "312664ff-91fe-41de-988b-be52285676df",
          "status": "OK",
          "code": 200,
          "responseTime": 25,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ff6b0f-c5be-4245-9733-d50e6d4e649b",
        "cursor": {
          "ref": "ceb57bfd-26a5-4b10-b37d-d187abec0bd5",
          "length": 282,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "78a554f6-1eea-4ce8-b25c-ba49324adeee"
        },
        "item": {
          "id": "c6ff6b0f-c5be-4245-9733-d50e6d4e649b",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a5f58ee8-9f92-43bb-93e1-cb3496d3961b",
          "status": "OK",
          "code": 200,
          "responseTime": 24,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "22131ec7-52ec-4b5c-8e62-414bcbda3856",
        "cursor": {
          "ref": "4a21b643-0d68-4bab-96e6-cfc932ff9fe2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c0b0ef97-6c88-47f1-8a5a-8d6daea20d9e"
        },
        "item": {
          "id": "22131ec7-52ec-4b5c-8e62-414bcbda3856",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2cea9ca-e08d-4a7a-9af7-cadf6d56e8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22131ec7-52ec-4b5c-8e62-414bcbda3856",
        "cursor": {
          "ref": "4a21b643-0d68-4bab-96e6-cfc932ff9fe2",
          "length": 282,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "c0b0ef97-6c88-47f1-8a5a-8d6daea20d9e"
        },
        "item": {
          "id": "22131ec7-52ec-4b5c-8e62-414bcbda3856",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "c2cea9ca-e08d-4a7a-9af7-cadf6d56e8f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9531df4f-9721-476d-995f-10392f14127f",
        "cursor": {
          "ref": "0bebcfe8-1111-4904-b662-eddd615a8ff7",
          "length": 282,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "6b7dc72d-d667-4cb1-83b2-681f0dc041fc"
        },
        "item": {
          "id": "9531df4f-9721-476d-995f-10392f14127f",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "7fc51769-c0bd-4b9a-b136-9c2218955626",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d44b8a1-926f-49c7-9da3-71a77caa9a5f",
        "cursor": {
          "ref": "8805bb74-f851-41eb-9411-24299c3edd13",
          "length": 282,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "8504cc61-77a1-4447-a4d5-32a86da308d6"
        },
        "item": {
          "id": "0d44b8a1-926f-49c7-9da3-71a77caa9a5f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "1dc5f2d0-d2fb-48d9-9e13-719a137cf0ca",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 10,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}