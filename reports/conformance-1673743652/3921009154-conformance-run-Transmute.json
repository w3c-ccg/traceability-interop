{
  "collection": {
    "info": {
      "_postman_id": "a8035051-bb5b-4670-abe3-cfb96bc141e9",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a2a3177d-edcb-44be-938d-44b811f7aa86",
        "name": "Clear Cache",
        "item": [
          {
            "id": "6f83b8b0-669e-4aeb-83c2-b1c12db74f0f",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3d515309-7291-4066-9e37-31da1c1c875b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "78611bea-0483-48c6-98ef-d19204e9d3eb"
                }
              }
            ]
          },
          {
            "id": "ce442869-8440-4171-9f8e-b30725dd5b9d",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a6ab6d7-d984-4810-ba10-447cd541a8cd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "93cf3e53-f009-4568-a8f8-7543ce76efda"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "26b52f67-8379-45ca-acab-15b0d8cc5072",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c8fa1058-0f5b-4566-95e1-c13107cb9412",
            "name": "Positive Testing",
            "item": [
              {
                "id": "1415bd0f-60b8-4234-870e-3a3083efc97f",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "49be4825-7e13-43b7-988c-83e87bce32c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "897a5bd9-1491-4590-b308-c5ba73b061af"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "525ae004-9483-456e-9cf5-7167e9a094e0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "6565c763-1829-49aa-93fe-c7f8e28d547f"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "7735cd0f-df92-48d1-9de5-05fe3ad3da65",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "bcbedfda-0a9d-4476-8b18-c5ae062557de"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "7239cca7-70b1-4c19-abe4-4415b068c952",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "d7590fdd-0a74-42ed-a541-53bc97862bc0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c28bbe2e-3cd0-4b69-afa3-ac5f1d878e44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e4cf4088-007f-4370-86a6-693b31cc4309"
            }
          }
        ]
      },
      {
        "id": "ef796556-ccdd-4183-9ee4-d6362da6cef4",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "ae212a74-3e66-4177-b972-9bd26b74e6b3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "761e25a4-efb0-4dee-84e5-304f0c966253",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f935947d-e576-426f-80b2-4c04dc870cc7",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4de74e57-0e5c-4a53-a793-51dcddbee859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "788e84ed-7fe4-4322-ba5e-75acdfa36eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f42556c7-e743-42f9-978e-7f8c6ebad142",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8e40187-d940-4b73-8af8-5dfb1b0d30ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2411b33d-2113-4ce4-b94e-8abd4a10110a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d108cf9-3980-40cd-8c9b-0915ad69846c",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818967cf-031f-467a-b840-1c1fc5f733d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a3e089c1-ee5b-4df5-ba43-110bed900ada"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "47e4d43a-eab0-4e72-8258-fa37cb1bb389",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ed1c4220-5dc2-49c3-bd16-415e94ce4b2a",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c171e5-0f5b-4902-a464-db9ec94720f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "23e1eff8-b3bf-4af9-8c36-6e15d85eecf6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5ca8d32-4b88-47a9-ba8f-f40ecea3be2c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab3b8ffa-a0f3-4fc1-ad1c-b53b01e999e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77e75d9-5944-4833-bf07-52117debb0de",
                    "name": "identifiers:missing_scope:resolve:dids",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "daf547f0-8909-45d9-9a21-19ff9e87c5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "10992334-a6fb-49fc-b6d6-3b60147affb8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fe49779-f01e-4ee3-9869-72f936f03250",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"resolve:dids\" scope",
                            "utils(pm).getAccessToken('')",
                            ""
                          ],
                          "_lastExecutionId": "71febe2d-4484-4aad-ad5a-0fdadc92f9b1"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "45b68ef9-8ed0-4a17-b2d2-25b8aed017f3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f4892ea1-e7fe-468e-8bf1-7bba078ab670",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "bdbfcf5f-2468-4507-a477-65ab316bef5f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "040d9b92-fa49-4722-a8ad-4d191303bdc4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "693b9422-f79b-4dd2-8fb3-be4c2216dd36",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"resolve:dids\" scope",
                "utils(pm).getAccessToken('resolve:dids');",
                ""
              ],
              "_lastExecutionId": "b2850bdf-a629-44e3-bbe2-fd837707ce21"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d8e1e5eb-20ca-4bc3-8583-f43789bb617a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "59286fdb-4fd1-40ef-9bd2-06e1c16ef3d5"
            }
          }
        ]
      },
      {
        "id": "481dea57-110a-42cc-b440-7d8ac088ca14",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6d999aad-d7ff-4f00-b7ed-b6616531b5ab",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a1238e7a-7a23-41f9-a54c-0a4ca0a54083",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "95a7e13a-a183-4d3f-9cb1-b37ce0c4cd95",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1cd0d2ac-f2e1-4be7-ab4c-75c8fc706ef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "010ecf4f-1c6e-46fc-8561-2a49c9ae66ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa3072d8-d3e1-4bef-bc49-984ba3fcb081",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e20e12b7-2b60-4e82-a105-c9872e58bfd6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "351894cd-49b8-4155-afac-fe14fe04580a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a5ca926-a935-48c1-b51f-e049d2821b32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06706b0c-f07b-4f00-b12d-16128dd2384f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "260bab7d-e65f-4516-bc22-46345a11b043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "753a5f1c-d247-412b-9bcf-58793d1d40b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55fcde3e-3f7c-41a6-9f64-c570bcef7224",
                    "name": "credentials_issue:credential.@context:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04b475cb-4fb1-49ff-a848-e6058582412a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c91ef653-5b93-4473-90ae-349b4ded2266"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f625f687-39de-4fd4-a3dc-4b669a7aebf2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must contain \"https://w3id.org/traceability/v1\"",
                            "    req.credential[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d321b96f-066e-48da-ad5a-de85250a54dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2901ea59-3d40-4673-a554-0edb31065efd",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bc09ff9-2fe1-41bd-a42b-edd4ddbfa187",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1568181-431d-4677-990b-adb4104d6bf3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83486bf-ce6b-4404-aa36-1e8412fce951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "926d05eb-8094-40b1-915c-38746b69fb16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1dcdc49-5317-4561-a9c9-4633afc0d5af",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e7dd8f6-9e16-494c-b7cb-70dfc80212ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74c04273-ac5a-4add-9e9d-27e8e3964317"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0357960a-c798-4fb2-ba47-df64f9677eb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a02d9b4-4aa2-4beb-a960-cb03c1518459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7079420-9e8e-4a4d-ad1d-0c06ad1df504",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3d80ff-510c-4218-a87d-ffe6c006ab9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4746149f-6331-44eb-a1b0-9c6bdac158eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "545e0c42-e7c6-426c-8030-84468226d088",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1f269802-576b-4c37-b2c3-92e739e13f4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4a0b1e97-5472-4cbc-ae0c-1d4975eddd14",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b36b955b-252d-4d08-9098-c87c72d1660e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fee1b149-3697-4cc4-aac6-42bd699e6eb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8924958-0ffe-449f-b067-3c80047fdcd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3e262177-efb2-4c7b-9332-347079e55f29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbb141e5-514c-4eb5-86e3-2d6b17fbc667",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cce8992-4ad8-4e61-b46d-e5d7f3fabcd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4314927f-94be-4530-9fff-bf97db0331df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ab41586-e3d8-4f37-b6cc-4ebbcc054b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "321983bb-e7d7-462d-ad3d-6f576a48a4ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7efc96-308f-4701-a54e-6ca4003c54a9",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbd5962c-fa65-43dc-9463-a7719ee0d25f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc5ec92c-5839-4ada-9d77-f2ec20afea5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8c004dd3-9f3e-410d-b926-9b0d42b3de3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e40bdcb4-9476-46f6-9360-2a26e09000da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6457219-f416-489d-a86a-5bd5b87ce84d",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38466454-e552-4902-afd1-8fd4399872db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72f94f65-0886-498f-9c4d-5155dd1d3108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c12affa-183e-49e0-8533-a05c1e355d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b231dba3-e1b0-452c-bc82-b6a56dd83a34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "98bb820d-7ea0-4599-bb64-88785698a076",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff9b4fee-8834-422c-9337-f6532c6d0ba2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a29e9236-1cf4-4a0d-bd41-723c3835d836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19c83b7b-4f05-4cac-aba6-26a722b95579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c1f12d2a-14cb-470c-8eea-e181b4ad66c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be0afb29-7f17-440c-a5ea-946b0bc068a0",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c138151c-245f-48d3-a69f-b6e5970002ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11ab5103-1cc5-4ec8-9120-e264cf30217a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1932c079-18da-4512-80d1-3a3ec5771450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aae95f9a-0af3-4c90-bb77-97381b059e96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a871cc57-9786-4c03-aca6-e21d3c16d450",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "269ec7e1-80a4-4c71-b525-58d8421c225f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "17b9070e-67c5-4fad-9ef7-af157d003650"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d03b569-0b9c-4c37-921f-9761d12a26ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "c0198e73-d3f2-472b-b155-b840c51c3f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "896314a9-6d46-4c9a-a773-0c892d5360c8",
                    "name": "credentials_issue:credential.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bbb0ee-1ed9-4bae-a97d-df915c7612de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "190e00b0-a860-40e1-b81e-126b79369747"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de057aee-40d7-4503-9d0c-f7d537475d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.id is a required property",
                            "    delete req.credential.id;",
                            "}));"
                          ],
                          "_lastExecutionId": "34c754b0-75df-4125-9201-84990437d0af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fbc221-3b46-4150-b03d-9d00f2c01e9f",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abfa5288-1929-4a10-8ca5-e1056665f36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3424d138-47e1-4ad2-a708-865b14576a9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dc78f4f-9d74-4d2e-8b45-c2ea6af64e07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ca0e2290-f241-4966-a511-f132585dadc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "756725bc-8dfa-4159-ba46-be996ad98d7c",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30755dc7-8280-4f11-a20f-bdfdcf0d4fe0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d85bcf70-4145-49a4-859a-42095afe8ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aadb2e24-67b5-491e-9501-55cb6ec80125",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "88a86ac1-2285-4519-9550-b019228a185a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87160790-350d-44fd-9e4c-2bb96146205d",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17a7cc71-e13f-4aa8-9042-22cfec6db9d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c0e7690a-8342-46cb-8f35-e3d6be087b5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8dcbe2b-c390-4da3-93e8-7f9d89b2dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "17822f01-fa87-4200-ba17-db49d194a62e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "517e03fc-940c-4bcb-a6bf-22c0bb93102b",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8ef60b9-c7d8-41fb-a5a3-cfa3eabc03ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3d7d3b1-f07d-44fb-81ff-0f50a80d9d1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb455a8d-fbc6-4b1f-8b70-c37a8e7735c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "29223cb9-aab2-432c-b35e-7de9076f4777"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c10265c-b03e-4828-a5fc-41f3b1332260",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d685a04c-d02a-4f1c-9e48-0ccd1d68a94e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6d58263d-1a6c-4215-b7c5-480234b5921a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ad38de2-320e-493c-8a91-5da3f75e764a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "85c4d662-75f5-43ae-a349-a770dec10ff0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0da2df0-4813-45fe-b784-43c66adfba01",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5b96a6-35c6-48d1-ab13-6362c79cb025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1428dba3-734c-4833-b9db-42c26d04d362"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01155878-90fd-43e9-b088-aa1c3a2abfe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "2ecb743c-13c6-4b3a-ae09-35c776ead139"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddebab82-2393-4b9c-9fd8-1ea369523140",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8b31be-b65c-4812-8a72-9d05ec20d2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7d5c96-6717-46ed-9648-52596a8973d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72e67875-a39f-4259-80ba-2057f52322a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0d266433-922e-4fee-b327-899fa59dbb24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46eb8041-055f-4b3b-80e9-6173d99e28dd",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9eca486b-83ac-4d08-92c2-b901664bc302",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "640756dc-f4a5-4347-876f-430289081157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10e07421-52f7-4cf8-bb8f-7c42c45e7800",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e17f8b9-67bc-4dd1-9822-a4daf4a45bbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2afd83d-01d4-4eea-9c05-56063eefaab6",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5aa0235-4a95-422a-b445-1e0bc7479859",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66be4393-f3ae-4961-8f9c-e33d9db99256"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a730c181-8f07-429e-a2c7-f5cd410e555a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f66a543-bd84-43e4-aa08-d65c586c3e19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f00d0411-2a90-44f2-a72d-7277d879c2d7",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bcbb5142-b16e-4da0-90fa-028f4b0d7294",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b23e542-84bf-4590-9b18-d88886a93c6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91ed847b-9f0a-49c5-9340-fb2913e48841",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "7ca5b2f1-7ae1-446f-aead-cf68ead89811"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb3269bf-dc52-4ad1-9a5f-da2896e62789",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b14e1784-0d5f-4d59-b1bb-4641b5186d79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9a55ac0-0024-464a-95ea-f51be0ac9b9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa51226-8834-4dc3-a526-2efd3805f982",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d30e1567-cdbd-455d-9706-deda5389b61e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0403e466-48ef-4bb6-ac94-ba821d2af1ee",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2d9afb5-a123-4535-9f01-ee829bd97083",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14d3a4c6-a04f-498d-99f1-f12b165a3834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5005e172-9ed8-4421-8c6a-d98bee721c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e284963d-0255-4531-98f7-0e422829e5bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212166f3-1b65-4638-8d12-0489a288a0da",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87c8ecc1-5f0c-4dc6-a816-9a80408c1d82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "354c7467-cf6b-4e0a-9edd-04de1bc1ede0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed961d68-1d38-4fd9-b61b-d148c36cfe0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1134dd98-e6cc-4549-a67e-ab963cc84fc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a32d88ff-5017-4e2a-bbab-4d5fe40cf117",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4eee78d6-2dd9-4314-ad0c-db2cdb839851",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58c64e7e-fed0-45eb-ad09-5c623382c304"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1940c53-3ecd-4950-9e56-5f64779d11e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "72c63502-980c-4d47-bdcd-006fdd17bdea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "690ee164-1aa5-4c19-bb00-5854b76486e0",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d016837d-b8ed-45e9-a9ec-cdae9326699c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76884e48-7deb-4e57-9a9a-82b9aab5187f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2f22ef7-2fb1-47e1-9b9c-1cb2592958f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "54fee091-528e-4e9d-a869-977bb64603fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0b44335-25d8-4bea-85c5-44f03d0685c3",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f39f0eaa-4cb7-48b0-b403-33964d3a7cf5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f74148b-5177-44a4-b3de-4ac602e74141"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec63ffd7-7d1f-4a62-91c8-9977dfe35445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3ff8117e-b5b4-46a6-bd91-d2afb4dba7f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae0df4db-65a5-45f2-a259-3550aafd53ae",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19e20cc1-e8ff-4dbd-883b-17300584db97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fece783c-6070-4721-88e0-655fd9b4ef7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed21e566-0bd8-437b-a2ee-30000f48d6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2f78916-c0f2-4408-bfcb-3c0266a922c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4faaeeff-8c02-4cc2-8cee-e01f9d64bc7a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09225c1f-a3a6-4841-902a-80788e2fbdc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "30dd3bd2-2529-4365-a29c-bae51979df58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d36bce9f-baf6-4f11-a0e6-9421594ac600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "30e691a4-72b0-4330-8d34-35eb59802a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9761052a-2a3c-4113-8097-74bd8f6a8963",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c759117-a1e7-4879-9179-af9c136171cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e9b38fa4-de18-4acc-9221-9174e2915608"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d925f54-dc15-499b-9aae-2677bd16ffae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2808d574-9eab-4aeb-9396-9d71cca262e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "459c034d-7511-4d10-b586-40b2057eebe8",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08398a3-fe55-4d14-a66d-a3a55a3aa4a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1453754b-d913-4c26-8cfc-424b79e0124d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22992436-783b-462f-807f-823004aba3e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e5904795-c1d1-4c05-a655-9dc93636bac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "54730987-d19b-4e6b-8336-6a93f0fe80ff",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87dd22e2-c95e-4abb-81e5-4c9384567f64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdc881d2-d120-4c1d-b7bb-1c6e83e3245e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d67db813-21f9-4afa-84fb-4baa6c45a272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c2836a48-4fb7-43bc-9da8-115bc70d8afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "123f5e8b-1e46-4f1a-a895-8484c67b9ace",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c348950-cd94-4396-a412-260b9cbbfc74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaa6c63-d64b-4719-9062-7ce0dc2dc6d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5443d6f1-6351-45e5-9e4e-e989a6efec19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfed0886-e975-41ea-b20e-f54af0fd3a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1b62668-f634-4fa9-9507-49d537ee6b02",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02f908da-4ea8-4815-92ba-f51bccf1782e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14a7697-c7ab-47d7-93fb-e2ae30bcc6b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "908c0e06-e2ec-4771-8c19-220ab68a4752",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "779f11a5-0c7e-4c1f-a4ea-3c0a4d736a8c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb4c8a8c-56b2-4a6b-9012-67369de7f0a5",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "103408f0-1a87-4c97-ac3f-efc9dcea7b8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6095215d-ec39-4a97-a561-202ec46e550c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea3e0067-e01b-4831-89cb-6f0bb96e5cd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "90ca64ba-6172-4759-b884-698ed6851699"
                        }
                      }
                    ]
                  },
                  {
                    "id": "399a5ca3-c719-46cd-a6e9-6322ecd1f2e8",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9cf8021-2fe8-4969-b296-f8ebfe061212",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b060f9e9-e3ae-4269-a7b2-91ca660e712e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c1dc8ba-2494-4731-9e2d-b73c883275e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d1150e50-2278-42c6-aa14-14abbc81d64b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f04dd333-d10e-4036-b874-f717c0139b39",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28962dd6-42b1-49cf-ad9c-18a78ad4fa4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d784c227-6d5b-4965-9f91-e23eb2acf543"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36826129-ae33-4a38-a4bb-4e4fd56a38c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "99e100b5-74d4-419f-b43e-eef5055c7975"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8ec58ac-686d-47e1-979e-c978afae4656",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac599ef-7bac-4c8c-9d83-a2e2a2585a18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d9ee479-e699-4f01-b496-6194c60708a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e32102bb-91bb-4619-9f86-b5ca362eb371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "ba1f309c-cfed-48bc-bd67-a44f39e06172"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d087dc3-908f-4638-a17b-1d17baa81d4b",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c310edb8-1cd6-4933-9e0a-9aa8507d45db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8deaa269-6dde-43cc-8f04-3fa420c2b58d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "996376a7-afa4-43c8-b6e5-991bb3808671",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "3c04707c-503a-40f6-bbbc-e9b025ef8af3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10d64d41-8842-48c3-a020-7cec643489d9",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df9015f5-33b1-42d9-bd24-669d7022f1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3548cd-26fd-4215-9675-6168416e58cf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8daffcc-db20-401c-9090-835432ebcdbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dd929a-48a1-4adf-be0d-b7aaf261c424"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83039c92-b8dc-45f7-90a3-01e1fe366695",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da28245d-1bd0-4d1d-a93e-37a1710f4a45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec4ccd11-f7f9-4872-a66b-36cb7b71672a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74602fb-7a68-458f-91de-17c6485d3790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "adfb5d5d-7474-4883-b132-fb708bad334e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20219033-fdc5-4d37-b20d-5a5072f806af",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "741c504d-9c89-44f1-befb-b092c5548952",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "003e6296-157a-46c1-a647-b6d1119d8b67"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03919967-b263-4b2c-b4f0-005c576faec5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "60228813-6347-45c5-bb39-087d15306970"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82189cc8-8c81-4b12-afa4-d7a2c7c6aa16",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c2ecce1-2f2a-44e6-a2c4-f19dbcefb774",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f7a5940-01db-4d2e-901a-1ff4c9ed7df5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6913d990-a30a-48d4-a9d1-3d3c5865346e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead62c65-e450-4880-87e3-a92e99b160ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "132656d7-5791-4c66-aa52-39355e9b92e5",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bdc3a37d-79d9-4bf4-8f4f-f810aa5f5fd9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f28f857c-2062-49ef-b6b0-a58b1f354e8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71afb92a-f5f4-4648-ac37-f3e3302ebeb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3b20641-0f15-4373-80b5-d181fe45619b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9685393f-2f3e-456b-96b8-01ebfc243607",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89d03e6f-92eb-483c-bf83-60c507294bb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "176a7fc2-2891-4ce0-84e8-6c2aba8c2fce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "534d590f-17e0-4ffa-bb50-10aefe605c2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "14f20232-9ea9-4f5d-a2f5-62f4c1c1704d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44eea146-a594-43d8-b456-a7d868eb2611",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a58c0a36-8e8a-4737-9c52-118dbaa6db7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd2ad86b-8620-4721-8912-e19eb637312c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cce1d09-3617-4f3c-9354-f39e2c2fc427",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "33ca830a-2980-4553-bc44-835a91376342"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06c2e464-d8de-47cd-ad16-29ef5bf403b9",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132a8514-b496-4dae-9861-ef1459ceec77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1b986105-7801-45d1-882e-3eef52ff873e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8825506e-9348-461f-ae0d-42db7649aac7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "639a3326-9f21-412e-9c49-ee6fd99e553f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f52603e6-6b09-4cbb-a264-d92f090fa2df",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64549853-02f8-4444-bf0f-cdb7fb8bfbfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9ac073-2448-40ca-9d3f-1e968effed61"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54a9a2dc-5f8b-4a2c-838e-34e61be236fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9dce532-c91b-478b-9e6f-16183353b003"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c2fc01f-9b75-48df-a5af-1e4ef947a30c",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "764d89de-ba15-4ef1-9667-cb1d57d4798b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e15cf70-3d40-4498-b85c-10e6e6f3a214"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f7f6cbd-2080-4f1a-bf73-153efdf216bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "a45a0676-f910-41e2-8ebc-c444e574dc18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1563f7c0-e98c-4b69-94f1-65addb5a3eac",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe94427f-db3e-443c-82a6-ad087f70b364",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38e26676-0231-49e5-8a3b-f8e01f9f9a9b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81bf7842-8c9b-47d0-a03b-30fa4a2f704d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "4dcb213e-5292-43cd-8a0a-51df47a667f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4833ffaa-c339-4d83-a416-1facfd388ee0",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "28a947c8-e6e0-41af-bbe3-f2ec86fe3c14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a36f769-fb50-4335-ae0c-4aea29d154d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84dbdc2b-ccf7-48b0-95a3-a5f2fb7bc96a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "08a0aa14-02fd-4977-bfbe-f7066a2d5aac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c8634db-fca5-49d5-8a73-4fe7aede4cfe",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0d8cd89-f148-449e-b19a-a4d5841478cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d5e1600-029d-460b-97b2-8686a6e56598"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bcc9117-82b6-4649-8147-967f026e03ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ec23554b-8b4a-492f-b4d6-1fe4b98d0d1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a938b71-3155-4206-b6a3-76d26594cdec",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c5ff0d-2cf1-4d8c-acd8-b2192f73e227",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c94779d5-c241-457c-815c-eed579e77e6e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03e84bfa-5347-4366-b1dc-6114dabca7f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "62552a1e-84e8-4f65-9b10-25d7bf3b6a3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d26de566-6898-4141-9d42-bc48403a7a7f",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaffd461-832b-459c-bd55-c9971a07245b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb52e543-d0c0-47ce-b055-0da323d069d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88472524-ff97-4679-a696-b9bc16d4b35a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "8609db50-456a-4faa-829f-77228dcc86b5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe544524-5a7d-4c07-a4f2-69b8b0893972",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64528bb4-7566-4263-b9a9-bfeccc1fdc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a23f0ff6-adb0-4226-af75-1648aaf9a5be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d961f4c-0854-455c-883a-5e20ae93b882",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "9d022123-946d-428a-ad47-ca7fd6e92156"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec7fc209-7d27-4e1e-9d51-02fefa33ef7e",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71905ee1-5021-4adc-ac53-9767ffd1dee9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8e2eab8-79f0-4337-8fda-2c6c1d82f12c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6232a0fc-a50e-4e12-9ed7-e10d4b682fb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "03bc454c-02b0-4fdd-8ae8-3d40f4c575f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9745b5d6-23c8-424e-8012-fe6b0a91282c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cf589ce-5ad8-4182-973e-4e35963e56c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "936ac904-5b48-403d-9bf1-f1bd2c293a78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6453430b-954d-4c72-82d6-1f85567886dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e4524b32-9c3b-483e-a80c-d809aaaea298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e9c1467-fb61-43b2-ac11-ba61b12cbfaf",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cebd178-f643-45d1-b4b4-5a17de85b2ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e7e7892-6580-42e4-bbfe-44e299e2121a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e49f8b6-7fe0-4fa8-8f66-9406a874a87d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "463192c5-58c9-4afb-86e6-73d3d70d6afa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c6a9639-5db5-4fe6-9f6f-9f0896cfb1f5",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a6d43c-f3d5-4d17-8127-dd88d7abda71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7be1d31-356b-4726-a9e2-1f0a181842f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31ecb9e0-10a5-4733-b14e-9cced8b61bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "2baccf12-346f-4bbc-b126-9f62486e7e5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b3247f4a-be0f-4bbd-a8cd-1d37227e351e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42ef2eb2-eb1f-4d74-a18a-b495a42d3a1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f0ff0f1-ec30-45b3-85bc-cf1c0b499511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc5e428-d4f0-4005-b79f-8bd28748b73f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "01833a1c-8dc1-425b-b64d-8a3ddd88a504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3401faa2-a4d7-4f1e-8225-53ecec51f3ba",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd1151a-ccb6-47d5-a59f-73205dafa21a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a0e070d-5acf-401d-a8bb-57012325cce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fa59c09-218e-4e6b-910a-0c370048a11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "75bf6150-f70d-4617-a899-87a6f5179ea5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "30fa52e0-bb91-42a5-987d-0c6d92d10b4e",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5617c25b-f29a-45c2-b1dc-3d8989f0106f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c784f1-ece8-41c9-8ea9-564eeac54dcf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acb45f47-5b0c-44be-ad5e-1846bf6f2fe3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6b63af12-3210-4b5d-a625-5fae882d0638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d1fca5d-cad1-4613-9865-7611b1350244",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2afe757b-c119-43d5-814a-c06471317940",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "278a465f-b125-4009-8d4b-bdafdf21166f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebb7b9f6-fdcb-44fb-b63e-79094bdbfed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e064f10c-c07f-4b7f-b0f3-cce5602fa0a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "874c22ce-1ad9-40ae-8e13-a9e87c8d9b78",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2cdc857e-6573-4055-bbe7-6f00b543c5f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83bc03f0-2845-4b03-856d-0748fcb4cf9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0d7b827-a017-4814-92af-cb148d181e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "35e13fef-0595-4493-8c33-953019861c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "13b5c088-f35d-499d-9ea5-cbc19324b8a6",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb9fbbc0-93b1-4b94-887f-9cc3f7c8b80e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b557c717-5041-47b9-afd4-9f9522552795"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95a26327-4042-4eaf-bb89-b68662598685",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f1d3593-4291-4d2c-906b-79c2199cf21e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "640ad336-38ad-4346-8d58-8f765b2d96b9",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a083696-3c7e-4d80-a566-92d635489f97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c89a5619-9500-4305-84a5-9e53fb47edde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "969ff5ea-4205-49bb-845a-b678bbbe2a9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "18199d63-fa7d-4d6b-95ce-727ebb999dab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "062702d2-8929-44aa-90cf-c104139bc01a",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf95ee59-a2e1-4e6c-b795-01474faa1773",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9b320e9-6e59-402e-9598-523c40c608b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8de6335-9100-4f79-9934-ddb79934c0b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "e21ef7ea-aea4-403a-9f5a-c2a833fd9e6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a850a112-7f55-423f-99c1-6e0c5e88f44d",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f62118db-bbe0-4220-9dd8-f6f9fcd3f32e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cbdb562-6b3e-4794-9089-e6e0e07aa551"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a8dd98e-5463-4d60-860e-011d5971a306",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "88deece9-0ca8-4003-91c6-98c46fe89de2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "851d71bf-4b39-41cb-90d3-22677edc9968",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34817540-370e-4a4a-9cb1-1600b3d41f4c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07c3b150-13b7-4859-96e3-336bcb9656ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29312b16-ae3b-4a20-a853-d48a8f7d6723",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6532f74e-5824-4909-86a4-7a1cb1d93bdd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a33975b8-d523-420e-8594-90af52151241",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "acd7d715-31d1-4b05-91ba-ea5f47f47c38",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b3f03c7-4b46-483e-8b60-3bdf6a716ffd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98bfdb71-3ed8-4d5e-ac65-56bc6e98dbde",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d91f9a7-915e-4303-8c2b-f113a09dfa57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3810678a-6c5c-473a-b944-479b79762286",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d77bb8d7-f6d5-43dc-b384-1d1c504f8a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98e6fc9d-12b5-4fbb-868a-0da3818bcdec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f74576ad-e506-4fc6-81c1-88dd62f68419",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "885f7abd-5f7f-47d5-997f-0ba473e0557d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd78df0-fdb5-4638-a4fb-98598778b292",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "98618856-3bb5-4cb6-9043-ad430dcc67a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a08d4550-c10c-4b8d-99ff-10f0ebc53831"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8474725-10de-42ed-8f5e-2c7902bf7dc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1285a215-1215-4dca-b470-cb94c816ba04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac7cb095-b059-48b2-ada0-2081baa95a06",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81e47e84-1a1e-4e13-bd1c-3b238fe16dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e8d0d57-09da-4708-97c8-3644af5dde22"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d7ea846-a1f2-40ed-bb67-6afeccd88248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "567ab32c-e834-4e54-a1dd-5a358fd253c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a426953c-af7b-4024-b3b1-5b6319c10a6a",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcf50597-6da4-4413-a95f-a0489d1e65cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21509d2e-df02-47be-8b3d-b71534e262c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "518d2d59-fa51-4ce9-b3b3-942773b0f81b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "230246e7-16c3-497b-bccb-f6a0a0232893"
                        }
                      }
                    ]
                  },
                  {
                    "id": "385448f7-58fc-4e4a-9992-c283a3300d86",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5ce7869-e91e-4339-abb6-4569dc572164",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8bfda83-7345-495d-9933-4743aee91f54"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee6821a5-ab22-4632-b7ce-72fe53cf5a09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5d8c4afe-a580-4ad7-8dae-d9471ccb2dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "431d6714-135f-4201-adef-8bbdc2ca9156",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a4e55c0-e97c-4276-a7ac-735aa846e228",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ec180d1-b7c6-4e4b-ad87-249bd5ad45e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c4d3cd6-3f36-4e0f-89d1-55045c3e3937",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab5cef6-30a3-464b-b3da-87825a9ffa08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47c0e49f-c47d-4468-af29-c1310394b257",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58b1943c-b64c-4c6a-9eaf-2f5ac57dabb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa4ec8c9-c0a5-4138-b5d6-4c4bb06692fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82877462-49eb-4bfa-971f-bd5e24caf7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ab3c225-1894-417e-b4d7-ea5b334842d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dc48a08-0b88-4619-80b3-c8187d5dc8d5",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2f74f387-1e84-48e9-a93e-3610082beacd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e05ad1-c987-4ff1-bfbe-3b00cb763206"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bfb2c9d-8a59-43a8-bbc6-522dca8ae4c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6392c2ec-4219-4abb-83bb-40ed954e079c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "674ca458-59c8-4295-81d0-50445b9a6adc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34939f8b-e84f-4568-a2bf-591efce7ea9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "edd756be-be45-4a1d-9f75-53790c008e21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e17293db-3b03-488e-88b9-f51c0f296fad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9612f162-f416-4896-a443-b74b97266a9a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0dbbbbcc-99df-40cb-b504-a2c3c304fd89",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be8a306f-71e7-4884-83f7-d178cb1965f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb109553-3a89-4525-8bb4-0042d4f853d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "626adbef-9d25-4689-b2a7-04cb8edde1be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "20decf63-6ea3-4333-a9f5-fc7c8abadf7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "649dbdce-5755-4d64-b55e-6e71e0d50882",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4334a0f-4dc4-4b70-9aee-9ca1d487cd3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ddac731-23be-4bbb-90a1-5840a11256ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18727027-5051-489b-978b-60e359940367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "4d91c8b9-b41e-43aa-91e4-e43eeb155cc2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1aecf30-76fc-460d-aaa4-c9e51ff5e80b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd785f53-48fa-418f-8851-5ff8d2767349",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "97a28399-3985-4e33-a2b2-5f90005a28f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cdf8128-5a30-48e6-a9b1-a08b2a4aae42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "aa078cd5-a143-4e98-8c1d-2710e7e21d0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73cbfe7b-a473-4603-89de-2ab44444cf5e",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01ed50e3-678e-4d68-a6c5-3e87ed9c9b3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf79eef8-0f00-408a-be97-b442f8ce0905"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43eeb6a4-9322-42aa-b35d-b65087be7f0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e211533d-956a-490e-82a3-50325252d9e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de54c7a4-bd42-4134-b0ee-e223b19c1be7",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3af0aa29-2d5b-4df0-986e-824d15484f9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc6eab46-d885-4520-a71f-5fcfc5b01f74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7943451e-d8bb-456d-83d7-3b726b26689f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e799aa4d-b094-404f-812d-82af8bdcc8a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3521c5-9282-41f4-858c-776fda90a978",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b7196de-388a-4411-b223-f8ccf13c06e4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae1ca149-2878-43be-b35c-f77e88591f3b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1437bf3c-9f87-4aef-a7bb-d96d00478fb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "94865783-9046-4a69-bb09-9fd5e95ac783"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d63fe53-0665-4a90-94c5-540984478ad2",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d52a9edc-7e4d-45d9-bb4d-68aa1595c6c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c7e3366-2ec1-41b7-b197-6c084b88227e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "55c89020-d39c-4f10-bcde-06366d4e24e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"RevocationList2020Status\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "65b0cd92-cca1-4d7b-982f-5f967c2c7f25"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3015ae7-e564-41e3-8ba2-63ad36b7f68b",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d3cdbd5-2098-413d-8261-a7215f6d280d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "720834fd-81c9-4d0e-89c3-3abfd668c6d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2aec1f17-7c97-41b1-a103-0b1dff05f267",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77fba6f7-cb2f-4c4e-bc68-cd89276d991e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd6c1fa-0142-4c1d-87e2-2c6c5a01d2d3",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60b94c2d-4343-4fd0-bb2a-d027c35b9224",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b8c6279-939e-4aa5-8b95-999026867e5b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74cce17f-7c3c-4bda-8bcb-c8628ea41da6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ab52bcf3-883a-43e5-8c9b-6a7a4a326ec7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6f85bd-b0d2-4a5b-a96c-b689332e705f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8f45df-abe8-421f-8b6c-c981b10a2dd1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1185b6a0-7a59-47b8-a777-2e6cd20277bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c427b25e-7a27-4a56-b1a1-861b2487d95e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "f812ca70-4e1a-4bea-9b84-b68f8a2ee359"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18cde118-68bc-4a8e-893b-af2a34a8dfd4",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83726059-68e4-4748-a7ca-436dd9b6a743",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28eeee94-4851-4da3-b6e9-b670d2549127"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3bbc55ff-8eb8-4dfc-aa32-d47786a0be09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "1629fe96-9ad7-47c4-9e75-ac00bde0e4c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f438aa2-9ff1-48e8-9e4c-140caf60877e",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18e62b8c-f4ef-49ae-90ad-6da140dd0554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "a363761b-b9e1-427e-808b-63226ae250e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7c57ef62-7ddf-48a6-ba21-46fa92c7d474",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3914529-a14b-447a-82a1-0d4500a86971"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2d3cb19-8260-4444-bc9d-90c163b443fb",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "4b00d94a-6d3a-427a-b661-db34e8fc0494",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8185853e-c853-4ca2-a890-2c1b9e42c082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "571f3444-f642-4cc5-8c46-02cc045222a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b9a6c453-ee66-400b-8e91-325e0afb4c0a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "dba448b9-772f-41ac-9264-5f70b958ab20"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81620dc-96c9-41f7-8da6-65fd40154616",
                    "name": "credentials_issue:missing_scope:issue_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "906618ba-b3a6-4bf9-b8a3-67e8197da780",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ae5afbd7-5363-4256-9a72-95fbc9b686fc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d224d01f-0ed3-46a0-8179-30e8cdb7f7c6",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"issue:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"rawBody\")));"
                          ],
                          "_lastExecutionId": "e2801f2b-4c91-467a-ac59-2816d9134db0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "61e12483-93db-4444-8c85-65756854721c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ba163f3a-9ebc-425f-8cbb-3b64cb148072"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "79192688-1769-4bfc-8077-5262427d0e7d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cd835eeb-c2c1-40fe-9bdd-117bd6d30ddb"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3e1cb95c-dc12-4bca-b286-bdc86e6e0906",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8500f95d-a860-46c2-b67a-996cd0196b2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "3667d775-dd00-43eb-8200-ee9006923ced",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "ff5919f9-4048-44fe-b025-cfdf4e0314e4"
                }
              }
            ]
          },
          {
            "id": "34112307-9182-49cf-af89-1189637b3ef3",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9dc6f4ea-78dc-43b6-862b-e7480295d110",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ffa0de80-9cae-41f4-b411-f80fe68324b0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject matches request credential.credentialSubject\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject).to.be.empty;",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "5f177e61-28c8-4478-8376-1f088c844f44"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3ba950ef-2884-4169-85a6-c4891cd6b23a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "5bceaa37-9754-46c4-a06b-bf3ab9156bfb"
                    }
                  }
                ]
              },
              {
                "id": "a66c2d95-cde3-4a5a-97f8-31f1e548b773",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "74a0b1a1-a703-4802-b95a-856a2584419e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d47e69b7-7b64-4b1c-8ffd-174ff62666c5"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f9e93f7f-232b-4576-ba21-11c653d385c1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ad88085f-7c31-49cd-9e7b-b52402539ad1"
                    }
                  }
                ]
              },
              {
                "id": "d5a6a7af-fd22-420e-8abd-bda83543e356",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d9c116a7-7644-4ffc-8136-48e558b4a63b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0381b448-426d-40f6-a607-4211868dc71b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b39a2633-494e-4a39-afca-fcdf3aaf3093",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "8894d58f-25a8-480d-9707-01087d45186c"
                    }
                  }
                ]
              },
              {
                "id": "b2f428c6-e3e0-44fa-81c3-1363c31c74bb",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cc3ff5a6-43c8-46df-a5c4-d167d065d75d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "39d4a5a7-79bf-4eca-8a5f-186b62010290"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "91815295-b2bd-4986-a7eb-3fdbd73673c4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "f9f7e01a-e439-4c65-a045-859fef255cd7"
                    }
                  }
                ]
              },
              {
                "id": "b677d2ef-f4cd-454e-820f-ca11987d65db",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b808a5d-a9ae-4f72-bd72-5a4c0735d676",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "// Current OpenAPI v3.x schema cannot require specific array contents",
                        "pm.test(\"response @context contains traceability/v1\", function() {",
                        " const context = pm.response.json().verifiableCredential[\"@context\"];",
                        " pm.expect(context).to.contain(\"https://w3id.org/traceability/v1\");",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "93b3abd1-743d-4504-be41-fdcac2497b3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56437ba3-0ddf-4bea-a1db-c6f71824e66d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"RevocationList2020Status\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7d707c0f-e558-4230-885a-d0a63a92e09b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7a50c06c-f093-47d8-aa36-8bbb578be9d0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1f334822-d505-43a7-a45b-f8ce09e892c8"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "11202c38-a303-423f-91fa-235b52e00abd",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8bd82613-f8fa-4ab3-944f-0c1bd46731c2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "328cafe4-f21a-45bc-b847-f3c862cd5aa8",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"issue:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('issue:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"id\": pm.variables.get(\"credentialId\"),",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "7d4d410f-9abb-49bf-8ca7-c3778dffa4d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "12d50025-db84-44cc-b04a-e35c3543e4b4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "195a0ae1-f8da-4da7-802a-85eced42305e"
            }
          }
        ]
      },
      {
        "id": "e73a4a43-b847-452c-851c-46a38fac72ed",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "82671ba5-3dcd-491c-8ad0-a0f5b1966d46",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3fc4592f-4f0d-4fc9-879a-a705bc61c343",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7376c31d-2824-4ea4-ad42-104b70b07fd2",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8b1755d-108c-4b87-98ac-93a68ec24dab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "818ff6d6-1cd5-49ea-9b99-1a543edf4730"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "366657c1-7a2b-4f8d-a87c-9d0c77fabeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e248c4e5-6559-4373-adba-4b59bc412553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a5aed2e-5803-4ec1-ba1f-60500b9ae3c6",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e3b5ead-15c8-4302-b48b-a06dd862690d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad8f865d-1aa5-4175-8264-86699d6128f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70d35310-a4a3-4ccc-9923-00f745ee1e3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec5f49f-cca9-48a0-a039-0ee15ab01f11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d3168647-6486-472d-9703-aa0dce06235b",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "09a2e659-5d2e-4f8a-abab-81070e2fcbcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e09476ac-b9e0-401f-ab7d-d38022cec0ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a1c7903-2d10-4619-9bf8-85f5f59f3828",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "91f6dcf6-0f6a-4e2f-925a-3b3213b78e7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef856720-9d02-46ab-9cdf-c590162cb5ad",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d077772-003f-40ef-9e76-ac384b6de066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af459109-5e58-4949-9161-023ed55231ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "747c849c-7a83-48a0-8bc9-c11f334928a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f70bd072-a55f-4e58-a476-ecb08e1790f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "520a244d-4e42-4c26-9095-2294b1b50b65",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7123a88-0aff-49c7-b3e6-90d656e45459",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f299d94-5e18-40b8-8f17-3c21460b6595"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3e7d0b53-636f-495b-92a5-bd5e293d83f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "30c7d1e6-3911-4119-b2a9-ce2724d315d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43d499d9-710b-49ce-aa88-84ee5fd046bf",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77b787af-afed-4487-bcb9-855147a92466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5a4b2c29-dda0-46cc-808f-ba05e5c2195f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79236d13-0e5c-4cf7-b59e-4f4779806ff1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "20427d9b-6320-4eb6-bb8c-6364a13ec63b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c427b7e6-00a4-47ba-8eda-2d392f2df982",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d740776-35d7-4115-987f-7e144cfa6c52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "10385f7e-63c9-4501-9af4-f46ed82ec47a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea24e794-2541-4356-9c54-21e92a04fcdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "16c391a9-9981-4420-be9e-305756b28239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62362dbb-559a-4e1a-bf58-91129e7af099",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4626d732-381c-40de-b0d5-a9b599eebdf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc9fb65c-5635-44f1-abdb-763c5d9a851d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2d5a22-a541-4f67-b1c0-0a276a526042",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac297999-79fc-461c-b5bc-6a0d45550918"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56738e1a-dac4-44d7-9ca0-350c91208740",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "67ab17f4-0619-472a-a19f-284ea72ab89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fd73aa31-6073-45d4-8ba0-c538184bd1b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b52456-2e98-499a-ada0-06da16e77208",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "11c9e514-f618-4eda-9c6d-2cff3468ec10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681f1e5e-0e0b-4ea1-9198-4dfb8cb7b4e8",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b1214a0-6ce5-4a62-ab1c-5965543269b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "113ed832-db08-41ec-9ece-48fd7315d7ee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2eab99c9-7afd-4df9-9fb7-3128f9c432e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dd29e952-a44a-4b10-a9fd-d9bbe6148b2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "038460ad-8423-441d-9abb-e28d81c63366",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "adb5083e-69cc-43a8-a91d-3afd7794aa7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd4be778-a318-4b3d-8674-59fa1cbae65b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "225e78e6-3536-421e-a9f6-8d30e4d98a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e8f8e1-aaf1-455b-b3ac-932fda7b605e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3f1f033-912a-419d-a893-e9f46156c2c2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4334e49d-371c-4d0b-bb46-d15ad0c422b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0441fb26-a416-43a9-9850-2ee85dea7ee4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53d6f6a7-c31f-4803-84c0-cd9981a36166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "f078380b-68e0-4cc9-8aa0-04919858c73e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbc5d456-fa15-49c0-80c5-62f45c140625",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "578400e5-b1ce-4be2-ac99-e5baf9201518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cb083cb-2948-4620-a22a-72d4df9a22a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50883d7f-276a-4ee0-9b83-7bea7a2a24f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0c9379f4-6c3f-433b-b4ef-f087171be1bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b538ec1-a207-4df5-a663-d2da72e4c72c",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac0cdb57-2b98-4b49-b0c2-9d1cde76edac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ebb602de-aef9-4e82-b5f0-11fe1d40d55d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9e4dbd-2a61-4c53-b9fe-00351acf918b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "f74774a5-86a5-463f-8b9b-bc5d9a5f4496"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bdf9e0-ee70-4fe5-8e46-31aa2b873f14",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3160e4ff-9511-483b-844e-7c0850b4bf3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6af7920-3848-4c9b-84c1-46d856ee2f39"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39cf17f1-1ab9-470c-ac1e-23e8d6aa6b44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8b4a8b-be1a-4547-bac8-c62f38607947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3124aef-d609-4971-b60b-fc3cef804d17",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53086484-4f87-4bc0-8daa-6f6db876604b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f55cdebf-7148-45b5-a02a-ae384cd18346"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a238eea9-2997-4410-b2a0-c1ad46561bd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "e260470c-da6f-4cfc-9256-8df0af5ffb46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1237ebb-90bb-43c0-9fee-482d93874f18",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57f5a44f-897c-4f50-9e43-a19cc4632ae9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e18de476-a189-461f-a0d5-349491ab9bc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69995175-7be4-4e7f-b2ee-0bb720f3708c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "105feced-6f0c-4f06-a1b8-1d04c8665af4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a173255-7839-4f0f-a9fb-f1cc4b6cddce",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e0abaea-2265-4bfc-8bf5-5a4d68f07e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e70044d-5747-49b4-8937-0d39fe3e97c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74467371-a6e2-4e3c-bfaa-2e5309eea379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "138e4f86-e19e-4d7f-86a1-a6d384f242de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec883e67-c15f-440a-acda-518295fd76c6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9817e8fd-819b-4e8b-b6db-99048636f1f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "345aa171-4daf-4109-953e-caf4359cdd1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6a0a9bf-46d2-4783-b2ef-d411c5a4a206",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "40580957-d185-4f93-a001-90c65bc9551b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "212c2cb4-ebea-4b30-8f3b-a3790da4d72c",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c4c2300-ff1e-46e4-acb4-f3ee340d4d06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a95c9ca-a356-4adc-82d3-5094aa89de20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a4fb073-c845-4694-a114-b856862468d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "449081cf-99b4-4dab-bb29-279714f1ebb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23ec0d3e-272b-41ae-be6e-3d5fbd70e222",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0913f75a-560a-4acb-a5b9-2a590da64ccf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0da9cbec-cc6b-4523-8c93-e4855595cf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f61a7c4-dbf5-48e0-b176-cd2ad8d1d184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b10c371f-4eb7-43cc-a7c8-3571334be598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6aad96e2-1f5d-4fe4-a110-a96663198127",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "943c52e0-58b8-4aa0-af05-8b766fd67fa4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d2de1ac4-ca3a-4238-b035-e9c361f0d84d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b23f2be-343f-412a-a1a3-aca24b6c9d72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "daa4a539-4b2b-41a8-bba0-96eb95a092f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c0be4db-6d21-4dab-b193-e0a6e9324510",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "38f51d3e-1977-46cf-89ff-552b590e90fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9926648e-8258-45e8-a57d-0c316e28ddbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4fd72a8-4913-466d-b8bf-3ecbd53dd44f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "21459e33-aa67-44db-bc7d-dd3be62caeef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a300e8d-4734-480b-9064-7bc987eb558d",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60c6d7d6-f0e5-4de8-8ef2-954590878734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc36291-8453-46dd-99f7-8d58819a36bd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a41b57ef-962a-45fe-9f4f-4bde633402c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "660319a1-d918-42d3-980a-689070c726e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaface41-ceab-4595-a9c5-37b283b43f45",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dd31dbb-f83a-41c0-af6c-32139dc8c608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "98998988-6da5-4c5d-bfae-98fff91c4e32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c864cb1-e03f-4a09-83e5-d7a6c5ad1bc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8846a1bd-9ca7-4af8-a330-41d192d6d44a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2715f477-24fd-47ea-8865-ad99d15b7e4a",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "391f93b0-3472-48ac-8fe1-116d563e3f75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b31cc7-4965-459c-85f5-ddf42b04a565"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9c2478e-ca96-4e98-a0bc-ad9b8af1e9a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "465bf62c-dc54-4141-9126-4b4be8a01cba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b9322d1-c291-4f50-bc6d-17cda3c3803a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cba8c68c-493c-4ef4-bb5b-c7394edba20e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4442bef3-30cf-4f89-a448-ae80157988ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9478f31-2e34-41c0-b668-c78a637e097c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cd7837ce-767e-4e1a-a484-6a1f67b1ee99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08ac65d3-6874-455e-9c59-ebe0fee86758",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b952188-a4aa-44f6-a410-0ea11efe32de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20e14d26-d3aa-4ed5-bfdb-42dddb717c52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717b7bad-3fd8-4925-acbb-cb17fdb288bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "12a249be-3d5f-4f51-a664-a45b25b26cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33c1d41d-8ad6-45bb-9e7c-9b5f80565acb",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5090f739-61f3-45df-83ff-5aa2f85d732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bed7fd8-fbdc-4261-88bb-825401c6bd10"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4a4109-9151-40bb-8558-f17722662410",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00dde92c-19fb-47dd-9fa4-3a6564a902f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c569dea-d325-4b59-9fa6-3d7968710524",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d5da498-2caa-4121-9ab9-7636ac50b5da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f03cd82b-2417-4f15-bc5b-e1e21094fdba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05f3849a-93a2-4cd5-b929-a512ab2159ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1a3bfca-6392-4a50-9254-cef2471c987f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4aa5df63-eb19-4ff1-afe7-dc3ebda44c5d",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d49490-2f9a-42b4-8a30-fdcbafac0e5c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2292cfec-1a71-45d6-afa4-21a125401dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d376df67-998d-42b4-b8f2-c37382a51bfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "09b4e2a8-0fd5-4976-8488-0b1aadb095ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be61340-74f5-4cb1-9b93-93828af95f44",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "580ff458-ad96-402f-b9cd-f79ee0abde5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fe22a67-4a13-47b0-9408-45fa944e7160"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee315f7d-b49c-49bf-8408-608fed6c8e46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "015074e5-9243-4941-8012-e02df005e5b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "cbe42de1-d1b0-4282-b865-6ec4058edf55",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "91741e46-a546-48f0-a52d-5ea00327e02a",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e6004dd-aba6-416c-9511-79d6f145d195",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e3e4bb8-7af0-4db8-af86-1c837b2ec72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be9fac76-0940-42ae-8c62-42784f5ed027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e3004ef7-5f31-4d2c-a6f3-94bd5f01e624"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55ca54d6-4e65-4530-9b70-039b435ce66f",
                    "name": "credentials_status:missing_scope:update_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c547b3d6-aaa6-4d74-959b-e26ec2580d76",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"update:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            ""
                          ],
                          "_lastExecutionId": "f208461f-d15d-4b1e-b623-aff17879f20a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7f3df86f-cb7e-40d2-9734-de255ac287c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b3c7468b-56e6-4e8b-9e82-60f6e793a9fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "59b88eeb-545b-4214-8cac-267329749da9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48e43947-3e77-44d0-907b-d7045bf69194"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "7a25aca3-8cac-43a2-8789-96d8b632fb68",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3eb132d-4f8b-4b7f-900a-9eec41e7cfb2"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "0c61b811-607d-499d-ac68-1e78ddfeb830",
              "type": "text/javascript",
              "exec": [
                "// Populate \"currentAccessToken\" with a bearer token that has the required",
                "// \"update:credentials\" scope.",
                "",
                "utils(pm).getAccessToken('update:credentials');",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "53396f2a-251d-469c-8ff7-e6c9bff40011"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b127b7e5-3eb7-4c96-aebb-96aee193fc2e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a59bbf23-8d25-4287-83f7-6eab288ca30d"
            }
          }
        ]
      },
      {
        "id": "1b7fb50b-4304-49d8-b299-6c6706a69a66",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "04ce9fdc-6f9c-404b-a4bd-b39df8fb2959",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b1d30930-a30f-45bc-ade4-698e0682e5cf",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4c357f49-39e6-40a3-9751-1e13e5b89c21",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d28e61c2-95b0-40c6-af2e-c4397ff3fe89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c721f5-f924-473f-b884-394e2e5565a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4aaecf5-4155-4212-b1f2-05e95f520c00",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21eecd01-8022-4c09-b510-89691878c814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6413964b-7472-4c24-a0c2-1d038cd5d4b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da377a6e-9478-402b-b4c0-1f01078e2c3b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eeaca8ce-46cd-4a7c-84ba-9ea0ca15ec50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9df1beac-cf42-43ab-870b-7bb820e17cc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b21587ff-1628-4114-8927-7840e541e957",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "732be4fa-299a-40e8-8df8-b73e4102f28d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afa807ce-3b09-408c-a275-411772aa2385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73400f87-15af-4e91-b700-a46c158b31d3",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96dbd842-223d-443f-87a6-9eace83fffb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "559da69d-2755-407c-af8f-df9f93cf2cd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaaa9aa3-88f9-47b1-8ead-b2d3bad9cece",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "682fc3ec-e8ed-4477-9e70-22f5cce35e92",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d7576e3-53bd-49d2-b505-39105fb1b45e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "27f80b8e-bd3e-4a45-ace1-4f8e64e608ea",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bb0d5a1-10b0-4f05-8fdd-072d3a8804f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a5f4300-6b98-4192-af51-c7fbcc4a1ece"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a78422ae-b66b-4f41-9e04-8f8b7848dfc1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d8c2337a-7a3d-4f65-952b-e859db05dde4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92623b9b-d999-489d-b974-c9a9ee28dd69",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "463fb404-ec9f-447f-bfaf-8fb04ecd85c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c4794a1-c69e-429f-9765-2c9b28f0f5ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31b9f7b9-08b1-4f72-8a05-612e1fd8b35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b9fca90-989c-48aa-af7e-b98e212807ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "addbe991-3539-4503-ad93-956767c1828e",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a228569-3229-404f-805a-287c7a5167ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cdf41c4b-cbc3-493d-8b6e-1f0d3408901b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2217f6c0-c35a-4eb1-b56d-3c095d66fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd2508ba-33e0-431e-98f1-a8b6a89b2f6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8591af2a-c738-41eb-b61a-1e6d1a9dacc3",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0bfeb964-70d6-4d5d-95e1-725cc0605aba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff3714bc-4b97-4f99-a0d5-dba548c6f3b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45047d1e-916c-40c6-adec-b64e67e855d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac053a43-e392-487c-8715-bf66ff868d58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e685f6b1-8c4f-40a2-89c3-40d3706dd0b3",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7972a858-62ce-4ef6-94f8-7f1e420bb2ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30cdb1c2-eff4-4067-9569-b1267216d9fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a73890-be42-46e1-ae9e-13b11b7f1095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5aa6adeb-7162-435a-9c7a-96de1db2247d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e836339-6d49-4337-82a0-d872c288c00a",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2545797f-3367-450a-aec2-639b3b3b10b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f1c7d07-0d56-484a-accc-a94ce301b7de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5c8dd7-beea-4676-bf5c-934f6169a2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48af19c7-1c26-4796-a7bf-0850458be6e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d826f81-0059-4553-9f03-01a75ba91fcc",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e72949ae-cfbe-486b-a812-e34063e3a622",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c6e77ee-1505-4fe1-8007-0a68d8fe9417"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0e8b4ea-4671-4b3b-b02c-225b84294c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bc0b3687-9c1f-4e4a-bd43-ac1b5558ed1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0cd0e6-3d6d-400f-96e7-89fad7260c57",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3508db81-0cbc-4fbf-a16b-f0b4c0a1bf36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "484a4b3b-1e6d-463e-9e2f-7392a297996c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4b5d7d9-568e-4db1-a864-f99cfeee9ebc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81694807-3132-49ce-84fe-5e67dbdccc53"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a3fcd40-4e75-43a1-9d52-bb9b589e9eba",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2695501e-9e11-4e4b-96d6-ae741e40d1d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0839476a-db97-476c-9088-5f0b972102f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6232cdc-aa27-49a5-b7c6-fccfd175f88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1b8a815-10ed-47f9-b364-9d3a59ab1500"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff37323-23fd-4718-894b-0e2c82943e95",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac2dd14-1cba-4c07-90ec-67a2135ee94a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "38636a28-b4db-4898-b78e-5de542d711ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bedf02b1-0f9e-4df3-9fcd-38927e86e004",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a48b92c2-425b-40a6-a26b-eb981ef1395b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3a86ca3-3d68-4657-8926-8a5668548669",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5d573a4f-137b-4996-93b6-ab19ae63c179",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b137ad8-2371-4397-871d-2578c5f4af9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eee6f00-f85c-409f-a35d-815a34834665",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff290fcf-cf75-4a0a-95bc-42c77728a990"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c338ea87-a8b7-4493-b6ff-a2d4dc814448",
                    "name": "credentials_verify:vc:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d19421b-52d4-4bfb-b3ce-b51c948aa715",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8976bc82-ab13-43fb-844e-8159a24f7c03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4773200-840e-4112-b991-48121e685c2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a50f9085-2afa-4ba8-bbdc-c77f197fbf64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea1d975-e72a-4ed5-83d0-a11b57e14cc6",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f3d51a4-68e6-4947-8735-49f47bfa2cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2d2a17ea-abe3-4ba6-964a-8b4f5575e988"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0064ea6-9ade-4413-9441-113dcec388be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d04a7096-76c4-4a86-92ce-bdc6bd6e49f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6009df38-0b8e-48a7-b103-7e09e682f181",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80520d3c-5af2-4823-86b3-d9443ce558ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f9afd26-06c8-4418-ad4a-77df94057959"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ded148d6-4075-44ee-b682-f5c3c58ae439",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d494c92-68c9-4291-97de-543132238cdc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b6b8d5d-4a97-4b0e-98d6-6bea7731b4a4",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5163ec42-f28c-4767-9845-8622684ab302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d1ab537-4b78-4dc4-a393-7b0e9d8eb5b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea710c9d-a25d-40a5-b319-06eead0d3aa7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db6d42b6-694d-415e-8306-80b67dc300b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d0e316-8e89-493d-9851-3f2d630fc6b6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e777076e-69dc-4765-9d3e-f49ac6b26553",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bda02a79-1f61-4968-944a-9896c4d438ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ddc053ee-48c8-4997-aad1-83228dd20f04",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f4f9601-70d6-4f77-a81c-0c1938e0942d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a37401ce-0960-4fbc-a13b-2beb8bf5b2d0",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d91b05b-97ec-47a5-bf57-122c36185851",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d2268f42-7af7-41f0-ac1c-1cd345fb82b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e77238b-d0d1-4bdf-b571-9b6345fcf093",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9f1d879-7269-456a-911a-afb841be89e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9309c24b-f15c-4aed-8db8-844a74a8955c",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61804efa-e665-4064-9905-7ebfc685f38a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd9d21f-2bef-48f7-8ee9-19afeb104d0f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1853a7e1-2718-4345-9333-e922fa067f2e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "496d300f-b945-4f1b-90cf-2fa4abcdbd6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9ca7865-7783-441f-a550-bca052c0f65b",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b2d34fe-d868-4347-a317-0467a2e046b0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "07ff09b1-9fcb-43e6-a6e6-654081bb61e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4472911-a001-4de8-8ab6-6fa3a353648e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8dfb3ecc-f410-4410-a429-7f741a2cc5a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8691b59e-10a5-4ebe-b6ee-924ca8c1fa6b",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9dacb2c-5662-4b09-9498-2d956e78cee1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28cb75f9-ffd1-4877-a72d-c2c671681cc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32e193db-9b8a-4ddc-9825-c0ae3b1d5b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "81616164-39d9-485c-8cb9-effe1ee3a649"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cde916f0-245a-4364-8a4e-5de99ea53585",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8742583f-3b40-42ed-a16e-50f6a751b4df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aca2068b-88bf-437a-b8ef-48c3fc618200"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac1aefe8-c9cd-4a54-b614-e2976fcafe22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b0389fb-16d0-4a4a-ae36-c202254fbb71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4ec01a2-ce5e-4801-9169-d1ec446346cc",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0460b2c8-97d2-49f8-945b-294d037d7689",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a5bcaf8e-69ef-4244-83fc-a801e4761c4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9ba2652-8c5c-4b28-8077-4b1beaf9a4e3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1599d4f-fe8e-4000-84ca-e11724113e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db61c03c-1235-42f5-85f2-4b8da7251400",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9784e54-9c8e-4ae1-b94e-90e1944f5fed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8a44615-ddd6-4d0a-81d3-7810a2c78147"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "51fb74e7-dd6b-4661-ae25-a8fd50523356",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ffaf0bc-b26b-4fdc-9453-7167828855e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39a44b48-c608-4a54-87f3-5a01e1e6d806",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922aaaf2-7579-4833-a814-60aa623bb883",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91b7d65a-7d2c-4f25-9801-92c13cb783db"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c554bcca-bfd5-4556-b72f-bf9a92b85df9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "480f9fdc-0101-452a-9f7b-651bbd1e11c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c9fcede9-4552-49f7-b075-052e8af6836d",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7f451fb-d0c3-4711-99cb-ca73de647c64",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6c698fa8-0c03-4afb-b89e-bcc21c3f44b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "929090d6-da45-412d-a45c-514d01ac0b5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4627d237-5831-4bab-af33-0ec819b331a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31024030-785e-4475-a5fc-348cf36a10fa",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7ed0021-6425-4f3e-9f8d-a50ab28bc04f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bca95c87-f49a-462a-9b7b-a7b249c857e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fd02f15-47f0-40d1-aaee-ce6ca0be9c78",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da935dd8-8d26-4635-aed0-77a231bb5355"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02bd7f21-550e-4d1f-b52b-9d8b086e541d",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8249f112-4376-4c97-836d-061306c52a3e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "726e479b-0516-46d0-93e9-0ab8b270ce99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61a5d032-cb92-4038-9bd3-eb63f9d6feca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d844b1e1-aa43-4215-b7af-9f5ededc5718"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fad1beb2-95dd-4b2c-9c8d-7956f1a3d4e7",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "829c426a-f120-47b0-ae56-3cf8811c3b06",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1443486b-ca33-4a0b-baaa-0c0c07492c6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5fb0a3d-15c2-473c-9681-9359370175ad",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c9d88ea0-9732-47a5-b1de-e28a0f645e74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6fd29b6-fca0-4875-ab63-05d662df34be",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b259d8e0-e6f1-4b6c-9bf4-c14e9bf25922",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e60f3315-bf61-48ff-a902-3ae15849671e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739aedda-c3c9-4147-8de4-7015f2c0f3e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f0861f9a-609f-49ec-ad24-d29ef66ec8f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d769ac08-fe1a-4ffb-825f-446f8123a8e9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74715d7-83c8-4d93-b01c-f8337eec1cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aabd28b9-7a80-4e91-86e9-33cde44b89c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e68f0f86-289f-4984-83d5-78d66696e49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e273e4e3-b3f3-4e78-b096-d64fd7a88223"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e3112bd-4f8b-4796-ae3b-8af149d77919",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6bc59853-2c04-49e9-bda1-83e5d37ffed5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "04dce7ec-b272-49c1-b8a9-8378cd26ea47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1e71eb3-2984-41b0-b28e-8150f1859ae7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d801cf84-43e2-451a-a209-69d6ce28c517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11f8444a-ca3e-4a9a-9dc6-de78ee31e350",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8411297a-77d9-4db5-b7d3-9049338f1022",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55683949-d07b-472e-90a2-b5556add672b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "45d1ed2f-ccd9-46ff-a6b6-0a2256d56905",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe668e80-36a9-4145-83fa-9aa3be63bae5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad1a26bc-001d-4ae1-9001-4204cc2a68bf",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ad189c1-0f7a-46d6-a37b-1d81306778db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b97fa3-1fee-4511-9683-dc18035f3dd3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "195c52a0-d4df-4d99-b4a8-0dce7f3ffd85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f6acfac-71f4-4ca8-b459-68cf2cbddb55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "724a9066-810d-4baf-bd8d-7dd7587a027a",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0bf5a24-8a76-4c6b-9fba-2274a84aab02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a9bd1494-f4fe-4d50-a81b-93a8871c3d99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b89c7ba-4de1-4580-b360-b78a99aa1be3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "108eab29-12c0-4fbc-bd30-e0704bfaa2f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf7297c6-6ee1-4378-9daa-b64146d0d659",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5696c4a-4dbc-4f0f-a3bd-df05b8c045cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f86982d0-ac9d-49eb-aa18-786639258fbd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7de12fe0-25df-4613-8964-3d4c8a86c4fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abaa1fd2-2264-4366-8386-b4c51bf9f036"
                        }
                      }
                    ]
                  },
                  {
                    "id": "897d2736-4c78-41ce-8d92-16bf7a3abc4b",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a660f2ba-ebe3-40d2-8a85-769940d11287",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c49ca03-62a9-4fdb-872a-2bac8904de9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7eccbbb3-6314-40eb-aba4-22b407802242",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87e51d8e-1ada-4018-b0b1-473e4e250a4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25023b2d-55d1-4a76-ae57-4c5782529111",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0454de-888c-4673-9ebd-3b3c5d64163f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6407b5e4-c05c-4c83-97f3-de1905a70707"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0d8ed735-ea86-4acb-9f60-5b47760f1ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96bf673a-6a7b-4c69-aa8f-1300177749cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d97fac2-d54a-45b3-a456-4e4aeb363732",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "349d0ae4-f215-46ba-9e14-84bff8fd8ac6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e247d28-b458-42e1-8063-39494cd499b0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46cfa986-74f2-4f7d-ac02-ec120171359b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00e32ba8-d701-4b68-915c-d8ffaf13009b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c115e794-ce5d-49bb-9643-d41ed2f138f2",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9df06434-a03a-4631-b2c2-b98e4c48e8fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b01dbf50-368c-46d7-8ea3-d6d645bc457d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ce0357e-57ce-441f-a6ce-c953a8e2d095",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1897e5cf-d834-4ae9-8e8d-df5cbeeffa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f46756f1-3553-468f-9c7e-2140ee81ae1e",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "428223d2-5141-43ef-a636-64162f51a3cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30c6f977-3973-41a2-8e0d-8531c92a0f4e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17de3a34-19df-455a-ae76-f9e4b9d88ed4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12bc8470-ee71-4ce5-be34-699a625e0e93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5acfb835-bb87-4da9-aa50-d7f0d6b2a066",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "021886a8-ce76-4180-bc34-0e8d2a469ab7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79163694-e004-465b-ba96-972603b4fb87"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "171208db-2e70-4bc0-9bfe-7bdb6241dbc8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc128c8d-e471-42a3-9927-bc64e54a0cb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95b84a3e-5c4f-46aa-be7f-65b5163d7b54",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "676b113f-c86d-4be6-bb5a-ff6db1b9ccf9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97faa5e4-c922-45d3-80d2-83c1598293ef"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c00f3d7a-1501-42e9-b4f1-fe858a75748d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3f1571b-f97c-484e-b442-4770c6e476b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3680d066-94e1-4866-9a83-51fa2431e51f",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a03d492-4880-427d-a254-c5b080c6222b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cf57d619-7437-41d0-a61f-e8ca1152ae48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79669a7e-4d0a-4851-af70-b97c75c63b2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3daafecf-89f8-4920-8b62-b3d96b64e385"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78e4f56e-1e1f-4ae3-a456-6a15999b6fe2",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c80b3e02-f833-49d4-93a6-3fe06e84663f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "db8dbcd6-5f7a-49a3-97a4-1a472d30f030"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f93789af-d149-4904-8e16-010b9d92ca41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2835578-b1d7-4989-8515-642ad4e4f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb168fe8-e599-49c0-8489-fbd34b67d16c",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e33c7e6-104f-445d-81d5-48ad1bb2066c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "545df41d-ef95-4a2b-8b0f-3d133f462b31"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d080543f-16fe-4e70-bd5e-82d0667fad01",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8a49b2af-9a11-451e-b631-cee55baee233"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01011bf2-7c41-443e-afb9-317b81750a5c",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0203c3d4-1fd3-405a-885c-38c14699592e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c31156a0-a2c8-4be4-baea-6d3ef8bb5d8c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59b7d3a5-6320-44bf-a05b-35912fcb2dfc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75c52d11-bacc-42f7-9ab7-8ee55be754f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90b454fb-c980-4758-a3fc-8d590a8a2a95",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717beb7e-3ea3-4516-b571-ff5e2e1afe64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "165e492f-aafa-4157-9da2-21a981560ba1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65136ec4-8bd3-4d56-a286-a379dc6e66c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3c1ebe3-b8dd-4691-a300-499ec988b157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fdb8e2c-c13a-4b4f-8283-988e006e705f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d199ed24-4cbf-4116-9609-cf00385f17bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d5b93335-fe31-4b11-aa79-c7aafb96fabf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5508ba93-9306-46fd-9b5a-e5c8d3915d22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11df304c-36bc-4f0f-b991-9e270192f4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0263e28f-dfb9-4e6e-a5fd-0f0c18a639f9",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f45dcecf-d021-403d-a10a-449eb9fb169b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d9280b34-c9b3-482e-a907-ccb748913c56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be37a51c-624b-47ba-819d-221c50e27062",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e125311-22ff-40d8-adbe-3b1319cd7db2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9f83c9-84aa-47b8-ac58-254ffcd87485",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1aca5742-8a76-4742-94fd-7e5ff50415f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8be6b407-6313-48f9-851c-8de790baf0ae"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf47bdb-a0d1-4416-97e8-459866384ef9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "706d5c78-9f3e-4ed3-b29c-17fa806f18c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f161a34-d69f-4e71-8ba4-f7d0835aca79",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3983e901-1982-42fc-a738-0a727cd0a7fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e0f43fe-eec9-4681-abe6-b09a44c32498"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95808336-fed4-4e9a-a4e6-1ae0085d4a5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15dab6e-e36c-48c0-ab86-134fa0cf6f8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "018ab148-fb5a-4558-950e-3639bed2a408",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddcefa09-3a41-48d5-b0c3-45444fbcfc43",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0704263c-8822-4ca7-80b2-17194642e8cc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ba3155e-a62b-47bd-a477-8efab9cbe9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b03a3a52-a039-495f-b3c7-14b755707bec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83fdb935-5809-46a8-8f70-01c7614f057d",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b2cbc78-0b57-4492-b86d-ff9d33b227af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39bc19d9-9081-4d46-8294-97857eaf2e0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6dfe2a6-d36d-449d-b0b6-1bf836f242af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b15d9c90-20a4-4e49-9ca2-bf1e2fcc7392"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e869d0c2-c02b-4f72-b89d-e5e0aafc2ed4",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76aa1f61-1167-4872-94ec-c7ab25e9d196",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b56440e-a054-4e29-b18c-d6ca5b8b2aee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8c61e1d9-a632-498f-b41c-afc1670bc088",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fc09406f-27c3-406e-923b-d5e87481ebaf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec25ca9-fdf2-4f4b-9e95-18004d288ece",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f89050ad-e38b-44da-9c25-59c8338ce55d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0766b3c9-5770-4818-ab8d-071e76acb60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07a72c25-c299-4066-bc9c-a251c80aedbf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c57529-a1fe-423c-aca2-020e30c02eb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "820e2584-6fb8-4e02-8f77-c821a04a412c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a8cdbd5-d866-4ae9-acaa-112cbe80a098",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b086923-0b42-48c8-9d6b-3e41f159fbc0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91d2f2a1-f005-455c-9993-8442ba5e6158",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af1d139f-27cc-4003-a6b2-ad47bc09223b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b008c5be-2d5b-41c6-ae06-4c1553648245",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f269940c-b9ff-4ad8-afab-b40cf491a79f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dfd273cd-abde-42de-b3bd-4f8e4476f065"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fb81f0-2009-410c-b551-e29dafb14cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b75e5e1-7acb-4243-8512-861efe704b6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14606ea2-2a35-4f6e-b301-73b540ed2408",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8efc2d5-ee06-45a3-8ffa-99d118ba81e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7e0a6e8f-9cbf-4628-a078-d26a94b52af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7bf704e9-44e6-42e8-bf95-43670d94176e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4d205ad-7d1c-47a0-8b83-fdeeb2e168fc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69ceb8c4-df45-49f6-8819-60ee3a67d3a2",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8f8e208-10db-4aa5-85f6-a9c3c7b4236e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5f5e0e4-e138-4ea2-8e98-3f208c7821f2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21fe6f49-89c6-487e-ab00-d6d39b3ea7eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d162e03f-e354-445f-b071-7f14b44719c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f2cd527-04f5-40a5-bd48-a3d30f3ced25",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a40e1adb-1fe4-46e6-afd9-f5c63216de0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a798504-7ad9-48f0-b367-99c97cd20107"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "69109cbe-888d-4294-b184-72ac08e76165",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6756c3ae-0483-4bab-9dcf-08a1e5cf8551"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46d1975f-9d22-4aab-83db-71fc20239aec",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7120d81e-264f-4d7b-90e7-755ca050ba6b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a86170e6-738c-43c0-af98-a996f6f583c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27931bfc-05f9-4945-ad3f-609078f555f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ca6bf85-8e6e-4893-9349-4c9c9c052b40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86b26947-6322-46f5-891b-2754dfc03a19",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb768623-5cc5-4d3f-bb11-8851dc3d43a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "391ab43f-9842-4a33-9ebf-5cb29e9b1d47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ed72f7-ede9-4690-8d0d-c385a55b921e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9353e576-4bdf-4964-a423-12bd7b3d7aa8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "729c2da7-02f4-4496-a1ab-e2318041de41",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba31756-f72b-4370-8c7a-a281789480f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "85bebe24-0abe-45cd-8840-c8c9423459fa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2550e528-e4fe-497a-9222-c2aedfebc516",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28b4e539-d9df-415d-9dac-6c55d216a418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d3a1f97-2abe-40c8-bc66-4be7db75a483",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1437122-a425-4512-8f91-21f34dbc6497",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "43216ae5-b598-4ac8-a65f-953a8c6a4a2b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3948b6b-4bde-4870-a280-4ab34489c52c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7619207-e8f7-48ed-ae97-295230895cfd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "623b2761-0ab7-4c13-8d8c-266808e3e800",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b83255d0-b257-43a1-8d4d-2afcbab4d161",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04686d8a-5a0f-48b2-8786-3f14d9bbe606"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7bbdff9-ded8-487c-9e67-0eb99242ee91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73c736b6-9dec-4b33-b868-5f5a2ff2bff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01e82551-ebc8-4d91-a886-dfcea14b3cc7",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02712931-47a8-4635-92e5-69b6ba4d4997",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6aa028d8-0cc1-4715-871a-ae74d2faf90f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f6fcad5-40f7-4271-9ba3-fab9f042fc60",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b588a2d-7da9-4db5-9d8d-a4ff6b4286ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e02f724-7700-41fe-8c3b-ef4abf2b663d",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cf07fb8-451b-4e49-be3a-12cc6b450942",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fe2aa0ce-a78a-4bcc-a065-42bf65da5730"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b91576a-d313-469b-aa11-3d5e8c246644",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe7596f6-dc87-4cae-9709-a244c63d2703"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb6453bd-b937-4d42-b8dc-ec5be6d145bf",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d114cb3-913a-4fc4-bdee-b34aaca57ddc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6ded1e35-c73b-433f-a42d-29d6ae50789f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57040b96-f2af-46a4-b685-1846c9ba93fe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ca616cd8-b2da-4b7d-aea8-821fe031ad90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8b6fa32-7a15-434c-9285-c3ca5fb37d11",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0cf00bd-d7ae-4e98-aa6e-e089e676d75c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6d08439d-0970-4075-b851-0436e09032c7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11135e6-bfb1-47bf-9570-1e249a77bdd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37cff88b-c953-4cbf-b0f6-98e72382d284"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b2fdd9d-454b-4926-ae26-d0e06b8ce482",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a5f79a8-9790-46b6-a6e4-e34c2f053314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c1f172f7-a763-44dd-8fea-af18f8f090d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44754131-8c96-48c0-92b8-a28f5843f983",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "11280f6c-f22e-494e-90ac-0bb4c010ecb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03867d60-143e-4a1b-9667-df97151cbbad",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5977202d-ff07-4bec-8af3-01cdf8cddcf4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "77e88ee7-7c47-4747-90bd-143bf0efcff2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d844faf8-cbd6-4bad-87f8-2f429e44911c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "05ba0e0e-6edc-433b-9850-db0f70ecf9ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81dc6ace-09c7-4cc4-a4f2-50de86ce3ceb",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6e65a7b-eb2a-4fbe-9065-ed03e9bd8981",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ec920bf9-71e9-4812-a088-018482135bf9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb35a982-1a24-4ff1-8afc-dc5e20c632da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17160230-e8d1-47c3-b38f-d6776ddab569"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a377b948-9392-49c0-b4e4-f8c88f8b0595",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "495a8d34-353a-40f0-b274-bd3315d8bcf8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bd3c61f9-66b1-40e1-bcaa-5b2a9382365c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "048719bc-9b22-4c12-8e5b-a2f292455171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8e20f880-5ffc-44a4-8ac1-6533dae6e276"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2615a4c-16cf-4f13-8897-0b342d290cfc",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15866906-aa55-494d-8ebb-30d6af0c8cdb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "344adaa2-ac53-403e-a0e7-e33893928efc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c124d5f4-6b23-4234-96b9-b005e00b9be8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d2c69f8-7fca-4f15-9e1a-77a647f7a537"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36ed715c-34b2-48b4-9240-b36f5e101d49",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb77e5a8-605c-481b-b983-550c8307bdb9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3331d631-3d19-4e45-9e16-49ee6830134e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd9ed94a-2e3e-4763-9320-4a16024c5134",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f6eb59a-f4f6-48e9-b012-3c57d9d2dad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273b57ac-4267-4460-9882-586a35181771",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a15985c-c051-4585-a067-aff7b3115b8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "056ce091-d601-45d5-aaf3-d0767207a6b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7c1aeb2-ea40-427a-9400-98af72ce6b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b21c0c2-725c-4331-a280-8f45c29ef19b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "72301c21-c7ee-419e-b85d-bdb6a9c847f1",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70fe5319-7753-4fa2-8dd5-0a2709043b07",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "718aeae8-daf0-4ca9-bfa5-dc96e80514c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abf3f378-938a-4517-a1c9-a22eb162dd2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1241669-50e5-4669-8cb4-db80bbfe6ada"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df20b1db-a1d5-4058-8c67-e6fb761b3540",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "62852641-d53a-4122-bb87-6a927ddbc7a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c3ed8efe-2db9-44b5-996a-5bced19d3da2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e1611e66-73d4-4b5e-94ae-2bfd5ee6c3ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02705a2c-1791-45e2-b3ec-16b91895ae7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c94b11-01da-4aae-81ee-ee220e467dfb",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41cc4577-fe5d-4ade-bdc7-ed89f41dc957",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7bf2c611-20a3-4ede-a8fc-a783383d388b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb19763-1f7c-4b6f-9f86-192f7101800c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1d0ee9e-4e27-40e9-aacd-eee3dc77ac22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebb29009-5f70-44c0-83b3-dd8754d10d40",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "120abeaf-886b-4b9c-b69f-8965d53b0a7a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "12690aa4-2841-4319-8c1f-95e0472aa2d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e00c6f2-fe01-471e-a864-0b30434423ff",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66f47fe0-c738-4981-a6be-a6a785cca3d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9156fce-a01d-4110-a41c-1db1d95f6397",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30773485-6d31-4751-a5b6-fe3e04a5ba12",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "05a17300-7689-4329-997b-a61f2c10eace"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a8cefcc-ffa1-44de-b8ea-1314a94359d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cda30a7-7c9d-4808-ace1-a2682fddd8b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceaa4336-00be-44e7-bc9a-3d02023cabd8",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2de263d-13b8-4cb6-8ebc-75aa10328464",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2e39bc80-ae1a-4cb3-ac3c-fcd15dff4845"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36bbe712-161b-4991-8166-9869854e5fb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c567342e-cba4-4cd7-a049-d7a9a8e6c791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c93802df-8c3e-4b94-9148-bacbed75c07f",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150991de-1563-4eb9-b162-4dffcee69437",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b3e602de-1316-4801-b82c-c0092b2e9c2c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a6f663b-8957-469e-9799-e29158230756",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f997f1e9-f87a-4ee4-8784-13c4536356e3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "619ed94b-35ea-4aa5-8fbc-6f84850be7dc",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dfad88e-a1f3-41fe-86c6-6b341cd337a7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b7dfe93-d89a-44ec-bbec-48b3e57cc399"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "287264e8-b853-42d0-ba6f-4affe82b29af",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eb5b8721-3f92-43b3-ae97-d294c1cad8d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22d5375a-8759-4c05-80da-8ae914eef1bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95df8b76-f6b4-44c5-8801-7bc3af5274ee",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ffee67e8-b7a2-4132-a094-edbda55f0676"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a31473d5-5383-4555-ad4e-a873d07ef2c2",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ef4f0b70-523e-46dd-a414-90b0221348cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76b18193-f02a-4627-8dd9-725618e7ff69",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a276aef-1eb3-47dd-9ed7-16dc2ced0d2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89db03ad-7a5f-4f3e-aa35-5fa2319a9077"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "44010286-32f6-4a06-99dd-2b09e7b3a44e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f27d01b1-a15a-423d-99e9-77adc7f3e201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b40a2eb0-316b-4700-9f4f-0226cc8738ba",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9097ce12-c774-4a59-90dd-06ec3071c7a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "185be4dc-d2e6-408a-b85c-8846b35739c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53258e7e-85ee-46c3-aa5e-9e93eac66778",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a673974f-6063-4f97-a0ef-9278719509aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a51a786e-0f84-4cc7-b06c-73c12c7bb736",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d10f722-8d36-4ddb-a750-3deb597352be",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b1dd9e9-33d4-4015-b7d9-96a9e22e92b4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f13a208-9c41-4a7e-a35f-504bd90cbb4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3186067e-67f3-4331-a97e-6560aa291b52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bb477cf-aed7-4f18-912e-fc6a1d7673df",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9062a2d5-278a-42f3-a32d-2f9e5591a8bc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bf4c6f37-728e-4bc4-8ca6-3f66313d63e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50f63565-f5dd-4e61-af12-7296378bd422",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4e9c343-0135-4d98-83e9-0c9643e513a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be244738-7b6a-4f2f-8ece-e1e5669aec43",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e120fc5-a7ae-4119-bc08-82140fe1c215",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df083953-fea2-4a5d-b0c6-b6f305d6e3e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a52f8235-e24b-40d1-a7f5-791b7cd08dea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e5370f4-bb33-42e5-b745-c1524168146a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74034538-cc03-4264-9c15-4e4c6ae61a5a",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c722493-563f-4d80-8c6e-8237d00c9e68",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "495d846a-ab31-4b2a-99cb-3f4f6ce3834f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac584760-3ed8-408c-b6b0-6a621e9ed151",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be80d26-b054-414e-9852-b99537f0bc39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617bf8e2-92b2-4424-953f-f5fe491271f6",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c5d191c-beb4-4910-a093-a6ecc1024257",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6e220ca1-b53a-48ea-bb05-65277dacdb08"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a5488f3-176b-4f67-aa19-751afd956c50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fafef075-456b-4c46-8e00-31986cf0f7ee"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3a1159d0-9851-4566-9006-8eeb8530c650",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "67001616-1886-4f05-8996-cd69abeb9292"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e42bb0fa-6794-4aa1-b83f-14d5cbdb104f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "179ee1ec-ac0d-48b6-9238-43b139abe949"
                    }
                  }
                ]
              },
              {
                "id": "15dbff5e-94b7-4ebe-9a35-de3d78d4f7b5",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "26d3c782-3b20-41df-b7ed-d2556a32b022",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f9cbd3-4ed0-4104-aefa-08862ed83ea8",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a4b063d5-73a3-4344-8e7a-3a94ae78c793"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d10cecfd-ae08-4c7c-acfe-50d07a66ae5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "22d4aabb-c91a-4b1c-a568-60572429a93a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26e5babc-45e4-4647-a32e-9d564f3b7af3",
                    "name": "credentials_verify:missing_scope:verify_credentials",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88779cc8-a837-4195-881f-40432e95ce00",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:credentials\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bb28e532-2b51-485a-a6d6-ada68c28f4b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "de2fd3b8-9c57-4670-a1e8-94da88e7dfa9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "a42a0792-3487-4977-bfbe-d1db43475126"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b6349a80-2818-4ff7-91a9-aa5e3b904fc5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4396252c-50ad-48aa-88a3-b3df1f36eb19"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3b9b7bca-2160-456a-a797-a2cd83ce4729",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "99d7134f-0fcc-4ca9-b84a-efb57c97c853"
                    }
                  }
                ]
              },
              {
                "id": "75f44a02-7e2e-4d5d-a5a1-b3fe8a059542",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "12a4348d-df3f-45d1-b433-6b266b3b6384",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e552621d-7cb1-4476-90f3-7eee418f6da7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f2bbfc18-2757-4270-9ca9-30039f4c75d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "053fa72f-db4e-45e2-a3fc-20160e0e0f5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbad317f-95ac-40aa-9702-3f2c2b376fea"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "9db717ce-99b1-4525-bf98-8aaf70db655a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "12dd9012-870a-4f75-af65-ee7ff9621559",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e0140ed0-b241-4c86-a0ec-ad1a4b6d66c8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "95ac3cff-7059-43a2-861d-17be003e380f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f4411792-4535-4b7e-bd7a-72e177d1eb0c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "419b767d-cba2-4c6d-9c84-da37d285e544"
                    }
                  }
                ]
              },
              {
                "id": "a4dc7777-8e7e-4f1d-bfc2-11ee8ea443ec",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8eef01d0-6a0b-41a0-96b0-7fc286cf13db",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "16f86185-e679-4e41-9681-70184de26b1e"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a3f8aa7-ba9a-4b23-9548-b357dfcf1ca8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ecb37a67-f7b1-4d4e-96f0-f4d2bb2c1cf1"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "14227e54-f428-46c6-a7a0-5d49f31275b0",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:credentials\" scope",
                "utils(pm).getAccessToken('verify:credentials');",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "26a869da-e49d-4c07-a01b-11d4c25420b7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b923a81c-9572-44c4-9793-4fab423838ca",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6cf8e94c-6025-48f4-84bc-2d867108ea0e"
            }
          }
        ]
      },
      {
        "id": "24c00f2b-f8b0-4759-903c-5a51a33b1f0e",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "fd231399-ae72-4e04-b9b0-7cda36fab9ac",
            "name": "Negative Testing",
            "item": [
              {
                "id": "15d04522-e512-4d2d-b8be-d4b96f5ddfc2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "627300e7-1158-424b-8525-c835c8f92b11",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "a77563f9-6847-4500-9017-bf3ce350e2f9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6d167c8-dc2d-4568-b78b-15ada00fd110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "03e5886f-88a6-4356-ba39-d95738829130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c720749-cd68-41eb-9167-00b739e656f2",
                    "name": "presentations:missing_scope:submit_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d7412da-1c99-4fb7-aac9-61ec4cf59388",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"submit:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "c9797e17-8160-4b9e-84a1-fbb6ca8239bb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79023501-9ea7-4adc-a56b-486efc162250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8e61f2fc-235f-41c5-ae37-f240a12bbd65"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cd2d7c45-e2d5-47bc-8d69-66e3f0def3f4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a004536c-abff-46ff-9aba-f3dbf62bd8d6"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f8e014d3-0399-4d15-8dd7-05fb1695bab3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "69353124-82ca-4bce-aff1-9ab8c1b2fce8"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "cccb4eec-c1cf-4f8c-ae70-094735cf2272",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"submit:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('submit:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "e61c1903-4316-4d18-9349-a89ea5b00d00"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34da2fde-4c36-4380-8488-f6ffa09df5c7",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "18a0a9a9-c446-4b2e-8487-2c1071a11abd"
            }
          }
        ]
      },
      {
        "id": "7c6cfc7c-4416-473a-9343-37636eb85fb6",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "20db768f-c532-449f-8b6a-a7f5b90ebf0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "238e93e4-e2cc-4a25-b557-3086b8e6642a",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "599e0fd0-866d-41be-a14b-18b93d45ea30",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "315a9518-ba11-4f86-aea3-ccaa8157b69b",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aeaf0ea7-a06d-4b75-97fa-ea2f664a4a70"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "88b14476-5064-473e-839d-d0094ba7b25e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "5affe929-32c6-43e6-a842-8a435f72c725"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dad2502-1aab-45cd-82e0-bd12fa51d3b9",
                    "name": "presentations_prove:missing_scope:prove_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b04cc52-d0fd-48a3-a035-84cb2686cb74",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"prove:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "b538a7b8-ae95-44dd-aa49-8f3ddc63957b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8994b5af-484e-4d19-885b-d201694c276e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ca0d4aa4-af8c-4e1c-a271-dbfce2d74dc9"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b86b003d-e006-4ad1-a0a0-c17653e9a608",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e35a8cec-2952-4d42-b5d7-7105e6ea15ea"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4feed8cf-cce3-4e25-8978-81b872460e6d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "71573fb8-6ff7-4b76-ae10-5c2908bd58d4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "30cfc6a6-0ad0-4ec8-a0a2-75f15fc85d56",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"prove:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('prove:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "03506c14-c935-4fba-98e1-f3386f8a1c8e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a4211cfd-b3b5-4322-af75-db4ff35d68f5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ef9ba11d-dcf5-409d-95e0-3a1a7e79d1cd"
            }
          }
        ]
      },
      {
        "id": "be9ce46f-7df3-4a29-954d-9f32eeb1618e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "43ee95db-4ca6-41ed-870d-6025a65d83a8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "d40abf89-ddf6-4394-9954-b2f081391a8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c0f40a69-a7c9-42fc-b522-efdbec04f727",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56336961-f1a6-4134-aaae-11ba8e7adbdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "cb420b3b-a12e-4f4c-b4b3-b5e4ce733066"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3b5050f-dbae-41b4-bb75-35cd5e8e77dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6b65b399-721a-47e1-8689-0b7da4d2292b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d778027b-8336-44c5-aa94-1d149f8ca3e6",
                    "name": "presentations_verify:missing_scope:verify_presentations",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "auth": {
                        "type": "bearer",
                        "bearer": [
                          {
                            "type": "string",
                            "value": "{{currentAccessToken}}",
                            "key": "token"
                          }
                        ]
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74510b90-d2c4-4b3f-a7a9-99a3a332ece2",
                          "type": "text/javascript",
                          "exec": [
                            "// Obtain an access token without the required \"verify:presentations\" scope",
                            "utils(pm).getAccessToken('');",
                            "",
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "d6d432cb-9786-4df0-a208-c4fa47a6e4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e59654-fdc7-4459-8a1b-ca65d0567de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 403\", function () {",
                            " pm.response.to.have.status(403);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema403\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc66b3cb-ad15-4adb-bf78-c88bc91c824d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "53ac59ef-20aa-4a33-b636-1f38560a8022",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ac9a4f2c-1663-483d-ab09-71d06da0d54f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "348a9afb-1002-434f-a06f-e3a9c036b959",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "08364605-2c38-4339-80ce-71d059b8be09"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "eae8deae-b353-40d4-9d69-4904e3792917",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token with the required \"verify:presentations\" scope.  This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).getAccessToken('verify:presentations');",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "917a38c2-258e-4810-a6e1-9f8ea0e2a54d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "76f4ed3e-972f-4b7c-b4d7-dbf29060077b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "5ca64252-1dbd-48af-ae84-56d5170d7605"
            }
          }
        ]
      },
      {
        "id": "40832176-0803-4f09-ab91-0b51f7241827",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "824a91f6-fb46-4161-a25c-748baab99798",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "34253b5e-38ef-439b-9663-3458e2e9894c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "938bc0a4-e58b-417c-80e6-ad3284b68fb6",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "066c0361-915e-4294-bb3d-9d930caa3f04",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d2d9f567-cb23-4f41-8968-8fa04c55997f",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1925,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 262,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 253,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 517,
        "pending": 0,
        "failed": 33
      },
      "testScripts": {
        "total": 967,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 958,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 610.0267175572519,
      "responseMin": 7,
      "responseMax": 5317,
      "responseSd": 673.1760622129647,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1673743308452,
      "completed": 1673743479333
    },
    "executions": [
      {
        "id": "6f83b8b0-669e-4aeb-83c2-b1c12db74f0f",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 253,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "0a2981ff-1aa3-4ee0-a89d-b24307e26acd",
          "httpRequestId": "a6ec6917-4bf1-450b-9a2e-3d56887307f0"
        },
        "item": {
          "id": "6f83b8b0-669e-4aeb-83c2-b1c12db74f0f",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "5a4b1be9-42d2-46ee-b3e5-09d2b5029547",
          "status": "OK",
          "code": 200,
          "responseTime": 51,
          "responseSize": 0
        }
      },
      {
        "id": "ce442869-8440-4171-9f8e-b30725dd5b9d",
        "cursor": {
          "ref": "a06b9b86-254e-49ae-826a-77803e1e0941",
          "length": 253,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0265f44d-db68-4168-97bc-418e825c4a90"
        },
        "item": {
          "id": "ce442869-8440-4171-9f8e-b30725dd5b9d",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "50644cf9-9c40-4f2a-8f8c-ab17d4dbdc4f",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "1415bd0f-60b8-4234-870e-3a3083efc97f",
        "cursor": {
          "ref": "cbdc905c-fb95-4de4-b6cd-182428378b98",
          "length": 253,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "2caa36cd-f85f-4571-8b73-5c430b34ec8b"
        },
        "item": {
          "id": "1415bd0f-60b8-4234-870e-3a3083efc97f",
          "name": "did_json"
        },
        "response": {
          "id": "f57620f5-9416-4ffc-b940-eb3ba7821d92",
          "status": "OK",
          "code": 200,
          "responseTime": 854,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f935947d-e576-426f-80b2-4c04dc870cc7",
        "cursor": {
          "ref": "51eb3318-8d2a-4f1a-9b64-dc3432a29373",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5934af52-2533-407e-b73f-07e70ccfc345"
        },
        "item": {
          "id": "f935947d-e576-426f-80b2-4c04dc870cc7",
          "name": "did:invalid"
        },
        "response": {
          "id": "269f8b3c-1252-48ff-82de-bf019cbcda23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f935947d-e576-426f-80b2-4c04dc870cc7",
        "cursor": {
          "ref": "51eb3318-8d2a-4f1a-9b64-dc3432a29373",
          "length": 253,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "5934af52-2533-407e-b73f-07e70ccfc345"
        },
        "item": {
          "id": "f935947d-e576-426f-80b2-4c04dc870cc7",
          "name": "did:invalid"
        },
        "response": {
          "id": "269f8b3c-1252-48ff-82de-bf019cbcda23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 701,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f42556c7-e743-42f9-978e-7f8c6ebad142",
        "cursor": {
          "ref": "c02d9e55-1046-48e6-a911-f8032288341f",
          "length": 253,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "b51e1efd-f636-48af-934a-0bcd491f93dc"
        },
        "item": {
          "id": "f42556c7-e743-42f9-978e-7f8c6ebad142",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "9d33289b-2881-4e2f-9ca1-2d7f457b0562",
          "status": "Not Found",
          "code": 404,
          "responseTime": 603,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d108cf9-3980-40cd-8c9b-0915ad69846c",
        "cursor": {
          "ref": "9b4d2593-4fd1-4c53-b053-f68ad2954410",
          "length": 253,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "ca54ea60-3fa7-43e7-9a55-3a40f39889b6"
        },
        "item": {
          "id": "6d108cf9-3980-40cd-8c9b-0915ad69846c",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "71634fff-c27b-458b-af9c-ec124f88543d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 558,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed1c4220-5dc2-49c3-bd16-415e94ce4b2a",
        "cursor": {
          "ref": "26b057bf-7690-4717-8ea3-4326bad56449",
          "length": 253,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "c15905b3-200e-45c6-873e-122b2d22472e"
        },
        "item": {
          "id": "ed1c4220-5dc2-49c3-bd16-415e94ce4b2a",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "3ec00743-af49-43ef-86d7-f0ebdbe46d83",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 51,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e75d9-5944-4833-bf07-52117debb0de",
        "cursor": {
          "ref": "6de5b675-e58b-4e84-933b-0a4b1bdebebb",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9c9c9bc1-dbe8-4213-8934-65ae080a3a12"
        },
        "item": {
          "id": "b77e75d9-5944-4833-bf07-52117debb0de",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "efc00602-163f-4fd4-b180-8ce48301f03c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77e75d9-5944-4833-bf07-52117debb0de",
        "cursor": {
          "ref": "6de5b675-e58b-4e84-933b-0a4b1bdebebb",
          "length": 253,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "9c9c9bc1-dbe8-4213-8934-65ae080a3a12"
        },
        "item": {
          "id": "b77e75d9-5944-4833-bf07-52117debb0de",
          "name": "identifiers:missing_scope:resolve:dids"
        },
        "response": {
          "id": "efc00602-163f-4fd4-b180-8ce48301f03c",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 552,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4892ea1-e7fe-468e-8bf1-7bba078ab670",
        "cursor": {
          "ref": "42f66cf2-5fe5-4bd3-8f9b-ee753318a09e",
          "length": 253,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "5722211f-20e8-407e-b44a-91381d3ff297"
        },
        "item": {
          "id": "f4892ea1-e7fe-468e-8bf1-7bba078ab670",
          "name": "identifiers"
        },
        "response": {
          "id": "e6e19871-9580-40e9-a0c8-0b0556f91eaf",
          "status": "OK",
          "code": 200,
          "responseTime": 905,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a7e13a-a183-4d3f-9cb1-b37ce0c4cd95",
        "cursor": {
          "ref": "7007ddf1-a331-4113-802d-975e7ad2a868",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8bf0760f-60c5-4fb0-9182-5aebd95225d0"
        },
        "item": {
          "id": "95a7e13a-a183-4d3f-9cb1-b37ce0c4cd95",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4239f3a2-b85b-4c9d-82da-a65dd1759157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95a7e13a-a183-4d3f-9cb1-b37ce0c4cd95",
        "cursor": {
          "ref": "7007ddf1-a331-4113-802d-975e7ad2a868",
          "length": 253,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8bf0760f-60c5-4fb0-9182-5aebd95225d0"
        },
        "item": {
          "id": "95a7e13a-a183-4d3f-9cb1-b37ce0c4cd95",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4239f3a2-b85b-4c9d-82da-a65dd1759157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "351894cd-49b8-4155-afac-fe14fe04580a",
        "cursor": {
          "ref": "9015b005-27d1-41cc-81cf-09d8960329e1",
          "length": 253,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dc838ddb-e51f-4ba9-8ebe-24a16980d686"
        },
        "item": {
          "id": "351894cd-49b8-4155-afac-fe14fe04580a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "352ee55c-f7dc-4e19-95c6-6a9642d92cb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 553
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55fcde3e-3f7c-41a6-9f64-c570bcef7224",
        "cursor": {
          "ref": "249c5b57-6fef-4596-bec4-995a56ed58bc",
          "length": 253,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "21a33fbe-d173-41ad-a66b-55dde744f48c"
        },
        "item": {
          "id": "55fcde3e-3f7c-41a6-9f64-c570bcef7224",
          "name": "credentials_issue:credential.@context:invalid"
        },
        "response": {
          "id": "2c3c0306-52ff-4973-b36b-a1ea409655d3",
          "status": "Created",
          "code": 201,
          "responseTime": 2445,
          "responseSize": 689
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:12)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:12)"
            }
          }
        ]
      },
      {
        "id": "2901ea59-3d40-4673-a554-0edb31065efd",
        "cursor": {
          "ref": "b4a4b1fd-619c-46b9-a0df-94af98270091",
          "length": 253,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "146e664a-e402-4dc4-a7ca-53b8d3e6232e"
        },
        "item": {
          "id": "2901ea59-3d40-4673-a554-0edb31065efd",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "07bb7f65-5a15-4392-be56-f9c4d7960e90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 732
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1dcdc49-5317-4561-a9c9-4633afc0d5af",
        "cursor": {
          "ref": "2b0932ba-2770-4ebc-87e7-36d874c8f384",
          "length": 253,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "b225cb38-05b2-4774-b49a-9b469dd093a2"
        },
        "item": {
          "id": "c1dcdc49-5317-4561-a9c9-4633afc0d5af",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "529683e7-3b1c-4be5-a43f-37bfb6922026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 729
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7079420-9e8e-4a4d-ad1d-0c06ad1df504",
        "cursor": {
          "ref": "05766325-e1da-4e06-b61c-f9b8aaf8d4bc",
          "length": 253,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "3f723589-2010-4c39-ad77-0df4800fe72c"
        },
        "item": {
          "id": "e7079420-9e8e-4a4d-ad1d-0c06ad1df504",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "3be34d49-fe40-4392-bbc3-ef9b60a226cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4a0b1e97-5472-4cbc-ae0c-1d4975eddd14",
        "cursor": {
          "ref": "b7ab2d5e-ee9c-46d3-a09a-ccfbd2a4d7ad",
          "length": 253,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "15244da3-3740-4790-801e-01fa5412547d"
        },
        "item": {
          "id": "4a0b1e97-5472-4cbc-ae0c-1d4975eddd14",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "9bead9d4-1aab-4d79-9670-2c776cbe1a9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 572,
          "responseSize": 778
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbb141e5-514c-4eb5-86e3-2d6b17fbc667",
        "cursor": {
          "ref": "568cc96b-6f14-45a1-a525-b5cf24c1af93",
          "length": 253,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "c28b4291-204c-4055-ba8d-751c3dc491e4"
        },
        "item": {
          "id": "bbb141e5-514c-4eb5-86e3-2d6b17fbc667",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "c79b6cc7-5b5f-4f12-a935-7edcb8e54bad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 767
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7efc96-308f-4701-a54e-6ca4003c54a9",
        "cursor": {
          "ref": "7897cbc3-108a-47c6-932c-a52d4ac5134c",
          "length": 253,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "f43a1b8f-fc61-467a-a2ca-3184f7c23fb1"
        },
        "item": {
          "id": "ec7efc96-308f-4701-a54e-6ca4003c54a9",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "c5d98e0f-8ce0-495c-afc7-b759fb19feb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 1034
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6457219-f416-489d-a86a-5bd5b87ce84d",
        "cursor": {
          "ref": "65d9e279-881d-44c9-809d-061a5a2741ab",
          "length": 253,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "264bba49-e957-4e64-b859-4ce2db078887"
        },
        "item": {
          "id": "a6457219-f416-489d-a86a-5bd5b87ce84d",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f10df663-f7da-429f-93b7-e607836b6d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1003
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "98bb820d-7ea0-4599-bb64-88785698a076",
        "cursor": {
          "ref": "6d64fff6-2766-4ca2-abaf-09461e591ee6",
          "length": 253,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "d388abbf-6258-4354-a779-48e1dc6a74e9"
        },
        "item": {
          "id": "98bb820d-7ea0-4599-bb64-88785698a076",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c033b170-924f-40d6-990a-3b59ea9b1117",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 1000
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be0afb29-7f17-440c-a5ea-946b0bc068a0",
        "cursor": {
          "ref": "c63a69cf-e30a-4fb5-9839-f29537b3140a",
          "length": 253,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "d6174e95-7597-42e4-aa8d-9b1d241706ac"
        },
        "item": {
          "id": "be0afb29-7f17-440c-a5ea-946b0bc068a0",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "91de0efb-fe43-4172-a1e3-ca8f31d4920f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 1002
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a871cc57-9786-4c03-aca6-e21d3c16d450",
        "cursor": {
          "ref": "bf473614-7117-455c-8346-253f8dc35eaa",
          "length": 253,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "2618f6ca-db8a-425c-bba4-b7ee61d3bcff"
        },
        "item": {
          "id": "a871cc57-9786-4c03-aca6-e21d3c16d450",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "59a38073-0fba-429a-9169-1e3bb216975c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1043
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "896314a9-6d46-4c9a-a773-0c892d5360c8",
        "cursor": {
          "ref": "656b50d3-876d-4c90-ba22-62642abd47f0",
          "length": 253,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "10270c1f-0738-4419-ba85-0ca5b1fd7587"
        },
        "item": {
          "id": "896314a9-6d46-4c9a-a773-0c892d5360c8",
          "name": "credentials_issue:credential.id:missing"
        },
        "response": {
          "id": "70a0a3f1-0412-40ef-a92b-46b0a54d79be",
          "status": "Created",
          "code": 201,
          "responseTime": 5317,
          "responseSize": 671
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 201",
              "stack": "AssertionError: expected response to have status code 400 but got 201\n   at Object.eval sandbox-script.js:1:23)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:23)"
            }
          }
        ]
      },
      {
        "id": "d9fbc221-3b46-4150-b03d-9d00f2c01e9f",
        "cursor": {
          "ref": "5239abfd-7ddf-4d16-8cdd-8ad0c51d9b81",
          "length": 253,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d56e925b-a808-48ec-82aa-cacd602cea18"
        },
        "item": {
          "id": "d9fbc221-3b46-4150-b03d-9d00f2c01e9f",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "db463cba-0c1f-4058-af2a-39c5af29a99c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "756725bc-8dfa-4159-ba46-be996ad98d7c",
        "cursor": {
          "ref": "846116ea-6767-4aca-b8b4-1946788b6975",
          "length": 253,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf58e50e-923c-49dc-867c-4bf29ad4c6c9"
        },
        "item": {
          "id": "756725bc-8dfa-4159-ba46-be996ad98d7c",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "61d6e870-77f0-410a-b6be-4f1962ddbc23",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 636,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87160790-350d-44fd-9e4c-2bb96146205d",
        "cursor": {
          "ref": "b434d574-9f00-4a0e-a503-15bed2afc717",
          "length": 253,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "3bbc6a69-d25f-4c0c-a737-087cd52aeee7"
        },
        "item": {
          "id": "87160790-350d-44fd-9e4c-2bb96146205d",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "31664cc7-c880-4318-8c63-1e31f635ff40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "517e03fc-940c-4bcb-a6bf-22c0bb93102b",
        "cursor": {
          "ref": "cb11a921-e9cc-4938-88fe-962c80fae572",
          "length": 253,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "09df13ad-325c-4d19-9d74-729f8af976b6"
        },
        "item": {
          "id": "517e03fc-940c-4bcb-a6bf-22c0bb93102b",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "6d5b6dc0-18e4-47fe-b94b-a4f58cfba522",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c10265c-b03e-4828-a5fc-41f3b1332260",
        "cursor": {
          "ref": "904e9ade-6a99-4747-9ccc-6a221ce5634e",
          "length": 253,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "c4ceec52-e552-42f0-8356-39b5ac50c654"
        },
        "item": {
          "id": "1c10265c-b03e-4828-a5fc-41f3b1332260",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "00d5de91-f4c8-45a7-83c9-b1020e3c8d36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0da2df0-4813-45fe-b784-43c66adfba01",
        "cursor": {
          "ref": "dc605115-c2fd-45cf-bd66-c3f1269749c4",
          "length": 253,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "ad2a18e3-423c-4201-9524-7859a96ed4e5"
        },
        "item": {
          "id": "d0da2df0-4813-45fe-b784-43c66adfba01",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0359893-6bc9-4eec-be8e-00c28d7e0ea9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddebab82-2393-4b9c-9fd8-1ea369523140",
        "cursor": {
          "ref": "e4133279-8baa-4aab-b5e6-cdde496ba530",
          "length": 253,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "5a090173-99f3-4c13-85c5-3682d3e2f1a4"
        },
        "item": {
          "id": "ddebab82-2393-4b9c-9fd8-1ea369523140",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "80be4576-1d17-4141-9b53-18c19f47b035",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46eb8041-055f-4b3b-80e9-6173d99e28dd",
        "cursor": {
          "ref": "271f9588-e921-437e-a442-1f5d744f49f1",
          "length": 253,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "6e24efd7-b19f-4db8-9d3a-39b0600f389d"
        },
        "item": {
          "id": "46eb8041-055f-4b3b-80e9-6173d99e28dd",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f9fc6db3-c72d-4884-9467-95c4cfe38768",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2afd83d-01d4-4eea-9c05-56063eefaab6",
        "cursor": {
          "ref": "bf258d25-d56c-4509-96b3-a60e70bbfd8f",
          "length": 253,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "3f44ac8b-e26b-434a-ac29-9bf891a93b3d"
        },
        "item": {
          "id": "a2afd83d-01d4-4eea-9c05-56063eefaab6",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "32d3f6ed-661c-4fe7-b8c5-c5ab9847249a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f00d0411-2a90-44f2-a72d-7277d879c2d7",
        "cursor": {
          "ref": "c7001dc2-ff26-4614-945e-e05eadbefdb4",
          "length": 253,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "64308f9b-8b84-4cb2-a76d-a50c1d1d29f9"
        },
        "item": {
          "id": "f00d0411-2a90-44f2-a72d-7277d879c2d7",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "a41cb15c-e63c-4c5d-867e-71f1076c75b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 594
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb3269bf-dc52-4ad1-9a5f-da2896e62789",
        "cursor": {
          "ref": "6db714af-0a4f-45b3-bac6-51722a9fe6b5",
          "length": 253,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "7b2b9f5c-f44a-466b-8a92-44f5e9d5166a"
        },
        "item": {
          "id": "eb3269bf-dc52-4ad1-9a5f-da2896e62789",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "37401ae8-6136-44c9-911f-cfe95f623cf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 600,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0403e466-48ef-4bb6-ac94-ba821d2af1ee",
        "cursor": {
          "ref": "3d8168af-4950-4972-b74d-5d5c544722bb",
          "length": 253,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "ded847e5-d49c-4172-9cd5-613196a65c76"
        },
        "item": {
          "id": "0403e466-48ef-4bb6-ac94-ba821d2af1ee",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "90f44963-2063-441f-a600-35d621220a80",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1872,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:35)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:35)"
            }
          }
        ]
      },
      {
        "id": "212166f3-1b65-4638-8d12-0489a288a0da",
        "cursor": {
          "ref": "4ee94ca0-34f4-4cc8-9e55-c1dbf52d1620",
          "length": 253,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "507efb1c-26e7-4fd4-b514-731dd99043a1"
        },
        "item": {
          "id": "212166f3-1b65-4638-8d12-0489a288a0da",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "e5a4dad7-270d-4337-aa6a-6f7eff8b1999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32d88ff-5017-4e2a-bbab-4d5fe40cf117",
        "cursor": {
          "ref": "bef6f9bb-187a-4ace-8e8e-553833098c93",
          "length": 253,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "47c5c617-1c23-41da-ab69-36922235c813"
        },
        "item": {
          "id": "a32d88ff-5017-4e2a-bbab-4d5fe40cf117",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "9a2e12d4-84fa-482f-89d0-0459c0f4513a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "690ee164-1aa5-4c19-bb00-5854b76486e0",
        "cursor": {
          "ref": "893a92da-5e12-4639-9e8a-da4aa6a6ce97",
          "length": 253,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "33685f2b-dba3-4164-9d97-4b4de1d49c77"
        },
        "item": {
          "id": "690ee164-1aa5-4c19-bb00-5854b76486e0",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "4748b4db-6ac1-4986-a6e6-0a0051672a26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 592,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0b44335-25d8-4bea-85c5-44f03d0685c3",
        "cursor": {
          "ref": "baf2b1c0-b73b-4c07-94f4-856dc458be4d",
          "length": 253,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "5ee49fbc-d535-431a-b354-2d374b74e2c1"
        },
        "item": {
          "id": "b0b44335-25d8-4bea-85c5-44f03d0685c3",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "a1090c70-1f5d-40c8-94c6-279401125e03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 608,
          "responseSize": 631
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae0df4db-65a5-45f2-a259-3550aafd53ae",
        "cursor": {
          "ref": "415bd80a-a65f-4d16-84d6-34eae414ba6a",
          "length": 253,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "4b5f7845-bc92-4576-8117-7a1e2e23bbf0"
        },
        "item": {
          "id": "ae0df4db-65a5-45f2-a259-3550aafd53ae",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "aefb4587-1d33-41c7-b949-21ebd2130eb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4faaeeff-8c02-4cc2-8cee-e01f9d64bc7a",
        "cursor": {
          "ref": "0d7ba4fe-8e39-45c9-97cc-e746914cd25a",
          "length": 253,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "dc915495-2331-40c3-b6ec-3f3b1240fc4f"
        },
        "item": {
          "id": "4faaeeff-8c02-4cc2-8cee-e01f9d64bc7a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "72e7a1d4-e042-4877-a9b0-5ecde7087eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9761052a-2a3c-4113-8097-74bd8f6a8963",
        "cursor": {
          "ref": "6529382f-2249-4d22-9cff-61df94e18d9a",
          "length": 253,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "82317ace-eb1c-4097-a549-81e2f88bf23e"
        },
        "item": {
          "id": "9761052a-2a3c-4113-8097-74bd8f6a8963",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "747fb50c-47af-45b8-a675-8bc65f74a632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 554,
          "responseSize": 1054
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "459c034d-7511-4d10-b586-40b2057eebe8",
        "cursor": {
          "ref": "51fab091-4112-4cd9-800a-a8ea9628c2c2",
          "length": 253,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "312214f2-24e0-4789-b795-70a72aec3963"
        },
        "item": {
          "id": "459c034d-7511-4d10-b586-40b2057eebe8",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "3e6f6823-0d1f-44ec-b96c-fcc2decf193e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 598,
          "responseSize": 983
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "54730987-d19b-4e6b-8336-6a93f0fe80ff",
        "cursor": {
          "ref": "2e20388b-6fb3-44a2-a093-a4b390a72d70",
          "length": 253,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "408bd8e0-0766-44a1-a1dd-2a4a17a5d4dc"
        },
        "item": {
          "id": "54730987-d19b-4e6b-8336-6a93f0fe80ff",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "97f8943b-2b32-4e73-97e6-42074a665494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 980
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "123f5e8b-1e46-4f1a-a895-8484c67b9ace",
        "cursor": {
          "ref": "7c7f487a-a3f6-4930-b4b0-b31797872eb3",
          "length": 253,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "b1a0cbb8-9106-4a10-a60c-28861463c79e"
        },
        "item": {
          "id": "123f5e8b-1e46-4f1a-a895-8484c67b9ace",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "924df569-bb63-4e67-a51e-5fe814b2f43d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 982
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1b62668-f634-4fa9-9507-49d537ee6b02",
        "cursor": {
          "ref": "8baa1419-9c06-4b54-989c-034b7fd0d2f0",
          "length": 253,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "90d8990c-720e-40db-a592-5b9e986cb1ca"
        },
        "item": {
          "id": "b1b62668-f634-4fa9-9507-49d537ee6b02",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "cf085209-d145-4bad-a1a8-87690220944b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb4c8a8c-56b2-4a6b-9012-67369de7f0a5",
        "cursor": {
          "ref": "4bae9dc5-7776-4171-bec2-596249db6885",
          "length": 253,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "52e43cd7-fbf3-4139-b735-b2062a026147"
        },
        "item": {
          "id": "bb4c8a8c-56b2-4a6b-9012-67369de7f0a5",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "d3767792-9327-499d-84a6-b052d734d831",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 733,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "399a5ca3-c719-46cd-a6e9-6322ecd1f2e8",
        "cursor": {
          "ref": "1fb02fe3-253c-412a-ac00-a5eb230c905f",
          "length": 253,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "96a04fc3-6256-4d29-96ef-9a24ca63c7ee"
        },
        "item": {
          "id": "399a5ca3-c719-46cd-a6e9-6322ecd1f2e8",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "7e1c65ba-a196-4d21-b026-e98d98c28047",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 570,
          "responseSize": 35
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 500",
              "stack": "AssertionError: expected response to have status code 400 but got 500\n   at Object.eval sandbox-script.js:1:48)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.message should be equal to one of the allowed values\n   at Object.eval sandbox-script.js:2:48)"
            }
          }
        ]
      },
      {
        "id": "f04dd333-d10e-4036-b874-f717c0139b39",
        "cursor": {
          "ref": "0541fbb2-39f7-49d6-b7dc-a2efdc89a66b",
          "length": 253,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "f9667992-7024-4c27-9792-cf554cb4e2f3"
        },
        "item": {
          "id": "f04dd333-d10e-4036-b874-f717c0139b39",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "88b3dfc0-1090-4b11-af56-661c94ab6118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1393
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8ec58ac-686d-47e1-979e-c978afae4656",
        "cursor": {
          "ref": "10e184bc-6daa-4012-8737-3962126f1169",
          "length": 253,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "40a16666-f98e-465f-a8c0-6ca9b352205c"
        },
        "item": {
          "id": "f8ec58ac-686d-47e1-979e-c978afae4656",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "b81e02d7-85db-4dd6-983d-98c845583f14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d087dc3-908f-4638-a17b-1d17baa81d4b",
        "cursor": {
          "ref": "f671fb3b-3083-42f5-b7ed-d6bd1bc35a1c",
          "length": 253,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "1af91bc2-c348-4385-905d-531539053fd5"
        },
        "item": {
          "id": "1d087dc3-908f-4638-a17b-1d17baa81d4b",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "60e8766a-5c37-4a30-994c-f28ed648c5d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10d64d41-8842-48c3-a020-7cec643489d9",
        "cursor": {
          "ref": "cc4e4532-5ba4-4e14-8a39-189e8977e1bf",
          "length": 253,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "b43bfc14-1b72-4d35-808b-7aa465a0176c"
        },
        "item": {
          "id": "10d64d41-8842-48c3-a020-7cec643489d9",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "520dca7d-a27c-4093-b5aa-bf9d65ee3b02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 1321
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83039c92-b8dc-45f7-90a3-01e1fe366695",
        "cursor": {
          "ref": "6c6238c3-076b-44c9-b34c-7666bf2efc58",
          "length": 253,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "72de8e3c-aea0-4008-9136-953452704c54"
        },
        "item": {
          "id": "83039c92-b8dc-45f7-90a3-01e1fe366695",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "46cbe689-d876-4bba-8d20-6e8f8869004f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 578,
          "responseSize": 1724
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20219033-fdc5-4d37-b20d-5a5072f806af",
        "cursor": {
          "ref": "a6634636-d128-45ba-b763-6d625e79d6c8",
          "length": 253,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "f9ec2555-59e9-4817-a8c6-c1c7c08134ce"
        },
        "item": {
          "id": "20219033-fdc5-4d37-b20d-5a5072f806af",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "407e152a-047e-4142-831d-62c4a4dd0e1b",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 627,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82189cc8-8c81-4b12-afa4-d7a2c7c6aa16",
        "cursor": {
          "ref": "8908428b-b36b-4c97-b1ac-d58438f9269e",
          "length": 253,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "b0cd493f-4cbc-441d-ac7a-b70502048563"
        },
        "item": {
          "id": "82189cc8-8c81-4b12-afa4-d7a2c7c6aa16",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "2e7747fb-74ea-4874-a25f-b23ad4d3adcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "132656d7-5791-4c66-aa52-39355e9b92e5",
        "cursor": {
          "ref": "d313d012-5109-47cd-9062-5d07b3d7b39d",
          "length": 253,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "2bc0eea1-4e9f-4eb9-8643-46216afef101"
        },
        "item": {
          "id": "132656d7-5791-4c66-aa52-39355e9b92e5",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "45298d80-ad9d-4b45-a41e-31b53a6d885a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 537,
          "responseSize": 636
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9685393f-2f3e-456b-96b8-01ebfc243607",
        "cursor": {
          "ref": "569b46d7-700e-4e22-9d53-19e6f302507a",
          "length": 253,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "adeef59b-2593-443c-941a-2e2171553e74"
        },
        "item": {
          "id": "9685393f-2f3e-456b-96b8-01ebfc243607",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "72903ac5-1408-4cc4-b5a3-3a599ddfb009",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 617
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44eea146-a594-43d8-b456-a7d868eb2611",
        "cursor": {
          "ref": "5b1abb1e-32f6-4a25-83b9-27a0fec79b37",
          "length": 253,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "dc9d34c0-a26d-4ea8-893b-349f9bee35ac"
        },
        "item": {
          "id": "44eea146-a594-43d8-b456-a7d868eb2611",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "9bd31645-9092-4e5c-9096-dcd316ead92a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 794,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06c2e464-d8de-47cd-ad16-29ef5bf403b9",
        "cursor": {
          "ref": "24dffd75-77e1-4103-b718-68a91d9c86f1",
          "length": 253,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "89d0c093-8270-4908-9285-7aaa3338b0ce"
        },
        "item": {
          "id": "06c2e464-d8de-47cd-ad16-29ef5bf403b9",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "2336259f-31a9-4df4-b246-01caa9f7fb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 862,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f52603e6-6b09-4cbb-a264-d92f090fa2df",
        "cursor": {
          "ref": "2d241843-3ce0-495f-821f-48196eae3cd5",
          "length": 253,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "8f0d6c05-90d7-4cbc-828a-aa8d5e4a5d86"
        },
        "item": {
          "id": "f52603e6-6b09-4cbb-a264-d92f090fa2df",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "eda895ad-e0ab-469b-896c-1cbce5c25bbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 848,
          "responseSize": 614
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c2fc01f-9b75-48df-a5af-1e4ef947a30c",
        "cursor": {
          "ref": "933f76c7-07d1-43a6-83ae-7feaf9b32059",
          "length": 253,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "302baae0-77f0-423b-9c34-efd6f1636487"
        },
        "item": {
          "id": "5c2fc01f-9b75-48df-a5af-1e4ef947a30c",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "81db4357-743b-4e00-8d56-c3f26c327d02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 899,
          "responseSize": 667
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1563f7c0-e98c-4b69-94f1-65addb5a3eac",
        "cursor": {
          "ref": "7c0e1121-ef7c-457f-a7f7-4bb48a8d373a",
          "length": 253,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "6184554f-9bee-424d-9b58-d2b40b2f0423"
        },
        "item": {
          "id": "1563f7c0-e98c-4b69-94f1-65addb5a3eac",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7c6beb51-f81b-4780-a004-4e00d556ea83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 637
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4833ffaa-c339-4d83-a416-1facfd388ee0",
        "cursor": {
          "ref": "a5188143-f61b-480c-9fde-683ae30cdc2e",
          "length": 253,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e3b5aaa8-d55f-4667-9b3c-0305ce31c405"
        },
        "item": {
          "id": "4833ffaa-c339-4d83-a416-1facfd388ee0",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "7d918347-937e-4b53-ba1d-0782a038546e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 593,
          "responseSize": 1108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c8634db-fca5-49d5-8a73-4fe7aede4cfe",
        "cursor": {
          "ref": "a8fd4f2d-b311-4024-96d4-a17b51274f62",
          "length": 253,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9386d351-c912-4be9-adf8-a27202ddc882"
        },
        "item": {
          "id": "8c8634db-fca5-49d5-8a73-4fe7aede4cfe",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c9540951-6aed-4968-aae3-93526d673c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a938b71-3155-4206-b6a3-76d26594cdec",
        "cursor": {
          "ref": "5a01fe0d-54c2-4c85-b239-ee0a37524eb5",
          "length": 253,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "eab0e1b4-5754-48b6-b617-c5e7089bb5a0"
        },
        "item": {
          "id": "9a938b71-3155-4206-b6a3-76d26594cdec",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "47da1ba7-0f3e-4640-91c3-1a73214eb483",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 580,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d26de566-6898-4141-9d42-bc48403a7a7f",
        "cursor": {
          "ref": "31dae182-8e55-4f4e-b320-1b10d7a0d489",
          "length": 253,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "b09bb810-85e1-42b9-b74f-e80c7f98c8da"
        },
        "item": {
          "id": "d26de566-6898-4141-9d42-bc48403a7a7f",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "ff08dc82-7923-4134-85e3-37695dd207ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 546,
          "responseSize": 916
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe544524-5a7d-4c07-a4f2-69b8b0893972",
        "cursor": {
          "ref": "f340d549-d16c-4bbf-b945-d404904d3f01",
          "length": 253,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "c276b887-df61-41b5-a78f-6ac6a1c181aa"
        },
        "item": {
          "id": "fe544524-5a7d-4c07-a4f2-69b8b0893972",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "d1f97fbd-6a91-4cc1-bec9-6e4889cefa88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 929
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec7fc209-7d27-4e1e-9d51-02fefa33ef7e",
        "cursor": {
          "ref": "c971736b-08d3-42b7-bf71-1a93d0c79c87",
          "length": 253,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "517df873-029f-4bb4-b9fe-f67a6c03b503"
        },
        "item": {
          "id": "ec7fc209-7d27-4e1e-9d51-02fefa33ef7e",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "78c86529-bd24-4d68-a2fb-f296ed9166aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 549,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9745b5d6-23c8-424e-8012-fe6b0a91282c",
        "cursor": {
          "ref": "e0f0b72c-0b13-417a-8970-8ea610ab6847",
          "length": 253,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "8ba75c37-f469-4129-a857-9a15547085d4"
        },
        "item": {
          "id": "9745b5d6-23c8-424e-8012-fe6b0a91282c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "f30194c9-abc6-46ef-b40c-9ebc9128031b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 552,
          "responseSize": 1409
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e9c1467-fb61-43b2-ac11-ba61b12cbfaf",
        "cursor": {
          "ref": "a46dd3c7-3ca2-47ab-a090-53549d651bef",
          "length": 253,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "95c77d0c-6f70-432b-a760-49fadf81735b"
        },
        "item": {
          "id": "6e9c1467-fb61-43b2-ac11-ba61b12cbfaf",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "1215d9cb-523d-467f-91dd-5e7eec7ba9fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 595,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c6a9639-5db5-4fe6-9f6f-9f0896cfb1f5",
        "cursor": {
          "ref": "8536b680-fe6b-4a7f-abdf-d9b7c610bcec",
          "length": 253,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "504df56a-356e-4e0a-85f9-ff3a50eeae78"
        },
        "item": {
          "id": "7c6a9639-5db5-4fe6-9f6f-9f0896cfb1f5",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "626f1bbf-5172-4ab0-b07f-14d8b9605e10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 1408
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b3247f4a-be0f-4bbd-a8cd-1d37227e351e",
        "cursor": {
          "ref": "ca209b7a-9722-42a6-b1ab-30e2c1395288",
          "length": 253,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "2039f87b-a739-4df2-80f8-a92146d2d34b"
        },
        "item": {
          "id": "b3247f4a-be0f-4bbd-a8cd-1d37227e351e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "8ab53553-2f55-41a9-ac70-66a4b3a558c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 587,
          "responseSize": 1406
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3401faa2-a4d7-4f1e-8225-53ecec51f3ba",
        "cursor": {
          "ref": "ecf5b70b-d2f3-44eb-82a5-803b2db5fb8d",
          "length": 253,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "5fe8d473-924f-4ee2-aa3d-27999d148db4"
        },
        "item": {
          "id": "3401faa2-a4d7-4f1e-8225-53ecec51f3ba",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "cfdf91dd-c2b6-471e-99af-b848e13baa18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 548,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "30fa52e0-bb91-42a5-987d-0c6d92d10b4e",
        "cursor": {
          "ref": "cbf05215-8b39-4537-8164-d0f60cdd773d",
          "length": 253,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "c8de19ec-828f-422e-a3f3-98f65b36ffb5"
        },
        "item": {
          "id": "30fa52e0-bb91-42a5-987d-0c6d92d10b4e",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "3dc6b0ac-7113-4e55-8960-ef56a033c3ea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 703,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d1fca5d-cad1-4613-9865-7611b1350244",
        "cursor": {
          "ref": "878c4d9a-9539-4dcf-95a3-d4fc05e30c72",
          "length": 253,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "c3f92445-0ea0-4fb4-ab9c-28f29d630849"
        },
        "item": {
          "id": "0d1fca5d-cad1-4613-9865-7611b1350244",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "c2eb9834-da5f-4067-9781-78626083abde",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 872,
          "responseSize": 568
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "874c22ce-1ad9-40ae-8e13-a9e87c8d9b78",
        "cursor": {
          "ref": "df64896c-23a4-4549-9337-85cc1aad16b3",
          "length": 253,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "7e0caccd-3ca6-4c6f-9677-42cdfc2d50b0"
        },
        "item": {
          "id": "874c22ce-1ad9-40ae-8e13-a9e87c8d9b78",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "8fcd054c-5898-4745-909a-8ff58959c2d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1102,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "13b5c088-f35d-499d-9ea5-cbc19324b8a6",
        "cursor": {
          "ref": "b58d0b6e-d375-48f4-a11d-49c7ccd292ff",
          "length": 253,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "03b6ad7f-a822-4b8d-8b17-3c66535326df"
        },
        "item": {
          "id": "13b5c088-f35d-499d-9ea5-cbc19324b8a6",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "c5197f94-40a8-4140-811d-dd072ac5c51b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1045,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "640ad336-38ad-4346-8d58-8f765b2d96b9",
        "cursor": {
          "ref": "808d93fc-4e05-4313-8596-7ea4e0eb3c12",
          "length": 253,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "6513e19f-d75b-497b-8f3e-2e81551d87f9"
        },
        "item": {
          "id": "640ad336-38ad-4346-8d58-8f765b2d96b9",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "b8ea3834-8463-4a66-ba21-f280379f3148",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 738,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "062702d2-8929-44aa-90cf-c104139bc01a",
        "cursor": {
          "ref": "3948caa2-8db7-46f8-afde-a372fdc211d6",
          "length": 253,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "352e61b0-5600-49e5-a93e-3e67e87dd0b2"
        },
        "item": {
          "id": "062702d2-8929-44aa-90cf-c104139bc01a",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "6dc3ec06-6bb6-4168-aae7-daa8cc0e1118",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 602
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a850a112-7f55-423f-99c1-6e0c5e88f44d",
        "cursor": {
          "ref": "3dcab452-5187-406c-8810-d15e419a7a66",
          "length": 253,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "c5d7e253-a4f5-432b-bc47-5ee6efbbfd99"
        },
        "item": {
          "id": "a850a112-7f55-423f-99c1-6e0c5e88f44d",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "56a2be62-2646-4d38-b473-75764d4e5071",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 680,
          "responseSize": 844
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "851d71bf-4b39-41cb-90d3-22677edc9968",
        "cursor": {
          "ref": "c02a4839-232f-49ca-82da-aa3c989db780",
          "length": 253,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "41e48208-232e-4b48-96e5-e4fb87a04ff8"
        },
        "item": {
          "id": "851d71bf-4b39-41cb-90d3-22677edc9968",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "9c8170d3-2e54-4a27-b705-049dfe05d608",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 825
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a33975b8-d523-420e-8594-90af52151241",
        "cursor": {
          "ref": "89ef344f-f39c-4644-80e4-1a9a05bdaf05",
          "length": 253,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "799f0529-6fe5-4618-b95e-e65112696f37"
        },
        "item": {
          "id": "a33975b8-d523-420e-8594-90af52151241",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "f2b22bae-2366-4b2c-8232-9d7a5feb1b6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 603,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3810678a-6c5c-473a-b944-479b79762286",
        "cursor": {
          "ref": "f30d2efe-dacd-4348-a5ef-2f128438ffd3",
          "length": 253,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "b479c748-5080-4a89-a1a9-f6d371ad292d"
        },
        "item": {
          "id": "3810678a-6c5c-473a-b944-479b79762286",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "aca40234-7066-4acc-8ede-578d98eca1d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 824
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd78df0-fdb5-4638-a4fb-98598778b292",
        "cursor": {
          "ref": "11ab51cd-f7cc-4a20-a63f-e227b80c0ac2",
          "length": 253,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "0b5e5db8-2741-41b7-b217-6b838c993328"
        },
        "item": {
          "id": "4cd78df0-fdb5-4638-a4fb-98598778b292",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "9f84a2ea-1b86-4f6e-a150-475dd18f2c48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 606,
          "responseSize": 822
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac7cb095-b059-48b2-ada0-2081baa95a06",
        "cursor": {
          "ref": "a83a1599-db65-4421-8045-70fddeb00564",
          "length": 253,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "fdb91b50-98bc-4c35-aee2-71529bda8d6a"
        },
        "item": {
          "id": "ac7cb095-b059-48b2-ada0-2081baa95a06",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "2afed1c8-2d33-4d32-be46-61d1009370d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 693
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a426953c-af7b-4024-b3b1-5b6319c10a6a",
        "cursor": {
          "ref": "a0a28aec-935d-4e60-b4fd-9b4be7604e80",
          "length": 253,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "2e052f38-1975-4ca2-8955-efb41388afee"
        },
        "item": {
          "id": "a426953c-af7b-4024-b3b1-5b6319c10a6a",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "e33f14cb-9e3e-45b9-8b12-02081f632b69",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 604,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "385448f7-58fc-4e4a-9992-c283a3300d86",
        "cursor": {
          "ref": "3330a66c-51ad-42fb-ad32-0ef3cc73d985",
          "length": 253,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "47fd6b0b-b9cb-413b-9d90-e9f38a9bf871"
        },
        "item": {
          "id": "385448f7-58fc-4e4a-9992-c283a3300d86",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "bc95fb15-3559-4a35-969e-e5501b5d0a65",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 544,
          "responseSize": 642
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "431d6714-135f-4201-adef-8bbdc2ca9156",
        "cursor": {
          "ref": "5ebb0f4a-f7be-412f-9300-74b285f6c749",
          "length": 253,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "9a49c62b-8847-4331-a845-75903cc8eec8"
        },
        "item": {
          "id": "431d6714-135f-4201-adef-8bbdc2ca9156",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "1ab7adcb-f760-4313-9dab-6bad5593a7c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 577,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47c0e49f-c47d-4468-af29-c1310394b257",
        "cursor": {
          "ref": "cede33a8-02bb-44e9-a6eb-fc09a18f8702",
          "length": 253,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "51d4d4d8-ee33-416b-a02d-33161077908d"
        },
        "item": {
          "id": "47c0e49f-c47d-4468-af29-c1310394b257",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "f7a09f59-360b-4a25-bbf6-3d07b60f9d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 641
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dc48a08-0b88-4619-80b3-c8187d5dc8d5",
        "cursor": {
          "ref": "4410cd11-e197-4c0b-8f56-45ec59b99f24",
          "length": 253,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "29a06dd1-82b2-46ea-b8d1-2dd29ab6a1b6"
        },
        "item": {
          "id": "8dc48a08-0b88-4619-80b3-c8187d5dc8d5",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0a63ce8d-868c-4cbf-96a6-3cf124ede4c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 568,
          "responseSize": 639
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "674ca458-59c8-4295-81d0-50445b9a6adc",
        "cursor": {
          "ref": "2b04cacb-6cb2-4369-b6eb-85384d05f432",
          "length": 253,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "dce8cc3e-b1a9-4c41-8548-1fe2ad03cadb"
        },
        "item": {
          "id": "674ca458-59c8-4295-81d0-50445b9a6adc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "5f556732-0163-4f6b-bed6-43bc8185cd75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 569,
          "responseSize": 692
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0dbbbbcc-99df-40cb-b504-a2c3c304fd89",
        "cursor": {
          "ref": "feffd905-6012-4419-a2fc-420e7193a0ba",
          "length": 253,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "be0352e0-9f0d-470f-8184-70fd4663c1ac"
        },
        "item": {
          "id": "0dbbbbcc-99df-40cb-b504-a2c3c304fd89",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "04d93a87-1ff5-4b2e-9d7c-e86ad059f556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 687
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "649dbdce-5755-4d64-b55e-6e71e0d50882",
        "cursor": {
          "ref": "01a3afdc-81e6-4cdd-a306-05352010ab02",
          "length": 253,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "fbdb0598-7347-48cc-8d3a-595be08d3a8c"
        },
        "item": {
          "id": "649dbdce-5755-4d64-b55e-6e71e0d50882",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "805d52c5-7d3c-4712-b02f-12824e66425a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 605,
          "responseSize": 664
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1aecf30-76fc-460d-aaa4-c9e51ff5e80b",
        "cursor": {
          "ref": "a21d7a87-7e3e-4027-aa37-2674330525b3",
          "length": 253,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "5a58f09d-663b-4a20-9f90-e6f62fff2d69"
        },
        "item": {
          "id": "d1aecf30-76fc-460d-aaa4-c9e51ff5e80b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "e29d3cbb-3ba7-4d97-89e4-663b58b0505a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 596,
          "responseSize": 661
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73cbfe7b-a473-4603-89de-2ab44444cf5e",
        "cursor": {
          "ref": "5a5ab22d-5434-4f2e-a7c2-40c53e4a326f",
          "length": 253,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "83d1e087-01ce-4b53-8d02-d4c1abba3ca3"
        },
        "item": {
          "id": "73cbfe7b-a473-4603-89de-2ab44444cf5e",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "196112e3-545e-4adb-93df-596d4e8bc4b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 539,
          "responseSize": 663
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de54c7a4-bd42-4134-b0ee-e223b19c1be7",
        "cursor": {
          "ref": "7d17eb0b-5b74-462e-9e5e-6d8eb933f2ff",
          "length": 253,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "fcb8d85c-5b0f-479b-8c0d-5b9bd4a660b3"
        },
        "item": {
          "id": "de54c7a4-bd42-4134-b0ee-e223b19c1be7",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "e8e66ee1-9999-447a-957a-19c05fb905a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 685
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3521c5-9282-41f4-858c-776fda90a978",
        "cursor": {
          "ref": "77666e18-e2a8-48d8-8ea4-6eec58b17d5d",
          "length": 253,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "1d65a5c0-a519-4e1c-8adb-3f6c5f07071b"
        },
        "item": {
          "id": "ad3521c5-9282-41f4-858c-776fda90a978",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "db84a411-7ff8-45ad-8d96-f0bfa9a5b2b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 662,
          "responseSize": 698
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d63fe53-0665-4a90-94c5-540984478ad2",
        "cursor": {
          "ref": "912b7966-4be3-4ffc-9855-46d586c9f0b5",
          "length": 253,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f4412d8d-76d1-4a53-8b9d-6f6b9330fb3a"
        },
        "item": {
          "id": "2d63fe53-0665-4a90-94c5-540984478ad2",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "6e6ae00a-9b47-49ac-bc45-f8a04c258aea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 575,
          "responseSize": 961
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3015ae7-e564-41e3-8ba2-63ad36b7f68b",
        "cursor": {
          "ref": "7bb76876-0682-4827-acd7-a8096cea04bd",
          "length": 253,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "fb2472f6-bd53-434e-af5f-809b6eacc1d7"
        },
        "item": {
          "id": "d3015ae7-e564-41e3-8ba2-63ad36b7f68b",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "098dcbf7-b9fa-40c1-8218-4fe8650a0410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd6c1fa-0142-4c1d-87e2-2c6c5a01d2d3",
        "cursor": {
          "ref": "566ee70b-3176-4b67-a389-e7ee72eb179e",
          "length": 253,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "e1c8bab6-5e1f-4b9b-be81-cf0300302dc2"
        },
        "item": {
          "id": "4cd6c1fa-0142-4c1d-87e2-2c6c5a01d2d3",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "41927b0d-948f-4d5a-8c39-beef3efe7515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6f85bd-b0d2-4a5b-a96c-b689332e705f",
        "cursor": {
          "ref": "63d483b9-f09f-4846-b53b-df6d0fa62921",
          "length": 253,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "787a3040-8d5a-4fd2-ba21-6628b935058d"
        },
        "item": {
          "id": "ec6f85bd-b0d2-4a5b-a96c-b689332e705f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "bd91f0b9-be07-4e42-a2cc-7e48565a27bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 550,
          "responseSize": 937
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18cde118-68bc-4a8e-893b-af2a34a8dfd4",
        "cursor": {
          "ref": "474c2802-ab4c-43fa-9846-51842ba6bf37",
          "length": 253,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "e666b139-5560-43aa-9b42-b4ad14ac1933"
        },
        "item": {
          "id": "18cde118-68bc-4a8e-893b-af2a34a8dfd4",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "ee9a674a-c746-4f09-809a-a8c80d6deaa1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 573,
          "responseSize": 935
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f438aa2-9ff1-48e8-9e4c-140caf60877e",
        "cursor": {
          "ref": "cfd49b45-b17d-484c-b190-274ff7ecc55f",
          "length": 253,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "f96ccb2d-e7ec-4570-ac03-67d74e8f6c89"
        },
        "item": {
          "id": "4f438aa2-9ff1-48e8-9e4c-140caf60877e",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f3207eb5-0beb-43f0-9ab6-69520e341bc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 761
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b00d94a-6d3a-427a-b661-db34e8fc0494",
        "cursor": {
          "ref": "54686647-610a-4f4a-85c9-1f9768a094a3",
          "length": 253,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "e1643a8c-4959-4d83-b89a-c93f72e25156"
        },
        "item": {
          "id": "4b00d94a-6d3a-427a-b661-db34e8fc0494",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "dc350d53-233e-4331-a401-75d5782a1938",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81620dc-96c9-41f7-8da6-65fd40154616",
        "cursor": {
          "ref": "14b4f99e-ad28-4c8c-84db-739723030df4",
          "length": 253,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "e2d94d0a-efe7-4569-907c-a427b349514f"
        },
        "item": {
          "id": "e81620dc-96c9-41f7-8da6-65fd40154616",
          "name": "credentials_issue:missing_scope:issue_credentials"
        },
        "response": {
          "id": "231314ea-9a92-47f9-9a86-73be3f808bb2",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 565,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dc6f4ea-78dc-43b6-862b-e7480295d110",
        "cursor": {
          "ref": "42944f32-2147-4ea6-b440-3407141f2821",
          "length": 253,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "dbaa36b4-ab4e-44f9-ac78-327fcea3f98f"
        },
        "item": {
          "id": "9dc6f4ea-78dc-43b6-862b-e7480295d110",
          "name": "credentials_issue"
        },
        "response": {
          "id": "1ad60bc8-7a5d-466b-a374-637f61b6fa98",
          "status": "Created",
          "code": 201,
          "responseTime": 5021,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:106)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:106)"
            }
          },
          {
            "assertion": "response credentialSubject matches request credential.credentialSubject",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response credentialSubject matches request credential.credentialSubject",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:106)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 5,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:6:106)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 6,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:7:106)"
            }
          }
        ]
      },
      {
        "id": "a66c2d95-cde3-4a5a-97f8-31f1e548b773",
        "cursor": {
          "ref": "42c9df4b-52c2-4798-b081-33c6a61f0fb2",
          "length": 253,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "016f6523-2447-4a8c-9cba-2eea9e45b9da"
        },
        "item": {
          "id": "a66c2d95-cde3-4a5a-97f8-31f1e548b773",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c2d255bd-36ac-4d11-8689-3dda3158dc5d",
          "status": "Created",
          "code": 201,
          "responseTime": 4151,
          "responseSize": 731
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:107)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:107)"
            }
          }
        ]
      },
      {
        "id": "d5a6a7af-fd22-420e-8abd-bda83543e356",
        "cursor": {
          "ref": "d666d11f-153d-42f9-8921-d8d87b7e8388",
          "length": 253,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "320efbdf-18dc-4e7d-bf89-7f7c99fe789d"
        },
        "item": {
          "id": "d5a6a7af-fd22-420e-8abd-bda83543e356",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "ed0328bf-e0f0-4038-bf82-666817176f08",
          "status": "Created",
          "code": 201,
          "responseTime": 3928,
          "responseSize": 746
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:108)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:108)"
            }
          }
        ]
      },
      {
        "id": "b2f428c6-e3e0-44fa-81c3-1363c31c74bb",
        "cursor": {
          "ref": "420fbd4a-1dd8-47e9-9d34-49183f133f73",
          "length": 253,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "ad9d59a0-22b7-4a65-829f-d26e3fc489b0"
        },
        "item": {
          "id": "b2f428c6-e3e0-44fa-81c3-1363c31c74bb",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "5460b96e-6807-4310-adb9-34f2e64e3df3",
          "status": "Created",
          "code": 201,
          "responseTime": 4259,
          "responseSize": 724
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:109)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:109)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:4:109)"
            }
          }
        ]
      },
      {
        "id": "b677d2ef-f4cd-454e-820f-ca11987d65db",
        "cursor": {
          "ref": "f4763765-b260-46cf-b6da-177add4bb235",
          "length": 253,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "8035032e-b572-4326-b41e-f0272595b7a3"
        },
        "item": {
          "id": "b677d2ef-f4cd-454e-820f-ca11987d65db",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "f92c98de-f7a4-4952-8801-2eee5e60019e",
          "status": "Created",
          "code": 201,
          "responseTime": 4769,
          "responseSize": 1065
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:110)"
            }
          },
          {
            "assertion": "response @context contains traceability/v1",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response @context contains traceability/v1",
              "message": "Cannot read properties of undefined (reading '@context')",
              "stack": "TypeError: Cannot read properties of undefined (reading '@context')\n   at Object.eval sandbox-script.js:3:110)"
            }
          }
        ]
      },
      {
        "id": "7376c31d-2824-4ea4-ad42-104b70b07fd2",
        "cursor": {
          "ref": "1e38ea8c-af1a-4986-a879-06d71f371631",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5c4d6e8-115b-4c34-b712-0c7d48ab75aa"
        },
        "item": {
          "id": "7376c31d-2824-4ea4-ad42-104b70b07fd2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "89749301-9ff7-412e-9805-d601cde97238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7376c31d-2824-4ea4-ad42-104b70b07fd2",
        "cursor": {
          "ref": "1e38ea8c-af1a-4986-a879-06d71f371631",
          "length": 253,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "f5c4d6e8-115b-4c34-b712-0c7d48ab75aa"
        },
        "item": {
          "id": "7376c31d-2824-4ea4-ad42-104b70b07fd2",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "89749301-9ff7-412e-9805-d601cde97238",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 611,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a5aed2e-5803-4ec1-ba1f-60500b9ae3c6",
        "cursor": {
          "ref": "277a13aa-a0ef-4662-ad9a-cfcf3b482b30",
          "length": 253,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "1704ac17-0c52-4b1b-b509-7a9130a31b02"
        },
        "item": {
          "id": "3a5aed2e-5803-4ec1-ba1f-60500b9ae3c6",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e8129f97-16c1-4e34-b257-b41b7c066782",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 602,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d3168647-6486-472d-9703-aa0dce06235b",
        "cursor": {
          "ref": "65ddce0d-aecd-4b09-a781-0e9a082921ea",
          "length": 253,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "0ce5dee7-c907-4137-a45c-66bf6b5a91c9"
        },
        "item": {
          "id": "d3168647-6486-472d-9703-aa0dce06235b",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4e528cd2-d124-4f12-842d-d396849ee7a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 557,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef856720-9d02-46ab-9cdf-c590162cb5ad",
        "cursor": {
          "ref": "afacfe08-6ab4-4a92-b283-aae0c95356c0",
          "length": 253,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "8ff68f50-25ae-422e-8f5d-34424ea2d712"
        },
        "item": {
          "id": "ef856720-9d02-46ab-9cdf-c590162cb5ad",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d6f87c5d-3b74-40cc-9cb8-ecb1b63048b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 570,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "520a244d-4e42-4c26-9095-2294b1b50b65",
        "cursor": {
          "ref": "0cea2abd-2a73-4c70-bd12-4bebc61ac243",
          "length": 253,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "984d50d0-5051-471a-8ce0-743e073da103"
        },
        "item": {
          "id": "520a244d-4e42-4c26-9095-2294b1b50b65",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "beff81b4-2eb2-4a0d-8633-5c9893ccf828",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43d499d9-710b-49ce-aa88-84ee5fd046bf",
        "cursor": {
          "ref": "92a47598-b041-4141-acba-e5c135af9f1c",
          "length": 253,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "068ac57f-3821-400e-9f6d-be9c2f4358e1"
        },
        "item": {
          "id": "43d499d9-710b-49ce-aa88-84ee5fd046bf",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "65a7065e-d44a-4939-89f7-5c1ee35d2edb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 562,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c427b7e6-00a4-47ba-8eda-2d392f2df982",
        "cursor": {
          "ref": "7e1b1fa4-ad8e-4fd5-a216-6be65226412d",
          "length": 253,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "ddd28179-f6dd-48b7-b3e5-2d4e0d3ac437"
        },
        "item": {
          "id": "c427b7e6-00a4-47ba-8eda-2d392f2df982",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "dc135afb-c1d2-41e4-adff-a1368e157999",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 564,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62362dbb-559a-4e1a-bf58-91129e7af099",
        "cursor": {
          "ref": "0a0e9326-e99a-4bba-a2b7-3eacefbef82d",
          "length": 253,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "1c083fdc-933f-47a2-b3db-aadccf3b300a"
        },
        "item": {
          "id": "62362dbb-559a-4e1a-bf58-91129e7af099",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "e9affd31-1469-4466-8dad-218fbec94ac0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56738e1a-dac4-44d7-9ca0-350c91208740",
        "cursor": {
          "ref": "74674a72-4818-41cf-a88f-3479c4c0a718",
          "length": 253,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "bdbad656-b98b-4c11-a166-8eea2c09b1d8"
        },
        "item": {
          "id": "56738e1a-dac4-44d7-9ca0-350c91208740",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7c941f28-a14d-4c1f-9f84-d5c48ab5b41e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681f1e5e-0e0b-4ea1-9198-4dfb8cb7b4e8",
        "cursor": {
          "ref": "082dcab6-622c-43ab-ba9c-8c01c50acfef",
          "length": 253,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "311fe8a3-b7f4-4697-985e-c43c1de596e0"
        },
        "item": {
          "id": "681f1e5e-0e0b-4ea1-9198-4dfb8cb7b4e8",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "50dd71a2-c401-4129-b23c-8f88ca36c5ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 567,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "038460ad-8423-441d-9abb-e28d81c63366",
        "cursor": {
          "ref": "4fe50db3-5306-4937-8e79-a092ff8efbf1",
          "length": 253,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "136a6521-746f-4f24-90cc-13f0c7ac09f1"
        },
        "item": {
          "id": "038460ad-8423-441d-9abb-e28d81c63366",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "2f55b7b4-a1d1-41f5-a4c8-b8eddbac5677",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 553,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3f1f033-912a-419d-a893-e9f46156c2c2",
        "cursor": {
          "ref": "7bd01d3f-da30-4911-a608-68883737569d",
          "length": 253,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "9e9d7736-2b3a-43ce-9b27-9d901bc3d1fe"
        },
        "item": {
          "id": "c3f1f033-912a-419d-a893-e9f46156c2c2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6e3ed92d-e5f6-4b24-a24e-ebc308c9d0dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 559,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbc5d456-fa15-49c0-80c5-62f45c140625",
        "cursor": {
          "ref": "43e2719e-bce2-4fc6-a550-0a0304d10f67",
          "length": 253,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "8dbb2d83-7e0b-44e6-8993-733780696a13"
        },
        "item": {
          "id": "cbc5d456-fa15-49c0-80c5-62f45c140625",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "532fedaf-20ac-4069-8160-8ef10f5607f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 589,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b538ec1-a207-4df5-a663-d2da72e4c72c",
        "cursor": {
          "ref": "601dd1f1-ac48-4777-8ec0-5d6cbbc6ccc4",
          "length": 253,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "17c568a8-0207-47a9-9fc1-c391b81484f0"
        },
        "item": {
          "id": "4b538ec1-a207-4df5-a663-d2da72e4c72c",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "df8de35f-59a7-48a9-947d-7ffbdae55caf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bdf9e0-ee70-4fe5-8e46-31aa2b873f14",
        "cursor": {
          "ref": "49cad856-6fad-4915-aab5-501185fee724",
          "length": 253,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "4e26162b-6a6c-430f-9220-7e8c68d21320"
        },
        "item": {
          "id": "11bdf9e0-ee70-4fe5-8e46-31aa2b873f14",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "7d724c91-865e-45d6-84aa-95d0b5a9d3f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 583,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3124aef-d609-4971-b60b-fc3cef804d17",
        "cursor": {
          "ref": "4a0a6442-5a18-4ee7-b1f3-03ecf7d4ddee",
          "length": 253,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6cc35735-4a71-47b0-bba5-1b626388c55e"
        },
        "item": {
          "id": "c3124aef-d609-4971-b60b-fc3cef804d17",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "6f61f032-6fcd-4566-89ce-b6cf0746909d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1237ebb-90bb-43c0-9fee-482d93874f18",
        "cursor": {
          "ref": "5629e04f-728f-47fa-b6fa-144d49a824de",
          "length": 253,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "43209ccd-f001-4087-8145-88e225514fe4"
        },
        "item": {
          "id": "c1237ebb-90bb-43c0-9fee-482d93874f18",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "f199f074-cf71-41d3-ae1a-634dfd8a3b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 585,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a173255-7839-4f0f-a9fb-f1cc4b6cddce",
        "cursor": {
          "ref": "afc6bc51-7976-4d1d-b2e3-645bccdb7ac5",
          "length": 253,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "d9fae278-dad1-4ada-900d-1264144defca"
        },
        "item": {
          "id": "5a173255-7839-4f0f-a9fb-f1cc4b6cddce",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "89a838e5-d1bd-404a-8807-a46c324931e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 615,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec883e67-c15f-440a-acda-518295fd76c6",
        "cursor": {
          "ref": "facc7492-8302-43b0-aef2-2a114a102297",
          "length": 253,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "a5a4ca92-c6f4-4663-96f4-c7b16b70e7b5"
        },
        "item": {
          "id": "ec883e67-c15f-440a-acda-518295fd76c6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "348f00d0-d442-4600-8e9c-dc555726885c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "212c2cb4-ebea-4b30-8f3b-a3790da4d72c",
        "cursor": {
          "ref": "fd97b3d4-4ece-450f-88d2-c7606ade6ccb",
          "length": 253,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "02440e49-1065-470d-a471-abd8474e50bf"
        },
        "item": {
          "id": "212c2cb4-ebea-4b30-8f3b-a3790da4d72c",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4f039273-18f5-4e3a-b582-f8ae6ee20cc4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 551,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23ec0d3e-272b-41ae-be6e-3d5fbd70e222",
        "cursor": {
          "ref": "b5deeca5-1b4b-4109-8eac-23c67407e7df",
          "length": 253,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4e64c2ef-eea5-4510-955d-75d9f94af0a5"
        },
        "item": {
          "id": "23ec0d3e-272b-41ae-be6e-3d5fbd70e222",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "08d8a53a-c6e7-46a6-90ab-5dc48260f94d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 555,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6aad96e2-1f5d-4fe4-a110-a96663198127",
        "cursor": {
          "ref": "2736759a-20d4-40be-b858-d8254d92fc4c",
          "length": 253,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "b8fe1ece-e8de-4451-b0e7-4c41cb9a6433"
        },
        "item": {
          "id": "6aad96e2-1f5d-4fe4-a110-a96663198127",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "59bc5470-6f87-4697-9e9b-8e3fc307487b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 574,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c0be4db-6d21-4dab-b193-e0a6e9324510",
        "cursor": {
          "ref": "558884cf-8397-44f6-bf71-c917525311bc",
          "length": 253,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "34de4529-c1a8-4f20-8607-24fef3d55cea"
        },
        "item": {
          "id": "1c0be4db-6d21-4dab-b193-e0a6e9324510",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "5d9f1c20-c05e-43e2-85b8-33b98a5d5562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 566,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a300e8d-4734-480b-9064-7bc987eb558d",
        "cursor": {
          "ref": "950acb91-4cd8-4bcf-b760-0c901f3faf4a",
          "length": 253,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3d451d8d-dbcb-41ab-832b-7becad4820e8"
        },
        "item": {
          "id": "9a300e8d-4734-480b-9064-7bc987eb558d",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "40aa6777-17c4-4131-91e2-4f751b45dd71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 601,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaface41-ceab-4595-a9c5-37b283b43f45",
        "cursor": {
          "ref": "c23c27e8-71d1-436f-acea-f18b87c872f9",
          "length": 253,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "e919e0bc-824b-4c28-8ea4-3a72fa9600b8"
        },
        "item": {
          "id": "eaface41-ceab-4595-a9c5-37b283b43f45",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "9b09a366-642e-49cd-9583-8f4031253266",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 556,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2715f477-24fd-47ea-8865-ad99d15b7e4a",
        "cursor": {
          "ref": "7285e8ff-5281-4ae4-88f0-447ae9df7333",
          "length": 253,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "24756617-1508-4f6c-9267-029aef6919ee"
        },
        "item": {
          "id": "2715f477-24fd-47ea-8865-ad99d15b7e4a",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f15aa6b0-6540-4d09-836f-a11ad02445c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 1124,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b9322d1-c291-4f50-bc6d-17cda3c3803a",
        "cursor": {
          "ref": "dddb55d4-794f-41cd-b8f0-b5066de845f5",
          "length": 253,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "3b65ee56-9a28-490c-ab5d-81124c9e4657"
        },
        "item": {
          "id": "1b9322d1-c291-4f50-bc6d-17cda3c3803a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0ad9c9e-379a-455d-ad92-f99aaa026783",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 888,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08ac65d3-6874-455e-9c59-ebe0fee86758",
        "cursor": {
          "ref": "11a50152-5803-4a40-aacc-73b620f1c722",
          "length": 253,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "60cff46d-722f-4f03-915a-881d8e81e45a"
        },
        "item": {
          "id": "08ac65d3-6874-455e-9c59-ebe0fee86758",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "53a7daa9-9edb-438e-a8dc-a36f8ffb299c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 896,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33c1d41d-8ad6-45bb-9e7c-9b5f80565acb",
        "cursor": {
          "ref": "b4be5896-3b44-4ad6-907d-547f428c7e45",
          "length": 253,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "7844022f-84ca-47d0-83dc-7907c86cd964"
        },
        "item": {
          "id": "33c1d41d-8ad6-45bb-9e7c-9b5f80565acb",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7b835717-e685-4a3d-8611-e8d3196e632d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 920,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c569dea-d325-4b59-9fa6-3d7968710524",
        "cursor": {
          "ref": "bf49d9b1-d20d-4b1b-afc4-3b68a6dbc112",
          "length": 253,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "79523628-8541-4145-80e3-4271d446b037"
        },
        "item": {
          "id": "0c569dea-d325-4b59-9fa6-3d7968710524",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "4d55fd87-d583-4676-a12f-feabce1b6a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 579,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4aa5df63-eb19-4ff1-afe7-dc3ebda44c5d",
        "cursor": {
          "ref": "dba58ade-d268-4d62-b798-391be46ffe9c",
          "length": 253,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "ab5992cd-3390-4211-9643-bd544ed0856c"
        },
        "item": {
          "id": "4aa5df63-eb19-4ff1-afe7-dc3ebda44c5d",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cc93d12d-b780-4fca-95fb-cf85221b4414",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 614,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be61340-74f5-4cb1-9b93-93828af95f44",
        "cursor": {
          "ref": "a41bd0a4-1c6d-4f68-abb7-1cb4755efd1c",
          "length": 253,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4a210915-6162-425d-b1d0-7d61324bad9e"
        },
        "item": {
          "id": "5be61340-74f5-4cb1-9b93-93828af95f44",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "92816c19-a102-4123-b714-36143d588c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 576,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91741e46-a546-48f0-a52d-5ea00327e02a",
        "cursor": {
          "ref": "04911659-b1b7-4d10-b1d3-9b6d7bdfa755",
          "length": 253,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "ac6cbca3-1604-43df-913e-1e7d8c06231d"
        },
        "item": {
          "id": "91741e46-a546-48f0-a52d-5ea00327e02a",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "48836885-0671-44d4-8205-c80ec18fbb10",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55ca54d6-4e65-4530-9b70-039b435ce66f",
        "cursor": {
          "ref": "c7a14877-ae73-4457-84f5-27fae56a54ca",
          "length": 253,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "063d52ca-87b1-4253-9047-df3ad94a3ba3"
        },
        "item": {
          "id": "55ca54d6-4e65-4530-9b70-039b435ce66f",
          "name": "credentials_status:missing_scope:update_credentials"
        },
        "response": {
          "id": "1bdf1b35-8094-4334-a4e5-467ead0e6afe",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 637,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c357f49-39e6-40a3-9751-1e13e5b89c21",
        "cursor": {
          "ref": "4961580d-6b94-40a6-856f-17652d0b7910",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d55feaa6-6989-482c-9bdc-41be9ad446af"
        },
        "item": {
          "id": "4c357f49-39e6-40a3-9751-1e13e5b89c21",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17156377-f4d5-464a-9558-b33d151bec50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c357f49-39e6-40a3-9751-1e13e5b89c21",
        "cursor": {
          "ref": "4961580d-6b94-40a6-856f-17652d0b7910",
          "length": 253,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "d55feaa6-6989-482c-9bdc-41be9ad446af"
        },
        "item": {
          "id": "4c357f49-39e6-40a3-9751-1e13e5b89c21",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "17156377-f4d5-464a-9558-b33d151bec50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 383,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4aaecf5-4155-4212-b1f2-05e95f520c00",
        "cursor": {
          "ref": "62bccd58-1a1b-4f14-938b-ee81479c6ec1",
          "length": 253,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "61bb3ab0-71e0-4645-be2a-0dbb202f8dee"
        },
        "item": {
          "id": "d4aaecf5-4155-4212-b1f2-05e95f520c00",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "90b3fd35-f783-4954-8079-6f43c0eaa421",
          "status": "OK",
          "code": 200,
          "responseTime": 319,
          "responseSize": 20
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:146)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:146)"
            }
          }
        ]
      },
      {
        "id": "da377a6e-9478-402b-b4c0-1f01078e2c3b",
        "cursor": {
          "ref": "cd833b60-558b-4e4c-99f5-daddb53ffada",
          "length": 253,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "24f034dd-c4d7-4754-be14-3a5331d64135"
        },
        "item": {
          "id": "da377a6e-9478-402b-b4c0-1f01078e2c3b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "adb3d55a-c895-4c1b-be30-92f5bd7d89e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 321,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b21587ff-1628-4114-8927-7840e541e957",
        "cursor": {
          "ref": "f5498f1f-49da-4436-b6bc-c9f2619866c5",
          "length": 253,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f3a4edc0-4a7b-4fb5-b822-8353bc0358d7"
        },
        "item": {
          "id": "b21587ff-1628-4114-8927-7840e541e957",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "c17ed394-5e06-48e9-8ed2-ac60cb68b51a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 380,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73400f87-15af-4e91-b700-a46c158b31d3",
        "cursor": {
          "ref": "d39cfb86-d27f-49cb-a937-85a099a019cc",
          "length": 253,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "6c1ed18c-a5ef-40ac-91cc-bfbea9a2be4d"
        },
        "item": {
          "id": "73400f87-15af-4e91-b700-a46c158b31d3",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "4c9a69e0-7cba-4e0c-80aa-d68c532732be",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaaa9aa3-88f9-47b1-8ead-b2d3bad9cece",
        "cursor": {
          "ref": "a4bfa040-e21e-4402-ad52-70441235128c",
          "length": 253,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "ca35fb98-fa36-498a-9d70-81dc53b0d905"
        },
        "item": {
          "id": "eaaa9aa3-88f9-47b1-8ead-b2d3bad9cece",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "1f88c0b7-61a7-46c4-a26f-5b1401c30f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "27f80b8e-bd3e-4a45-ace1-4f8e64e608ea",
        "cursor": {
          "ref": "ce07bb66-4531-485e-a6d2-ffe11000eaf2",
          "length": 253,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "1a7983d3-00d5-4f03-9af1-85e7d0032cc0"
        },
        "item": {
          "id": "27f80b8e-bd3e-4a45-ace1-4f8e64e608ea",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "1da4601a-f2fc-48ff-9887-488af6504357",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92623b9b-d999-489d-b974-c9a9ee28dd69",
        "cursor": {
          "ref": "24d2c0bf-622a-4b03-9be3-71a6ce2189f6",
          "length": 253,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "60c2fdbf-fe28-4069-bf58-b8984c756c70"
        },
        "item": {
          "id": "92623b9b-d999-489d-b974-c9a9ee28dd69",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "73176b51-917b-4e49-b3a0-cd0f1d9a43da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "addbe991-3539-4503-ad93-956767c1828e",
        "cursor": {
          "ref": "935580f4-9144-49fb-bf00-595d6f68d0b6",
          "length": 253,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b67bbfe1-b001-41f6-99c3-a2713802b5cc"
        },
        "item": {
          "id": "addbe991-3539-4503-ad93-956767c1828e",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "0f9aa432-76ae-4c74-9fe1-034d19600547",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8591af2a-c738-41eb-b61a-1e6d1a9dacc3",
        "cursor": {
          "ref": "5064b2e6-b002-4d65-b8ab-6baaec253d94",
          "length": 253,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "30e884e5-76b1-4c03-a386-e7075edad11e"
        },
        "item": {
          "id": "8591af2a-c738-41eb-b61a-1e6d1a9dacc3",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "02b25a3f-6561-44cf-b523-2a1ea1aad5f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1605
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e685f6b1-8c4f-40a2-89c3-40d3706dd0b3",
        "cursor": {
          "ref": "acac23eb-42bd-4ec0-9c8a-955bbc4ec8ec",
          "length": 253,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "a4b12d1e-1cb6-4f85-85e6-3fe63208f5a8"
        },
        "item": {
          "id": "e685f6b1-8c4f-40a2-89c3-40d3706dd0b3",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "9cedf314-f2c4-48c4-b0da-9ebd8857b966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 319,
          "responseSize": 1503
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e836339-6d49-4337-82a0-d872c288c00a",
        "cursor": {
          "ref": "4d19fe8b-f146-486f-a0a8-2e2b19d17e8c",
          "length": 253,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "f3d39413-9116-4454-91b9-281a793f4718"
        },
        "item": {
          "id": "3e836339-6d49-4337-82a0-d872c288c00a",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "95b7b93b-6306-4435-b9c2-f2236bac5cad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d826f81-0059-4553-9f03-01a75ba91fcc",
        "cursor": {
          "ref": "9c8e9d13-a540-4633-b6af-a9b001e08fd7",
          "length": 253,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "b4a962f4-91a1-45d4-9a19-2a9256e3d16f"
        },
        "item": {
          "id": "9d826f81-0059-4553-9f03-01a75ba91fcc",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "bdc92ebf-9e06-4dd3-af68-daafd347f404",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0cd0e6-3d6d-400f-96e7-89fad7260c57",
        "cursor": {
          "ref": "c7464e42-29a0-4671-9ee0-141cf6c92239",
          "length": 253,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "f741fb6f-d623-4d96-8d11-68c7ab4ec287"
        },
        "item": {
          "id": "9b0cd0e6-3d6d-400f-96e7-89fad7260c57",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "35aacba8-d083-4d68-bbeb-1f895d6649af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 509,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a3fcd40-4e75-43a1-9d52-bb9b589e9eba",
        "cursor": {
          "ref": "867b689b-b32a-49b2-92e7-e9a4e5a1b493",
          "length": 253,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "ec03dde5-a863-4bdd-8edb-045d145d09ba"
        },
        "item": {
          "id": "7a3fcd40-4e75-43a1-9d52-bb9b589e9eba",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "d329ece4-b45e-49d5-aee5-b3993f879351",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 639,
          "responseSize": 1885
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff37323-23fd-4718-894b-0e2c82943e95",
        "cursor": {
          "ref": "f94e03f9-52a9-4ebb-ae00-2a80609d9abe",
          "length": 253,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "70d8d8b1-cc08-49b1-a8b8-9f3e479bb8ef"
        },
        "item": {
          "id": "5ff37323-23fd-4718-894b-0e2c82943e95",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6df678cf-b17a-465b-a2de-8ce07dc73259",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 594,
          "responseSize": 1886
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3a86ca3-3d68-4657-8926-8a5668548669",
        "cursor": {
          "ref": "85cc70bb-bc37-468f-8c8d-c3d8797e9244",
          "length": 253,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "8f95ae1a-c67f-4509-b4fb-5607dfdc2cca"
        },
        "item": {
          "id": "a3a86ca3-3d68-4657-8926-8a5668548669",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "0163544c-6277-4a1d-9d13-fe89a3064ec1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 719,
          "responseSize": 1784
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c338ea87-a8b7-4493-b6ff-a2d4dc814448",
        "cursor": {
          "ref": "6fbc5370-86f8-4982-9827-9e2ea7651b06",
          "length": 253,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4b8aa981-745f-442c-9bdd-a4eaf60af6d8"
        },
        "item": {
          "id": "c338ea87-a8b7-4493-b6ff-a2d4dc814448",
          "name": "credentials_verify:vc:id:missing"
        },
        "response": {
          "id": "b2085756-d97d-4efb-ba94-a47cb5ccd0e9",
          "status": "OK",
          "code": 200,
          "responseTime": 2457,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:162)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:162)"
            }
          }
        ]
      },
      {
        "id": "8ea1d975-e72a-4ed5-83d0-a11b57e14cc6",
        "cursor": {
          "ref": "af0adf42-411a-4158-9080-65d77d88aec9",
          "length": 253,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "4524c9a6-6954-44ba-b624-7adfaf86e667"
        },
        "item": {
          "id": "8ea1d975-e72a-4ed5-83d0-a11b57e14cc6",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2b5e980a-94d1-4c79-8233-3eb3985bb65f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 346,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6009df38-0b8e-48a7-b103-7e09e682f181",
        "cursor": {
          "ref": "91c765f6-361b-405e-b1b5-e10c12f9888d",
          "length": 253,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "58100b1c-e954-4ab5-8eef-4825899cc2f5"
        },
        "item": {
          "id": "6009df38-0b8e-48a7-b103-7e09e682f181",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c94ef861-b8c4-41df-a7c7-b668a1ce52c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b6b8d5d-4a97-4b0e-98d6-6bea7731b4a4",
        "cursor": {
          "ref": "f838d174-b53f-4152-a2e2-54863ae8b0c0",
          "length": 253,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "a597febe-d186-44a3-ba48-42bb010b6371"
        },
        "item": {
          "id": "5b6b8d5d-4a97-4b0e-98d6-6bea7731b4a4",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "2f0f4c58-d07b-44f9-b92c-cbdeff5af237",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 361,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d0e316-8e89-493d-9851-3f2d630fc6b6",
        "cursor": {
          "ref": "f2a9abec-a11d-47a6-9264-2ae4f62abe17",
          "length": 253,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "04a9be54-6050-4b41-9d41-b1abfa293e75"
        },
        "item": {
          "id": "78d0e316-8e89-493d-9851-3f2d630fc6b6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "aa36f22e-e8b2-4791-a77b-ec830c675513",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a37401ce-0960-4fbc-a13b-2beb8bf5b2d0",
        "cursor": {
          "ref": "18548ae1-2d5c-4dfc-936b-fef6dd0f1f41",
          "length": 253,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "1d241066-6868-4a6f-b036-af31fd36f2cd"
        },
        "item": {
          "id": "a37401ce-0960-4fbc-a13b-2beb8bf5b2d0",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "14386b9c-8cf7-4e79-b645-813b611fdcbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 354,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9309c24b-f15c-4aed-8db8-844a74a8955c",
        "cursor": {
          "ref": "6e9a6bf4-4c05-47cd-8ca9-d0e3d21c2099",
          "length": 253,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "332ab6e8-4221-4038-b0a1-5cabf6a894f9"
        },
        "item": {
          "id": "9309c24b-f15c-4aed-8db8-844a74a8955c",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3b3b1d43-3e97-42af-96d3-b9c2efbc29b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9ca7865-7783-441f-a550-bca052c0f65b",
        "cursor": {
          "ref": "c93204bc-93ab-45f3-a288-a8ee02d0dd32",
          "length": 253,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ce97b054-9f72-4d6e-a0b8-41b1efabd893"
        },
        "item": {
          "id": "e9ca7865-7783-441f-a550-bca052c0f65b",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "53498be3-f1dd-4d81-8c15-b2633f3bdd9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 324,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8691b59e-10a5-4ebe-b6ee-924ca8c1fa6b",
        "cursor": {
          "ref": "543dfd78-c180-41b6-9388-03bcbbb4c62c",
          "length": 253,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "db37c842-db13-45ad-8426-9835ce256e62"
        },
        "item": {
          "id": "8691b59e-10a5-4ebe-b6ee-924ca8c1fa6b",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d1e9d6a9-8611-48d5-8d42-7ad480cf3f25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cde916f0-245a-4364-8a4e-5de99ea53585",
        "cursor": {
          "ref": "e4fa6eda-fa20-4684-ba08-2b667a686755",
          "length": 253,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "aa793773-87e6-4a0d-98c3-80862ab49efd"
        },
        "item": {
          "id": "cde916f0-245a-4364-8a4e-5de99ea53585",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "b61e97dc-9ec0-427d-abdb-c176ad9dfb40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4ec01a2-ce5e-4801-9169-d1ec446346cc",
        "cursor": {
          "ref": "8925b4d9-df8d-495f-9bd7-f27af512351a",
          "length": 253,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "2e79557f-cbcb-436c-8283-a4f17aaf99d7"
        },
        "item": {
          "id": "b4ec01a2-ce5e-4801-9169-d1ec446346cc",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "56a2f424-8174-477d-b958-7be52feab051",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 376,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db61c03c-1235-42f5-85f2-4b8da7251400",
        "cursor": {
          "ref": "ba88d580-087c-4b50-8963-45e870f5f539",
          "length": 253,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "31e304a8-21cc-4fad-b56b-f4901a15700e"
        },
        "item": {
          "id": "db61c03c-1235-42f5-85f2-4b8da7251400",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "58119509-6629-41c0-8e53-f2b2d3320d97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 342,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39a44b48-c608-4a54-87f3-5a01e1e6d806",
        "cursor": {
          "ref": "4bbdd56c-1a15-4b82-85c4-463131703717",
          "length": 253,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "b945a5da-9053-43d2-a132-d7e5cf6ed065"
        },
        "item": {
          "id": "39a44b48-c608-4a54-87f3-5a01e1e6d806",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8379c9e4-2e9e-42cb-b2d7-7ad41837f440",
          "status": "OK",
          "code": 200,
          "responseTime": 375,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:174)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:174)"
            }
          }
        ]
      },
      {
        "id": "c9fcede9-4552-49f7-b075-052e8af6836d",
        "cursor": {
          "ref": "7addab32-cc14-4f07-9f08-bf987df8418d",
          "length": 253,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "230dc913-c97d-4689-8a10-9f9eda99fdf7"
        },
        "item": {
          "id": "c9fcede9-4552-49f7-b075-052e8af6836d",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "45d627df-c933-4a69-96bb-9a4179eed1dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 412,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31024030-785e-4475-a5fc-348cf36a10fa",
        "cursor": {
          "ref": "9ef05e6e-b718-4eee-b4b9-73328af560c9",
          "length": 253,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "ab307b44-be93-47f3-8e1d-54d0cd1cd380"
        },
        "item": {
          "id": "31024030-785e-4475-a5fc-348cf36a10fa",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "ad09c636-46b6-43f1-b3e3-c1df558b3220",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 365,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bd7f21-550e-4d1f-b52b-9d8b086e541d",
        "cursor": {
          "ref": "3f975d77-aa36-4634-a23a-65270eb8ad9a",
          "length": 253,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "d13acf75-a250-4f40-b2bc-415c8aaeeb6d"
        },
        "item": {
          "id": "02bd7f21-550e-4d1f-b52b-9d8b086e541d",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "dcd0d683-cee6-4a00-afb8-3a735dd4a1fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 739,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fad1beb2-95dd-4b2c-9c8d-7956f1a3d4e7",
        "cursor": {
          "ref": "577fd068-e1ce-41e6-a695-64b9d6c3cbcd",
          "length": 253,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "1d3d8849-f632-4e88-92d9-6888f40b8530"
        },
        "item": {
          "id": "fad1beb2-95dd-4b2c-9c8d-7956f1a3d4e7",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f64f3e3a-2c93-40fd-8b3d-4ad916a31026",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 565,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6fd29b6-fca0-4875-ab63-05d662df34be",
        "cursor": {
          "ref": "17d8b14e-876e-4bad-a3fe-b35f80aa381e",
          "length": 253,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "d09cab52-3640-4208-8a2f-7584afae726a"
        },
        "item": {
          "id": "d6fd29b6-fca0-4875-ab63-05d662df34be",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "51d81fc3-8a01-4174-9845-3ce764721a3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 563,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d769ac08-fe1a-4ffb-825f-446f8123a8e9",
        "cursor": {
          "ref": "fea66767-4007-43e8-8014-4cf8b42617ca",
          "length": 253,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "b424dda3-63c9-4dc0-970e-25e069a3660e"
        },
        "item": {
          "id": "d769ac08-fe1a-4ffb-825f-446f8123a8e9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "24df2e61-a141-4cab-83dc-99695190c68f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 591,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e3112bd-4f8b-4796-ae3b-8af149d77919",
        "cursor": {
          "ref": "ec063d72-adea-4c72-ae37-480f58aa58c9",
          "length": 253,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "9456f2d8-5cf3-496e-9d78-955ab44f3fb7"
        },
        "item": {
          "id": "6e3112bd-4f8b-4796-ae3b-8af149d77919",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "f70bcf65-dca3-470c-b816-47aa7dbdbc56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 590,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11f8444a-ca3e-4a9a-9dc6-de78ee31e350",
        "cursor": {
          "ref": "a3a53d2e-638c-479a-9aca-6dcca4f5c177",
          "length": 253,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4aefe61-e9dd-4f4a-890a-6c457a0edd57"
        },
        "item": {
          "id": "11f8444a-ca3e-4a9a-9dc6-de78ee31e350",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "fa14e3f0-ef0a-4a62-a80c-f4f0ca6d59bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 440,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad1a26bc-001d-4ae1-9001-4204cc2a68bf",
        "cursor": {
          "ref": "5b200465-4dc4-48b4-b9fe-eb01af418a3d",
          "length": 253,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "3407e204-2253-43b0-88c9-67164385ade0"
        },
        "item": {
          "id": "ad1a26bc-001d-4ae1-9001-4204cc2a68bf",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "3718f817-60be-4522-9b57-f51c23d7afd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 322,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "724a9066-810d-4baf-bd8d-7dd7587a027a",
        "cursor": {
          "ref": "fa046230-0293-4659-8a27-94d079c61dfa",
          "length": 253,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "47a5b66a-e980-4404-81be-2e5e3057205c"
        },
        "item": {
          "id": "724a9066-810d-4baf-bd8d-7dd7587a027a",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "d8face75-ab00-4b25-ba0c-9237d10dd2c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf7297c6-6ee1-4378-9daa-b64146d0d659",
        "cursor": {
          "ref": "347c8819-b537-46fc-9467-078d9fef7059",
          "length": 253,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "0d283c97-ac1a-4129-9217-0b467809552d"
        },
        "item": {
          "id": "cf7297c6-6ee1-4378-9daa-b64146d0d659",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "c5134645-17ed-411b-bb4f-fae8cc54025c",
          "status": "OK",
          "code": 200,
          "responseTime": 340,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:185)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:185)"
            }
          }
        ]
      },
      {
        "id": "897d2736-4c78-41ce-8d92-16bf7a3abc4b",
        "cursor": {
          "ref": "4c2d65e5-2331-4331-8908-dc1e458e1794",
          "length": 253,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "d56c58bb-159b-46c2-a2a4-1d68300c1f51"
        },
        "item": {
          "id": "897d2736-4c78-41ce-8d92-16bf7a3abc4b",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3e00f223-388d-4b49-866f-b03008c6c46a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 313,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25023b2d-55d1-4a76-ae57-4c5782529111",
        "cursor": {
          "ref": "8f51d095-1d38-4435-87f7-33d32dd1b2fa",
          "length": 253,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "ffba055a-b902-4c57-bdb1-5ba93fa27832"
        },
        "item": {
          "id": "25023b2d-55d1-4a76-ae57-4c5782529111",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "01de42da-99aa-438d-a796-501c7b5168f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 336,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d97fac2-d54a-45b3-a456-4e4aeb363732",
        "cursor": {
          "ref": "99bbe8d7-a068-49b9-8f64-95e670d8c384",
          "length": 253,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "4c39334c-7440-4727-8d6a-acbc6742325e"
        },
        "item": {
          "id": "2d97fac2-d54a-45b3-a456-4e4aeb363732",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "314d3ae3-ec80-4d6f-a146-f29ebdf7e4cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 315,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c115e794-ce5d-49bb-9643-d41ed2f138f2",
        "cursor": {
          "ref": "9494a8f3-eb4b-45aa-9ef9-dc31893bbe24",
          "length": 253,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "ce719c96-e0a9-449b-be27-97f47c5369e5"
        },
        "item": {
          "id": "c115e794-ce5d-49bb-9643-d41ed2f138f2",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "2d28ba4d-12a8-498d-87bf-8b79a8fb2031",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f46756f1-3553-468f-9c7e-2140ee81ae1e",
        "cursor": {
          "ref": "9e25f96b-8eba-44f2-b7ed-7b85f8bd0a3a",
          "length": 253,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "d48b959d-3a78-4141-bba6-53736d9a354d"
        },
        "item": {
          "id": "f46756f1-3553-468f-9c7e-2140ee81ae1e",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "8ef98f87-b3f3-405a-8785-e202660093d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 349,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5acfb835-bb87-4da9-aa50-d7f0d6b2a066",
        "cursor": {
          "ref": "ab615965-3670-4e45-a4b2-46cff9882e1c",
          "length": 253,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "a06f720b-9e81-44fa-905b-222c0d0cb42c"
        },
        "item": {
          "id": "5acfb835-bb87-4da9-aa50-d7f0d6b2a066",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7a98949c-2f45-47c1-9039-033f170c6cee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95b84a3e-5c4f-46aa-be7f-65b5163d7b54",
        "cursor": {
          "ref": "a0c74279-116a-4258-bda3-3658d659e6f3",
          "length": 253,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "5e736e73-acf6-4f80-a6ec-cedb6ae0925d"
        },
        "item": {
          "id": "95b84a3e-5c4f-46aa-be7f-65b5163d7b54",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "1097a185-1390-4c75-a439-32e8cecadb08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 352,
          "responseSize": 1349
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3680d066-94e1-4866-9a83-51fa2431e51f",
        "cursor": {
          "ref": "ec5d9e9c-14e1-431a-97db-6b4aa89d7818",
          "length": 253,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "4ef91c07-9c7e-4d93-90ce-89d0f083fc3d"
        },
        "item": {
          "id": "3680d066-94e1-4866-9a83-51fa2431e51f",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "13f2f611-4203-4f90-bcff-500f6f1ee827",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1330
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78e4f56e-1e1f-4ae3-a456-6a15999b6fe2",
        "cursor": {
          "ref": "07e6b79f-3343-4b0a-bfb6-b996b7efabc7",
          "length": 253,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "df5de51f-6136-4098-82b9-2b8871627bfd"
        },
        "item": {
          "id": "78e4f56e-1e1f-4ae3-a456-6a15999b6fe2",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "71899e7e-7d8f-498f-9a96-9b09519576f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 318,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb168fe8-e599-49c0-8489-fbd34b67d16c",
        "cursor": {
          "ref": "3e7c11dc-fa7c-44ee-a0d6-bc9645e0eb4b",
          "length": 253,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9b4c1efd-9939-4e01-95c3-30516d6eeb43"
        },
        "item": {
          "id": "fb168fe8-e599-49c0-8489-fbd34b67d16c",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "2d7d192a-7813-44e9-a6ef-3d03a6a53e36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01011bf2-7c41-443e-afb9-317b81750a5c",
        "cursor": {
          "ref": "0085fdf6-1b36-49b0-ad1c-f196baa02c69",
          "length": 253,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "84a831f3-9307-4ae3-9c42-966213d71622"
        },
        "item": {
          "id": "01011bf2-7c41-443e-afb9-317b81750a5c",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "e4faa4d2-7e4e-4ae0-bb3b-ce8a69774a09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90b454fb-c980-4758-a3fc-8d590a8a2a95",
        "cursor": {
          "ref": "f65c3f2d-b9be-487a-9a5a-c330bdb801eb",
          "length": 253,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "dc158a28-8b64-43cf-b098-6cfca0446c05"
        },
        "item": {
          "id": "90b454fb-c980-4758-a3fc-8d590a8a2a95",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "3a225441-b83f-4dc7-b1a5-58263d1f6d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 338,
          "responseSize": 1385
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fdb8e2c-c13a-4b4f-8283-988e006e705f",
        "cursor": {
          "ref": "844dc407-3af9-452c-8733-44a6007b045c",
          "length": 253,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "c0d2f2dd-669c-42d6-a9b3-926032277268"
        },
        "item": {
          "id": "5fdb8e2c-c13a-4b4f-8283-988e006e705f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "034ed19c-4e7c-4ff1-8147-67079bffdd49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0263e28f-dfb9-4e6e-a5fd-0f0c18a639f9",
        "cursor": {
          "ref": "1360c306-14e6-4b75-a2cd-b1a2eeccb523",
          "length": 253,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "0c5bbab0-0bc8-42f8-997f-353ea4271e08"
        },
        "item": {
          "id": "0263e28f-dfb9-4e6e-a5fd-0f0c18a639f9",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "70513d03-711b-45f1-a068-93ae3e508b27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 347,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9f83c9-84aa-47b8-ac58-254ffcd87485",
        "cursor": {
          "ref": "7c89b615-4623-4bdf-b570-86ae880d4d57",
          "length": 253,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "ac58865d-5603-4be8-a44f-9f4ffceeb475"
        },
        "item": {
          "id": "6b9f83c9-84aa-47b8-ac58-254ffcd87485",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "de5c235f-ed0d-4f21-8e0f-8b43600f3c41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 353,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f161a34-d69f-4e71-8ba4-f7d0835aca79",
        "cursor": {
          "ref": "824ce495-5447-47a9-ac53-3d9ad6e499a1",
          "length": 253,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "24f824a4-383a-4765-b07d-b28a7a1c4bed"
        },
        "item": {
          "id": "5f161a34-d69f-4e71-8ba4-f7d0835aca79",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "873f3360-bfcc-49f1-9fcd-33b6af2b2489",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "018ab148-fb5a-4558-950e-3639bed2a408",
        "cursor": {
          "ref": "5eda5cbc-875c-4d83-8b93-8459ea4cc21b",
          "length": 253,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "507fa59c-06af-4811-8d1e-c2f181cdc08b"
        },
        "item": {
          "id": "018ab148-fb5a-4558-950e-3639bed2a408",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "d7682bbf-86a1-45a8-a049-bc1044ca8cc6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83fdb935-5809-46a8-8f70-01c7614f057d",
        "cursor": {
          "ref": "c85d4627-4c99-4be7-b4ee-b993555ee769",
          "length": 253,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "a0717436-700c-4b05-8b09-cead7e19f04c"
        },
        "item": {
          "id": "83fdb935-5809-46a8-8f70-01c7614f057d",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "09f8555b-85b3-4253-97ca-110e428a0fd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e869d0c2-c02b-4f72-b89d-e5e0aafc2ed4",
        "cursor": {
          "ref": "a7d97f89-4695-4adc-b02c-8205ce2a5775",
          "length": 253,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "7129b1f9-3ac1-4207-afef-f907845f1b58"
        },
        "item": {
          "id": "e869d0c2-c02b-4f72-b89d-e5e0aafc2ed4",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f5e91f47-f2b7-48e0-8003-fdb740688449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 320,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec25ca9-fdf2-4f4b-9e95-18004d288ece",
        "cursor": {
          "ref": "fc2e4f51-9929-4ba4-b31f-90ab1e4fc2ef",
          "length": 253,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "816f4010-958e-46c0-bbaa-643b917ec7d7"
        },
        "item": {
          "id": "5ec25ca9-fdf2-4f4b-9e95-18004d288ece",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "d7177b8d-e77b-4304-a65c-64ddc88d780c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 362,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "820e2584-6fb8-4e02-8f77-c821a04a412c",
        "cursor": {
          "ref": "7d666d96-3bd8-48f2-b23f-ba3d5f7af863",
          "length": 253,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "0a2b2d49-98ec-4a14-be14-4f519a1b6fd7"
        },
        "item": {
          "id": "820e2584-6fb8-4e02-8f77-c821a04a412c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "060ed661-a396-419a-adde-df595513713a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b008c5be-2d5b-41c6-ae06-4c1553648245",
        "cursor": {
          "ref": "ee3878c2-d3cb-4495-a99c-21f978b74de5",
          "length": 253,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "9420f45e-39d4-4faa-b75c-ebfbf2caa8a9"
        },
        "item": {
          "id": "b008c5be-2d5b-41c6-ae06-4c1553648245",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "737ccbc7-7dd9-436a-9bbe-89ff4182ea36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14606ea2-2a35-4f6e-b301-73b540ed2408",
        "cursor": {
          "ref": "ea5f88a1-04dc-4908-8694-0d0b394986e7",
          "length": 253,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "9158bd5a-5608-4a2f-bc3e-e95c9e07ff75"
        },
        "item": {
          "id": "14606ea2-2a35-4f6e-b301-73b540ed2408",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "5c192c4f-6f84-414c-a5fc-f797110b7b58",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69ceb8c4-df45-49f6-8819-60ee3a67d3a2",
        "cursor": {
          "ref": "f2845dd9-61d8-4ac6-9a84-f00d161adff7",
          "length": 253,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "f789c105-6289-4b0f-a992-fbdcc157c651"
        },
        "item": {
          "id": "69ceb8c4-df45-49f6-8819-60ee3a67d3a2",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "22d71bab-2daf-44e0-9abb-c9533edbabda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f2cd527-04f5-40a5-bd48-a3d30f3ced25",
        "cursor": {
          "ref": "de651f4f-47fb-43ac-a7d0-df786558a1ee",
          "length": 253,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4ec74045-fabd-4f15-a483-c30a31795219"
        },
        "item": {
          "id": "4f2cd527-04f5-40a5-bd48-a3d30f3ced25",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c04eba5d-0212-4fe5-8c3e-9a00116b1c67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 333,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46d1975f-9d22-4aab-83db-71fc20239aec",
        "cursor": {
          "ref": "4b96d823-a884-4f71-87d1-d2ffbebdcc66",
          "length": 253,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "a4d4e2f0-d59e-48d2-9f3f-83dd7d91cf3e"
        },
        "item": {
          "id": "46d1975f-9d22-4aab-83db-71fc20239aec",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "67e43507-2bbc-4228-9f62-b12e62a519bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 341,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86b26947-6322-46f5-891b-2754dfc03a19",
        "cursor": {
          "ref": "adc17027-bb16-4a15-981e-6a41034f4526",
          "length": 253,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "d12d9229-80c8-49fb-b73d-6e35d3c197c9"
        },
        "item": {
          "id": "86b26947-6322-46f5-891b-2754dfc03a19",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5899b2e7-5e00-49a2-a3ab-6475f6d2ed0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 358,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "729c2da7-02f4-4496-a1ab-e2318041de41",
        "cursor": {
          "ref": "979aa318-3b32-4898-9fb4-6072e18eeb0d",
          "length": 253,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "7440ef74-23f7-42e8-932d-ac98dcc14f6f"
        },
        "item": {
          "id": "729c2da7-02f4-4496-a1ab-e2318041de41",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "8b180a3f-8a6f-4737-9717-a3ef6e0c24e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 323,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d3a1f97-2abe-40c8-bc66-4be7db75a483",
        "cursor": {
          "ref": "ae8a9bea-9d62-4662-ad50-c039b09fe4fc",
          "length": 253,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "777c3c9e-a085-4b7d-96e6-342dda49fd8e"
        },
        "item": {
          "id": "4d3a1f97-2abe-40c8-bc66-4be7db75a483",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "d9d5eba9-efe3-403e-9613-398ed7786cfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 399,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "623b2761-0ab7-4c13-8d8c-266808e3e800",
        "cursor": {
          "ref": "c21348eb-c133-46c1-aa13-ae18c68a6087",
          "length": 253,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "4d584139-9354-45e3-98e6-ccc2dceb98b2"
        },
        "item": {
          "id": "623b2761-0ab7-4c13-8d8c-266808e3e800",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "c72cc378-5a9f-4245-b236-665b6f9f1f12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01e82551-ebc8-4d91-a886-dfcea14b3cc7",
        "cursor": {
          "ref": "f49efc88-5d46-4010-b7b6-9d73f0c0e7e7",
          "length": 253,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "939d9e31-27a1-430a-911a-af9c3578fda1"
        },
        "item": {
          "id": "01e82551-ebc8-4d91-a886-dfcea14b3cc7",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e01d7460-4c7d-4578-8f10-3fab5e28528e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 337,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e02f724-7700-41fe-8c3b-ef4abf2b663d",
        "cursor": {
          "ref": "8c4a421a-c8f7-4baf-89bf-11796deadafe",
          "length": 253,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "8fefc00a-e50e-471a-9ad7-dc7129135cb3"
        },
        "item": {
          "id": "8e02f724-7700-41fe-8c3b-ef4abf2b663d",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "483acab8-2bd1-4fed-96c9-43299f00f81f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 364,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb6453bd-b937-4d42-b8dc-ec5be6d145bf",
        "cursor": {
          "ref": "6dacdd48-4960-4491-8bc1-0c4d4737c41a",
          "length": 253,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9d225906-3c2a-4463-850d-f8aedf89c24e"
        },
        "item": {
          "id": "fb6453bd-b937-4d42-b8dc-ec5be6d145bf",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "9c76e648-ac38-40fb-8487-c60edcaadba0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 345,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8b6fa32-7a15-434c-9285-c3ca5fb37d11",
        "cursor": {
          "ref": "74fc1cc7-1b0f-4cd4-831b-79b3ca89e389",
          "length": 253,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3871d334-1684-4ac1-8fcc-9b10b016f781"
        },
        "item": {
          "id": "b8b6fa32-7a15-434c-9285-c3ca5fb37d11",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "c65f9795-1ff2-4909-9ac5-6e66945ae4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 331,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b2fdd9d-454b-4926-ae26-d0e06b8ce482",
        "cursor": {
          "ref": "eb14ff97-2765-426d-aa3b-81aa082ff01a",
          "length": 253,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "ab29ea62-5f50-4941-b009-eece86453882"
        },
        "item": {
          "id": "5b2fdd9d-454b-4926-ae26-d0e06b8ce482",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "fb583154-fb4e-45be-af96-1b9428edaa76",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03867d60-143e-4a1b-9667-df97151cbbad",
        "cursor": {
          "ref": "bd113226-0ecd-4237-bdba-6f443b4abd44",
          "length": 253,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "12a62d3c-1482-47d5-9503-e43b067c64de"
        },
        "item": {
          "id": "03867d60-143e-4a1b-9667-df97151cbbad",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "ab4c9d85-4d18-4ce8-ac79-ddbd8c552589",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 330,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81dc6ace-09c7-4cc4-a4f2-50de86ce3ceb",
        "cursor": {
          "ref": "9583d205-6204-45ff-8541-69e0b85897f9",
          "length": 253,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "9c7154e8-8e82-49b7-9157-b609dea7b4d4"
        },
        "item": {
          "id": "81dc6ace-09c7-4cc4-a4f2-50de86ce3ceb",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "582e7b1d-fc69-4c65-b7c4-cda67241d89c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 344,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a377b948-9392-49c0-b4e4-f8c88f8b0595",
        "cursor": {
          "ref": "7b63a2de-6b9e-4188-823d-46389310c5d1",
          "length": 253,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "8cd690be-0339-4ade-949e-6579b5337901"
        },
        "item": {
          "id": "a377b948-9392-49c0-b4e4-f8c88f8b0595",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "86570d80-9e8f-4ef5-87bc-eb195480cc8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 327,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2615a4c-16cf-4f13-8897-0b342d290cfc",
        "cursor": {
          "ref": "62f49c71-1e2b-4bdc-8852-7568318ace4c",
          "length": 253,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "e57bce5b-5f9a-4146-a373-05a8afb922bd"
        },
        "item": {
          "id": "a2615a4c-16cf-4f13-8897-0b342d290cfc",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "bd96f543-853c-4805-9cbe-3c2d6bb2b410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36ed715c-34b2-48b4-9240-b36f5e101d49",
        "cursor": {
          "ref": "34dc695a-6843-4c4a-a0e4-0f6a057fbd58",
          "length": 253,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "1d053692-57e1-4b7c-a810-e6e75498ce1b"
        },
        "item": {
          "id": "36ed715c-34b2-48b4-9240-b36f5e101d49",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "b48a5a4b-9338-40f5-b230-91644b828b05",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 332,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273b57ac-4267-4460-9882-586a35181771",
        "cursor": {
          "ref": "494073a5-848c-4664-aae4-446210228bea",
          "length": 253,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "b293b268-9741-4bd5-b7e5-6d78cfcc7a2c"
        },
        "item": {
          "id": "273b57ac-4267-4460-9882-586a35181771",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "1092cb27-c7b8-4550-bb90-a4232db1a9a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 348,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "72301c21-c7ee-419e-b85d-bdb6a9c847f1",
        "cursor": {
          "ref": "2f804e0a-3a2e-48d1-9728-04a4706b4c8e",
          "length": 253,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "8a6b13f5-b2f3-4e6e-930d-bbaa042a866b"
        },
        "item": {
          "id": "72301c21-c7ee-419e-b85d-bdb6a9c847f1",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "9944fae6-2b3a-4259-ac98-81bc1c462391",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df20b1db-a1d5-4058-8c67-e6fb761b3540",
        "cursor": {
          "ref": "f6b6e593-b4d4-4f3d-a7f2-a802bc9ce8bb",
          "length": 253,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "00561f4d-089e-45ce-b8c2-e0aa98210b55"
        },
        "item": {
          "id": "df20b1db-a1d5-4058-8c67-e6fb761b3540",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "170cf6d9-6f9e-4306-94ac-547fe0490017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 292,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c94b11-01da-4aae-81ee-ee220e467dfb",
        "cursor": {
          "ref": "2452dc39-2bec-4deb-80d0-47d634a2e32b",
          "length": 253,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "c1a1cfce-05d9-47be-a8c9-579918be7250"
        },
        "item": {
          "id": "69c94b11-01da-4aae-81ee-ee220e467dfb",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "f668ae5f-622d-4a6d-a468-db7195eb09ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 329,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebb29009-5f70-44c0-83b3-dd8754d10d40",
        "cursor": {
          "ref": "f4e76e09-2af3-4875-b76b-305a1adec414",
          "length": 253,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "0a8973a8-76ff-499d-94ea-a5d775e2d675"
        },
        "item": {
          "id": "ebb29009-5f70-44c0-83b3-dd8754d10d40",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "fc2406b0-dbf6-489e-b7c7-1ba89f899e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 328,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9156fce-a01d-4110-a41c-1db1d95f6397",
        "cursor": {
          "ref": "aaa0811d-63b6-4351-ba9c-f05be8d38329",
          "length": 253,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "638f1317-3028-46b8-8a73-ebefc7cc8121"
        },
        "item": {
          "id": "d9156fce-a01d-4110-a41c-1db1d95f6397",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "fa384eda-d88f-4e00-ac11-0c6a39adc1cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 334,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceaa4336-00be-44e7-bc9a-3d02023cabd8",
        "cursor": {
          "ref": "649363d4-df48-4adc-84a8-ec3627da633e",
          "length": 253,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "ed22a438-d958-4b65-8498-65e993a492cd"
        },
        "item": {
          "id": "ceaa4336-00be-44e7-bc9a-3d02023cabd8",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "ca3e7978-51bb-4053-9201-43a2d1ca31a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c93802df-8c3e-4b94-9148-bacbed75c07f",
        "cursor": {
          "ref": "d2a7766e-eba5-45e5-af32-06b0c1d21e12",
          "length": 253,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "9db87e18-9b07-4f44-9621-a2869562a77a"
        },
        "item": {
          "id": "c93802df-8c3e-4b94-9148-bacbed75c07f",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a16613ad-2be4-4bb3-8e02-187ee489ebed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 291,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "619ed94b-35ea-4aa5-8fbc-6f84850be7dc",
        "cursor": {
          "ref": "c5c35366-100d-4363-af1e-135eafff5bfb",
          "length": 253,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ad80ad4e-734f-4d43-a91f-dab505f7624e"
        },
        "item": {
          "id": "619ed94b-35ea-4aa5-8fbc-6f84850be7dc",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "c1b819cf-798f-4195-a9a3-7bfd9a77472b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22d5375a-8759-4c05-80da-8ae914eef1bb",
        "cursor": {
          "ref": "ba49fd59-1887-412e-be30-fbe0921b7b5e",
          "length": 253,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "cd212090-2127-48e8-adb8-1b452cefa28b"
        },
        "item": {
          "id": "22d5375a-8759-4c05-80da-8ae914eef1bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "e5472c8c-989c-488a-89cd-af1725f253d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 304,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76b18193-f02a-4627-8dd9-725618e7ff69",
        "cursor": {
          "ref": "058f0684-46fe-4f63-af56-eb43abf92ae9",
          "length": 253,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "071f407b-e447-4ac3-9efd-5facccc97780"
        },
        "item": {
          "id": "76b18193-f02a-4627-8dd9-725618e7ff69",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "65febc36-1b7b-4fc6-b108-525d318d3aec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 306,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40a2eb0-316b-4700-9f4f-0226cc8738ba",
        "cursor": {
          "ref": "c8f03094-cf61-472b-aa62-9d738a6008f5",
          "length": 253,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "68e7fe11-a248-46fa-ab00-fdb2e64cae3b"
        },
        "item": {
          "id": "b40a2eb0-316b-4700-9f4f-0226cc8738ba",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "ff1f4b8e-46b0-4331-97fe-8a5e3ba439ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 360,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a51a786e-0f84-4cc7-b06c-73c12c7bb736",
        "cursor": {
          "ref": "f28a80e6-ab3d-43cf-96f7-323e00d0f212",
          "length": 253,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "9a98bc26-cd37-45c5-b93e-08e9400fdee7"
        },
        "item": {
          "id": "a51a786e-0f84-4cc7-b06c-73c12c7bb736",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ff67fb61-96b7-46d3-8ee0-bf3e18bbf4a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 359,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bb477cf-aed7-4f18-912e-fc6a1d7673df",
        "cursor": {
          "ref": "74c5dbce-bbf7-4efe-97b4-8e240fd53429",
          "length": 253,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "5dbeb3bf-1dd2-4c9e-bd39-3d387140a3c3"
        },
        "item": {
          "id": "2bb477cf-aed7-4f18-912e-fc6a1d7673df",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "be9d7d8d-890f-4162-8abc-92ab23eaaa77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be244738-7b6a-4f2f-8ece-e1e5669aec43",
        "cursor": {
          "ref": "315e49a6-66ee-4fd0-8d06-767a288abc03",
          "length": 253,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "e4be1f46-2548-462c-9ee5-f107272f1a9b"
        },
        "item": {
          "id": "be244738-7b6a-4f2f-8ece-e1e5669aec43",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "eb943117-4cfc-4b8f-8f51-5922f11b6a4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 285,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74034538-cc03-4264-9c15-4e4c6ae61a5a",
        "cursor": {
          "ref": "69e44f79-f54d-406a-95d2-6e8f3b4b7aa9",
          "length": 253,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "385db90a-798b-4618-a6c2-f816893726d2"
        },
        "item": {
          "id": "74034538-cc03-4264-9c15-4e4c6ae61a5a",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "a10efb68-8435-4bcb-b123-7f391446901e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 308,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617bf8e2-92b2-4424-953f-f5fe491271f6",
        "cursor": {
          "ref": "f3cb1965-7ccc-4b1c-836b-cc0793240cbc",
          "length": 253,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "bf1829a5-65bc-4211-99d3-afc6a34b3b09"
        },
        "item": {
          "id": "617bf8e2-92b2-4424-953f-f5fe491271f6",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "4b9a09e4-83b0-4d21-bdd4-747fd4548931",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 280,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26d3c782-3b20-41df-b7ed-d2556a32b022",
        "cursor": {
          "ref": "1e1c9530-4a57-48d5-85f1-af1cdd479ce9",
          "length": 253,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "062d4313-a4b6-496b-bfc3-6e742164d93a"
        },
        "item": {
          "id": "26d3c782-3b20-41df-b7ed-d2556a32b022",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "f3358981-31b6-4e51-a34f-4147107ea07f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 50,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26e5babc-45e4-4647-a32e-9d564f3b7af3",
        "cursor": {
          "ref": "7f9befe9-8f84-4cff-8cb1-fadf55266f04",
          "length": 253,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "e2471176-234e-4be7-90aa-af0c8d322b93"
        },
        "item": {
          "id": "26e5babc-45e4-4647-a32e-9d564f3b7af3",
          "name": "credentials_verify:missing_scope:verify_credentials"
        },
        "response": {
          "id": "b9734df1-325a-44ec-8ca0-50f6d0dfd21d",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 285,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12a4348d-df3f-45d1-b433-6b266b3b6384",
        "cursor": {
          "ref": "d93792be-7c8e-45e6-b41f-2964e547134b",
          "length": 253,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "a63050d7-cacf-4fb9-a56e-467b81cc9154"
        },
        "item": {
          "id": "12a4348d-df3f-45d1-b433-6b266b3b6384",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "e308a1e3-309b-4dc8-b986-a65e6b5c733e",
          "status": "OK",
          "code": 200,
          "responseTime": 326,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "12dd9012-870a-4f75-af65-ee7ff9621559",
        "cursor": {
          "ref": "c90afe0d-9076-47fd-8e7b-669b92003514",
          "length": 253,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "37ee5fe7-1493-4371-8d14-0097a2a8e090"
        },
        "item": {
          "id": "12dd9012-870a-4f75-af65-ee7ff9621559",
          "name": "credentials_verify"
        },
        "response": {
          "id": "107b146f-632e-4943-b2bf-36642db3d5d0",
          "status": "OK",
          "code": 200,
          "responseTime": 1890,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4dc7777-8e7e-4f1d-bfc2-11ee8ea443ec",
        "cursor": {
          "ref": "74adf512-bce0-46dc-bf31-d07d2f501a09",
          "length": 253,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "74af8c49-8399-4192-8f27-d58284884a58"
        },
        "item": {
          "id": "a4dc7777-8e7e-4f1d-bfc2-11ee8ea443ec",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "c7d3856e-d298-4589-8dc8-42335e822555",
          "status": "OK",
          "code": 200,
          "responseTime": 1665,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
        "cursor": {
          "ref": "b4ced024-de1d-4478-9ff8-6bbcc35b053e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24d43180-f58b-400d-85e9-22c78d0ca0f7"
        },
        "item": {
          "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de30993c-0758-47a9-9312-331cd0a28f98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
        "cursor": {
          "ref": "b4ced024-de1d-4478-9ff8-6bbcc35b053e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24d43180-f58b-400d-85e9-22c78d0ca0f7"
        },
        "item": {
          "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de30993c-0758-47a9-9312-331cd0a28f98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
        "cursor": {
          "ref": "b4ced024-de1d-4478-9ff8-6bbcc35b053e",
          "length": 253,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "24d43180-f58b-400d-85e9-22c78d0ca0f7"
        },
        "item": {
          "id": "dc9a7792-0293-4cd5-8889-8f64e7209c42",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "de30993c-0758-47a9-9312-331cd0a28f98",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c720749-cd68-41eb-9167-00b739e656f2",
        "cursor": {
          "ref": "5d5ad6a1-4c09-4370-b336-0c5bb6612048",
          "length": 253,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "8113d323-59d2-49e6-8f78-a3aae7ad44f9"
        },
        "item": {
          "id": "8c720749-cd68-41eb-9167-00b739e656f2",
          "name": "presentations:missing_scope:submit_presentations"
        },
        "response": {
          "id": "691e2070-4612-450c-86ab-394487fbfec6",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 289,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599e0fd0-866d-41be-a14b-18b93d45ea30",
        "cursor": {
          "ref": "b2ccd3fa-302a-456e-b87c-cef77bff0046",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9f71e59-0da4-4e77-a100-5559f95a8d36"
        },
        "item": {
          "id": "599e0fd0-866d-41be-a14b-18b93d45ea30",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79bb53fe-e3d6-478e-8bc4-a1528a37c6b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "599e0fd0-866d-41be-a14b-18b93d45ea30",
        "cursor": {
          "ref": "b2ccd3fa-302a-456e-b87c-cef77bff0046",
          "length": 253,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "f9f71e59-0da4-4e77-a100-5559f95a8d36"
        },
        "item": {
          "id": "599e0fd0-866d-41be-a14b-18b93d45ea30",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "79bb53fe-e3d6-478e-8bc4-a1528a37c6b5",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 48,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dad2502-1aab-45cd-82e0-bd12fa51d3b9",
        "cursor": {
          "ref": "c52b00e3-5824-4e45-a09a-b64146423c5f",
          "length": 253,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "d94d3027-108d-45e6-b7df-546323ae3a65"
        },
        "item": {
          "id": "7dad2502-1aab-45cd-82e0-bd12fa51d3b9",
          "name": "presentations_prove:missing_scope:prove_presentations"
        },
        "response": {
          "id": "ab0f9263-610e-4167-97c2-c49060a8ea55",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 521,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f40a69-a7c9-42fc-b522-efdbec04f727",
        "cursor": {
          "ref": "983b678f-44c4-4605-a74e-fbf82bd951fb",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e975161-eaf1-4c06-a962-d878da59ae17"
        },
        "item": {
          "id": "c0f40a69-a7c9-42fc-b522-efdbec04f727",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2a37c86d-33b8-4bf3-8612-a052d8530831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0f40a69-a7c9-42fc-b522-efdbec04f727",
        "cursor": {
          "ref": "983b678f-44c4-4605-a74e-fbf82bd951fb",
          "length": 253,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "4e975161-eaf1-4c06-a962-d878da59ae17"
        },
        "item": {
          "id": "c0f40a69-a7c9-42fc-b522-efdbec04f727",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "2a37c86d-33b8-4bf3-8612-a052d8530831",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 49,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d778027b-8336-44c5-aa94-1d149f8ca3e6",
        "cursor": {
          "ref": "67976fbd-9c11-4d56-aed8-a3d286d5ad9a",
          "length": 253,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "73035a4e-997f-47e5-897d-62eef0c11762"
        },
        "item": {
          "id": "d778027b-8336-44c5-aa94-1d149f8ca3e6",
          "name": "presentations_verify:missing_scope:verify_presentations"
        },
        "response": {
          "id": "9cc04d62-54b5-465a-b490-11077ea2a227",
          "status": "Forbidden",
          "code": 403,
          "responseTime": 545,
          "responseSize": 77
        },
        "assertions": [
          {
            "assertion": "status code is 403",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}