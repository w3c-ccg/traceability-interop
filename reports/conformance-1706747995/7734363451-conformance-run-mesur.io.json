{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "25a295ba-5b50-44ea-ad5e-1576c6d7b9b1",
        "name": "Clear Cache",
        "item": [
          {
            "id": "2d0a19d9-9212-4d86-984b-fb7732b719d7",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ca08c832-50b9-4391-9e28-afc25badd75b",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "cb4576ae-c30b-4dfc-b1d2-8270a5754634"
                }
              }
            ]
          },
          {
            "id": "0f43fd60-5a80-4bca-8c18-491242474a03",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8641051f-d36c-44e2-af57-d58b16200cd6",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "be4b0b49-88c9-48e5-baba-67eb31ecb029"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "ec66edfe-0caa-4b2b-83fc-c7cc30b3e44f",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "c838c433-b025-4c96-a0a8-c48863eb7ccc",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f7d5151e-3826-4364-8e93-a07fd2db37e7",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "946b6c13-5f43-4500-bfb5-7976cd7b05c3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "f8f49fbe-f651-44bd-b812-30deb80af1b7"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "6527c42e-2840-44ae-a594-7b498eb7ea3a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "7b14c87b-d06b-4215-8675-69612fca4f4c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "753a3168-3d96-473d-9df3-3e477b2da26f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0b400a20-83ec-4933-a910-d0d394aa63b8"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "15cc46a2-8d37-4ebd-b0e1-3cf7df81cfd7",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "6cfb2708-e5f0-46a8-bdfb-6eb658a87d93"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "09b372a1-666a-483d-9bae-28ff62146fed",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "045f9176-4593-460c-8663-2efde5fda8b0"
            }
          }
        ]
      },
      {
        "id": "20fcabaf-dbca-4817-9206-dc3f695fe4bd",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b27c483e-7dfd-4959-99fb-25da269eff2a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7b19ce94-f35a-40f2-bef2-8bf8537d4757",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "38e87723-c78b-44b5-b7ac-5cf6d5df4aca",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c5d1a26f-105f-49b8-996a-a6cec12a8581",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "015d6ebd-6c0a-4199-8057-c93ba7cfbea7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "368ac862-e552-42b8-b141-1367337a9bd2",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9fee12c7-6987-4ff1-b334-aabc010069ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "078f0669-6dd3-4f13-919c-7e68a12d55f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a143ae80-6fc6-4dc2-8b3a-0ede60d8644d",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9e5c423-0f1d-4979-8e45-af4b9d8d8756",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "47c8df95-cdc4-4b8e-8095-165b38a20c48"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "e76f6e6e-f4ab-4039-aee3-01ffad4ee308",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "16abf8be-f996-4c87-b8e9-033c2adde7b8",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bd957d6-4ff4-4a4a-aa8f-a26b7c624914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "cc14057c-3767-4e40-9ed0-6007a0207ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "310405a6-3eca-44cb-bbb9-9845430692bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091b1193-0861-4cdc-8085-8996ac99bfed"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6d8bea53-6f2d-491e-b6bc-f9cd72812dfa",
            "name": "Positive Testing",
            "item": [
              {
                "id": "f9fe70cf-6c63-41bc-b5bd-a7448a39294d",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d77d8ef4-f9ea-4618-a307-33d08599efa1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "fefaed94-3879-4d41-aff3-b10088fc8a77"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8062a5a7-7116-4403-b7f1-0e660a7d373e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e01cb62f-9337-4f90-8a29-ceb743fa659a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "3ef4f7be-6101-4a04-893a-ecb5709be8bb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a256fb6b-160a-4384-8265-4d8e86fe8973"
            }
          }
        ]
      },
      {
        "id": "fb8f4831-80ee-407c-ab04-176c907a0e03",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "7fee8fcc-bdac-4119-bccd-f99ce44b4071",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c7a071e3-562a-4dee-bd3c-b799b2362e57",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "7a44cf68-c3e4-4046-9fdc-ee6b293379e7",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36d61377-e936-46d5-8ce4-856a67a24821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4acc2ce3-393c-40d0-9e17-eff69b5be1fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3b06477-35d2-443b-9157-bc7e321df4f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9771a4f9-a7c8-4483-a05d-f44b10c27f86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38f5b360-fd75-40c3-864c-a390fb95af0d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b45f811d-0921-467f-8dad-ce6618e353c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f66ff649-4167-4b97-ab9d-5633e76e8e1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "421d835e-7ed4-4250-bb2d-bda8bd2e3a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f1523ee2-bf05-4eba-9d39-17d313051193"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159894e4-accb-4f29-8587-083c11dc53bf",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f7050c5-2bc9-4122-aa04-8243fe2f976a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c9be5b0-5749-4d35-87f1-299e473d1425"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ab7308f-91c4-48da-98a9-b388f7370b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "80d6b6db-1054-406e-b8df-2be8e224e4e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba80df69-b406-4429-adc5-c214a738a988",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ce95081-97ba-461c-9740-ee60fc7136d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db59a377-f75d-4569-a927-fc0db7c810ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6225d125-7f5f-4230-a4b0-4eabe8500761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d2b75ea7-cf15-4fe8-b09c-581d2449320a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "359b740c-b25b-4957-9eeb-dd50aaf7f3d0",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "968ed84f-1f8e-4e4a-bc91-f5cede2f048f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "520fa944-4a08-492a-83be-3ef8d419ae4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47a21750-f4f6-45eb-a175-7805b7207b69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "73529e4e-22a5-4610-8952-f12c4bd2ec4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3e16324-8664-4006-be9f-4f0e679f60e8",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02847d1d-6ec3-4faa-ab7c-5b36132f2d67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ccb51a1c-4e02-44ff-b91c-9954dcd198da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a1bdee4-9d3c-4556-84f5-b93e401c6b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0c46be4-5d07-44c2-8a56-8b381f07661f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2516bdbb-8c6a-4be7-9ae1-490500dcb386",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "022e8cb8-8fbb-4058-8549-c73dca8c32ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf76b4f9-d628-4436-9413-46663bfc02b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0fcaff03-5782-4c00-882e-fc8e7ca1b4de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "61faedd6-b2c3-460a-8f51-51876d863524"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e54fbaa5-446a-4682-9dc0-74cbe00bb65e",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "874d8577-6995-4faa-9081-50070c20423c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc16968-6532-4f25-92ff-63264ba5fd63"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc1ffb8-5454-4399-aab3-589beb5b02f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "502810ad-fc82-4484-9610-fe1b458f6445"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b66305e-a03d-445a-bf50-d763893f2239",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df571507-9369-405e-a9e1-9f37e54a6426",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b5e2547-09e0-465e-b708-ae3d02ab8d5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "311bcd49-203d-44a5-91a5-bb6c422513ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10b089e0-f2ae-41aa-8fff-4437d5569fd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "396b11be-66aa-44a5-afe9-b54ca34fbaed",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ad5f9f-488b-49f1-a48e-4b1f997377d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5597bd5e-a904-4f54-9108-353fcdf5d0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "45e7b99f-4ebd-463b-80d9-ed1be48026f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b433ef0c-bfab-4506-a622-2bf7d8907335"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a47f655-19df-4e5b-b2f7-5fe2b8be533b",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfbc64a3-46d4-4d39-8489-4605846f4263",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e66c7155-1d65-41b9-b0cc-6ea63bf9088a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7bc2250d-59e2-4bbf-be21-5568a83f0374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8e7687c4-195a-4591-9db2-7942adf4f627"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91264d85-05b6-4d56-ac10-ba763c155088",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5be13c85-4440-4a96-a7b9-d687bdeeb762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c17828c-0a20-4520-a972-7effce9777a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10202d95-79ac-4080-be49-01fce9ad5fd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b237a6ee-e959-48dd-a7fb-0564a6eb7b7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "366cd920-9bbc-4242-b261-164967dcb695",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1807687d-c00d-4939-b5d4-34130d56de0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69c6381c-6bac-4232-8854-75a93c4043da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f359e17e-fbf0-450d-bcf7-70cb07c3ce69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4922bff7-f970-465f-b707-ac70301138f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5e10e14-98d1-4592-b756-9f2179348419",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "140ca7a2-fef0-48a8-88b6-88920d987099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2a3a447-a2fc-4372-8b96-26c7306479d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af62c85c-393f-49e0-872b-95549f7b93a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2523ab0c-f388-46c8-a43f-db0eed18acf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e5836b-dce6-42e6-b15d-263a88500849",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "478545bf-5812-49fa-b0c4-e6a0c88398ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4deab2e-8008-405b-a58d-12bcbd5db8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2882693-f02d-4b06-9fa2-10ed7cdefbc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5ff99f1e-04cd-4363-990c-d215be10b50c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9698882-4e2f-4466-b508-a68c101be568",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3e506e5-4f9d-4a0b-9886-6efeaac9ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a36302a-4baa-49e9-b98d-eba0618a95eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87ff438c-93d2-44f8-83b5-0bd83f97a713",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "199e0285-c413-4901-8b72-d71788ac0fef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091c222d-8c9c-44d1-b1fb-8a21578bdbab",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1ede49d-cc40-474f-9471-34fb05a4e65c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d89e5ca-ab95-411e-9dc3-3273b912b93c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c07c8f26-c8df-4f05-b840-8911cd962362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "58ad3308-c126-4764-b636-e29628df6405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dec22d5-882f-44a0-af9b-65ddda55d072",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5475049-8308-4e17-8dcf-d5939473ad0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c185cd1-c33e-482c-bb5b-49aa599d83da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5eb6ff4-a6e8-41b8-b9be-e3b7162f7dfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "d01763a3-b6cb-435a-8263-8bf66d947d9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0186224b-c463-400b-ac16-ffb8de301156",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76ebe8ea-07dc-4130-91fb-27c1aa877b6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "65c8c382-c9cf-4757-a8f7-1937297462cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41df93e6-d1f3-4331-bde4-7658b9a81323",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "247c538f-6f12-4839-80f1-3323c63218ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6320486f-ac7b-4612-a6f5-a6b078a621a5",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaba92e5-eb3d-4bff-aaef-d2c8ea8dad45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "560b628a-02ce-418b-aba8-83e9c9c43f07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0a07ada-38bb-4b3a-a839-b9f622c73d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8aafe8fa-4d4d-44a3-b4c2-1b3e2c7b5321"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9da626c9-f374-42cc-95cf-0647aa0de732",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e08025f-c0ef-4400-ba52-28d8da488af4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e0039b9-b80a-41e8-8769-2c0867f7519b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32c6f88c-86dc-4303-ba8f-eb9c9dde4707",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "be1f5305-f936-4dbb-ad08-6d0d6fcbde38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6ee4910-9638-4892-adb1-c0546b8895dd",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08929d4f-4847-4686-91da-14fd02195776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d03a9459-cc6b-4ff6-9aeb-b4eded5ac770"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8a263bc-afc5-4756-88f6-657e24911631",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2f03e475-ccbc-46be-bfb0-5ba2f3d33a2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7f79815-d3f6-4250-879d-627f143b60ba",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8774e626-05e4-430c-b4cb-158f3b9d99ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0c1dd9-d12e-4751-b15c-4a4901141719"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76974922-b1a7-4d3b-a371-78dd0a0db282",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "0d7ebedf-7162-42fa-a27b-1f9632086d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c04bbd34-9874-4287-b227-6b778039d065",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1c2659-86ea-43ec-bf9b-83a67d2e2e61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50f4970e-833f-466a-b0be-d0aec5e8ac8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ab336ae-7c07-4a7a-8408-3b063583be01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca6f0d30-3e47-4426-b0a4-6ea1477f99bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a1735a1-0356-4fb7-98d7-af02b2cb34aa",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b102ad54-f3f0-4818-8a52-7e99f684b0b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbb44857-0a55-482f-876a-5ba4097dc8a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eac498b9-3ac8-4dae-a0da-f51552597969",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bfdf6d0-7386-436b-9a3d-e9b18dcb0de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65afa2ec-6969-4f14-b116-f31ba435915b",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69611982-6453-47db-a69d-d3010000794e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bac504d7-9738-48a7-bec9-bea1790dd7bc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9b99635-7238-44fa-9132-36d868f406d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c4fbd457-6f36-43a1-8bee-238829e9ce2a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4765ff02-7286-4fec-ba57-abe91def0a3b",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4322d448-a3d3-4b11-97ec-301a0030c066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3420ab3-bb32-4d17-aba6-fc67d0fe6528"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfa195cb-768c-4440-b7b5-5f0a74a9a2d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4835d403-2c75-4c44-b97d-29aa37678bba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26b8c2ba-4539-4967-bbba-9d9850509c9f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85db4b0f-0783-478d-ba59-117604bee3f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "562dc54d-825d-4f79-908f-e7cc5bbf542c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac8ca4ed-9d61-4ddf-80f8-0cd126246f47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "59ebc930-4179-4e32-bd73-c7e2856a16a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "234ad7fe-a09f-4528-8606-23be4323d8ea",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "901adb85-3df3-4a55-a781-fe2c691692d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df7a513a-d5ca-425b-86b6-fdac47321ec9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a292bebf-8ef7-45f1-bd6f-bb79a9df5d16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0646d71a-97e8-42a0-bde4-47320b5b13b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a60035a-3bd0-41cf-8fdf-2daf346e9a64",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be48195b-e3d9-465f-9275-518bb282bfaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3e7f5e7-464d-4e90-8829-c84e00d161b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78c5c1d7-f0b9-4f3b-9480-60ce4a6ee3ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "a2cec6dc-d6c9-4195-b756-09d7909a3144"
                        }
                      }
                    ]
                  },
                  {
                    "id": "617661c7-b6d9-4f85-b776-525049e5137b",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a97ca0e-d05a-4526-a0a9-150fd19cf0ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79cc7fc2-5f7a-4926-a096-186a75583157"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a764d8d9-51da-4887-81b8-896d266776c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "91c3988e-9424-40f8-8734-60d132de4dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d41a31df-7378-4606-8a00-bf44fe86d2a9",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12a6a282-8421-4f20-829c-6c26fbb05cd8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce7704f8-8acd-486a-8aa1-d64abd33a8b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35f71005-f96e-47d4-b679-0d5707771039",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3284eaac-060e-445b-87c7-3214f31b2042"
                        }
                      }
                    ]
                  },
                  {
                    "id": "899992ef-fb44-49b4-a012-d959a9236323",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "467059a9-1dac-4c8b-a850-9f1c39aa9fc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b341f1bc-0f08-4620-9146-8b58fed18296"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "530ce376-592b-4ba6-a8a2-8ba8a83454ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb6e0dc4-c828-43df-96a9-621d45c9cc3c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0144cf7e-1bbf-421a-a05e-f1c35984b2e8",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b20e1b0c-de7d-45ba-9c93-eec65077ebec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7789388c-cef3-4d20-8b13-5cccaa96589c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba13f527-c5fe-4345-841c-6894e8756787",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "add736e5-ff23-4089-85be-ff4582935c55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f595eeff-7e5e-455f-8e7a-7209bb45c0c1",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68fdeb08-2c97-45f1-877c-4b98c084e442",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ff021b29-f2c1-49fb-918e-4021f9e7af4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35303c9e-63b1-4fcc-8923-e67fd018d319",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "8fbdf19d-08af-475b-96d3-5a5d371c7708"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f94549c-7f7f-4d50-b6f9-827103b26d25",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5a07fb4-6f70-473e-9365-e2128327d81e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "603fd600-e73c-42a5-a2ed-3ca5093d06a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4032a64-2305-47c2-a6aa-246c447b4665",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53e164a4-670c-4606-bf6b-40ffce1da077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9551a129-c446-491b-a350-5cbd81b52968",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bfc670f-f3d9-4d93-ab1c-88d1d6c2d6cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4d08705-12ff-4898-8317-eb0a3de5c020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8715822e-bda4-44bb-9e34-bba25c14307b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6b3aefa3-13b6-44f4-889c-04223feefaee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94e6f96c-16c1-4978-87ac-725ef3fbdd07",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d90739b-7253-48c7-83c7-c0d7dfd4428c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd50b1d9-ad7f-4f71-9918-5f840c8d58ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48ded4de-a201-4299-b4b0-f283dc88ceca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "2dc35775-947e-4622-8eb6-e2831ab90a9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3be27434-1ed4-4079-97db-474999e500c3",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4caeb618-563e-4567-871b-b53116f1e016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4120c3f1-fc1d-411c-b0bb-462564870058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a208dcae-1a5e-4617-9944-a34a7b38aa45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "a3b557ab-cb77-46d4-9003-8f1f27bcd92f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7bef1aa-c5dd-465f-8d51-59097a27aaaf",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "577704e0-a52e-4ae4-adc4-faffdeec13dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c7935f61-fa88-440d-aba8-682ed00a4424"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03552d29-5f89-4bda-b45e-501449daba42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a932755b-125f-4190-9d13-6b718b64081c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b5d646f-3111-47b9-aff0-8141e6079a84",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "68bc5777-77ef-417e-b623-e603ccb04bcd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c64405c4-4a3c-4363-86d4-30f7a56f3ecb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ad0ea3-b534-4782-a196-bdabde08369e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "24f2b1c5-d493-491a-a2b8-c6235a85f68d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24ea06ff-4722-4f69-947f-494471543224",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6506513a-6ff1-4283-9b18-6662249d2a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6351f4fb-6a90-453e-b762-a158b341f802"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d06e650-d6e8-4d42-ae70-5567ec31c914",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "68411591-5be6-45bb-b067-9958c3376db8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa036e7-7484-466a-90d4-e7dc18702f7b",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8474c12-5201-4971-a00c-e5e6b3d4e391",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faa8ba8a-383a-4d82-9db5-69e421ca5d57"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cb23b33-48ed-4f12-b181-8ac16a229bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e9da2d-0dd0-451f-bce0-2259b6d347bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536a8438-c515-4b96-847e-ff44c5f91254",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f1ac78e-b041-4210-926f-59b67b0963bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2767bd5e-65b4-4f19-9d74-c01766cdd330"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de703b0c-d834-4afc-9a0a-ae0d56f80a32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7da45b0f-6d56-4094-be7f-fd1139645e64"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d116464-a012-4093-99c4-16288b97c8b7",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "904870e8-61d9-4ffe-b8d5-6a60150df88f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bfaab68b-4e85-48b4-8437-7dee60cec24d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2dd8f692-2eea-4f4d-93f9-d8a531a50a65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cbe0f42-4608-4151-b370-e59a77095764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ad97cb-3941-4984-8121-12ef38a7b724",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "41c50194-c19b-4f7f-b4bd-2fc0757ff0e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24bd70ff-6957-44b7-934e-282b975e47eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb640d16-ab4b-419a-a620-1bd8d41f8e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0e663f9c-d8e5-4d4b-ad43-ad8d8235510d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5dbf7a28-9776-4129-90e8-6c0694cfa477",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "422d62f8-a197-465d-a4c8-b820c316e13a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a125bb50-d356-4816-8e11-9e3df5bbe6e7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1be98192-ab4b-4e05-8fc8-1181ef73c9ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "13f9bfdb-7475-46a8-a5cd-5f9b4d2ecbbf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c88c79b-b7c5-405d-9238-58295c68f9a8",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4b7b2b2-35c2-41e7-b379-78cbce6cc7b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1aa8f0c0-f09f-42fd-bde8-f82541503a2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa1e9edd-affa-4ce8-bd75-ed33b041f8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cf3300af-1f5a-46a9-85c7-4cb35da155b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dee9870-3cea-4ed9-9576-839e92bfffe3",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccdae89c-6848-4a75-8d05-c18cb27b86c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c150204-85e1-4200-b9bd-a91b5c0ded11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83264e03-d02d-44fa-a64d-c0d954899355",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40fc5757-db1d-42c4-8b31-783201261b97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db14fd75-d6a9-4368-a480-a42b9d6a658e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ed1ab7d-1206-49a4-96a8-4846d288523f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4897a742-e288-4dd0-9f9d-a7b37cb7d8ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fcf4052-80ba-42ba-82da-8868429c04ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4119c570-f796-4fb4-b9d8-f6791ceedf17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4340e13-2a0b-496a-9956-af19c385c28d",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2d35769-de82-4fac-9ce6-b0f82470d827",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3deba937-f862-4d1f-8e69-f31ef27feda6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91bec57b-cd1d-49f5-a197-bc5d0786cc71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "11de9b68-b981-4714-9d2f-ef84e1cbdd14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dc0c69c-9acf-4259-a7a5-31add3460f00",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5f47a7-4557-4b40-831e-4d0fe6298ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d9eed107-fac2-434c-b5f8-cc10e3b4d6d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfff204-f54d-460c-9dd0-9fe1514ff44b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "db160279-d108-4fce-b9f1-e2683320a29b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c542b88-baeb-4a2c-8b64-8ea323338f4e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c39d19d1-2ebd-4a7b-addb-0ee50c610e52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b053de26-1b15-4d32-8c41-dbdaa6f376c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b778e27-d010-4044-9da8-f9cb281a23be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a26c26e4-e0d6-4e2d-a1f7-9d77936f7c87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74a9afdb-f2e7-41dd-b008-35a3bbaf7f16",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "738b5fff-072a-4962-a1e0-cb6c9897d639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dac164e6-c258-4b30-b416-872b2714ac4d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e9416ba1-6382-4558-82d9-e51d80aa8ad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5b4274-c0cb-4087-becc-79a34b6c767d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0016cd-e374-4bd7-ae5b-09b408e65783",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48404a19-bd00-4037-a6bb-1a4b3bd303a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3fbd615a-f8f6-46da-be59-49e54cafbf80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4718fc-eb60-4f34-9899-f920c2c9ae76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "29fae6e9-173b-4e19-94f8-43c663f18a6b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7734b60-8e29-4ad8-bb38-d7ba1fdc4986",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8be7797-e60b-4121-9cda-ee06a2164734",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e911745d-ea33-4ba2-9767-165411665d8f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bebe3ccf-6a47-4b2e-9112-9ca75f99e2de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6e3e31-bb02-45c6-95f4-65cbb0db9c49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69c94cd7-11a6-4e82-908b-a879236221bd",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b35e5504-bdf9-45d5-b50c-8fee6b992793",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1bc07d5e-49bf-4a52-8d0f-df97becce492"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6952e45-5059-4635-8ae2-29be5913157f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "b94e4719-4c2a-40f8-b9b8-3897d8aaa723"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c905bcf9-8542-4007-9cee-88d0801d5702",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4ead6f3-1078-4b77-9812-320f46a0607b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "956b3fec-fdef-4ad0-9b3c-9f1b3f591234"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a30769c8-9f3c-489b-9513-c12c02347795",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "db87516a-189e-4b3c-b261-de002fe19cf0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "150ebdec-a911-4a57-b827-308b8dca06d3",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ba32d65-d068-4f39-8da5-14e0bdd8c25a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "737d3ed8-55ce-49f2-ba65-bbd120215e47"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ce1bb0-2472-4ce2-908f-ac6ac9532343",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a179de5-9799-4306-ba68-a6c8f289f53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6df0679f-895f-43c1-8a86-a4f29be7d5a7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d684f5fc-4695-45f7-9055-fcca5ea11938",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2cfe9380-a5fa-4766-b3fb-64b382b092eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be0ae113-82e2-47ad-a0ce-92f6c829dff0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7b840407-3d84-4ed7-bc3b-c0cca3da6f4e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2c4c94c-5f10-4518-823f-cf0bfdd4f635",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97bfbf84-ab44-471e-af98-0b22dbe80515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b680ada-0d2f-4d6b-9393-44706ffd3aa3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1365c3bf-66a8-4ded-818b-f6ca036d8b78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "3b16577a-5f3e-40f2-b99a-7ed596174316"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe8f4c42-7b4f-4b9a-b53f-04e5af32c82b",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f25f5f9-0bd3-47cf-9f22-29f15f7fe3bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dd6790cf-6eb7-451f-889d-783eaf789613"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79babd42-67a0-4139-aa09-f6584e06376b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "8addc8a6-5595-4591-87a9-6bef49edf7eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ed645cdb-5aec-45da-9dd5-888e061b6879",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "af4bf64c-a5ef-4744-8460-a130f9508b4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ebbcdbb-cb98-4a52-bfed-aee2a013e434"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "767fbb23-1a6c-4348-b7a9-cd7a1daf259d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "aa6f2423-ad97-4b46-8934-ea664121bfcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a976c17-f889-4752-a3cf-a9b869a5b36b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3bb0590-55cd-418c-ba79-c9d1a766f433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "510f4395-7d96-4fe9-b850-e00515130c8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c6a6b0b-c3f5-4ed0-93ee-2a6d7ef3278a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67a3dc47-852f-42be-af32-41ad49e63a39"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f93c4bf8-22ec-4db0-994c-2c50d0081d50",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4468aaeb-8bb0-43b8-a37f-1dc5ee5207fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e86d546-ec3e-49e4-8377-f63c9fa92811"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "828fdab5-d9ab-4970-8401-645dda24407e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5b2c0063-258f-4d7b-acf5-f77f08a2cd12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fb76992-d2bc-4315-9732-6bb2903e875d",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2285461b-a3ee-478f-8baa-3faaea1360a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26c0a021-02e3-42b7-8893-a7a1b74be066"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf5397c-53c8-4b0a-8797-35c9573f6638",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "80ec6698-cb8c-4b51-ad83-2512fab8a58e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1baa8fe7-0d20-4e77-8bc0-464470cfa059",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff23a057-2a82-4574-98e2-54fdd77a28fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a976bc30-fefb-4da1-8182-f5dff1b5efbb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8879757-3b9d-492a-ae28-79d8aeb9ac0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8f37da9c-e9cf-42e2-ac99-6aaa5005e06c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "282ef763-0bff-447a-9ad8-b02934415c8b",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0423a20f-6701-4937-ae90-67d9cf815e82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96ad493a-4f2d-48bd-94ea-eba5993fe3a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "715c69d7-0b0e-448f-81e8-fca603fa0a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "503e14a0-cc45-4b25-8ef6-be242fef0346"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b53b46c0-9186-42cb-a329-33b563a2f070",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ad805e2-2731-4044-8ba1-470fbd1246f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7af074c1-65dd-40e3-b973-48d1f0219a2f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da9d8239-9975-405b-bc3e-a1ff120a786a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "8790c883-974a-4a3f-bda9-fd93977d7585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3420cc58-eb32-4adb-9970-c357f1893709",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75f2576e-bda6-4889-9ded-713ef0a08cb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40c737bc-d142-4304-b012-70249d78f3ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b546a8f-1ade-46ad-8b89-091047248bf0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c19673a9-1130-474f-a9d4-595738d4339f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99722a7c-bbad-43cf-a476-a4df01701634",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b6f7210-503a-4eee-8a8a-a1f106e625e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8fc2c70c-2a64-4acd-9992-706c28b789b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96465d18-8942-477d-8bbe-350cf5a3d740",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "0fa780cb-ece8-4f6c-943c-1c9964dc2dd2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc7ab6ba-a9af-4015-94a5-f0066e360a9d",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb0abbd6-cd57-4540-8434-2aba5f63964b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6e60519-2044-4ff0-8a57-99d5680a99c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e56d03e6-7315-4c5a-afcb-b396cce4cc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "49df638d-8157-41df-b969-eb7f0007172d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b6bd461-6209-4fca-ac85-6bb638ce4c40",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39134c81-2a94-441b-a76c-e0d7f5b5633d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eb94c3df-68fd-462f-83dc-5e4a7a6714bf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28fd475e-35f7-42e5-847d-4c3b839b4220",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a54b22b-5e4d-4eb5-a31e-1a450eac4c75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3c8f13e-5a8f-437f-ae2d-c0f0882a2d30",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08ab7ca2-5128-419f-affc-0cddf6038617",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c6b559a-3517-4c12-97e9-d31e7d4befc7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c85e4244-6d1f-4d45-98fb-edd884bf7433",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "96b4988f-297b-4e8a-8de0-bc014622fc4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05532b85-2101-4ab2-ad44-05e68da40275",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03e00e1e-c7c3-4f62-9387-ca829726f360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4cde5b07-271e-4072-8d4a-c9b2d7181e74"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcf84acb-1a40-4264-9673-f89d8f4660b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "71f2ba2b-c522-4b54-a317-d25ab77afa8f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6491ee06-3322-4f1e-82ef-aabcfb434c08",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8527c95-a603-4a5b-b1bb-e42174b5aad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8dc8850-b3ea-4d77-8b50-f9706240c011"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3aab0d9-afcc-4bfc-8ec5-ece7285a21c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f66eb328-8c53-4398-a14f-7f138bb935d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9280e7b0-d989-400d-87ad-a44ee1ff5350",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cececcfc-78b9-4401-8c15-fcbee736c03e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "637a21af-9bbd-4deb-9067-197eaf0e4619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83d3c7df-8497-45e0-94ee-a26e7cba14e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2c528271-ac1a-4678-ad05-af8828da2330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4982dcaf-a5d1-4b31-8939-ea926d4ec6f6",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317b4392-720b-4a75-8390-57663a803409",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ae0b2ff-d9b7-4bfd-9d14-a601a0571ee2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cf5988e-0446-4fdc-a746-0c2ed339dddf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e3a21139-7ee3-4c0e-953f-a3bb67695753"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc8f19bd-7f1c-421f-9641-6bae8116bb3a",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69f81602-9a11-4e36-b3ab-f0133ebcbcac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ae5c886-1c36-4252-b6c3-3ff9fe94b28a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beec655-1baf-4b47-9e35-2218656eaefb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d95473ce-bbba-449a-8e4f-0634622f15e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "268ca3a8-bb52-4f00-9952-31d05b108b08",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e87d0ff8-26a7-43f1-824f-53a809d78ede",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84d7c045-05f4-4a41-8ca5-cbe4d2a50ba5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ec71c94-e59f-4b86-aaa1-021730332065",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "53ac3f39-19b4-4d9a-94cb-808b7c3d76f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0485a87f-2f06-4013-9195-753ef2283fd5",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26f8a316-21b5-4347-8ffc-21a343bf4a56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55d23b6e-9217-4f8e-a032-ec869319bed7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2dbe0a5-78fd-4056-935d-8728359bdef1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "369797c7-0674-4f81-a9ff-51a882fe7cd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b38d55d-26f0-44ab-bc50-774ac2e147e5",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8a68011-c82d-40dc-be61-9352e1723425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a2157ed-4a34-4da7-8e3e-f6d71fc99c44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb64e5c4-7efc-4d7b-a880-807043e12e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "21054686-e7d9-46cf-8476-18ac6c224e85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecab1dff-77fd-4813-9c08-041373e96403",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30a71c58-8225-49a1-a8f9-8a6df670ad78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e84a941-a377-4798-8e77-7c8beaca15a6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1acef62-5af9-4541-98a6-be7de8461792",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "af909479-395d-4ced-a360-a3e4e7658095"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f2dc072-8f8e-409b-bdc3-b5ddc0b65186",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d60c4ce-d4f9-4963-8fe1-38c063153274",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa957d5e-4db7-4a83-8b8d-2dcc51ad85e5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28358857-d6ad-44af-a004-ffaf6fbd0154",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "94fe6fd7-456e-4e31-856e-07477e5d8980"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25924b41-2af8-4807-bcf2-1af8532072a4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7da6d57e-d8f6-4d8c-936f-9ff62c1410a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41a014c2-28e5-45eb-8c7d-855a2d7e26c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58cbb408-55b5-4a61-8818-6356addbcb14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e18f7a74-6259-4700-afab-7166365e9c04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c79c6da-622f-43ab-8b35-93ef519aee34",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b63e222-56ee-43ed-a1a0-f87aa7eb5d85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a32bbad-3885-4bcb-85b4-09a16692ea4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0def90e0-31cc-42ba-ba7f-760b3c51067b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37f6642a-acec-46b6-a422-6d230abb740e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b19bf3-819c-40e7-9645-0ee966df2bef",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55a13e1b-db9c-4e17-bba3-5c52378b2614",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a3b9149-0e54-4fbb-9426-63cac36dcc49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b1d84a-845c-4484-8acf-a71c5cdca2be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "de0edf01-0b7c-4419-8669-0a9ae5dd075a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e882af-6c63-4cd0-8a0c-d8c5e8bd65e2",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "18d2dd39-21aa-40a9-8280-0fb6c495ebf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2380715-bdcb-4179-8096-911a168a1d45"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae996ab5-ec04-401b-9fb9-7a63b6215a3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e8244a-ae7f-4148-ad85-db167ce39fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5028b72c-352e-4f66-9057-8c3bd8e207a9",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d0f79ff-5511-4c8d-9137-395bc3583f91",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "574b4b09-1ed9-4a9d-af59-b6431b7004ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9375236-3884-4c1b-8423-59155dc4679d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac730e26-1fad-46d1-8258-98804265417a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7295d321-5837-4b06-8904-2752ef73449f",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde60d45-dea3-474c-abd4-5d3b4e035e6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed184e32-562a-4e8f-888d-339ef76dbeaa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95261020-c1df-4fc0-8e50-50c309d2ea51",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "905a6191-b44c-4410-8699-e71ee2c928d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d10ec42-559d-4ba8-a908-9ba5947129ea",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a131a01a-b80e-4453-84c2-9c131b8f3d96",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cb9bdf2f-cd27-4c2f-9d63-5f1ecb7b2ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fecf1831-585a-4966-9836-6bdc53a8dbf1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "bca254fb-e863-4827-b506-20de66f79d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05e06ae0-898d-48b9-a371-fb75d88f26f4",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0b56377-1099-4a87-a4b2-c39aadb78ca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "ad3ad6b3-b7b3-4ac3-9822-b201315da7f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a31be42-8c36-4ddc-b706-b980cb501d94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "689e6562-3b22-4aca-94c3-e443274f48ba"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8e544b9-78e2-4e16-93d6-83f75c2de5ba",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "d1db97fc-6a9e-4dbd-bfe0-3f6a4585e006",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c2b4712-809d-44ee-af86-e783e0fc928c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "aa85f5d4-b3b4-4ea8-b68a-c6ae28299f56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "011dccc9-f593-4398-bc8a-b9d9f081f4b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96a52324-7ca5-47f0-8b80-9b2cf1abd550"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2bd24e9f-8069-4964-a1a8-a18155693173",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "6638cb42-d546-4e1c-8c69-33c2b4137505"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b23b752f-d984-4ad5-9bf2-124064f49288",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5bc0d6de-741a-4923-a57f-4d62cb00c155"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "5b57bf29-738c-462e-9939-4425117ab44b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "1cea8a98-ac7c-45ef-a1ab-05a4a8a05bb0"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "83c3cd0f-0f87-478d-b65a-87db355b1c7a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "63fe6e52-cfe4-4688-882e-526d8627a559"
                }
              }
            ]
          },
          {
            "id": "bdfcb681-8a0f-4e07-9b7f-bd9f69d579af",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6f4af25d-ba88-49a3-8407-f2a7e167d4f1",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "ff0ce6a8-5e82-450c-aa09-451f8dd31b4f",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c08b713-1ac5-4f0f-bc8f-c2584bb7c598",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "5241f987-ed22-4608-95fc-f79e0e7e60dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8cd4161b-d05d-48e8-92e8-a7e091cbe421",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5755afea-9897-47fe-aeee-62867692813a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "def6a5f8-dd23-4b84-bc43-b906a33e01bc",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6cba756e-1275-4919-ac25-a8d920e2413a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "25f2f68f-d349-48e5-966b-9887a475f23d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "800c97c8-c94f-46ae-8663-c05997f6426b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a794cc6a-6269-4a28-8093-8c5ead325bf8"
                    }
                  }
                ]
              },
              {
                "id": "9694f37e-9a0a-428c-a151-c3ec4fa99dda",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "cd529b5b-3f0c-481d-9652-cb5494c78fbb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3ff13c4e-5ba2-4918-8c0e-5ccd37f3c959"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b88371ae-7c90-4996-971d-e8791ce626ca",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7f411159-1115-4005-a7d2-da1f9593b2f6"
                    }
                  }
                ]
              },
              {
                "id": "190d3e7b-f21c-4382-8b91-357a6691a8c1",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "10986af2-532c-4a3a-850e-797f4c8a58ea",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "dc5e1c5d-9b2c-43b5-8279-48d1489b3378"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b7815a28-3d48-4401-b727-abf6b098b05a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ea3d7877-7ad5-4ee1-837b-8f329fc9b798"
                    }
                  }
                ]
              },
              {
                "id": "e517189e-7c06-491b-b182-8dda5b4ba18a",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0973e5e7-2e7a-4592-ac05-8984d175a973",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "998583c5-a590-4a40-86f7-4ba3db0704bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "284ed440-5077-4d47-bf23-9983baf25358",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "4bef67ea-9a84-45b8-82df-2de73e88c604"
                    }
                  }
                ]
              },
              {
                "id": "86389bb1-34ef-4bb2-87fb-5769954fdb96",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "64416d7d-3587-4278-9c11-023a2fdcbee8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c94185ad-b047-4b44-bddc-834f9c6a2de3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7317ed69-61c0-4a96-969c-cdd0fe91a239",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "8662f6ed-911f-42ce-abeb-f3ea83370090"
                    }
                  }
                ]
              },
              {
                "id": "3419e594-75bd-45c9-94a1-a98f7014be8f",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e70b7b32-e5d0-4be8-b1d1-ffbdff8e2900",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "937ae036-9a78-4bf8-a32a-ce6e93b2786f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "8a366c82-3b35-4d5b-9f64-8f8953f00225",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "038896cd-17c6-4f12-9880-68d32aa6b307"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f1a07399-edbf-4516-9419-ec0b5ac3b19a",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dffee8e7-0194-4d0c-93e8-d70a7e89f653"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "680032e4-21d6-48d1-8370-4bf4fce1dc95",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "88cdcc89-7dae-489f-b10f-48029ec80da8"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e7302c69-c4fc-49ac-b323-6d791144b22f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "9af1d7ab-a739-4509-86b7-0a28598bc2d3"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1ff5c041-7a69-475f-b27f-acc2fc72ac1f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "87c3f0a8-1419-46c4-b7bd-b4ef06924e65"
            }
          }
        ]
      },
      {
        "id": "67ce3724-b140-44c6-9da0-b03a33229876",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "84d6ad90-3aa2-4885-b857-50a3483d646e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8784a2e6-a33a-4b32-9a7b-78b5ec69729d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "c5057879-cb1e-4d09-91d5-e58cb6cb96bf",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b03f3fe-edef-478e-bde6-cb1eb5ab00c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "03d5691a-ff2a-4c21-9ff9-b1207b9ca4f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "53a3f740-1d72-4fc4-adb5-80c319070d36",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "59bf269a-9534-4ce6-a9a3-1cba6dd49e75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59d982be-7870-4d38-8a09-c11040e4bfc7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f356c163-be7c-4b46-a72e-ae9add9cde62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "08022964-97bc-4e85-a317-81d1ffaf9e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4ea745a-47bb-416d-af59-42aeec1faebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe2c659c-da1e-4792-abf7-9831592ec640"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c3f977f-c35f-4271-ae95-3781f4f79298",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e4a3c0a-0802-4b61-86ae-f222e04177be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ba2ec38-c153-4cea-940b-171736d785d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb0bb60-0af8-4e35-aa36-acb7efaca929",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c911b30c-c0d1-4b52-8179-2a010a1e305f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca3d8d6-a32f-46f3-95fc-54e67dfa0606",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "51e3cd0f-7722-4f16-bc71-8511c1baee13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb471e6-c5ef-48a6-b5a7-ce458629d259"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcf2d043-89cc-4a14-b700-e13127a5c2aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "8b632759-4431-4ad6-a91e-561e5e7ff655"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49a037e0-a9b1-495d-a336-db86c4518e0e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f38643f7-d83f-48ac-a3e9-5ab620e282d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbdbe5ba-0d76-4e7a-be4a-c107b7acb9e4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a00aeeed-9dc7-4f3c-b376-fba924234dd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab3aa45c-0646-4975-8043-0564b3c75f5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcfa7d30-ec51-4e6e-8008-f83c858ebde1",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8313e411-81c4-4ed5-a85d-16493b370283",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9ebfa0ee-2cc2-4f30-b0d0-600dbffc1f9f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec286ca-d039-4f19-9eee-7a3499c36ee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "6231f559-532f-4d1c-98ef-d73200c5c4ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9baffd7f-e72f-4c72-a7a0-482654317bdb",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3689fa1a-4fda-4574-925c-1af3468bb11b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3d5239c-b6c9-493b-8ae7-8ad888c4f082"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ed72ee6-89ee-4056-8cdb-8257e0edec3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "6fe1c6ea-a7b9-41bd-99db-e39d18e9da85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad7244af-135e-4c46-ae98-0ba93cf86d2b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "03eb5393-ada5-40ec-86bc-0f75e16302b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b75212f1-7306-4a9e-84dc-29393fdb7af0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1fcbcea-7f81-4097-9659-6a9ed474e5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "6e25d59a-7ca6-4f6e-a347-42f2d8341852"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdcf44be-7ca5-4e3e-af65-13557cb73111",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b004824-fbd4-407a-bca5-fc39251cce80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d5fbafb-429a-4170-9281-0e12bd11a1d3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc74dde3-ee25-4cfd-b413-b0e8565b36e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cd0918cc-e19e-4784-9f14-1f785c6882a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c8fa369-0731-471a-83dd-4a7eaa7d5cca",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6058f650-9cc2-4f3f-8344-016f2c6831b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5d50e9d0-1770-4f17-b7d6-32e6f59a5f2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29f9044b-6f4d-4d02-bafa-73539cd3ca3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c674ebe-bc96-48d8-b592-20b2822f46d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c634798-6ca1-4ca4-a901-bb5f01db039b",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "788bcc2b-7670-4938-891d-62c842589e6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b16c4e0-0496-4685-9194-bc9ee04c68a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6d75d29-ad69-4671-a814-b1a5cf6c84c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "4d444266-ce2d-4725-9a33-fafa10318475"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4731ae9-fc03-4ea5-8c56-09257d4339bc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b45c64f-fb12-4813-9b3e-19325cce0238",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f4318f0-c15c-48cd-b6c1-82b052f6ca7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e6f6a0f3-e31f-4488-bd2f-160a6da0484c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c0a9dab8-1ba0-42a8-b647-db8b25930353"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0a5861-8150-46bb-925d-9434bc1e7d22",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c3820ac4-ac70-4dee-a246-8342e258b2ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c49a148-92ce-4461-8390-738f9f512648"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c32cb8-5a41-40cc-8f48-15e4849a81fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "91fb7900-6c1a-478f-8615-46c638b28e46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c532eedf-c5cb-4d73-86e0-4f8a7f79a908",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae46f6ee-f892-41f3-8641-ce33d3967768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e5b4ee9-bfff-4018-9835-f7fe36ebdea1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7b364d5-c3b7-4393-bbb7-28c1e2d082e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "637e8dd6-6e44-4078-8412-be287a75be13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a16d8563-1b2d-45b1-83af-797757fc4cb9",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9102fff7-cf45-419f-b38f-674c21216eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0696483c-a826-4ebb-a58c-e3ad250f160e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a8f6adf-b707-4105-b066-80b05b9df166",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2702302-502a-4fd9-aa25-ecc1dd2f98c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "570ad937-a84c-47be-b79e-7f0df3426dfc",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34e7fc18-5eaf-4b8e-a476-842db988e2f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9226e011-d5af-444f-872f-55fe78c4670f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf902df0-5fac-4c63-b9ae-5d467a1f5b0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "04207968-54e3-46b6-b5b6-a763e32b315b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "056d9fb9-2b88-4886-a126-d367e0234d2c",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14150819-cdfe-4407-9f06-b98e17d7929d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bf691666-c211-44de-9d05-c3cbcf02106b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5962a5c9-0f50-47f2-9d5b-ee48b9e1d4d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b6a9d6e-72d5-4434-8cf6-4f4148b9aa29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b55c54d-e3d5-4e7f-9aee-fb02d5fbd938",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ae63c6c-e22c-4e7b-9e4e-c73a0d17b070",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a523a27-9b4d-4d0b-8504-3b8d1b280b37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc439295-2ed0-44ba-85c9-1ca8bb9d18ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "38fb35ee-9c54-4bed-87c6-9a968c81797b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de4a8192-51e9-47bc-936a-d130f75663ee",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "459e05a6-49af-4978-b7b3-c1949bbdc344",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63b6cb96-7a63-4f0e-8271-db83ab3e9912"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20b7a4f0-400c-4009-969a-77a8359993b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "38ac697f-b275-4fdd-a838-5b6b37c9305f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7585690e-c21b-4b30-b6d8-51638979a7a4",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "537c8d93-2f81-4788-b616-21c061388eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d4a9b7c-97f3-4155-aee6-a8bc0369df06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f50cca7-5e7c-4b87-9723-d2b3f82cf60c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5ca419-611d-422b-8021-18ba7796decd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d3f4b09-a0ac-40f6-8761-a7802551d221",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6582824-e35b-4253-8178-38d59ccc16f7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a155838-fff8-4fce-a75f-47fedb50ba40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc0eda3b-9874-4ac3-973f-454db0c3b049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "93268f1a-f865-4232-8184-dea22c03a9b4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d23b2e54-f6b3-4536-b0d1-11097ed07af3",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2259e9f5-d60b-4651-b457-692d53016d76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3afac1c6-6af8-4017-9d2c-5464ebca48f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d22f8bde-26ef-4ffd-8076-c739a35ba5b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6fcc10d8-e5c5-4337-8ca8-d7ee5483aac6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a33f68f-748a-4563-a024-aa173d11c923",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ff84056-6f41-4eb4-91aa-9db91abbf2e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "84f1480a-6ff9-4b0d-be1a-05a9d55571f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de61856-58f7-4727-bf30-a5cbbf79a57c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d766d9c1-90f3-4849-b717-9347e6bd7a84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dab8322-2cf5-4b69-9628-06058529c3b1",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3446a002-4e92-481d-80fa-095dbe2c3f2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2139eb83-daa1-4709-b94c-b6c0ed80164b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887264b1-792b-47d0-9e12-921da4065b52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17e1df93-eb59-4a3e-86d2-d45c2d0df846"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf05be86-3ec8-4bf0-862b-c38e3fb77da8",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b272dcd-81ab-443b-b76b-346f2ea4d8c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "921e2df6-8463-4342-b1c3-88f9ec07aa44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b8f953f-e0b5-4f45-9c89-3003941d2a19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9eca603d-3b6b-4afc-99ff-7028e0284217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5bb9f93-04fd-49f6-ba94-82bde881ab40",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "583b0d8d-f5eb-4dcd-ae74-ed47c39eae32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "20aa9fb2-9738-4612-bac9-bbed80d7d57d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a09dc19-4181-4375-903e-9b3d01e4fa75",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "250af6c1-0c70-4cc5-9b2e-9a2ab4b3ad2f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e378e21f-8118-43e5-8651-f885d3748dc8",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97e06af6-3e1d-493f-96d1-8eeed392d099",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3cf019dc-99cb-42ea-9ed4-977f1f0bb5f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84df4524-d838-4d62-b501-47d3a79e737a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1e59ffc8-f20e-4ff7-ad2f-6a8078cbb2c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e35c340-8f0d-46fa-98a7-d309929c69b8",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77180880-73bb-4ce3-b8da-60a2d974b160",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38b41d87-f2d6-4e89-8dc3-cbc1b90902dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997a4f52-d5b3-4e66-b0a4-c21d5c8e2e45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "66bee798-dc43-4238-b4f7-8edfc2d96ff6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8abed07-9fd6-47d3-8d7e-85aa458e2118",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33192a16-c1be-4df3-9199-c61a417ac56f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e15bcb67-344b-4c6c-95f6-05caa50aa04e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c663e19c-9612-4c7d-acdd-a423085c257b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f6212a8d-bfaa-451b-908e-2d4771d1825b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5707c346-b358-4060-9f0c-ea79177b6573",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b48b6524-f852-46dd-9c16-4ee661e7e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b46cb675-0c14-4284-899e-4acd6e5368da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09e3d02f-e427-4718-9342-7ba32db01045",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "babd789a-937b-4aeb-bc67-0b14268536be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e92e2eea-4d1f-42b9-b777-1279554df451",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9807bc4-317a-4fec-beb0-8259ded709f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a9f977b6-fd66-4dac-a2d1-50f0d3242201"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d501fa85-1d2d-4502-b7a8-e73eac53df9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4500c4f-ee0c-4445-82ce-64b9a564ecac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f67a6bd1-3577-4b7f-9719-a4ab92e8989a",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "847d2b25-f646-486a-9c79-484d641671db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3348826b-614e-4aa9-8e97-4f425135834b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bfaa5629-557b-4688-937b-8ebf83ea684a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1648638-e2b3-418f-bf54-b3d1fecf186f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d2c59c5d-8b91-48ea-ad21-b979eb4d7d9c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "661869f5-a000-4c2a-9c9d-10ac6ed933c2",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e70bab4d-f8ee-433a-a493-45d529cafded",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "f8c5479a-aca4-4739-a086-c48491dfc1c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbd2ef3b-7280-4eb8-aded-ce041a0c25ae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e1660a49-63b9-4426-8a46-91fd8f379bbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f88935a9-3350-4e86-9039-9e641509c9ec",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a225bb6c-e1d1-497d-bbfc-bfdac0261c27"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cce88376-967e-4dfa-92bf-344d26b319ab",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "31354543-6114-48f7-96a2-2ef593ade76a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "75ae46e6-aeab-4e9a-a6bc-270e73519779",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "0d4f6e20-3797-4392-9e4c-e1f93c05d16b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6c9ced02-9284-41e5-b3d8-d9399d43aa44",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "945af22b-c993-41dd-b7f2-8d07257a188d"
            }
          }
        ]
      },
      {
        "id": "c6fb8b47-f39b-40d2-ae7b-c5888d6407b0",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "5a24f850-1f09-4d1a-ad3c-4d95c2aa079f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0c1993d-58e6-4cbb-ba0a-f0a4c3a8cd01",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "12e1ee92-7389-473b-a2eb-55335a684f9b",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79f919de-2a14-405d-b4ca-a5deabe6b450",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a2a3316-9160-4ccd-9163-fc430ffd2783"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "548f613b-380d-4615-9ca6-ce310bfb21fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1f94c25b-3ae2-4147-b05b-5bf25d9c27c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45523c62-51a2-4569-a490-eae2e9fddc83",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e51536-22cc-4ca9-b6f4-60f0dfa5b905",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52b0b9ba-8090-4051-b598-27072bb12dd8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b7aaab4f-fb2d-48b3-bf98-fc34e33ac8d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "a1412502-eb45-4e93-aa47-3d5b4f82eafd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5169778-6e62-44e9-addf-f7fbb899b071",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed88a186-0ba3-4d62-bca7-6fb2b7e11aee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b45eee8a-f6fa-41cf-8619-6ec9d23840f8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a870d74-4d11-42c5-b7f2-1a9f82bbcfca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c1a6453-188c-4959-a311-bf1641eee374"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a74202-2039-4a19-a200-6b49d4474cab",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc9458e7-3032-4c93-9b01-0e102aab3d08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6a84a35-0a1e-49bf-a728-944be52cd7a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65a4001d-e145-401a-b6b0-5f66ee4cb7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "cda6b480-8043-4fe7-b631-f0e2696a193d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0ee2558-01b8-4431-a664-cd5f1c46722e",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "511c23ff-6762-4ebb-8242-58ebb9211ff2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6eb411a2-dfdf-47b5-8553-cc1174aa2121"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99fea271-0621-4beb-8acd-e9fb2cf919d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "2975258a-ab67-49bd-916d-0852c012a1dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7137ffb2-2ee6-4cc7-89a8-7f46087ff212",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "820e8ec2-0e9f-4614-acd2-4d5a465f4ea1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8ba6597-f725-466a-9c1e-af3bc3b11535"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "684f07c1-7415-448f-8068-96845dc5346b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "0819abf6-6ac4-4974-93a1-7a6c56ff2638"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89801bd9-fb6d-43dd-9283-4e5719d4739a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62997d9a-ec5e-423d-809a-ffac47a34608",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "28e0a80d-11e7-4992-b4b9-a05ea1d5a4c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e344cb7-b34f-4b18-8017-4c6381dd3bc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ba60dc-bdbe-4c62-b89e-1fa5974a86af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3eb51f0b-ad46-4441-b9a8-5fab6abefcc9",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef9be5f0-f6bb-4c50-b716-980f9819638c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25c8adaf-8f23-49e1-8820-566c5e83b680"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e319efb2-73b7-4f80-b5df-4b6b9f4147c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecdf0ff8-6d0b-4275-b499-fc7d0774b792"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb87e343-4eaa-4fdf-bc3f-598a748ce6ec",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbaf3bff-0a6b-4285-a8c9-9096a4191ba1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c25b718c-eecd-401f-aaee-cec43d767834"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8de7c4-3731-4c2e-84c3-347ffec16590",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "94be9bf2-b58f-4a54-a9a6-e5234b00f4da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c49adf4-61aa-458b-85c3-a40a77ff6405",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1320efa8-f16a-427b-b4b7-2aa562892231",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aabfd163-5ead-47b2-bd5f-d45ccf442f90"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efe3d77d-68db-421a-b178-1657a19bf0b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c424a4f2-f720-4b1d-9d1a-568c568703b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43a19a35-ade1-432c-b7bc-c2955d9fefb8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5a8af4e-6361-4719-8229-9b476a358c16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ed00cb-85e5-4bfa-8dcc-f6af01a8df01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f7fcebd-0185-4cc9-94ff-bb839fc24fcb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "feb6da34-ccb3-4172-aaf0-f40a2d6ca15c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03163c77-0d8d-4bad-b2a9-42d8b4e390fc",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "999a9e1f-a285-45e6-828c-6a3d96f08f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "894813e9-18d9-4e62-b731-3a163e3e8abd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "183e0b71-f4b4-43b3-af64-3d57b986d0af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "705e1ef4-3d2e-48fc-8d6f-e5fbc2a3d8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ec77a7b-dec0-4435-9dc1-2ee79a95d4e2",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7f3a043-b223-466a-9c40-ff5989d5aa33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "296df147-ea8d-4142-9695-a4ee169c9e8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aeca779c-dc4b-4fec-aa63-c2cf93741c27",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "be24b169-a078-489e-b664-f5944d181504"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd9bc586-6a93-4ffc-8886-3a1a62a3a535",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfd0af75-c408-4a65-8c74-5ba7900b7772",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4495bec8-b983-4f1a-85ac-cea03b43a52d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e3fca5d6-707c-4450-98de-f9f16740eb19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0e9c83f3-7508-4a50-95f5-0b2652cbd13c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c02f8930-5692-4556-90b9-eefa2da46f95",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b8d182d-2a49-4eba-a7a7-d0db3e6641a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93cdd738-3adb-4a43-a335-4984586f2ac9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fb4a83e5-cfb0-434f-966c-41b32925f04d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "e7e2bac8-1320-41a0-92df-a5082dc090da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "918cf940-6458-4883-86ff-6f256c1c3d03",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17285ae7-0c81-494a-a260-fa1bfb9400c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c167ec25-9049-47f4-a921-12fb15a68e5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec61eba-e47d-4b64-a0d7-6d561a564edb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9636cc-21ca-4ab6-8f82-1928b0b831f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "220ac8c2-9aa9-46d8-8ae3-cf2e981afa9b",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4a1cae3-cc63-42c9-b5a3-bd904f9aaed2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4654c49d-03ce-4594-9960-94ec93549808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87f5edbb-9e2f-47eb-88b6-222612bfdc6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "96536022-a050-4961-b246-c72a4903f820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2634712-e52c-4c16-9b3e-9ea7ffb7a1db",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "83e095f5-747f-4cde-932e-987f9b878e56",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad5c9574-e7f1-4710-91d5-57e3e40defac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f78f3bff-3da6-4f0c-9120-820934fa5788",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "58d296ae-1728-43f3-afc5-9ad5770e4021"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87193ca9-faf6-4de8-8dd7-c86c413bf47e",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dfe54ec-d963-4da4-a515-b84fb4496bea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a30f4644-2594-48dc-a844-6bacbad4f306"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "294aa2be-eb71-47b4-96e8-71ff8e899ed0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "72fde6b3-8e68-4ae7-896b-df3562101e33"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cba334f9-9af1-4633-b4f7-5f4bb8c4cc97",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffc552e-2f44-4fdd-ac95-88d50245277f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac52a605-9595-407d-bd36-5e0a9dc9a147"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c285542f-92ff-4b50-8a2b-8b3e85e274ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "13dbb837-97d2-41a9-84b5-453fc6b44bcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddeb8f33-a05d-471e-b160-ef7ec2baf18c",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca0712dd-db76-4f1d-a39c-8903d068f91b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48e4d193-aa1d-409c-860a-e098b9070a7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91a5b712-bc90-4aea-b0e7-015c4db2cb06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56ec11ae-4034-41b7-8831-02d122b8eefc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d9fbeca-e113-47ba-90f0-869267c59d3f",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9d7f07e-3d36-46e4-a060-2f94f1ec93e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fbed62cb-5b0e-46cf-b08a-01bab57f6ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1d3a5c8-5a61-4a33-8b7a-89df62a6d439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "56d93334-c0d7-4597-bb64-634d957a7780"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3f7fe04-d023-45b0-86c9-2427f88d8613",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbbb004a-3bf6-4306-8ac0-8ff31e33e60e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c235ac41-4271-4528-9e04-2a53e5bd42ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51ce1ae8-f4c2-472f-8442-ab139f1a7b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b9b1fd59-bb8f-428d-81a4-27e69de2c04d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86c5aa46-21f8-48a6-9cdc-f874598c79f5",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ea0f736-1d2d-4c60-817b-57dc4eaa68fc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ba1dff8-f349-446d-ab82-94952de0cd8a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8387f5b6-9f19-44ca-bcda-5ee44ffeff25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c64027c-cebd-44ae-bdd8-f075818ee815"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a59a65c2-30ab-452e-8a81-888490cb15f9",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f646bb5-a183-44ee-a4e6-fa588fc151df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "033f1219-c062-4ef6-94aa-fea2d35b2d7a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc8af9b-8886-4c23-adcc-2d5d3bc367ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4c2dd87c-2335-4b67-ac1a-cee816a12d9c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2f76409-dfd2-4f16-b68c-e8357d4cf899",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a70d398a-b4a8-4a12-ad69-73feb899175e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf14596-a89e-4366-8d5f-bc52083c5c2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85001def-57d7-43d3-9558-39228a02e4be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ff413bc3-2228-4938-88ab-e98dc0093f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d27db2-0c33-414a-8f71-873cf1dbc9e3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "340bc01d-6fe3-40eb-b517-38bbe5a00977",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45307a68-408a-44c6-ac9a-43c80b75014c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0c8cca8-c92e-4735-8667-45de575db34f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f79fc333-fe95-4fb4-8694-c23bc9a71339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74666b4c-1f81-4187-88be-503de67c2fa2",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bcde7d7-9ca1-4880-837e-a896b5994552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a65a956-eada-4d53-9804-f36944722f9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99f2e43a-ce20-45e1-862c-8718e07ac4b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f3abbd8b-03e2-4bbb-ba62-e19db210146e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c2ab23e-23fa-4e8f-b038-1e4d2955ca32",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a30a6b6-25f8-463b-aab2-f24528892d53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4167160-89d2-4c59-8c22-e5780602dfc9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fedb808e-39b3-42ae-a0fe-7266cfbf3f74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9ab5c8cb-0b16-421a-a075-7f33522fa534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f51986b-fdd0-4743-b8b8-b955d31a5e59",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1841dfd-9782-4abd-bef7-7402bc23244e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24f5fe98-c68d-4ad8-84ee-75caa855b181"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74ec11da-1a1d-47fb-86c6-6bf5228404b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "05298539-0ac3-44a6-bbde-a366c902fccb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8f52c03-0ccd-43d6-ab1a-a2d7fa20ed18",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "20f3b83b-13c8-44c3-a12b-90ce8b536d29",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e790cfb-a598-4ceb-9341-e218f8dfc7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d00bd92-59c2-42f5-b5e6-dfcee6cec6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d81762a-06a1-4aca-bd0a-93eb2c868d2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "600860de-1c35-4353-9315-1939377af3f2",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced08b06-3b2b-4859-a126-391828500eaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f9ab5eec-ba32-45c0-b898-91ff6ae846b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e732d79-8c27-4055-86cc-c2ec7968993c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "06d0cf67-f411-418f-8654-bb68b5d21964"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ded9d70e-e764-468b-9fe7-9120ca347493",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f11eff2d-e5db-49f0-90d7-fe1ee534edf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c06013cd-7f3a-4984-bf99-ee7194bccb3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf3a3549-0eeb-4071-9fc5-a391e6117225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "158ac6f1-8585-49fe-875b-c3381ef7aced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41bd196b-b5fe-48b2-be89-26091b68887c",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c542e963-9a6f-4bb6-9daf-6dda0019afb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96d3fa97-f5a6-417d-9af1-98b9e3d777ea"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc29de82-ef8c-40fa-82e4-088857eb42fd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5925d3de-de03-4cdd-9a23-7081c46930f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f3f7b0e-b129-4228-a058-2d438ab253c2",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60994610-fa93-4733-839e-3c8698cda57e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8302f6ba-074c-4901-bfd7-c6f170e94a37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd9941ce-9e84-494f-b60e-ae00d1a8624f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d6747207-e9ae-4023-a959-1d3965a1e824"
                        }
                      }
                    ]
                  },
                  {
                    "id": "444591b7-47ab-4623-877d-851166522b45",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66fde33-3c2b-4fb8-8d38-f17b48f9a184",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "75b59455-0bde-4f2f-b226-56dc32c41fa5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cc05b8d-8c97-45ca-9bfe-875bdda1d2b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3c3df1c5-a91b-4832-a36d-c9baf01755b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f127bd94-b18e-4a5e-ace5-4bb8aac07e35",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "70753bcc-ca5e-418f-9280-12d96ccbe0ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ba74edb-ce6e-4879-a6c6-17e7bddb23ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f5dbe7-f94a-45e3-8e46-2ee85594f765",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "00fe0db0-5df0-40a1-983a-d1ce784d4817"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4a628656-e684-4e80-8144-e8ff3d973255",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2c270536-b528-44e7-b51a-0a867c180842",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fdb768fa-57ec-4c1a-8637-57f6706b42df",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "fc9f4e55-6b55-44f5-aab9-1478074ee5e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "803c1747-2286-47e2-ae46-ae6ae833e261",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8346e8dc-2943-4867-840e-72252fa14e83"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "56e7bcb3-a1e1-4de4-82a8-7236d60d693b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "06af9ceb-41cc-4bfa-bf5e-9c161276256d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e797867a-7572-4288-b084-573fe6c4cf1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "bf4f1101-db2a-48f5-9400-989dbba50754"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "304bf32e-bb8a-4d0f-8bee-3486be2c4b66",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "eb120c62-a0cb-4e41-b56c-a560e51bbbd4"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "9aa880d6-144b-4a8d-b364-4cb28ac36850",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "e3d31f6d-b9b4-4376-b181-decc064e2ef7"
            }
          }
        ]
      },
      {
        "id": "fe059718-2d72-4f4a-826c-bfa26eb774e2",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c4afa683-b532-45b0-877f-a19ff53a0f6d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e21414bd-3667-46a3-b58e-d38535700717",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "944a2afd-ac35-4c94-b03b-2109c52765c2",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b03bdf7b-6242-48cb-8076-d789979d6e2f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fbc8227c-66b9-4837-a4b5-2bc543a14788"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6cf9a980-204d-49de-ac71-a1ac5e4698f8",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5010acf-011b-440d-8dde-cb66edb444eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba73a6c-baeb-45d9-81ec-5525ed9790fb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be6cf4a0-8321-47e5-91d9-db3e8578e63b",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bbee6364-f3bc-4779-9c2a-1e9d61382b4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "77d79d24-9821-4e3c-93a4-86abfe4d9381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "596be225-d148-447e-b788-64a18695a273",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e5e1ece-986d-4584-981c-e7fe5de20cc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b529dff6-62f9-42fe-9e80-fd096b188290"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e81959cc-f570-4f0e-9df2-9d8ef1fa181a",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea840b44-f80c-4207-aea8-8a5963e1c6d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f76ba4a-b9a4-45ed-a897-943bc3bd3825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ea0971e-03d4-4c8e-ab1b-9f6f4a0092f0",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efae3724-79bd-43bd-bc9a-338eb0629978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58eadc36-2e55-493e-a9cf-032067c777f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aec6b87-91a3-4e56-a5f3-67c3b93142c0",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2626127-fbc5-4313-93c7-9e1e55bb5589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b40045e0-04b9-4b28-b1fd-4a13b239b331"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d090c991-f8f3-4354-9486-6b8540ccc31f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "711672b0-a561-474e-8ef2-ab6e7055a585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f3720ce-5470-4b0a-8ef9-dcd498ba3053",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf37bb13-80cd-4a2d-89d9-a2a261feb170",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e0934914-14e6-455c-b0ca-1bd9dfbe61a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75789fa0-9ff7-4a06-a963-98e4f626e46e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "58f8d4d2-793a-495e-8706-c9fad6852765"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c1928598-4983-4e65-8b2e-fde598a6d7a4",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1c86443f-454d-4b90-a832-297fe7a07386",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0c486484-c518-48ad-b92c-a6cb79180d82"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3e1cc304-faa5-44b5-afa8-11bef6f12b83",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0266bc2d-e3c7-4eb3-8a37-08c2e69a0459"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89939e0a-2d3f-4edc-be7b-2aa753d416fa",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6787bd37-7d26-44d0-977b-c582a50ed627",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04cde368-80c2-476f-89d0-aa891e8007ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "91c1263b-2be9-4fba-a8a7-616323120e65",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebcef947-bdb1-445a-811c-0be205c53e1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a063a8af-16e7-4fb3-8959-6fb14e758d34",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9001a2e3-e9ad-4965-8bcc-89b4f53b3010",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8d73a3a-b901-4881-a83e-a21f1624e163"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fd6bc74-147c-4842-bc5c-c0710d48685f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4cce984b-b1f8-408e-89c0-e680550f935a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "159c35ad-a2d9-4b0f-88f0-613446a9feb1",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d2c94ef4-092a-4d94-a3e7-a85db6672c9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec17c704-b67e-4d6d-9b5e-20d476f9c027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "27f54ca4-1322-4ede-84f4-64d641e1d1ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8201a651-a225-4aa7-b546-9e19d02f88d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "750a2f3a-3cf7-46d5-90fb-802e1660f1d5",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4036c35d-3d3c-4c67-bf09-5143a4611401",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1f4dceb-b694-492e-9b60-5e309d2212b9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "698a88b5-4021-4276-9f26-697c581eef0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da2e2946-c6d1-484e-9dfd-17b3f86fdff9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5985bc9-b56f-4db7-a758-0927b330f887",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3dd23ac6-90fb-4173-b05b-39e355f15271",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "45158cb3-2662-4564-99e6-3f50c978649b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0146c182-2070-4525-9a99-907fff8d2948",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4f6126dc-4260-444d-a492-98a179092deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ef4c04c-792f-4e1a-8cc7-2757b76de474",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae8c25f9-994e-4cb6-8955-e77cad93da56",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4ea3b072-7824-442a-8438-f94806aaf41d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "98f8d8ca-14f7-4262-bfcd-2ff789c392d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9a881e35-4872-421f-9a56-e766cf5b7247"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69a948fd-729e-4959-b206-83960a52e729",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74217f93-0dbb-47dd-b485-8b7ecafb1b09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e8bc2e-9067-486d-afb0-35c43e7ade11"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40490c6f-524d-46a7-9543-9c9ce0dfc843",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0174431-75d1-4a0d-94c6-43ba3da3d049"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0b4ac6d-bedc-4865-b25e-4c7f63cfa83d",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cef04f8-cc11-47fb-bf09-020989eb15a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5c1ea84-0a13-47c7-b888-16378b7acc84"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac37ab5c-f4b0-4793-9f78-7f810477ff82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a78e3000-f6ec-416c-a148-940a71d98458"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6581fbb3-3f2f-4578-aa7f-1682fa0aa79c",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c642a24f-ee91-4cab-a659-0b093e87aa89",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5e62111-5279-45a3-a656-b28c745ad8ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bccbbf6-d2e3-49b9-8353-f3e4ab5ea51e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e72b575-d8c8-4413-ac09-f6772f144754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5bc3ed2-28ba-451b-8814-1efb7cd17492",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06192379-ce75-41e5-9253-66a205a66276",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f1a13d6-f70b-4344-acd8-5c82c1bbcf39"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c9ebd75-133c-40ce-b876-221015cc6a48",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f67f161-f7a3-413b-b332-ca74e550ce5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "211c7550-36d8-46be-a346-5adaa5db0676",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fc889c-6ecb-43db-8477-6413ab61872e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39b2f9b6-13cc-4f12-9587-4de5a86abceb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c997808-f67d-4c74-9c20-93927c74fc76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6fafcfc-c7b1-476b-a7a1-e55c857a7126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5162d04-46cf-4c92-91fd-aa3e28ff5c27",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cee0f2e-aece-48aa-b6b3-ed0ef4a5d351",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "071e9682-2891-48f7-aea7-894c6443d3a6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a9bac42-6f86-4888-a443-6c0ba95543fd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82abc385-be0e-4f3c-8ccf-87b678c7d94f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df1ada99-0369-4082-a204-050ce10ef474",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d11c3c1-1a9a-4952-a23c-27d2714489ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebee089b-00bc-4677-962a-b1f87bb6aa79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac109fa-fbd1-48e8-9757-9b87cb69101b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c164d36c-5962-48bb-8fcb-eb3dc5b969bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28cf51b0-f1b7-4827-8982-ff633cfc1754",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ae10b8e-6efb-4820-bd96-28422b0da5f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4adda2cd-95b9-4b21-bbc1-d8cf69f0f0ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac3dad97-203a-48a9-900f-5689968d75f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ead6724-8e7c-4800-8737-64c6eca9d94e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cb6d7f3-153c-47ce-9d55-b76544f6aee8",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5545fd-0fbd-4639-988b-f5dd7b5a85ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a2942124-b7ab-4243-9aa6-3048a6c18ce4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7cd27b4a-cd50-4023-bbc6-af273d90608a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ceebb3c-18f1-443b-abe1-6f820b70f69a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3127c02f-3764-465b-a739-be2241733eb9",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b04731ba-9531-4389-bbc6-df83d7120a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74ab6daf-8f10-441b-9228-e22cd421b258"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d8c6d2-028f-49f3-91a4-fd27a9523520",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee7aa343-379b-47b3-87ee-07cba98c8e0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fdfb6fc3-f505-44ff-89a6-9593fd611394",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25c08177-2d50-433f-aa80-452eab1dd58c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3869118-d79a-4e80-92f2-15158f2767e2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75c04742-3097-4bf1-a2d1-6cf7319c1604",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a96a4cf-15b5-45e4-9a1f-cc25fae278e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "82237f2f-3636-4f56-a8b7-7553f53778a6",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412a84d5-2087-40da-a5fa-a4278f233a89",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "60ea5703-3b39-40bb-bfc8-65be825949ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9beb7507-a516-44c9-9875-8305f1cae82d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6941345c-1a32-4dd5-9e06-abc667a4f82a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a191b181-7add-4af9-a821-dd97f46cd911",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c18ae9a2-7ad0-4d02-96d3-e0ef93beab8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569ec95b-5205-4984-9295-4eb95e3fc2a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d8fff1d4-3ae6-4c5b-8884-eb127a812bb8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1375eb32-aedb-4f96-96c3-92f94db4bf30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8761c424-07c0-4bd3-93ac-69eb483c3c5d",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9481cee3-506f-4d40-8e14-355ecc3ab7dc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "69454b9b-8ccc-4fa4-8f16-0f930bb2b9ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "066b972b-d0a5-4493-9e4b-08b03ee200d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff6a5711-fd1a-4d07-acd1-3bff1fa03ffc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "439b2135-bdb6-4fe5-8240-f7d132a88136",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c2b988e-0403-450a-b321-f18f28ad57aa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "591c07b2-7378-434f-93fa-7a55f7d8d99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0db7793e-6231-4f03-8809-92d5abf46f9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aea4f028-aa0a-4427-83f6-60cddea5e164"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddbe5594-b6c9-434b-b59e-ec8d0109a592",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5386b770-84ee-4346-87c2-ecb36809abc8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc47fe16-e0c3-4bde-9650-a212d374e89d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b99fbf3f-32d2-45e2-a4f6-e705fcfb78b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b3605f9c-5f51-4d1a-b95a-047385d957e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2a212acc-30a5-4d70-b29b-6b056f7d2215",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9318e2d-4571-4146-9367-a5b701233fe5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "367fa613-30b8-45b9-928f-11dcd2b018fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8df7cfd-e9be-4f10-aab9-5cf94c6aa78c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7fc3c00-5bdf-47eb-8723-fba996e13592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc367c8-6032-45ca-ac47-0983ae3c6674",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38a1eb78-bedd-44fd-b22c-45f066e2e4c7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a4b5a86-2d9b-420f-9235-54589e99c2fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2aee47d1-c102-4125-a67d-d0a1753373c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "922f3eea-d829-4303-9731-f68b95a6e2ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78d2b629-f22b-426b-9584-eec98c632de0",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adf5474a-c661-4447-9d11-d6467580eb98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8493b591-0341-4503-9c28-228c7cf84546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e3d97a-71f4-4428-b1ca-417ba63cabd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856d9b63-0a22-46ca-95ad-4a0a03429875"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f1e5e8-603b-4053-839b-dd4cb6c080b9",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2df23c7f-e95a-4927-a961-cb5b19c58783",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3504c59e-b969-46ee-b2e7-97112ad314ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25c1f816-4d29-4a5c-8c54-13b3e90d48e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "084ffdaf-a068-45c9-9f20-1d3adbb712db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73581ee6-26c4-49b7-a08d-0b273fa8d8b1",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d58d674-18e8-4f42-a2f6-12755bf3ef3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd93bd26-d4a8-431c-a319-421414e7b4a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "28498bc7-9b6a-44a2-b895-7b15322af3f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c0c6200-963a-47f3-b41d-14cc4350ef7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e14155c0-2880-4320-b6a4-3ba2772598ac",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e67d4672-b11e-4364-af41-6e22d00df63c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1787c767-59db-4c09-b06f-1c53a56ffb22"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8de997c-d77c-4c1e-a8a1-7539769fea9c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27480b46-f039-41df-a641-fac50e40f5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2558be5e-4f64-4a65-ace9-731277e09128",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae07af07-2824-4ecc-802c-334aeeaa4633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73085129-192c-4352-89a9-6d12430be958"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5492469e-f1dd-4b98-9ac7-0cfcb2ad5cb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8feb35ff-e9d2-4fda-8bfe-7614eb91ea37"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d66dadac-a216-42e0-a1d1-f016b8d5395e",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec4f99cc-c0c7-473a-b762-cb90618fefd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ba2ecf8-7d0f-4841-8abf-48b535b7a797"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e70abff5-3edf-4858-8d2d-71c71842aaea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "07fab65a-d6f6-4a29-bc4a-69ef52a515ca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2274368-2fb5-435b-af0b-3aa99a90e3fe",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29fa240a-33a5-4e47-8819-2d74aef17db6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "923e50d5-e285-47a1-85c1-e05f8f64081f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "078ab193-3288-4546-b230-1e66f00961f8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "70934410-6013-4f2d-94c1-7cd79eeafbec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee421ab1-4db3-438b-a6b7-26d017630845",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3daa0b0-a0b7-4dd3-aff5-d2f68014168d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8ca08e5-e0b7-48f4-9b83-02fc351d87e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f9b1513-3b83-4673-ba24-73740f1c16c3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7fd99a9-ae55-43dc-85a4-a8397bc30e08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "717a8f23-987e-42e2-8176-efd1658f0d58",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b522d0e6-1b0a-443f-a5d9-dd15b23ca13c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c3f4870-0b8d-4679-a817-79e57274b827"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b33af46c-3584-4e92-adf4-7742c3c747be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a958d8a-5a80-4b38-91fd-0047087fa239"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37a8c4a2-c885-46a1-936f-dd1106f5bed3",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea451489-10e3-4ac3-8a46-21ffa1835624",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2e701303-ad25-4880-a459-238fe94b6f67"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd2a678f-3b36-4753-b35c-6f0334f4deb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7c5948b-868d-4112-916b-d43cf5516d0d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d1432ff-daa3-4b84-8d7e-309b1263488d",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e875964-0fcc-454f-9fb6-71a4a457dacb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54eb7bc3-4e64-4adf-bc4c-0c751e5d7456"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a30efbf7-71f1-4dc0-b916-6f54eff57fd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "12dc441c-2880-43cf-afe7-7b9ccbd64c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23822854-7abd-47ea-86d4-3f6587f15c29",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e23e8a8-c889-4ee6-b49c-fa7db8973561",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7a05d5a8-c382-4658-bfa2-d5bbf9372c93"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbe035b-c80d-4f68-9628-8b462e988bcb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc481088-fc0f-46e1-b455-765c5d7031b0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a71a5621-d753-46a4-84e8-f660b01fad6a",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba6b678-7352-4276-b1b5-8d2c5dc6a01a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cdabfc6-a154-4211-96af-40e139c0de0c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea733cdb-4356-4655-8f54-19bd5ebcaf99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf4f07c1-f6ae-4e91-b96f-6dc885ce3cf5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ed6fa20-3563-484a-85a1-f1d04680fbc4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc284715-0783-4aef-bb37-ace5e01c0692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7574716b-22e9-4b0d-8641-a3087da5c382"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d76ca203-ab1e-4e8e-8ffd-385ac3cb8984",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "97de091d-e114-4a28-9384-d64a026730c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b3ceaa6-aaae-47c1-b8b8-6e2ad19dc3e8",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d538fbbe-888a-434c-9fe1-6a23883e51f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ac7c585-1748-4251-bb65-0c00a3800b42"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c02c2f8-7593-453b-a690-3ad8bcd96713",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eba77f27-35bf-4a09-8655-f774b2024a4a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cc377b4-ec6e-4a78-8493-f0cf3f3dcc6f",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ef77b41-a01a-40a3-ab80-bdbcc5f11aa5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "80b01218-df30-4c39-bf5c-8b82ba5d6878"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "01635be1-f2bc-47d3-879d-a4f0faea9d32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c37798f5-2386-4b4b-85cd-c5ba83876e6c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02be6455-b93a-4829-bde4-5f9732456bbf",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b641a2c-81c2-4793-9058-56f58881997b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6e7c21cc-77d2-454c-9a78-22e7a348c026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "40241561-5361-470c-9517-e0031c28cb91",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "277ca41a-d46d-44cc-8c00-7aa9ab348f90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2b03159-b389-4e5b-99f0-a7987dec050e",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4d0dd59-7d40-4d8e-b831-4ad4661b8bdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01582f39-653d-4c25-86b3-a385c7a7cb45"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e61642a9-6117-4cc4-ab21-680c2dd0fcd0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8f4187f9-18e5-40a8-9690-bd86a8c80313"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d81f7b65-5627-4175-8b72-1f101e5c09b5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69564c61-8d7f-474b-b004-7fb51fff5e1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ab3b5bd-c18e-4691-9873-7492e88233c6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a4512bc3-d2e3-4725-8236-567af3b6529a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b8f1be19-d121-4752-a833-6392cf65c236"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c150049b-dce2-4e89-9e41-607a6fa847e8",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ddd3642-41e9-43c7-b804-9c0177f25c69",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a4a31b43-4110-4d27-be47-9347dd8c9e92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "189fb347-c34e-4e9a-9ba9-411f36fa1e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2b6119a7-0e1d-46d8-ad1b-3c546e46c5da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f6e7c9-2d17-4586-9b74-cf3c119d31e2",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3a27631-c00e-40bd-9652-76f55fd210f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "785931e5-d7d8-4ca6-9d87-9dc83d1afff3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6eeee3c-96be-445e-ab8d-6ccffcb076e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "478b5476-e582-46ec-b41f-1876a1b125e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15b2d882-7726-49f4-b3cf-c7c70e4c9cf4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "86a31b78-f67a-4023-976d-42ff1df9c378",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "632dcc1c-864e-4c33-8b9a-4a18d1b1df92"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "afe3bf1d-9676-4f1c-94a0-8eda5484db95",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3e3d7907-1f6b-456b-a1b4-c22404fa9e7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5ad452b-3f8b-408e-9983-e6ce46131a37",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23115375-f439-4553-8bfe-f558a97de072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb4de639-9f67-4f89-9bd9-53dba2440028"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b91f5bb6-d1b0-4d7f-8d4c-aa8a238dd6d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9318988-f2bb-48f8-ae17-f13809dbbe57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ade4bda-7b03-473b-a471-ffa08083bf6d",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "164d9c2a-d90e-45d4-b37a-5ff2933f751b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5580206d-73d8-434c-bf50-620d29d76835"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e85bf50-7558-4ff5-9ff2-a7f653665460",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37f4453d-c74d-4eaf-a3af-8c1186dbcabc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "86d02fa9-1b92-4b04-ad4a-e5f936bd5938",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb80636e-5803-4262-856b-281d73da3b85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0acb3664-ce72-4303-b77c-8509a80fe596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd48e3a8-b6f4-43fa-bcaa-5863672557e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c565580e-8fa9-4b9d-afcb-e8f573ff5727"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4daec7c-0b9c-47d9-82d6-8b4942fa8ea3",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae23acf9-5ab0-4935-9fce-cf4e391d982c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4c0c9b8c-cc97-45bc-85f0-8dcabbdf2cfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "edf588b4-89b8-4180-b0fc-6a9686e64290",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "df2ec708-abfd-4bfc-b718-c1966ac2a077"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b10ecc3-c7e9-4920-b958-f949add855fd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aba1520-ea88-4239-8c7e-577c32c44690",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "682faf35-ec1c-45bf-abee-6e6885305890"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d321df64-b841-43e2-b182-7fb9ab85794a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9054931-63af-4162-a58b-bffff99d1e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "508467f7-8059-421c-abb3-f4695459313c",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d132fd0f-d690-460e-bfe8-133d21177066",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ba74ce8-8c44-45d5-be98-0b0676a9cd40"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "331aaaae-65da-4711-bfa3-8618687763b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "34ab352f-9501-444d-a7e8-361240da6af0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0648384c-9335-4fc7-81c5-13a83d9f80ce",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6260f609-2fde-4f77-b581-b5cc0a51d317",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a76ad4f-471c-43f5-866c-39d86f844c58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa309f9d-9ac3-48e2-882f-1015dd5b955b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "825822e8-dcfe-432c-80bb-3f770b00496c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d2fdef9-68ad-474a-b5e2-c48daab3e4be",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d072af3e-9a76-47fc-b030-891f0e5d0539",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14870ed7-fab4-4901-9183-4a987a21667d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc897bc2-a033-4182-9199-4a13b35f9312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40e2720a-5f1b-487e-b32c-a49c00af9e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "233351fa-794d-427e-9b38-7931575b755b",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36d5d568-4dce-48a9-8e6f-263c036536dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "89699752-f888-4782-8acc-1e61aaab976e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb7968b6-8917-4c2b-87d7-a45774b6c54d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3344d6fc-0399-4dc0-acda-0d029976c8ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74b6315e-818d-43be-b0e8-6733467b65b2",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9699aa7a-0376-4531-b6dd-002766f513c9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dd193b4-725c-4ff0-8819-a2c798f002ee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cbfdac36-9775-42fb-896c-c811e6019d17",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16506532-eeed-4100-b58d-09d6dace717a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aed073b-3b38-47c0-85d9-be8eef6696b4",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf342588-c62f-43e8-a239-146861932d47",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4be8483e-4f55-40a3-bf3e-21d2f45c49c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "67291297-ec38-4d0e-8c1d-78717796d633",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7d3c469-9ae0-47fa-a435-e0c644860a0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5aa4e83-5f34-4833-b18d-57f0deed97d1",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2134244b-a4aa-4c45-88ee-c554f02e0252",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9864b42f-1c3b-4e7a-b4d9-44e54e4dfc79"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "26e56397-2820-4e0c-89d9-7b1ebaa97050",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ac9272cd-56f8-4b31-a187-ebcc24e0f28e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7e71b54-44ef-4527-b725-33ee7fe8d277",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cae59c05-4b6c-4f57-8b08-7fce1324dfb0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "91db320e-fe47-4d49-99f0-7aa77d6a7c6c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a8dc318-9898-4ba0-825a-a8c13505f5b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f9c8443-5abe-48d9-a78b-9c597cdfdec5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1f7a49-565e-4885-9b86-3f46171dc173",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20004f40-cf13-4f73-96de-966ff9697cd6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ebc6404e-a98b-4f9a-9d68-49fc0cdf9d4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b0b2f80-9e6b-4558-904c-642b685988cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "93fb27de-5b7a-45f9-9c2a-f7597cef8952"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7f98f8f-3a70-4336-b5f5-c6c160d9864c",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03b5a3e0-32c4-41d8-b099-f409f60612ca",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "28d8f076-b630-46af-abba-20bc16b3f482"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dac08674-9c3a-4a39-a54e-74c9729146b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d484015b-f3cf-4431-ba46-779714d5450b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c3f5f34-b859-4a34-94b6-5d042472329c",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c411d5d7-2b62-4252-bec7-66a91057539b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbf6bc82-ab40-4ea4-864f-6d37403ad426"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3cb15f8-9a5a-4e22-8363-400bd1b68363",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "007c3985-90a3-4a7e-8e06-c6db94e3f4f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a020626-0c09-4c31-a256-1fb978de1059",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c696d990-1457-4661-930a-82f15cca2cdd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "441f42be-91f5-418d-85bf-bb66fccbf7b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0c6398a-c538-4dca-9041-2f6aa1488306",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c3ad53a-6f18-44ee-a7b2-2dddf4b811f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e738afd-76cd-43bb-a1fc-d6c9cc62538d",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75594a01-44c8-4332-9620-85d2edde3f36",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c984d165-220e-412e-bb26-7de6d2fe7bff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e419f52c-a8c5-4149-9e51-34340ead36d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ce6ab065-71cb-40cd-9583-89dcdab6a874"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04605203-c107-4782-8903-afbe9802b368",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03859d4a-24a7-4b22-9306-ab5106d7acbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "251f94bc-1e6f-435a-bc88-c85c449fd54a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84b2390e-c4cf-4736-ba4c-a1f40ba5e13f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d13887a4-bc3a-4d9c-a8ee-dfd70a1dd0ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da37b979-d5b3-407e-b160-9292d93fa4a0",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "70cd1bd6-b285-4230-b396-36d5cc3f5e48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e9d9b9-35a2-4e2f-b03d-c49fae5104d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f3aeca-148d-46cb-9ccd-597f9289848c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1be02840-8512-471d-8942-4bacdda3e08d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b4ea5f3-365c-4a66-b445-1687ddb5c1b8",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "adfb0a02-53c5-4a51-8156-e5002070752d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "247ca4eb-0069-451d-80aa-45ef5073c2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a3950f-93ee-4004-9239-56910b8c4647",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4da1a593-18a9-4b51-9394-43d3bc215804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "28fdd147-4216-4199-88ed-480b8c5d13e8",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bee2aca-3a0d-4a4a-a863-f545552d56a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8adea8bf-d27d-42b1-8cd1-6161d354eddd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed1250d2-2a64-4bf8-b6a1-ee7e3fe6847b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06242059-74b0-46e4-88fc-36040b95ee5c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b20b148-ecc3-4103-b25a-2611f11f3111",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07fc1ebd-6d3b-49d5-b4a4-623f83723bb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0a17b686-1312-44d7-8807-8083f25df229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f14fe7bf-fa6b-4034-b6e6-e0377d1d1eed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f29a0b5e-9cdf-4d89-8da7-de9af2ad0f10"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efa5149a-521b-4642-9ab4-23470073347c",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7c4fdff-b6d1-4811-8352-1d246bbf725a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b8ea6629-5e5b-4979-b74d-2b14b26883e3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0123d0a-4bf4-47a6-9a0a-06cb757da9bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad538a5e-d0a7-46b3-bc15-479134ba544a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbd173ca-de34-4cb7-b173-ce141f75ae44",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6be856e3-4b1f-4dc4-b9db-00eaf5b1225b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ea0b630-7145-4e4f-a66c-44892b38a276"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e8766c7-f39d-4b72-bdff-2db12634fe02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b63da35-5ed9-40ff-a3be-8376d049dc68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03cba983-2319-413c-8f27-12ac3b8c3793",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5454d0d5-94ce-4584-aeae-cb1018c4f2bf",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "62e5b8af-5801-4962-b0d9-89ba9c78c7ec"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "739cc89b-d60d-4cca-aedc-2ba5c41f0473",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b1487f-24f4-4d92-8082-acf75dcbbd8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6759d072-3a61-45b4-9371-83d1b3066148",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf35b0de-31e4-4af4-b9a7-718619347cfa",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0f76a40b-13c9-4d10-9307-863e6ab65ae3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f20ab5c6-a143-495f-b041-4de70f739736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "933f570a-bbcb-4c94-9f73-e2d4782ed848"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf82eb73-e7cf-4811-b733-c09533517ae9",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6806769e-4fb3-4b09-ae6f-000f3a640f9b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d1a3eecc-8e08-41d6-b5a0-765e2ac52941"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6a292fb-d6a9-4659-84e4-49d2b5d6323e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c50a87e6-40ed-42a0-8569-6ecabd7cfc44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08d88fb6-e8fe-4c00-8b1c-82a3a713ce69",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "68bf2890-ae78-481f-a3d6-c423c839ae2d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "976d57a0-ca94-4877-bd6b-02331f084a90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "43e4519d-8024-4511-b295-cc597d650aca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7f3b5f07-b614-484e-a839-c275fa198c09"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b60826b0-5f75-47e1-924a-bfaabb3ac182",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e79f9406-a030-4f0f-b5ef-944899ae187b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "845a1179-e603-428b-abd3-acdfd815e706"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8258ba36-fd3b-4be1-9392-4efe057d6a75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7b8f31e-bc39-48cf-b3f2-da286a2c7470"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d68c1272-81fe-4ef2-a51f-f1e4814842bf",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b76ec228-054c-42a0-99c6-0abb600e5c9a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1b4a1183-1b03-48b5-9603-9e413c56f644"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5af8b689-811f-4ee8-abf6-ec45e51c8210",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37c90e8b-fcf7-4fbf-89b6-a804de9e7bfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a496f71-4c90-4d5e-b440-0017b3950261",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e2234e-4a06-4c52-ba5b-574733515f38",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f70d7044-a160-416c-81a5-a598ef06f743"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd71a460-efbb-48cb-bf99-f592716930c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9be3809f-c73a-4296-929d-512067919ab8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea9815a1-8866-4d09-b08e-8d45ed3d6793",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f1dcf14a-86d5-4366-96e6-c3ced165af03",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a9d2e0cf-64ba-4d63-b787-6d64da8b4a77"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2d24394-21c6-4e1d-b070-6008694dac88",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba04781f-3b06-4d83-a8ff-abdbaffc2a8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "beb12b7c-2c4c-4850-8d2c-500062fae2e8",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b477830a-a724-40d7-83c6-f42e33337c52",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7c8fb0ba-399b-4459-aebd-5ec7fc6cc367"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c55a49b1-8933-4c31-abed-4bb03a8b34c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe4acb10-87ba-492a-81f5-23af2581937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc4cc093-8aa2-4582-9c40-ef3077747bbf",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fbc8e145-dd23-4adb-a8f0-f1216775ba4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8bb836f6-4a45-472a-9874-50392afc9cf0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86345fb3-d483-42f8-be5e-585d818cb3de",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe311c36-8f77-4e01-bcaa-2b24f4202137"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d65f62aa-a250-43fd-aff6-cdb37578d86c",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f625976d-336b-436c-b1db-af14d03e1f86",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0635cd31-8499-49ae-b4ea-1d9880328dfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed77fde4-2751-467a-a944-b1473a33c9b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ad64679-a8a2-46fd-b79c-d73cadfed4a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af7c14e8-7f00-4059-8728-d99e01aff8e6",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08603e31-fb9a-491f-9c1b-785d8eb87fc9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "373c244b-6ab3-400c-bd39-e4c5d6258265"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9bf4487-c9fc-4b73-96c4-de0b83d01a32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5457accc-d9fd-436c-8778-58072061b4e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ceb338b1-7ae7-4bdc-b84d-5ae5b76e446e",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94ad8fd6-eb48-4487-83e6-e0359f8d9bf0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ae697f3c-9baa-48aa-b60b-d514aba2666f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742d7fb7-d1db-4a08-90a4-b1e2e0edd08f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "455cad69-60c0-4ca6-9c4d-9f0a3575ee52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94a5540a-88fc-48ba-acf2-704be69e52d3",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52dccc24-ea18-43b2-980f-04505f5e5694",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a19fadb5-a7b5-4f40-b390-7b3e8b405537"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "774b97ac-56dc-4ec2-98e5-72bf51ca9f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cefa4db1-b5f6-47d2-85ec-914f90c355f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cefafca2-0ba5-43be-ad90-9026f850caae",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c3e6256-6913-432e-8b71-1ab97f4794a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d6fd2b83-d6d3-456f-bedd-5b6f6ff12484"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4e97db77-acf2-41b3-8497-bfb951ecd6a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4963645-4c9f-4301-a1c0-fffd8b89a38e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8694454-bb09-434f-9208-5cf5b15c0180",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6709d4d-744c-46f4-9e9e-171a37f7a130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7da6e629-dd2b-4c47-af8e-a966baad38ca"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0a8f0f1-ed67-447f-aeda-265b3ee48c0b",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4f164b5-efdd-47c7-a1e3-4556056f2007"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ffe18ac-27b4-4ad8-903f-aafb62d2163c",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15f3b7b7-5b2e-4815-aca3-8b624af8f9d5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "beef26f5-9ddd-450b-889c-47621071daee"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9531297-2e83-4355-ac8b-3462d2fe08b2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3038b1fc-88b1-43bf-b5fa-5e140a08e879"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a7734c6d-3feb-4c72-bc60-52c4f234f1c5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e6b14d7f-4da5-4cc8-a93a-0f2e0525833d"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f3dc1ec1-1d24-4034-858e-ebb198912229",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c0adc9f0-3c72-4448-afff-1d5578a4a228"
                    }
                  }
                ]
              },
              {
                "id": "2a5a9c92-3b0c-489e-ad3a-204642b65e14",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "15f8897a-a4fb-4d5e-aae5-97298787c604",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ec590bac-cc7e-49fb-b6d7-e15b8b4a8c8a",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ca7bd657-882d-45e7-b9a0-164a1775d768"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "491b5e16-7851-4ea4-b9d8-2eef6aa68642",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "201c86f3-fe73-4e78-9331-8ec201c7b33d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5af28a1d-dcfb-4c0b-b5dd-714010036541",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dc61c395-927d-45b4-a109-a9b6c2c3771f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "077efb80-fe95-4af1-ba9d-58f1b324fed1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95f0f76d-e691-4b09-92b5-008d16e7218c"
                    }
                  }
                ]
              },
              {
                "id": "04ac5476-915f-49c3-89dd-92b08cabb580",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "f5d2b221-a273-415b-979a-36c1ae01ac8f",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2f27d3c-a92e-4879-a97b-e34630b577a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "54c0fb47-d90a-4fbe-b040-cb9b6fa9f168"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de9e17f7-781e-4622-8cf2-328419e45589",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75105c71-c112-4cdb-87a9-a9c56d2b9801"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "270ddd8d-28a3-4d09-8e9a-5fcbe7acbde9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "27346ce8-a141-45b3-a311-5500fc79f474",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "70640b43-1cd7-4859-9e78-6bb0f1cbd08f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "73888037-8cbe-4c5b-9e1c-a2d883c0a88f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "87996633-11b3-4bb6-9f90-f3b02c38b4b5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5f490ee4-1dee-4929-99a0-061bf90669e3"
                    }
                  }
                ]
              },
              {
                "id": "b2d09ea8-2e81-4d62-8a9c-9d0d2c9701c2",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e85e8d41-5e9f-4b66-906d-ebed3e6e0529",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0f2212f8-b8a9-4e1b-868e-0c61e52d98ce"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "89faeb12-d37f-4736-8e30-2d303127b868",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5dd41b40-50d5-4de6-8825-83a3b148c9e3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "44ba0ef3-86ca-4312-b6d4-ee5a8a3ba85d",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "41a74251-d1b2-42f6-b878-a1e3d4a77b03"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a868407d-2044-488c-8307-d5da0cc18ecf",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0bc81220-7f75-4a24-869a-28324543cd12"
            }
          }
        ]
      },
      {
        "id": "afab674d-3020-42f2-a661-4a702893a7ac",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "ac0a6436-1442-4c00-b3e1-e8fb788d6849",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c6053cc0-8e6f-46ea-b131-eab148556c0e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "11991d17-53f0-4cc8-aaa2-2836bf860a7e",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d26e877-db4e-4056-aa03-42e20533cfdd",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "aea88070-e53d-4db8-8744-902136a9adc6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b1402555-1c07-4333-bac0-f75df1780ff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ceb9ebb2-5a8c-46cc-9a79-ebf81e1ad99b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6b1bf901-d939-47a5-b163-c42246ded9d9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ad26a996-981a-4911-bca3-100e5d145a54"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3545e284-2f3a-4371-8662-7916e18a0500",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5e539155-f9e0-4ec7-b238-9a4636bd137b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f4d65e32-3b2e-4505-8669-426c79b949dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "05ab5ce1-bd09-438f-8c3e-9e932567fccd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4298522d-21a1-4c47-9078-66aa394e3dd1",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "fb5043bc-c72b-423e-9078-a204ab73b269"
            }
          }
        ]
      },
      {
        "id": "d935937c-6350-4f2c-9354-516876265a1b",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "adecfdb0-fa0d-4235-99bc-ec9ec27f2e72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5a7c9f7a-7c7e-4fa5-9791-227ff70c8b92",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "835c0645-6aa9-4e62-9eb6-631b17f488dd",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15662ea3-5efb-44e2-9317-d0d3dfc31f6e",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0ee7fa40-703a-469a-b6d6-10c3dc4786e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaeec828-4ddb-4539-a343-b70a2c4f38d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "727b5dc2-696c-4fa4-a742-bbd362d4a97c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "83b8fc88-000e-47ba-b6a3-ec38891aba7f",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b080a070-4903-4848-8294-b4108722fec3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "24f3c14c-038b-4c15-a13d-93977a32285c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "45218bce-3c93-43b5-a8f8-36048998d0f0"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5a2587de-cfc6-4f47-8a29-13dcf55b93ba",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "20304ebf-0c46-476c-9ce0-71262001d93c"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "5441d9f0-72b1-4bbb-a67a-9473641d3b22",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d540961-da41-44f8-985c-d39a8b2f6c17"
            }
          }
        ]
      },
      {
        "id": "56a5a613-3f99-4162-a098-15e2a7861035",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "78a2e283-447c-453c-bb5e-825898d8ea72",
            "name": "Negative Testing",
            "item": [
              {
                "id": "716f345c-bc7e-4dee-8d0c-25d3344b45af",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "693d64c5-5986-4c0c-9ef2-907f4c9e6e8f",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7763e8c8-b49c-49fc-8486-090c72d47202",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "34de9bf8-e9da-4759-8c75-b3a67ac37cbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "614358eb-71a8-48f8-8928-82be7c7b1ea6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bdb80512-aeba-452b-a1d7-766af718bae1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1618531f-90b9-44d3-a28b-bef852d9ff5e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "83bc1384-16f6-4243-bdd3-e519ef9a7ff8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a7f2b84f-9f4e-4ac8-8826-a8060651de9b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f7103048-2fcf-46ca-80b3-a73070801fc5"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "4afe4c68-2bd3-4a77-8237-6365e2180613",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7329fb04-c632-4bdc-93a2-d70bb6a9acd9"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69ad4a39-8d98-4897-a6a9-10e34576f41c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "24843e8f-ab69-4c2c-abac-1936d9c76bc9"
            }
          }
        ]
      },
      {
        "id": "05d968cf-e7de-4ea8-a15e-13b04f242834",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b245d7fa-320d-4e6d-a730-30820daaa90d",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fc94756f-ed7e-4625-b2ee-81b0872f19da",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "d42d6726-432e-461f-a946-65862d070679",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "9f91871f-40cf-401b-a230-c1561cdd0bce",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "97e51486-8dee-4ff2-ab2d-cb16cfc075ab",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 26
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 64.3157894736842,
      "responseMin": 6,
      "responseMax": 207,
      "responseSd": 17.2046075986157,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1706747760638,
      "completed": 1706747788122
    },
    "executions": [
      {
        "id": "2d0a19d9-9212-4d86-984b-fb7732b719d7",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "196687b9-8983-4e57-b97c-086ff03678dd",
          "httpRequestId": "789b80c1-6e44-424a-9cf2-eafe56803fc2"
        },
        "item": {
          "id": "2d0a19d9-9212-4d86-984b-fb7732b719d7",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "068de988-8614-43ac-b6af-422f50af7515",
          "status": "OK",
          "code": 200,
          "responseTime": 44,
          "responseSize": 0
        }
      },
      {
        "id": "0f43fd60-5a80-4bca-8c18-491242474a03",
        "cursor": {
          "ref": "440cd54e-7c9b-46f3-94d6-49f61f5dd544",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "0708e9a6-43de-4018-97bb-72434d9f5402"
        },
        "item": {
          "id": "0f43fd60-5a80-4bca-8c18-491242474a03",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "35470568-18e5-41c7-9745-9c3f1e3bad0e",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "f7d5151e-3826-4364-8e93-a07fd2db37e7",
        "cursor": {
          "ref": "2a4a224f-f5ba-4ce6-b4e0-ed806fd823b5",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "4bcaf8e0-d2ad-4435-8314-bd36ffa55df5"
        },
        "item": {
          "id": "f7d5151e-3826-4364-8e93-a07fd2db37e7",
          "name": "did_json"
        },
        "response": {
          "id": "c4195410-4ca4-4c71-b10f-41b42b9165e5",
          "status": "OK",
          "code": 200,
          "responseTime": 207,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e87723-c78b-44b5-b7ac-5cf6d5df4aca",
        "cursor": {
          "ref": "1285b975-c458-4f13-841e-741a715e3215",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5324e6b-2043-4e34-bd4d-724c57501a4e"
        },
        "item": {
          "id": "38e87723-c78b-44b5-b7ac-5cf6d5df4aca",
          "name": "did:invalid"
        },
        "response": {
          "id": "dcc64419-c43c-4581-bc95-d981f9fc888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38e87723-c78b-44b5-b7ac-5cf6d5df4aca",
        "cursor": {
          "ref": "1285b975-c458-4f13-841e-741a715e3215",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "d5324e6b-2043-4e34-bd4d-724c57501a4e"
        },
        "item": {
          "id": "38e87723-c78b-44b5-b7ac-5cf6d5df4aca",
          "name": "did:invalid"
        },
        "response": {
          "id": "dcc64419-c43c-4581-bc95-d981f9fc888d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "368ac862-e552-42b8-b141-1367337a9bd2",
        "cursor": {
          "ref": "ad8f67d2-7b4d-42fe-979d-4d6b23546d45",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "70dcc3e2-09b6-40cd-a2a5-3b43d959872f"
        },
        "item": {
          "id": "368ac862-e552-42b8-b141-1367337a9bd2",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "359cda09-875c-47d5-b95e-6b43a1ad960b",
          "status": "Not Found",
          "code": 404,
          "responseTime": 110,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a143ae80-6fc6-4dc2-8b3a-0ede60d8644d",
        "cursor": {
          "ref": "f4939764-8beb-4a4c-b855-da04607d891b",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "c332fc97-2988-46b3-a88d-26b77cfddc38"
        },
        "item": {
          "id": "a143ae80-6fc6-4dc2-8b3a-0ede60d8644d",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "59290db7-6e7b-4c40-86f1-522bb1b59a0c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16abf8be-f996-4c87-b8e9-033c2adde7b8",
        "cursor": {
          "ref": "64754440-1afb-453d-9602-4ea94ed79488",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "bb7be6da-a1c2-471e-9634-427308961286"
        },
        "item": {
          "id": "16abf8be-f996-4c87-b8e9-033c2adde7b8",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "0643b304-ba7c-40b8-a82a-86dd7b7d8d78",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9fe70cf-6c63-41bc-b5bd-a7448a39294d",
        "cursor": {
          "ref": "03b66557-7369-4a07-a187-78649180a384",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "633391ff-0b3d-4646-adb5-a28eef01ab63"
        },
        "item": {
          "id": "f9fe70cf-6c63-41bc-b5bd-a7448a39294d",
          "name": "identifiers"
        },
        "response": {
          "id": "fa13dd6b-4ecc-489d-b88d-64502afde7f0",
          "status": "OK",
          "code": 200,
          "responseTime": 95,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a44cf68-c3e4-4046-9fdc-ee6b293379e7",
        "cursor": {
          "ref": "85ff944d-56e2-430a-8186-b424ce3098bc",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "6ce3f641-a4f8-4fd2-8696-61234050bd71"
        },
        "item": {
          "id": "7a44cf68-c3e4-4046-9fdc-ee6b293379e7",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "61454089-982d-49cd-b90f-4ce46b8e2cd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38f5b360-fd75-40c3-864c-a390fb95af0d",
        "cursor": {
          "ref": "cee7d5b6-90fc-44e4-8a61-dba812c20bf0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ec82b0e9-5791-4965-b8b5-44775ea9533a"
        },
        "item": {
          "id": "38f5b360-fd75-40c3-864c-a390fb95af0d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "0fb795fa-1271-4e46-bdfe-a8af48837c22",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159894e4-accb-4f29-8587-083c11dc53bf",
        "cursor": {
          "ref": "0dc34cb3-01d3-47ed-b7ee-3ac416b73a07",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "dd095386-a524-408a-b5a8-536a2477fc31"
        },
        "item": {
          "id": "159894e4-accb-4f29-8587-083c11dc53bf",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "1a80009f-c2b9-4646-b84b-797dc497c757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba80df69-b406-4429-adc5-c214a738a988",
        "cursor": {
          "ref": "697d1b31-a2db-4b3c-971b-463d31b5e3d4",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "4b11e2b2-22a8-493d-91ff-de922a6626fa"
        },
        "item": {
          "id": "ba80df69-b406-4429-adc5-c214a738a988",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "528b167e-00c0-4dd2-ac3a-844e36086fb1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "359b740c-b25b-4957-9eeb-dd50aaf7f3d0",
        "cursor": {
          "ref": "beca945c-05c1-4668-87e9-cf579780a943",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "de5000b3-42ef-4cc5-8371-875d5a9f28b9"
        },
        "item": {
          "id": "359b740c-b25b-4957-9eeb-dd50aaf7f3d0",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "71564817-1ea6-488c-90db-f73903580be2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3e16324-8664-4006-be9f-4f0e679f60e8",
        "cursor": {
          "ref": "56e95864-ce15-4d54-b223-df73914ff4f8",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "22365652-ff32-49c9-bfa7-cb12d34fdded"
        },
        "item": {
          "id": "a3e16324-8664-4006-be9f-4f0e679f60e8",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1803329c-cb52-4efa-87dd-bcb905198a24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2516bdbb-8c6a-4be7-9ae1-490500dcb386",
        "cursor": {
          "ref": "6f213d49-584c-4b89-bd52-25c9406a2e68",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "e3d7e0f3-f7ff-41c3-82bb-e07d136e9e4b"
        },
        "item": {
          "id": "2516bdbb-8c6a-4be7-9ae1-490500dcb386",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "3c6ac242-767b-4962-af57-4a4a30c77039",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e54fbaa5-446a-4682-9dc0-74cbe00bb65e",
        "cursor": {
          "ref": "497942f9-ffbf-4cf2-97b9-09d507ee7bcd",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "8fdb59c1-1bb6-48db-8e79-9da83376ffcc"
        },
        "item": {
          "id": "e54fbaa5-446a-4682-9dc0-74cbe00bb65e",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "2824e043-cdb1-4c83-bfed-5d24195251e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b66305e-a03d-445a-bf50-d763893f2239",
        "cursor": {
          "ref": "33334dfe-df22-48b9-9cd3-bd169cacc8e8",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "5275b5e9-b2cd-4ab7-8ebc-842dc9685a40"
        },
        "item": {
          "id": "0b66305e-a03d-445a-bf50-d763893f2239",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "dbc43c51-e132-4e6d-ad3c-32a9898acd66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "396b11be-66aa-44a5-afe9-b54ca34fbaed",
        "cursor": {
          "ref": "3a389567-d137-4ff0-bce3-be3eb0f5c9c4",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "5d02ec7e-553a-4498-8abd-36ce08be9ba1"
        },
        "item": {
          "id": "396b11be-66aa-44a5-afe9-b54ca34fbaed",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "ee637e7e-93e0-4e4c-8da6-897c647f4f6d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a47f655-19df-4e5b-b2f7-5fe2b8be533b",
        "cursor": {
          "ref": "887dad65-f91c-4048-ae2c-1ded0965d216",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "8ff25078-e18b-40a3-88c4-3c5657c16b20"
        },
        "item": {
          "id": "9a47f655-19df-4e5b-b2f7-5fe2b8be533b",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "e16d3e2b-5e39-4d08-8a55-07bc70560359",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91264d85-05b6-4d56-ac10-ba763c155088",
        "cursor": {
          "ref": "c16127d1-ad9b-46db-9040-ab3bf9cf95fd",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "f411b689-f588-432b-84ee-06b727bdf012"
        },
        "item": {
          "id": "91264d85-05b6-4d56-ac10-ba763c155088",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "7a430dee-c55e-4a0d-a12a-0faec5b1a3db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "366cd920-9bbc-4242-b261-164967dcb695",
        "cursor": {
          "ref": "b95ae460-4c0d-4cf0-b35b-6949236b2bc9",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "3b71fa0b-949e-4338-b464-0beee0291da8"
        },
        "item": {
          "id": "366cd920-9bbc-4242-b261-164967dcb695",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "417ca8f3-6a60-4056-b0a3-500bdf662c47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5e10e14-98d1-4592-b756-9f2179348419",
        "cursor": {
          "ref": "e0ded7f9-4ed7-4d20-8715-e247c1d0793f",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "d52c1040-3c2c-4172-bcd0-d1203535cd7a"
        },
        "item": {
          "id": "d5e10e14-98d1-4592-b756-9f2179348419",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "cd62edd3-3a1b-427a-9acd-0d81c87f1603",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e5836b-dce6-42e6-b15d-263a88500849",
        "cursor": {
          "ref": "9d610dac-72a8-4291-a12c-d6c7aba0ccff",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b0b3e438-04a0-4c6d-99ea-61efd50adeb1"
        },
        "item": {
          "id": "d9e5836b-dce6-42e6-b15d-263a88500849",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "dd7bb452-e511-465b-91e8-c1dea8467eea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9698882-4e2f-4466-b508-a68c101be568",
        "cursor": {
          "ref": "0651fac1-c92f-4be6-931e-b5148bde5411",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "f84987bd-e939-4958-8be7-8f0eb7bb46c4"
        },
        "item": {
          "id": "f9698882-4e2f-4466-b508-a68c101be568",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "5ae13513-8e8e-4317-a0f2-e42cd6bc9410",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091c222d-8c9c-44d1-b1fb-8a21578bdbab",
        "cursor": {
          "ref": "5df6701d-6b91-4031-a4fa-8eda8437251e",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "40a4a1c6-5c66-4f0e-b3a6-35ff9a31b26c"
        },
        "item": {
          "id": "091c222d-8c9c-44d1-b1fb-8a21578bdbab",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "a96d4f4f-f4c0-4b16-b39a-c871fee4630e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dec22d5-882f-44a0-af9b-65ddda55d072",
        "cursor": {
          "ref": "4e596807-a120-4035-9e64-c66dc2faffbd",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "d4fae9f0-4bfd-4701-bf70-6235e322a8d2"
        },
        "item": {
          "id": "2dec22d5-882f-44a0-af9b-65ddda55d072",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "f0e66e01-94f5-4a91-8a03-099713b02a66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0186224b-c463-400b-ac16-ffb8de301156",
        "cursor": {
          "ref": "3d5c1708-c98c-49ac-b25c-44c615b36824",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ada50b40-0a85-4465-8681-cc004cc4ac22"
        },
        "item": {
          "id": "0186224b-c463-400b-ac16-ffb8de301156",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "47e9ef2b-6180-4e1b-95ff-6c4ac58e0cd3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6320486f-ac7b-4612-a6f5-a6b078a621a5",
        "cursor": {
          "ref": "8f071627-2ce9-41c0-8900-a964ec986b1b",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "07731167-2601-4fa3-80d5-96d63f8496f0"
        },
        "item": {
          "id": "6320486f-ac7b-4612-a6f5-a6b078a621a5",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "f7f2a693-aa65-4d4c-b9b9-5b931e088f17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9da626c9-f374-42cc-95cf-0647aa0de732",
        "cursor": {
          "ref": "2d60f9c6-29d7-4b50-826d-0f87aa3e9b1f",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "cd46a998-e2e6-49b8-b241-1d75c077572c"
        },
        "item": {
          "id": "9da626c9-f374-42cc-95cf-0647aa0de732",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "109b7a0a-6f0a-46f7-817f-63e57c71678f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6ee4910-9638-4892-adb1-c0546b8895dd",
        "cursor": {
          "ref": "850ed387-55cc-47b9-8939-aa7207dfaeb0",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "17aaf759-4248-44a8-8329-54c732c48777"
        },
        "item": {
          "id": "c6ee4910-9638-4892-adb1-c0546b8895dd",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "07c97100-f223-4214-9b83-0faaa074234a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7f79815-d3f6-4250-879d-627f143b60ba",
        "cursor": {
          "ref": "35002de3-5fcf-4ca4-a2d6-cbd72541e1ef",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "ce056afc-2bb1-46a7-8458-8e81507c411e"
        },
        "item": {
          "id": "e7f79815-d3f6-4250-879d-627f143b60ba",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "57783c38-5571-4035-97b6-604de948b0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c04bbd34-9874-4287-b227-6b778039d065",
        "cursor": {
          "ref": "55af4af3-9678-4c9f-bf7d-50074e503535",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "9e79116a-7c81-419c-b1f6-32cf06ac89f0"
        },
        "item": {
          "id": "c04bbd34-9874-4287-b227-6b778039d065",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "c9cf270b-83bc-4286-9fe7-5189d177a1ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a1735a1-0356-4fb7-98d7-af02b2cb34aa",
        "cursor": {
          "ref": "5e262b91-8737-4b1e-8f43-d6a9d4e5f360",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "84de0ba8-df78-4ad2-8f93-85b9c9bc16c1"
        },
        "item": {
          "id": "1a1735a1-0356-4fb7-98d7-af02b2cb34aa",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "067d092a-2799-4232-84e4-1eb972a75aae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65afa2ec-6969-4f14-b116-f31ba435915b",
        "cursor": {
          "ref": "94a29e4d-9600-46d3-b464-6b6dceb6ef53",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8999e6f4-0d69-4f96-b8d0-698dce92fd04"
        },
        "item": {
          "id": "65afa2ec-6969-4f14-b116-f31ba435915b",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "602d5f7d-a664-47b6-b433-7679992c41d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4765ff02-7286-4fec-ba57-abe91def0a3b",
        "cursor": {
          "ref": "6795d38f-cb20-4861-bf95-263fccc92da8",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "f269915c-516f-43b3-bb8e-1d0da85a8608"
        },
        "item": {
          "id": "4765ff02-7286-4fec-ba57-abe91def0a3b",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "34901374-006d-453c-a133-ea9f0dc2735a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26b8c2ba-4539-4967-bbba-9d9850509c9f",
        "cursor": {
          "ref": "28727e73-b1ee-4223-976c-e22e162b4b91",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "0c96a245-8907-4061-acba-004999d5fa74"
        },
        "item": {
          "id": "26b8c2ba-4539-4967-bbba-9d9850509c9f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "dd773931-2503-4ee0-b915-14e39c3e4a59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "234ad7fe-a09f-4528-8606-23be4323d8ea",
        "cursor": {
          "ref": "897fa84f-5f07-4231-88e4-683aac449d47",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "dea98ccf-8bb1-451f-a777-fdee8903a729"
        },
        "item": {
          "id": "234ad7fe-a09f-4528-8606-23be4323d8ea",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "b08cd621-061b-4525-aff9-bf3c04e89adb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a60035a-3bd0-41cf-8fdf-2daf346e9a64",
        "cursor": {
          "ref": "ef32e15a-d308-47e8-a8bf-1ae3c70dc0d0",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "eba7d652-4feb-49b6-9fe6-19347376ff06"
        },
        "item": {
          "id": "6a60035a-3bd0-41cf-8fdf-2daf346e9a64",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "132b67df-a5df-4128-9d0b-61116ba3f55e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "617661c7-b6d9-4f85-b776-525049e5137b",
        "cursor": {
          "ref": "0cf9a4ba-d11d-4a6d-a6ae-d9bd8f3a038d",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "1f4511b7-4a5c-4c15-b1aa-e88b7919f27b"
        },
        "item": {
          "id": "617661c7-b6d9-4f85-b776-525049e5137b",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "92103a0e-aaac-4c92-bfdf-9ffb287da1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d41a31df-7378-4606-8a00-bf44fe86d2a9",
        "cursor": {
          "ref": "55dbdb1f-9c3a-4977-9de2-27d7ea24eebb",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "c03f3cd8-481c-4eeb-ad05-368c8bb5eb1c"
        },
        "item": {
          "id": "d41a31df-7378-4606-8a00-bf44fe86d2a9",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "117ad760-3ee2-49bc-8b62-abd86ea79f03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "899992ef-fb44-49b4-a012-d959a9236323",
        "cursor": {
          "ref": "cff526bd-d0c0-433d-bc7c-f5067b053b4e",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a9ac19da-f1f9-473f-97f6-54baf2d8c475"
        },
        "item": {
          "id": "899992ef-fb44-49b4-a012-d959a9236323",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "79d2aa79-be1b-468f-ae94-9cddea276036",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0144cf7e-1bbf-421a-a05e-f1c35984b2e8",
        "cursor": {
          "ref": "a1e680a9-cec2-44cf-b04b-ad07e38619f1",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "7df92319-882c-4d0b-8312-527d46aba8fc"
        },
        "item": {
          "id": "0144cf7e-1bbf-421a-a05e-f1c35984b2e8",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "9d29d130-2558-424b-9534-6781bd9b69cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f595eeff-7e5e-455f-8e7a-7209bb45c0c1",
        "cursor": {
          "ref": "0b23b81d-2bfa-4b57-9697-6fce23d4f183",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "874de23c-9763-46ae-bff2-ebeb2a6328ed"
        },
        "item": {
          "id": "f595eeff-7e5e-455f-8e7a-7209bb45c0c1",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "84f6ec84-9683-4596-87b6-857b533445a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f94549c-7f7f-4d50-b6f9-827103b26d25",
        "cursor": {
          "ref": "f70fd9d5-f4aa-4809-91fd-92bd350eff2f",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "3c93c653-2f20-495a-a83b-4d509511a43b"
        },
        "item": {
          "id": "5f94549c-7f7f-4d50-b6f9-827103b26d25",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57282d7e-c2eb-4cfa-b736-2d0c3504f2d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9551a129-c446-491b-a350-5cbd81b52968",
        "cursor": {
          "ref": "1f1d51c6-1b7d-445c-af3c-839078142918",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "050cbb98-1d5e-4455-a653-5f8008752969"
        },
        "item": {
          "id": "9551a129-c446-491b-a350-5cbd81b52968",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "16d4dd42-a243-450a-8867-4798615e490a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94e6f96c-16c1-4978-87ac-725ef3fbdd07",
        "cursor": {
          "ref": "6a8a3c32-c638-4f72-a19d-a73b3bc507f4",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "2a67bb63-c4fb-4ee7-947d-3bcc94a42e41"
        },
        "item": {
          "id": "94e6f96c-16c1-4978-87ac-725ef3fbdd07",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "e5bdbb52-2e86-4f21-8179-be40d97e2a44",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3be27434-1ed4-4079-97db-474999e500c3",
        "cursor": {
          "ref": "a42ad3b2-0ef6-475e-9d5f-b931f7cb3c6e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "ff1502de-5c2d-467e-85ac-d59914795adf"
        },
        "item": {
          "id": "3be27434-1ed4-4079-97db-474999e500c3",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "16217af6-ebec-4645-9300-9a7cd4b02eba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7bef1aa-c5dd-465f-8d51-59097a27aaaf",
        "cursor": {
          "ref": "653f16ec-bab6-499e-b5c5-1dba056a057a",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "78c27d72-bd70-44e5-ad18-014858598b2d"
        },
        "item": {
          "id": "e7bef1aa-c5dd-465f-8d51-59097a27aaaf",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b56eadf2-3886-4623-a6e9-4ce38142cf82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b5d646f-3111-47b9-aff0-8141e6079a84",
        "cursor": {
          "ref": "08ddea38-2e62-4056-982f-42a5af0aea63",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "605e6a89-a9fb-4570-a12c-e4fc4c5df980"
        },
        "item": {
          "id": "0b5d646f-3111-47b9-aff0-8141e6079a84",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "297e0e18-6b76-4c1a-953c-37c1ba38801c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24ea06ff-4722-4f69-947f-494471543224",
        "cursor": {
          "ref": "f697f8dd-90c7-449e-90fa-52b4ce6f50e8",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "f26e2db5-0262-4d55-a76e-77d62b9ba263"
        },
        "item": {
          "id": "24ea06ff-4722-4f69-947f-494471543224",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "bf4c485d-3fdf-4434-84b7-d327769d7d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa036e7-7484-466a-90d4-e7dc18702f7b",
        "cursor": {
          "ref": "c27f8b87-f90d-4d11-afd8-ece723f4cc54",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "dc54eb08-fdff-402f-91c0-4bd75b13ccd4"
        },
        "item": {
          "id": "eaa036e7-7484-466a-90d4-e7dc18702f7b",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "aa1c7e38-6f14-4c7c-b550-9ee46dc4bdad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536a8438-c515-4b96-847e-ff44c5f91254",
        "cursor": {
          "ref": "b44259cb-4d0d-42b3-a97b-10d1fa162774",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "9c87f2b8-b2cc-47ac-8514-967edeafef2d"
        },
        "item": {
          "id": "536a8438-c515-4b96-847e-ff44c5f91254",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "3ba8e72e-799b-4855-9243-360a41c89fcf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d116464-a012-4093-99c4-16288b97c8b7",
        "cursor": {
          "ref": "f3e3419a-4ad3-49b1-a960-82d46ccc204d",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "429b3383-e1f6-4555-8569-cc78c8b8d1ca"
        },
        "item": {
          "id": "5d116464-a012-4093-99c4-16288b97c8b7",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6ffb9f1b-b67e-49f4-8f36-67014ede9e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ad97cb-3941-4984-8121-12ef38a7b724",
        "cursor": {
          "ref": "cd1c9170-9660-4a2a-af73-444bb94ec533",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "b7576a0a-887c-4ae7-a666-494611b1aa08"
        },
        "item": {
          "id": "b5ad97cb-3941-4984-8121-12ef38a7b724",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "3fd69e67-e3f2-4796-b4c1-1c7f85cbbe6e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5dbf7a28-9776-4129-90e8-6c0694cfa477",
        "cursor": {
          "ref": "c64b633d-962c-43da-9806-d72ac70f25ea",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "4c2b90a2-940a-408b-979c-0a810546ccef"
        },
        "item": {
          "id": "5dbf7a28-9776-4129-90e8-6c0694cfa477",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0539d694-b852-40c9-b460-d3fab331c50b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c88c79b-b7c5-405d-9238-58295c68f9a8",
        "cursor": {
          "ref": "3603b75b-cdda-45c5-9995-e2680201d0a9",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "0d907444-0ad3-4f94-a7af-dcad1ed6d63f"
        },
        "item": {
          "id": "4c88c79b-b7c5-405d-9238-58295c68f9a8",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "b1218cc6-a68f-48a5-8ac4-8118ffe6dc5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dee9870-3cea-4ed9-9576-839e92bfffe3",
        "cursor": {
          "ref": "52b877b3-9a8a-4123-adf5-aae6d18f195b",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "77089882-5ca1-4a04-a215-b510785857c0"
        },
        "item": {
          "id": "2dee9870-3cea-4ed9-9576-839e92bfffe3",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "5b4457f4-6819-44e6-8ab1-9f3d3083c537",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db14fd75-d6a9-4368-a480-a42b9d6a658e",
        "cursor": {
          "ref": "09221852-267c-4d91-b4f9-5a7c9eba3901",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "9a4f13de-4078-4456-9406-89c1e810cd8d"
        },
        "item": {
          "id": "db14fd75-d6a9-4368-a480-a42b9d6a658e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "bf7b677c-6955-4aaf-be55-7e3d73138518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4340e13-2a0b-496a-9956-af19c385c28d",
        "cursor": {
          "ref": "8460da6f-29f9-480a-8e81-6b1bbfbbc846",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "fe3829bd-0753-4812-8937-e184e7271c43"
        },
        "item": {
          "id": "c4340e13-2a0b-496a-9956-af19c385c28d",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "7ce016de-91ed-45a3-8d33-68ef1ce24b79",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dc0c69c-9acf-4259-a7a5-31add3460f00",
        "cursor": {
          "ref": "63e602cf-2fb3-4949-8363-dcfc0e556724",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "ea390ae2-ee07-4f75-982c-f33149eba0a4"
        },
        "item": {
          "id": "2dc0c69c-9acf-4259-a7a5-31add3460f00",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "b1c16dda-7b6c-49c5-99d1-662d80b31f2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c542b88-baeb-4a2c-8b64-8ea323338f4e",
        "cursor": {
          "ref": "f1c6e973-d1c0-4968-8998-1e62a542507b",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "a20a7ef3-583e-465d-b99a-60d1e5647c6b"
        },
        "item": {
          "id": "9c542b88-baeb-4a2c-8b64-8ea323338f4e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "b97f1c7a-32fb-4c60-baf2-aec43b912ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74a9afdb-f2e7-41dd-b008-35a3bbaf7f16",
        "cursor": {
          "ref": "55e0f20f-74ab-453d-90d3-f0a1dcda5fdc",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "7f61cd61-e6a3-414f-b6eb-25dd5e72bcea"
        },
        "item": {
          "id": "74a9afdb-f2e7-41dd-b008-35a3bbaf7f16",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "069d84b2-d1c6-48cc-b5f4-c9f9282dd21b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0016cd-e374-4bd7-ae5b-09b408e65783",
        "cursor": {
          "ref": "20d01f1b-45aa-4c25-90f2-897f42156397",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "5a8d6f2d-5675-496b-a5b7-a63f73957bb3"
        },
        "item": {
          "id": "bf0016cd-e374-4bd7-ae5b-09b408e65783",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "2c80d949-7381-4f09-8f90-a29c89825f9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7734b60-8e29-4ad8-bb38-d7ba1fdc4986",
        "cursor": {
          "ref": "b0091aaa-1fdc-4844-9ce5-ca52109c596d",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "9139b97b-3df2-4289-96aa-6300bdf79442"
        },
        "item": {
          "id": "a7734b60-8e29-4ad8-bb38-d7ba1fdc4986",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "78dda09c-6904-4969-b328-5a744abce1e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69c94cd7-11a6-4e82-908b-a879236221bd",
        "cursor": {
          "ref": "8b46baa1-1924-4671-8029-a0212f9fd9f3",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "4d17e1fe-a481-485f-813d-9efec8291058"
        },
        "item": {
          "id": "69c94cd7-11a6-4e82-908b-a879236221bd",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "55dcd751-cd90-434b-9cd3-adef67fdc5a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c905bcf9-8542-4007-9cee-88d0801d5702",
        "cursor": {
          "ref": "4d63383a-f187-4f34-9947-4e21d25d74e6",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c3a8fcdc-b9c9-4916-a654-302513cc558f"
        },
        "item": {
          "id": "c905bcf9-8542-4007-9cee-88d0801d5702",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "e673c86c-d422-45ea-9a2e-24de2a172b66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "150ebdec-a911-4a57-b827-308b8dca06d3",
        "cursor": {
          "ref": "b7f837e6-7f7e-47d0-abd4-caba91b25cbc",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "b60966c8-eb20-4e6b-ab6c-44ee6eb46f77"
        },
        "item": {
          "id": "150ebdec-a911-4a57-b827-308b8dca06d3",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "0a974e8b-091b-4711-abe7-eee732b11d03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6df0679f-895f-43c1-8a86-a4f29be7d5a7",
        "cursor": {
          "ref": "ab36a736-af5c-4bf9-a9bf-55f4d01eff57",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "352aa766-1128-4dd9-a396-e21fac9ad41d"
        },
        "item": {
          "id": "6df0679f-895f-43c1-8a86-a4f29be7d5a7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "9ffefb15-91e7-448c-b562-c5339a354714",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2c4c94c-5f10-4518-823f-cf0bfdd4f635",
        "cursor": {
          "ref": "092a0c07-4557-4fb9-a037-182b4e37fd03",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "d5dcf041-4f90-4633-80f0-65140c4d7329"
        },
        "item": {
          "id": "e2c4c94c-5f10-4518-823f-cf0bfdd4f635",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "d493968e-9c2c-4075-8738-0f1bf440c810",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe8f4c42-7b4f-4b9a-b53f-04e5af32c82b",
        "cursor": {
          "ref": "bc04b901-1a43-4519-85d8-412c3da044f7",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "61b9d515-9f8a-4e5f-a208-dcf08341e09d"
        },
        "item": {
          "id": "fe8f4c42-7b4f-4b9a-b53f-04e5af32c82b",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "39d1a137-5ab9-4f40-b65b-9ba7a1e21ba8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ed645cdb-5aec-45da-9dd5-888e061b6879",
        "cursor": {
          "ref": "1fc19240-328d-4afc-bd54-349834ad4940",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "3ac1e3e5-f03b-4fd4-b4c3-958867f0e220"
        },
        "item": {
          "id": "ed645cdb-5aec-45da-9dd5-888e061b6879",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "aa56fe40-69d1-43c2-bf9b-eb5209d85821",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 596
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a976c17-f889-4752-a3cf-a9b869a5b36b",
        "cursor": {
          "ref": "2ef97bb8-afdd-4c8a-b1cd-014c4891d50a",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "ded6eaae-6d51-4b2b-829f-112f30228d29"
        },
        "item": {
          "id": "3a976c17-f889-4752-a3cf-a9b869a5b36b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fc7487be-52bd-4707-8d06-6b199f35206b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 595
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f93c4bf8-22ec-4db0-994c-2c50d0081d50",
        "cursor": {
          "ref": "8d24b0ce-726e-4805-905e-9124a58d1a20",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "8ba1b4a9-db31-406a-86c0-941ace7eb519"
        },
        "item": {
          "id": "f93c4bf8-22ec-4db0-994c-2c50d0081d50",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "35f2c04b-ff35-4f68-8ca7-0761dc884e84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fb76992-d2bc-4315-9732-6bb2903e875d",
        "cursor": {
          "ref": "d4d8ba90-7990-4e47-b620-3ee8d391a40a",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "d064e890-3121-4cc3-a8d4-7bea028f5773"
        },
        "item": {
          "id": "8fb76992-d2bc-4315-9732-6bb2903e875d",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "810f34bf-af04-43fb-bc03-1e462cc78d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1baa8fe7-0d20-4e77-8bc0-464470cfa059",
        "cursor": {
          "ref": "ae62ed71-6fbc-4c25-bb7d-b4396271c06c",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "e93f142c-44ba-462b-a906-ba0a2ff51fd0"
        },
        "item": {
          "id": "1baa8fe7-0d20-4e77-8bc0-464470cfa059",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "8e7905be-dad7-4078-a297-dbef8e5dcd47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 597
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "282ef763-0bff-447a-9ad8-b02934415c8b",
        "cursor": {
          "ref": "3a454c75-c4d6-4277-bdff-5cd836beb8df",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "f92f671f-f358-4c09-92d1-6ddaae5bf10d"
        },
        "item": {
          "id": "282ef763-0bff-447a-9ad8-b02934415c8b",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "c2d2b057-edde-4063-9888-977f85f4a79e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b53b46c0-9186-42cb-a329-33b563a2f070",
        "cursor": {
          "ref": "978ded1d-a829-4479-b625-c8bf61d623ff",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "f7fc6d55-310a-4f37-9770-7b5aa7a787d7"
        },
        "item": {
          "id": "b53b46c0-9186-42cb-a329-33b563a2f070",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "c9531c13-6279-430e-97db-6962b8798f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3420cc58-eb32-4adb-9970-c357f1893709",
        "cursor": {
          "ref": "fa1cf0c2-c474-4cbf-bc0a-66e0079a2e54",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "78062b05-ce55-47b3-a2d5-20a3076b7447"
        },
        "item": {
          "id": "3420cc58-eb32-4adb-9970-c357f1893709",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "50c59e09-01d1-469b-be4d-5f86ecded3b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99722a7c-bbad-43cf-a476-a4df01701634",
        "cursor": {
          "ref": "37acb110-30b9-4693-9438-e0c39fad67df",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "69d2d912-c8ce-483d-b11f-55df8540afa1"
        },
        "item": {
          "id": "99722a7c-bbad-43cf-a476-a4df01701634",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "e66fe247-0db8-4180-92e4-fc2d2bb03204",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc7ab6ba-a9af-4015-94a5-f0066e360a9d",
        "cursor": {
          "ref": "c3883acf-3ce4-4cdf-bd67-20f05f98df18",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "6e524cbe-ab7f-4632-a56c-bb529bdc2386"
        },
        "item": {
          "id": "cc7ab6ba-a9af-4015-94a5-f0066e360a9d",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "7b7a8d77-808f-4fe6-bca8-511510f843ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b6bd461-6209-4fca-ac85-6bb638ce4c40",
        "cursor": {
          "ref": "a0e25494-0698-419c-9fee-be7cb78ff34d",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "f87301ca-dd21-4713-8b87-4c7704662cce"
        },
        "item": {
          "id": "1b6bd461-6209-4fca-ac85-6bb638ce4c40",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "e08be3fc-3432-44a7-b700-2a29db5fe9f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3c8f13e-5a8f-437f-ae2d-c0f0882a2d30",
        "cursor": {
          "ref": "31d694f1-626a-475e-b764-f9d7049f5c4a",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "a8118775-b853-489a-8a34-80e04f92376e"
        },
        "item": {
          "id": "a3c8f13e-5a8f-437f-ae2d-c0f0882a2d30",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "660c0cbc-bb54-408b-b683-fea3a56a9883",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05532b85-2101-4ab2-ad44-05e68da40275",
        "cursor": {
          "ref": "9b9c8a05-53b7-47bb-8c06-d830e0424692",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "7374d94c-d529-428a-91ce-f5867705cf1c"
        },
        "item": {
          "id": "05532b85-2101-4ab2-ad44-05e68da40275",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "099780a1-a897-48e2-8d4b-c88f0cae4f77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6491ee06-3322-4f1e-82ef-aabcfb434c08",
        "cursor": {
          "ref": "fb3aa7a5-af0e-4ef2-99cd-9cce180c25d7",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "c49d9035-a3e1-41c4-92df-af4603c4ce8c"
        },
        "item": {
          "id": "6491ee06-3322-4f1e-82ef-aabcfb434c08",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "74f56d1e-ff8c-40a2-874a-2684c685c856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9280e7b0-d989-400d-87ad-a44ee1ff5350",
        "cursor": {
          "ref": "c3829c5b-a0a1-441b-864a-a8ba7ca4d338",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "42135e26-1777-4a2c-be6b-ca930a173905"
        },
        "item": {
          "id": "9280e7b0-d989-400d-87ad-a44ee1ff5350",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "02d896eb-3e2e-4dd7-a6e4-6e725c6aa6b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4982dcaf-a5d1-4b31-8939-ea926d4ec6f6",
        "cursor": {
          "ref": "fd463b62-b83e-48b2-b5f0-cc17e59f327d",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "f938c99a-0fa9-453e-b553-7f10c07e99e3"
        },
        "item": {
          "id": "4982dcaf-a5d1-4b31-8939-ea926d4ec6f6",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "abb77e0b-a2b4-4587-ab18-dad406bf9a64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc8f19bd-7f1c-421f-9641-6bae8116bb3a",
        "cursor": {
          "ref": "c957d085-0dc4-4792-9330-24cfa8d5f50f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "7dc8ebcf-5e1b-4a89-8f16-a431e179fc43"
        },
        "item": {
          "id": "cc8f19bd-7f1c-421f-9641-6bae8116bb3a",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "33c6c7f0-872f-42ce-b9fe-4653c52c0572",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "268ca3a8-bb52-4f00-9952-31d05b108b08",
        "cursor": {
          "ref": "aff282a7-0413-4c42-b4b2-846ba07b0bff",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "29534fcb-2ace-4756-bb7a-8d87de6dc9a2"
        },
        "item": {
          "id": "268ca3a8-bb52-4f00-9952-31d05b108b08",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d4666db4-ace8-4e0e-9b3c-c76af01bd8c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0485a87f-2f06-4013-9195-753ef2283fd5",
        "cursor": {
          "ref": "426a5444-0658-444d-99e8-4486388cec4b",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "ce753e4a-2d74-480a-840f-aebe4f94fa76"
        },
        "item": {
          "id": "0485a87f-2f06-4013-9195-753ef2283fd5",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "9081e434-dd24-4d35-8864-daf5ccddb4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b38d55d-26f0-44ab-bc50-774ac2e147e5",
        "cursor": {
          "ref": "3bea2e48-9902-4a16-97e3-93477ec85bd3",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "a771cf3d-6f59-405a-bbed-f147025f2b40"
        },
        "item": {
          "id": "9b38d55d-26f0-44ab-bc50-774ac2e147e5",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "c8093bf5-1b01-4186-b700-dd56cc3b79ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecab1dff-77fd-4813-9c08-041373e96403",
        "cursor": {
          "ref": "c8eeb808-ef74-4e3d-a9fd-39fcd829c8e1",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "3ce551fd-69c9-4e4f-84a2-8784b75575d7"
        },
        "item": {
          "id": "ecab1dff-77fd-4813-9c08-041373e96403",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "64132ad7-6a65-47f8-8286-c72372245384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f2dc072-8f8e-409b-bdc3-b5ddc0b65186",
        "cursor": {
          "ref": "d5c7f270-c484-436b-8572-04b547a808e2",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "492495bd-8c5b-4625-843c-93b0e3154b78"
        },
        "item": {
          "id": "5f2dc072-8f8e-409b-bdc3-b5ddc0b65186",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "e4b98970-f4d8-4d56-a264-e7d7ef9c7f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25924b41-2af8-4807-bcf2-1af8532072a4",
        "cursor": {
          "ref": "d0e05245-7d79-4c69-bf7f-6876df5f0caa",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b4004c9e-704c-449c-a98e-554b2cdafca6"
        },
        "item": {
          "id": "25924b41-2af8-4807-bcf2-1af8532072a4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "8b98b74e-8435-4c9f-9439-896c470ee5e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c79c6da-622f-43ab-8b35-93ef519aee34",
        "cursor": {
          "ref": "5210667c-4c07-4a3d-8280-0eb0ef4fb496",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "eb43b70b-311f-4a06-a38f-1331b362b85d"
        },
        "item": {
          "id": "0c79c6da-622f-43ab-8b35-93ef519aee34",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "a1c2bd20-c822-45e7-b91b-7b4b008061c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b19bf3-819c-40e7-9645-0ee966df2bef",
        "cursor": {
          "ref": "9718e16a-c938-4cb2-8bdb-1e57f6a96899",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "3034fcb5-cd7b-4c17-9c89-066148603aee"
        },
        "item": {
          "id": "21b19bf3-819c-40e7-9645-0ee966df2bef",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "59b1f657-7696-497b-96ba-d218d2a081e0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e882af-6c63-4cd0-8a0c-d8c5e8bd65e2",
        "cursor": {
          "ref": "31deda74-818e-40d2-84a3-7992abe8923c",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "5d8b7d39-b4d3-4147-81da-6f799c91bf88"
        },
        "item": {
          "id": "83e882af-6c63-4cd0-8a0c-d8c5e8bd65e2",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "b2ba04a1-809d-4378-aac6-6d086b15f9a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5028b72c-352e-4f66-9057-8c3bd8e207a9",
        "cursor": {
          "ref": "daf6904b-a468-4a56-8897-4e5d5c4ced39",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "c23a53f7-0e67-4764-bdcf-a2730607b0d1"
        },
        "item": {
          "id": "5028b72c-352e-4f66-9057-8c3bd8e207a9",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "7e551192-3440-4bec-8a7a-15e9196b3b88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7295d321-5837-4b06-8904-2752ef73449f",
        "cursor": {
          "ref": "11a76a54-6d05-429f-84a4-ab5e1a705178",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "faebb24b-8456-4e12-8ac3-dd625bea67d7"
        },
        "item": {
          "id": "7295d321-5837-4b06-8904-2752ef73449f",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "394ffa0d-33ae-4b62-9970-3a4990ff3fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d10ec42-559d-4ba8-a908-9ba5947129ea",
        "cursor": {
          "ref": "aab13335-bdb4-4854-99b3-db52b775893b",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "751272a2-1fd2-489d-8e31-6970e0795111"
        },
        "item": {
          "id": "8d10ec42-559d-4ba8-a908-9ba5947129ea",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "b4e6a2d1-20ca-4f23-a029-1fe810f5048c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05e06ae0-898d-48b9-a371-fb75d88f26f4",
        "cursor": {
          "ref": "07c7438e-312b-4a16-9d9f-e444266d8bf4",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "3d63774b-289c-4279-aa90-04e5c86cfc22"
        },
        "item": {
          "id": "05e06ae0-898d-48b9-a371-fb75d88f26f4",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "cdca4521-6a58-4808-aa88-2f933b28de13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1db97fc-6a9e-4dbd-bfe0-3f6a4585e006",
        "cursor": {
          "ref": "2450efef-07a7-4b0e-9631-7397310eb3db",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "3880596a-6105-40ca-bd99-b82743716452"
        },
        "item": {
          "id": "d1db97fc-6a9e-4dbd-bfe0-3f6a4585e006",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "4813c276-7910-410b-a17f-67641163a2a3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff0ce6a8-5e82-450c-aa09-451f8dd31b4f",
        "cursor": {
          "ref": "f8c83b51-7c0f-4caf-9512-13e472706b67",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "fb1b91c6-e3f0-402a-a0ea-e2300de649b5"
        },
        "item": {
          "id": "ff0ce6a8-5e82-450c-aa09-451f8dd31b4f",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "db2fcecc-b278-4e8b-bf26-61691b6bae38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "def6a5f8-dd23-4b84-bc43-b906a33e01bc",
        "cursor": {
          "ref": "4b3c83c5-f78a-43bf-9b74-4a185f906fb2",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "ba1c3631-7c16-4eb6-b661-196cdb8b1bb6"
        },
        "item": {
          "id": "def6a5f8-dd23-4b84-bc43-b906a33e01bc",
          "name": "credentials_issue"
        },
        "response": {
          "id": "ffec8649-a73d-43df-af85-461201aa73ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 207,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "9694f37e-9a0a-428c-a151-c3ec4fa99dda",
        "cursor": {
          "ref": "33ab190d-dfe2-4694-913c-e5ad47f13704",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "4b6f3461-67c8-42fe-8cdd-1bdd68f3b17c"
        },
        "item": {
          "id": "9694f37e-9a0a-428c-a151-c3ec4fa99dda",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "789e4c6f-23ed-4e29-b1d1-bc4afa613c87",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "190d3e7b-f21c-4382-8b91-357a6691a8c1",
        "cursor": {
          "ref": "fbb9212d-1908-4834-af8d-31dca4b8e0dd",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "546d954a-8f1e-4868-be99-9649e14b247f"
        },
        "item": {
          "id": "190d3e7b-f21c-4382-8b91-357a6691a8c1",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "b9c91330-6263-4b7d-839a-bf9af4e9b4ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "e517189e-7c06-491b-b182-8dda5b4ba18a",
        "cursor": {
          "ref": "873fa921-aaf2-4c48-a29f-db3895a46cc0",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "3054fb8f-5694-49f5-a143-53c492d23acb"
        },
        "item": {
          "id": "e517189e-7c06-491b-b182-8dda5b4ba18a",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b4432baf-130e-43e5-9974-c76a69459211",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "86389bb1-34ef-4bb2-87fb-5769954fdb96",
        "cursor": {
          "ref": "40a15837-6d5c-49f4-b6da-592753b4a3e9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "840f31b6-d959-47e7-9032-6f6feb9fa5cc"
        },
        "item": {
          "id": "86389bb1-34ef-4bb2-87fb-5769954fdb96",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "35e83607-3a46-493d-bd26-ba53740dbf73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "3419e594-75bd-45c9-94a1-a98f7014be8f",
        "cursor": {
          "ref": "188eff79-2e6f-4e4a-a4cb-9611c2fda221",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "d7c9370c-51a2-4b7e-ac9f-a4bb85a40444"
        },
        "item": {
          "id": "3419e594-75bd-45c9-94a1-a98f7014be8f",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "08aac05e-6f74-4107-829c-47248ce4586c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 168
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "c5057879-cb1e-4d09-91d5-e58cb6cb96bf",
        "cursor": {
          "ref": "44b93c06-e562-4f8c-9f19-4e9fd01d164b",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "8cbb5c54-dc47-4711-b80c-44a0a6cf94f4"
        },
        "item": {
          "id": "c5057879-cb1e-4d09-91d5-e58cb6cb96bf",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dd962e3b-69a2-46d4-8c05-0cb2e140d3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59d982be-7870-4d38-8a09-c11040e4bfc7",
        "cursor": {
          "ref": "81cb1ce7-86b9-4086-aa3b-19d18004d038",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "5df27954-2eb0-4b9b-a048-4fdd29a4927c"
        },
        "item": {
          "id": "59d982be-7870-4d38-8a09-c11040e4bfc7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1bc79599-2296-48d3-9fc8-7e39d7464c31",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c3f977f-c35f-4271-ae95-3781f4f79298",
        "cursor": {
          "ref": "28ae307c-91ba-4e58-88fb-bd3da45e23ed",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "e6b3728e-66d3-455a-82d6-f18bde82c5ba"
        },
        "item": {
          "id": "1c3f977f-c35f-4271-ae95-3781f4f79298",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "4cf30d2b-78b6-4cf5-8114-94b0763b57b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca3d8d6-a32f-46f3-95fc-54e67dfa0606",
        "cursor": {
          "ref": "2a4a136e-5707-40c1-b242-decffd7151a4",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "478f7b6e-8930-49e4-a543-f6ccd54153c6"
        },
        "item": {
          "id": "3ca3d8d6-a32f-46f3-95fc-54e67dfa0606",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d35cca79-de53-4fc4-9d4f-df5a6c0c7bbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49a037e0-a9b1-495d-a336-db86c4518e0e",
        "cursor": {
          "ref": "68abd101-c161-4b60-8d08-897778f61016",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fdf86f4a-d918-44c6-b03e-9706aa70bc35"
        },
        "item": {
          "id": "49a037e0-a9b1-495d-a336-db86c4518e0e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "663ccd1d-b1a3-41b5-9d01-ca2d4a05926c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcfa7d30-ec51-4e6e-8008-f83c858ebde1",
        "cursor": {
          "ref": "20016798-1bbe-4ebd-95e8-d8b11caa2e9a",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "c99de95d-4ed6-4330-a863-27a36c2ca387"
        },
        "item": {
          "id": "bcfa7d30-ec51-4e6e-8008-f83c858ebde1",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "a301ad87-08a2-42b8-bc39-9bd283d62a67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9baffd7f-e72f-4c72-a7a0-482654317bdb",
        "cursor": {
          "ref": "825ff6e2-7d4d-433c-94c5-e5fc8c132ced",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "8446bca8-6d83-4f8c-8d05-8593a6ecdfff"
        },
        "item": {
          "id": "9baffd7f-e72f-4c72-a7a0-482654317bdb",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "eb40b763-b8ef-4182-8aa0-94d221ec2a9f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad7244af-135e-4c46-ae98-0ba93cf86d2b",
        "cursor": {
          "ref": "1acc934f-6f27-40e7-872e-762fb6d39155",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "b7c509e9-6c55-4020-84b3-2770c4a7bb9f"
        },
        "item": {
          "id": "ad7244af-135e-4c46-ae98-0ba93cf86d2b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "40642551-cee0-4c67-b6c9-319b7ab5f4f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdcf44be-7ca5-4e3e-af65-13557cb73111",
        "cursor": {
          "ref": "19fec1d9-d12b-4e8a-a4e5-4edcaf21d4d7",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "a77ec2bb-d57a-47cb-82c5-2483cc325146"
        },
        "item": {
          "id": "bdcf44be-7ca5-4e3e-af65-13557cb73111",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "73329d0b-94f6-43eb-8449-527bfd5eeece",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c8fa369-0731-471a-83dd-4a7eaa7d5cca",
        "cursor": {
          "ref": "aab01da8-1cf7-4284-a304-18bea8f6553a",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "082dd48a-6301-4b64-b877-a05828d20501"
        },
        "item": {
          "id": "4c8fa369-0731-471a-83dd-4a7eaa7d5cca",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "230816ed-2e43-4513-b3d5-d1eae6e9cba7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c634798-6ca1-4ca4-a901-bb5f01db039b",
        "cursor": {
          "ref": "f891fa10-7513-41a3-b7b1-9b6b46ae4d0e",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4d713b8f-e9bc-4e17-a75d-a8012f687b5d"
        },
        "item": {
          "id": "4c634798-6ca1-4ca4-a901-bb5f01db039b",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "75cdf521-9fa7-40f0-bec9-ccc45597a888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4731ae9-fc03-4ea5-8c56-09257d4339bc",
        "cursor": {
          "ref": "fa970a4f-edb4-41bc-b73a-7bf0735b60bd",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "3e3cd221-3cdb-4333-9d23-79a08f5975dc"
        },
        "item": {
          "id": "c4731ae9-fc03-4ea5-8c56-09257d4339bc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "f9a95ac0-87db-4b25-8cd7-8f4bc91165a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0a5861-8150-46bb-925d-9434bc1e7d22",
        "cursor": {
          "ref": "220dcd46-c5e1-4fb7-8a77-2adca33b5ecf",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "f85cd1a5-d422-436a-a9af-25c6040f9b1b"
        },
        "item": {
          "id": "bf0a5861-8150-46bb-925d-9434bc1e7d22",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "07961687-97b6-4784-8a64-ca56254b84ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c532eedf-c5cb-4d73-86e0-4f8a7f79a908",
        "cursor": {
          "ref": "59476416-8a9c-4248-96a5-8f29a2b848f8",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "d7489130-b000-4968-a833-ace3e5412d06"
        },
        "item": {
          "id": "c532eedf-c5cb-4d73-86e0-4f8a7f79a908",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "338d1209-c3b8-4d8f-8a1a-f4674b823672",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a16d8563-1b2d-45b1-83af-797757fc4cb9",
        "cursor": {
          "ref": "550ee498-6f2e-4cfd-bce3-fc4168fc32d0",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "081d0d9f-d570-4e81-afd5-3afa25baf65d"
        },
        "item": {
          "id": "a16d8563-1b2d-45b1-83af-797757fc4cb9",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "8913ae88-435a-48cf-ab31-d2882f1981ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "570ad937-a84c-47be-b79e-7f0df3426dfc",
        "cursor": {
          "ref": "6208b864-48ab-409c-b1ff-024cfad02f95",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "b902e930-1637-4025-aff7-196b909a3c2b"
        },
        "item": {
          "id": "570ad937-a84c-47be-b79e-7f0df3426dfc",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "ddae96b7-64c8-458f-868b-1be33d0bb2c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "056d9fb9-2b88-4886-a126-d367e0234d2c",
        "cursor": {
          "ref": "ea1013ce-54f8-4740-b344-0773cbe002a2",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "3e8b0f0c-3466-4c1c-9378-8c1311fc1d70"
        },
        "item": {
          "id": "056d9fb9-2b88-4886-a126-d367e0234d2c",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "c6fdb8e1-d64a-424c-b69f-a53cdf19c11c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b55c54d-e3d5-4e7f-9aee-fb02d5fbd938",
        "cursor": {
          "ref": "8ea71187-3739-4069-9d0e-210f0feb1836",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9258b223-aef7-460a-afaa-4f500cc4f8bc"
        },
        "item": {
          "id": "6b55c54d-e3d5-4e7f-9aee-fb02d5fbd938",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b6cef181-0196-40e5-9406-bdd20d010105",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de4a8192-51e9-47bc-936a-d130f75663ee",
        "cursor": {
          "ref": "1e6be05d-d043-4c00-8f76-ce7c746b3994",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "bbc0b8ed-c079-4811-b2d1-888e961fc556"
        },
        "item": {
          "id": "de4a8192-51e9-47bc-936a-d130f75663ee",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "ee3f5d5e-707f-4c0e-8a94-4d9fa7700f83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7585690e-c21b-4b30-b6d8-51638979a7a4",
        "cursor": {
          "ref": "01a2cc9d-02ac-499a-8a7e-74f49b609c2a",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "5a46dde3-a686-421c-ad1d-481b81f3b68a"
        },
        "item": {
          "id": "7585690e-c21b-4b30-b6d8-51638979a7a4",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "ac143d93-3864-4145-9aac-3a5b089f8d48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d3f4b09-a0ac-40f6-8761-a7802551d221",
        "cursor": {
          "ref": "8087d704-1a32-4a9e-a578-7be2e55323f5",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "7c2d180b-baf8-41e0-8812-4afa2c24e9a0"
        },
        "item": {
          "id": "6d3f4b09-a0ac-40f6-8761-a7802551d221",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "0e6b15ab-1be7-4a90-98ca-ec60cd2de0fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d23b2e54-f6b3-4536-b0d1-11097ed07af3",
        "cursor": {
          "ref": "b6e337cc-97cd-4bd8-b992-c62107c3f9e6",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "761da591-2314-4559-9a9b-1f22ee3a5a58"
        },
        "item": {
          "id": "d23b2e54-f6b3-4536-b0d1-11097ed07af3",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "da6be2f5-bf45-4552-967d-3e63eaaffa0c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a33f68f-748a-4563-a024-aa173d11c923",
        "cursor": {
          "ref": "6cc0167d-c35c-420b-b6b5-9ae6aec6e83f",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "4330a740-a661-449b-a6b6-70aff51f8ded"
        },
        "item": {
          "id": "8a33f68f-748a-4563-a024-aa173d11c923",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "48f465d1-5485-4404-aa79-143484990bb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dab8322-2cf5-4b69-9628-06058529c3b1",
        "cursor": {
          "ref": "f8bafb22-07c6-4140-8341-1b8e1c02a62b",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "05afd1b6-44b1-4421-b75f-9a40e6a610b8"
        },
        "item": {
          "id": "9dab8322-2cf5-4b69-9628-06058529c3b1",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d238eedc-e6ac-4a34-b5e8-c29eeadf617d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf05be86-3ec8-4bf0-862b-c38e3fb77da8",
        "cursor": {
          "ref": "55526503-f95d-4caf-852c-66d73379954f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "310b60f9-28e6-49e1-b268-ee7cd8d73b0e"
        },
        "item": {
          "id": "cf05be86-3ec8-4bf0-862b-c38e3fb77da8",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "eae00380-5997-4593-a889-0363e3601f7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5bb9f93-04fd-49f6-ba94-82bde881ab40",
        "cursor": {
          "ref": "47a8704c-94c0-45bc-9271-84277ee8ec3f",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "69af911b-3797-405d-bff2-064a909fd6ea"
        },
        "item": {
          "id": "b5bb9f93-04fd-49f6-ba94-82bde881ab40",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d790ccfa-2704-471d-b980-0d8cb12bada7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e378e21f-8118-43e5-8651-f885d3748dc8",
        "cursor": {
          "ref": "12ef827f-136a-4cd6-b08d-eba605e270b2",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "b372c7f3-3ca7-40a3-88d6-4e3a48c5a6f5"
        },
        "item": {
          "id": "e378e21f-8118-43e5-8651-f885d3748dc8",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "999bc38e-1ade-4c81-9293-1865b0389d00",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e35c340-8f0d-46fa-98a7-d309929c69b8",
        "cursor": {
          "ref": "b7db93c3-2a23-4f87-9958-b53cb9cff676",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "d83ed7e1-cc8d-4337-a38f-a699df1007b9"
        },
        "item": {
          "id": "8e35c340-8f0d-46fa-98a7-d309929c69b8",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d167449d-e02e-44e6-8c67-da80b80fb9f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8abed07-9fd6-47d3-8d7e-85aa458e2118",
        "cursor": {
          "ref": "d633b896-43ff-4614-a4f0-28afab040328",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "70cda80c-7ae0-4b9f-bceb-7df86dbf45ba"
        },
        "item": {
          "id": "d8abed07-9fd6-47d3-8d7e-85aa458e2118",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "16c6a9f2-410c-45c6-a63e-8d35e5b0df8e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5707c346-b358-4060-9f0c-ea79177b6573",
        "cursor": {
          "ref": "04c53309-fa29-45fb-ab70-1d3298d192fa",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "9034a65f-e947-48d1-a43c-75abc15b2a2c"
        },
        "item": {
          "id": "5707c346-b358-4060-9f0c-ea79177b6573",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "9fbbfc21-0c8f-4bf1-b0d6-f28d043d0f6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e92e2eea-4d1f-42b9-b777-1279554df451",
        "cursor": {
          "ref": "5a34215f-60a1-453b-ab54-01bd7972e822",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f9d66968-7e3f-41fb-9cb0-b92c0484e640"
        },
        "item": {
          "id": "e92e2eea-4d1f-42b9-b777-1279554df451",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "506df9a2-f931-45c9-b4f7-d9fb759ff9ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f67a6bd1-3577-4b7f-9719-a4ab92e8989a",
        "cursor": {
          "ref": "af750fa9-dabf-4554-87e1-9a8225c8090a",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "a6009c15-e40c-481f-8ffa-c94347778098"
        },
        "item": {
          "id": "f67a6bd1-3577-4b7f-9719-a4ab92e8989a",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "f61fafae-2c6b-4ac9-b8f5-2d5f086f640f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "661869f5-a000-4c2a-9c9d-10ac6ed933c2",
        "cursor": {
          "ref": "9953ca06-7696-40e6-888e-9701fac2751b",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "46799df2-57d7-4fbe-b56e-2285b6c3cacf"
        },
        "item": {
          "id": "661869f5-a000-4c2a-9c9d-10ac6ed933c2",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c3a3e31-0c56-4d0a-9576-6d9cd11499be",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "12e1ee92-7389-473b-a2eb-55335a684f9b",
        "cursor": {
          "ref": "c237c25e-9200-4d57-ae53-0bb282085ce8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "9186bb1c-9295-458d-a417-2768382d6569"
        },
        "item": {
          "id": "12e1ee92-7389-473b-a2eb-55335a684f9b",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "7239ddfa-6e35-4510-b39f-7bf6fd9f4586",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45523c62-51a2-4569-a490-eae2e9fddc83",
        "cursor": {
          "ref": "10d47f6c-c994-4a4d-a522-f3db7a776a1c",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "632ac55b-579a-4582-9cce-567d56125a4f"
        },
        "item": {
          "id": "45523c62-51a2-4569-a490-eae2e9fddc83",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "9285aa03-5161-4b80-981d-4716c5cc0ba3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5169778-6e62-44e9-addf-f7fbb899b071",
        "cursor": {
          "ref": "3247cca9-9d45-4dec-b519-8cbd76f70793",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "7e0b046c-ed8a-418d-937b-d1c232fff089"
        },
        "item": {
          "id": "d5169778-6e62-44e9-addf-f7fbb899b071",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "e51acc3b-b515-4f90-b101-a7a6672331cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a74202-2039-4a19-a200-6b49d4474cab",
        "cursor": {
          "ref": "4f6172c3-87bd-4b85-a59d-c70d45310b88",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "58869dba-f2a9-4fd2-b02d-aa70e237cd6a"
        },
        "item": {
          "id": "73a74202-2039-4a19-a200-6b49d4474cab",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "8b51979d-b9b4-4408-8cf1-5ec4574d4289",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0ee2558-01b8-4431-a664-cd5f1c46722e",
        "cursor": {
          "ref": "719ed35e-ef85-45fe-84b5-9a88095b460b",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "6887018b-4742-470c-ba53-0ea1b93048ff"
        },
        "item": {
          "id": "c0ee2558-01b8-4431-a664-cd5f1c46722e",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "691c68ad-75de-4bb0-952f-e7119e2f3069",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7137ffb2-2ee6-4cc7-89a8-7f46087ff212",
        "cursor": {
          "ref": "68161732-199e-4bb9-8964-581b2865601b",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2ac0bb5f-7f8c-4d2c-a11c-50e88c3a1fa6"
        },
        "item": {
          "id": "7137ffb2-2ee6-4cc7-89a8-7f46087ff212",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "aa6baca6-72df-465a-b475-6c233ec6365c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89801bd9-fb6d-43dd-9283-4e5719d4739a",
        "cursor": {
          "ref": "440d0b6a-189d-4a38-8d59-f2f71c13561c",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "83f5e3a7-1a82-4997-a4f7-cc7602536a9e"
        },
        "item": {
          "id": "89801bd9-fb6d-43dd-9283-4e5719d4739a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "e9caba12-c048-438a-bf76-2f34c520c63f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3eb51f0b-ad46-4441-b9a8-5fab6abefcc9",
        "cursor": {
          "ref": "23c4d9e8-9860-4e97-b05e-bf665854fa94",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "8cc305f1-27f1-4480-8854-874d8ca62a9c"
        },
        "item": {
          "id": "3eb51f0b-ad46-4441-b9a8-5fab6abefcc9",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2036d8f8-2d8a-4618-a344-f63e1f8dec4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb87e343-4eaa-4fdf-bc3f-598a748ce6ec",
        "cursor": {
          "ref": "d1ccf247-71e2-426b-b341-eefc349856ac",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "bbe899af-fbfd-464f-ac72-5011a9faa77b"
        },
        "item": {
          "id": "fb87e343-4eaa-4fdf-bc3f-598a748ce6ec",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "6f4540bd-547c-4805-9c15-161695757b93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c49adf4-61aa-458b-85c3-a40a77ff6405",
        "cursor": {
          "ref": "399189ee-44e7-4c2e-8d3c-bf66bcb13068",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "49f77e85-b9db-44fd-98f8-f6e526d83a6e"
        },
        "item": {
          "id": "2c49adf4-61aa-458b-85c3-a40a77ff6405",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "37241beb-1f8c-4329-b617-378e19b5f6d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43a19a35-ade1-432c-b7bc-c2955d9fefb8",
        "cursor": {
          "ref": "f3a0e450-536d-4f4d-b8d1-90ff2e4b909f",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "5ad01ec1-f9ec-4367-a666-35a5db99c972"
        },
        "item": {
          "id": "43a19a35-ade1-432c-b7bc-c2955d9fefb8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "ce175c89-d5f7-4f98-a1e4-4335c1d951e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03163c77-0d8d-4bad-b2a9-42d8b4e390fc",
        "cursor": {
          "ref": "a3736f39-3808-4f00-9ace-3a34a19febf1",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "41f2b308-c3fd-4d17-adf1-86c26cf0a540"
        },
        "item": {
          "id": "03163c77-0d8d-4bad-b2a9-42d8b4e390fc",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "9037b35b-9afc-43df-98ec-38a602ac6be7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ec77a7b-dec0-4435-9dc1-2ee79a95d4e2",
        "cursor": {
          "ref": "569e855b-97d6-482d-b4ae-ef847fab8baf",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "45bc47be-ea3b-4345-89d5-07f8a8c747c7"
        },
        "item": {
          "id": "4ec77a7b-dec0-4435-9dc1-2ee79a95d4e2",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "a7089f9f-2c90-4d1e-8e76-81ece2ae46c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd9bc586-6a93-4ffc-8886-3a1a62a3a535",
        "cursor": {
          "ref": "556367ba-98d9-42c1-9c04-5c67d5d8ee91",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "d76aa645-a94c-4f0d-b6aa-b706c1dea354"
        },
        "item": {
          "id": "cd9bc586-6a93-4ffc-8886-3a1a62a3a535",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "25ed0a04-cf0c-40b6-9b71-14b8e6bc456d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c02f8930-5692-4556-90b9-eefa2da46f95",
        "cursor": {
          "ref": "63f8472b-d40e-4fcf-8674-da673c5ca356",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "5ccc5d0d-8294-430b-9c4c-856f5c77f7ca"
        },
        "item": {
          "id": "c02f8930-5692-4556-90b9-eefa2da46f95",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "72acf491-dbf8-4653-8ce3-348c370f6043",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "918cf940-6458-4883-86ff-6f256c1c3d03",
        "cursor": {
          "ref": "7db66e42-c16c-42a6-9b8c-37769a163aa9",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "d17ed55a-dc17-4b14-8baf-6a85a9851807"
        },
        "item": {
          "id": "918cf940-6458-4883-86ff-6f256c1c3d03",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bd14b6b8-c987-476c-8ce0-5dfef36bf3c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "220ac8c2-9aa9-46d8-8ae3-cf2e981afa9b",
        "cursor": {
          "ref": "aa7dba4c-d6fc-41c8-ba8e-925d3fdc512c",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "6c4cf6c3-2818-424b-8c6f-1631c478ae73"
        },
        "item": {
          "id": "220ac8c2-9aa9-46d8-8ae3-cf2e981afa9b",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "25157950-e5f9-42ec-994f-d45c634408ff",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2634712-e52c-4c16-9b3e-9ea7ffb7a1db",
        "cursor": {
          "ref": "ff9cf28f-ad3d-4a10-86df-ea7b13d8ba61",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9f35d205-113d-439b-b64e-29bb771e3af5"
        },
        "item": {
          "id": "f2634712-e52c-4c16-9b3e-9ea7ffb7a1db",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "c9b15cef-c2d2-4ec4-9035-cd7c44dc3075",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87193ca9-faf6-4de8-8dd7-c86c413bf47e",
        "cursor": {
          "ref": "083a4eb5-1090-44df-8bab-def6c313bebb",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "653c4619-60af-4c08-a992-2386bca54fd5"
        },
        "item": {
          "id": "87193ca9-faf6-4de8-8dd7-c86c413bf47e",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "07ec095b-1b1b-43b6-bf6b-b78327f6fb81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cba334f9-9af1-4633-b4f7-5f4bb8c4cc97",
        "cursor": {
          "ref": "816ebdb8-ea1c-4986-94ef-e046f0cefdf5",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d361f89e-8857-4aac-b052-e02f30121dcc"
        },
        "item": {
          "id": "cba334f9-9af1-4633-b4f7-5f4bb8c4cc97",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "76343dcf-9758-42fd-a7b8-3b9dcc375c3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddeb8f33-a05d-471e-b160-ef7ec2baf18c",
        "cursor": {
          "ref": "42c23869-5266-490c-946b-243ab0271150",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "37e12e4b-9aa0-434b-92fa-b55b9e58ff2b"
        },
        "item": {
          "id": "ddeb8f33-a05d-471e-b160-ef7ec2baf18c",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "e2ab544f-e970-4612-8ecf-5987a6083557",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d9fbeca-e113-47ba-90f0-869267c59d3f",
        "cursor": {
          "ref": "e1883c2f-96c4-47b2-9f54-6321f2952daa",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "ba79789a-5db0-4f8e-b78c-7420202bf962"
        },
        "item": {
          "id": "3d9fbeca-e113-47ba-90f0-869267c59d3f",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d8458386-b9b1-4adf-99c3-078ff227af4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3f7fe04-d023-45b0-86c9-2427f88d8613",
        "cursor": {
          "ref": "31d06bf4-3bc6-4306-9baa-9964490b0caf",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "881812ef-098a-46f3-a832-bb2056364e70"
        },
        "item": {
          "id": "f3f7fe04-d023-45b0-86c9-2427f88d8613",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a1303a8-94a7-4bb3-80ca-293da8a5c6dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86c5aa46-21f8-48a6-9cdc-f874598c79f5",
        "cursor": {
          "ref": "79d68b52-7a68-4ee7-b29e-86ab8dc67d79",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "1c06c2ff-e105-46bc-8aae-dcc83a863fa9"
        },
        "item": {
          "id": "86c5aa46-21f8-48a6-9cdc-f874598c79f5",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d9b231ec-8a2a-4e5a-8945-33b04102a99d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a59a65c2-30ab-452e-8a81-888490cb15f9",
        "cursor": {
          "ref": "3511d54d-c1c0-4a58-ad69-f82cd1d414fb",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "d43f50d7-08bb-4bab-adfc-f732d7618e3b"
        },
        "item": {
          "id": "a59a65c2-30ab-452e-8a81-888490cb15f9",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b46d259a-ac59-4e30-8346-75fcc69f84d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 352
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2f76409-dfd2-4f16-b68c-e8357d4cf899",
        "cursor": {
          "ref": "b16e6904-2c47-45f6-9476-53d133c0da4e",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "c817a3ac-dc4a-4af2-88f2-39896a6bf7d3"
        },
        "item": {
          "id": "c2f76409-dfd2-4f16-b68c-e8357d4cf899",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "d11d233b-9c7e-48c9-9f86-86efd7adc2ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d27db2-0c33-414a-8f71-873cf1dbc9e3",
        "cursor": {
          "ref": "791a76cc-1cd7-4186-a465-6246b1567eb6",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "850c0b0e-30d9-481f-9517-4f1496722ebf"
        },
        "item": {
          "id": "c2d27db2-0c33-414a-8f71-873cf1dbc9e3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "befe84f0-0cf4-4a47-8657-7c2ceaad4d3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74666b4c-1f81-4187-88be-503de67c2fa2",
        "cursor": {
          "ref": "1ac52b28-9d87-40ae-826c-5e3845dc9f95",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "ef69bea9-a55f-47cb-baa9-2a54e0d0ca90"
        },
        "item": {
          "id": "74666b4c-1f81-4187-88be-503de67c2fa2",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "0c13d8f5-7b5f-482d-9ce6-d48264eef9dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c2ab23e-23fa-4e8f-b038-1e4d2955ca32",
        "cursor": {
          "ref": "4eba71c4-ab3e-4550-9be7-abfe4126f4ae",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "0e3f0294-4046-4da9-999c-ee4f6c19e96f"
        },
        "item": {
          "id": "2c2ab23e-23fa-4e8f-b038-1e4d2955ca32",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fd97cc9e-69b8-4ea4-b5c3-4cdf656eb3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f51986b-fdd0-4743-b8b8-b955d31a5e59",
        "cursor": {
          "ref": "e34aa2e2-4606-4bb5-9918-790bf96ef56f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "d18cc5d4-f993-4c4e-a7a4-b1df695f6201"
        },
        "item": {
          "id": "0f51986b-fdd0-4743-b8b8-b955d31a5e59",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8c776af3-d2ae-4819-a4b9-5e2e1d636b2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 362
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8f52c03-0ccd-43d6-ab1a-a2d7fa20ed18",
        "cursor": {
          "ref": "7517926e-56c9-4536-b5d1-057a22aabb62",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f66b53bb-2c53-4e7e-9ce9-9c2790791df8"
        },
        "item": {
          "id": "d8f52c03-0ccd-43d6-ab1a-a2d7fa20ed18",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "b41e8177-6963-4a60-8335-c760697012ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "600860de-1c35-4353-9315-1939377af3f2",
        "cursor": {
          "ref": "c00897a7-15a6-40b4-abe3-70cffeddac26",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "8fbbb02b-e766-4481-ac0f-c1d258ed4208"
        },
        "item": {
          "id": "600860de-1c35-4353-9315-1939377af3f2",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "c3109a29-9f84-4695-ade2-132d0229e441",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ded9d70e-e764-468b-9fe7-9120ca347493",
        "cursor": {
          "ref": "89528304-3409-46ad-97d4-8bbbd521502c",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "400c1592-3315-4b16-bd35-c2ada3bc8cad"
        },
        "item": {
          "id": "ded9d70e-e764-468b-9fe7-9120ca347493",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "d3250f7b-03fc-467b-af3d-858c65ae4fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41bd196b-b5fe-48b2-be89-26091b68887c",
        "cursor": {
          "ref": "9e56e275-4b99-438f-8571-604c342b8016",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "d9371fb8-281f-42c3-baa6-29660da4ae21"
        },
        "item": {
          "id": "41bd196b-b5fe-48b2-be89-26091b68887c",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "363f2d08-5215-4972-ba4d-7e9429e46411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f3f7b0e-b129-4228-a058-2d438ab253c2",
        "cursor": {
          "ref": "a561c446-8d7b-4d89-b576-1a5e9cf02655",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "10d69281-65be-46b7-9261-4dc9ae7312f1"
        },
        "item": {
          "id": "3f3f7b0e-b129-4228-a058-2d438ab253c2",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "0db432a4-6f3e-45ce-b92f-270029b048d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "444591b7-47ab-4623-877d-851166522b45",
        "cursor": {
          "ref": "b0d61a91-063d-4204-8218-08c3322b7a77",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "29fb9f8f-639a-4a2e-a7b2-45e8d22ce2cb"
        },
        "item": {
          "id": "444591b7-47ab-4623-877d-851166522b45",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5c921bcc-2715-4163-a373-d093a8e76713",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f127bd94-b18e-4a5e-ace5-4bb8aac07e35",
        "cursor": {
          "ref": "125806f7-f875-4fd9-9a0b-952fe319b5c0",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "9fcf54e1-58e3-487a-822d-0f23acfb7e96"
        },
        "item": {
          "id": "f127bd94-b18e-4a5e-ace5-4bb8aac07e35",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "35f2b4f4-f900-4e98-a0b7-bdff14d7c605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c270536-b528-44e7-b51a-0a867c180842",
        "cursor": {
          "ref": "5ac9ae2e-10ae-40b7-b220-c9c6268c4a0c",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "df4e9658-5343-4fc4-b60e-42b5c0f83bcd"
        },
        "item": {
          "id": "2c270536-b528-44e7-b51a-0a867c180842",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c30c1e4-7302-4bec-9c31-f57d39fe08ab",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "944a2afd-ac35-4c94-b03b-2109c52765c2",
        "cursor": {
          "ref": "10d15dc3-cc0a-46d6-9135-bc266e8bcef0",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "16981b96-e6f9-42c5-ac3f-94a61277f6af"
        },
        "item": {
          "id": "944a2afd-ac35-4c94-b03b-2109c52765c2",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "d64c788c-98fe-417c-840f-ae0f8ed4f42f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6cf9a980-204d-49de-ac71-a1ac5e4698f8",
        "cursor": {
          "ref": "3761032c-9d95-4c2e-a5d2-4f52780588bd",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "3211714a-5f29-43a8-bb11-7e19e9d9d0e7"
        },
        "item": {
          "id": "6cf9a980-204d-49de-ac71-a1ac5e4698f8",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "f72f4a67-3398-4b99-8130-e9d1ebe1c7fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be6cf4a0-8321-47e5-91d9-db3e8578e63b",
        "cursor": {
          "ref": "637f31b7-9fdd-40e2-9726-41db72e2f19b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "0c6fc5a8-ce9e-467d-a198-112044729daa"
        },
        "item": {
          "id": "be6cf4a0-8321-47e5-91d9-db3e8578e63b",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7932072c-4343-497f-9185-e1c9e9173abc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "596be225-d148-447e-b788-64a18695a273",
        "cursor": {
          "ref": "fdbca945-442c-4f75-86cf-6b3095d6874c",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "7ca9f563-befe-48d5-99ae-88ef8ebc637c"
        },
        "item": {
          "id": "596be225-d148-447e-b788-64a18695a273",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "b51aed3f-a8cc-434f-a954-0ca98cd87990",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e81959cc-f570-4f0e-9df2-9d8ef1fa181a",
        "cursor": {
          "ref": "c8220d8b-dec6-4ba7-abfd-a651d82e5a90",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "593f54dd-6abf-4886-b745-55e543afdb2c"
        },
        "item": {
          "id": "e81959cc-f570-4f0e-9df2-9d8ef1fa181a",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "6c3013d9-acf4-40a9-ace9-3d5471aa0691",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ea0971e-03d4-4c8e-ab1b-9f6f4a0092f0",
        "cursor": {
          "ref": "becc4af5-4150-4375-bb97-362ba7d6b444",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "9d891066-d79e-4af5-ae9a-7a267ccf7502"
        },
        "item": {
          "id": "9ea0971e-03d4-4c8e-ab1b-9f6f4a0092f0",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "28e3a3f9-376c-4f36-b868-c66f5ad3d2b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aec6b87-91a3-4e56-a5f3-67c3b93142c0",
        "cursor": {
          "ref": "e3273f0e-9cf9-480b-b4c8-6b81e385ce05",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "757d49c3-3e3e-4b42-9367-2bfef9b57863"
        },
        "item": {
          "id": "7aec6b87-91a3-4e56-a5f3-67c3b93142c0",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "235ef497-a8b7-4aad-bd3f-70026174fa72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f3720ce-5470-4b0a-8ef9-dcd498ba3053",
        "cursor": {
          "ref": "6037f6b9-180d-4861-94aa-b9a2078dedc4",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "f935e2a1-1c57-45ab-ae78-01fcbf6cbe5e"
        },
        "item": {
          "id": "5f3720ce-5470-4b0a-8ef9-dcd498ba3053",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "edf8510e-6c29-43a5-ba43-dc7472468b07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c1928598-4983-4e65-8b2e-fde598a6d7a4",
        "cursor": {
          "ref": "7d194494-f97d-44d6-87e5-937f719b843d",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "855b94fb-1109-49ae-80d2-ae1626d914e6"
        },
        "item": {
          "id": "c1928598-4983-4e65-8b2e-fde598a6d7a4",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "4cc26290-3792-49fc-91c0-a4a590372b4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89939e0a-2d3f-4edc-be7b-2aa753d416fa",
        "cursor": {
          "ref": "3ec54f45-38cc-465d-a76b-cd047b38247f",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "92e03410-e7aa-4747-95c9-5530461ae806"
        },
        "item": {
          "id": "89939e0a-2d3f-4edc-be7b-2aa753d416fa",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "458f7fac-999d-4915-a0ff-e125df86728a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a063a8af-16e7-4fb3-8959-6fb14e758d34",
        "cursor": {
          "ref": "d4b098fd-e151-46e4-b16d-e11a1db22830",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "296ef5e6-5298-42d1-ace6-9d40d26d0eb6"
        },
        "item": {
          "id": "a063a8af-16e7-4fb3-8959-6fb14e758d34",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "552398b7-2667-4e6f-a7a1-36149e03b108",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "159c35ad-a2d9-4b0f-88f0-613446a9feb1",
        "cursor": {
          "ref": "796f4cdd-a30f-4324-a3d7-58e9dab64dd9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "16ad5f9e-b9e7-47cf-af4c-d7796d55c7f8"
        },
        "item": {
          "id": "159c35ad-a2d9-4b0f-88f0-613446a9feb1",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "d7b0d6c2-dff2-4ac5-9b2e-bd6dd017774f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "750a2f3a-3cf7-46d5-90fb-802e1660f1d5",
        "cursor": {
          "ref": "5550a9a9-fa58-4bf5-8493-55a69f64193f",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "93430280-8f87-414b-b9f3-6fe21a0c06fc"
        },
        "item": {
          "id": "750a2f3a-3cf7-46d5-90fb-802e1660f1d5",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "e6064bf2-2914-4e26-ab94-89dec4ebe6db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5985bc9-b56f-4db7-a758-0927b330f887",
        "cursor": {
          "ref": "48a369f2-c905-4d65-805a-def511893d28",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "bacee8c2-266f-4839-a2b4-89aa0c7b54f9"
        },
        "item": {
          "id": "a5985bc9-b56f-4db7-a758-0927b330f887",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "86ddce04-f6cd-4a30-a2c8-2a70de715ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ef4c04c-792f-4e1a-8cc7-2757b76de474",
        "cursor": {
          "ref": "30ee8f94-e792-4f88-ae0b-6b15b44bccfa",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "2d964c11-a63a-4774-9b44-3773ab2994c1"
        },
        "item": {
          "id": "6ef4c04c-792f-4e1a-8cc7-2757b76de474",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "1021eed2-9c2b-4e02-b474-8ceb0a04e925",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69a948fd-729e-4959-b206-83960a52e729",
        "cursor": {
          "ref": "bf533e27-8efc-4209-bf61-5632a21bcb5d",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "d597baaf-8ea3-4eac-bb78-ecbe351c121b"
        },
        "item": {
          "id": "69a948fd-729e-4959-b206-83960a52e729",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "ee034e06-f4ce-4e37-a3e4-73182138e565",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0b4ac6d-bedc-4865-b25e-4c7f63cfa83d",
        "cursor": {
          "ref": "fc2b9b28-3827-4c35-b2d0-223f4d9e89aa",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "32740a44-dd42-46cb-a0b4-acedbff8f541"
        },
        "item": {
          "id": "f0b4ac6d-bedc-4865-b25e-4c7f63cfa83d",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "7b3f7b83-1a12-4ba7-ac90-0e3b927cfc63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6581fbb3-3f2f-4578-aa7f-1682fa0aa79c",
        "cursor": {
          "ref": "ed05e94e-212a-4bf8-af36-2bfa50e601f6",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "e0c957b2-3adc-4881-9d83-7dc20e828ab1"
        },
        "item": {
          "id": "6581fbb3-3f2f-4578-aa7f-1682fa0aa79c",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "ba3a6fae-bda5-4183-ada9-0fcc6975414e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5bc3ed2-28ba-451b-8814-1efb7cd17492",
        "cursor": {
          "ref": "10338d38-f08c-4fb6-9cfb-fcb4b0c5cc48",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "1b171326-af68-48ad-a711-b6110fa26243"
        },
        "item": {
          "id": "e5bc3ed2-28ba-451b-8814-1efb7cd17492",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "433345a8-581c-462c-9d41-eef6afc9d267",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "211c7550-36d8-46be-a346-5adaa5db0676",
        "cursor": {
          "ref": "4e3451b4-cf59-4024-afa7-dfdcbe9b7315",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "eb6900a2-9468-4f83-9dde-adce5602ab45"
        },
        "item": {
          "id": "211c7550-36d8-46be-a346-5adaa5db0676",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "fd2d8357-e032-44a1-a7be-5037b68b655d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5162d04-46cf-4c92-91fd-aa3e28ff5c27",
        "cursor": {
          "ref": "440ee120-bb17-476e-8939-6de558d82935",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3aa8b9ee-2e96-4023-93b6-a50f914e1e5d"
        },
        "item": {
          "id": "e5162d04-46cf-4c92-91fd-aa3e28ff5c27",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "789fb532-cd45-4bcf-af32-c2eae38332e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df1ada99-0369-4082-a204-050ce10ef474",
        "cursor": {
          "ref": "31229862-a33b-4c32-8fd9-ebf0e61dd700",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "97528f94-a684-47b5-8154-c91186bd1ff7"
        },
        "item": {
          "id": "df1ada99-0369-4082-a204-050ce10ef474",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "25e507a4-dd8a-4d20-aca4-887dd053b938",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28cf51b0-f1b7-4827-8982-ff633cfc1754",
        "cursor": {
          "ref": "56de5035-58e7-4058-bad3-de29b0377f4f",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "3340a783-d86d-40fb-b126-dc83995d325e"
        },
        "item": {
          "id": "28cf51b0-f1b7-4827-8982-ff633cfc1754",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "7e82d047-af08-44d4-b094-0ea2fa889157",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cb6d7f3-153c-47ce-9d55-b76544f6aee8",
        "cursor": {
          "ref": "83127b36-a883-48cb-9039-6721cf7e58b6",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "b793f044-1d92-4e40-b7ec-de11cbb8a344"
        },
        "item": {
          "id": "2cb6d7f3-153c-47ce-9d55-b76544f6aee8",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "3b61ed24-0d6e-48dd-a9d1-905deee29eaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 203,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3127c02f-3764-465b-a739-be2241733eb9",
        "cursor": {
          "ref": "f98dbff0-cb5b-4749-9bc0-7fa3ff2bbc44",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "1485cd34-c6bf-4de5-9216-60d18ee22b35"
        },
        "item": {
          "id": "3127c02f-3764-465b-a739-be2241733eb9",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "fb03a005-f4c1-440c-a4ce-acd374de3ded",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fdfb6fc3-f505-44ff-89a6-9593fd611394",
        "cursor": {
          "ref": "0c32da17-c933-4f01-8329-09343b18598f",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "8665f7f6-ec35-4b1c-8a03-ecddf31d7f10"
        },
        "item": {
          "id": "fdfb6fc3-f505-44ff-89a6-9593fd611394",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "7b66839a-6d01-4cd4-8e30-d260ed2c7d4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "82237f2f-3636-4f56-a8b7-7553f53778a6",
        "cursor": {
          "ref": "45740a71-13cf-43f5-a651-57a9f52daa48",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "b99d4de7-2c4c-4369-9d97-c5ab0bfcc242"
        },
        "item": {
          "id": "82237f2f-3636-4f56-a8b7-7553f53778a6",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "859d32b9-3c44-4a64-a660-5069813b44de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a191b181-7add-4af9-a821-dd97f46cd911",
        "cursor": {
          "ref": "97a25778-8323-470b-a7b1-4ce5fdef9140",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "3917ae64-eb72-47e8-ac11-5a6cf2ca41cc"
        },
        "item": {
          "id": "a191b181-7add-4af9-a821-dd97f46cd911",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "37d466b1-1f0e-4a7c-9b5c-c2b4af01f9ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8761c424-07c0-4bd3-93ac-69eb483c3c5d",
        "cursor": {
          "ref": "01228bd8-ae99-4f9f-b119-a5881afc42eb",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "4fa0e653-d9c3-4ec6-bc3c-665e64d1ce3c"
        },
        "item": {
          "id": "8761c424-07c0-4bd3-93ac-69eb483c3c5d",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b64d726-a429-4ac1-90c8-0ae9c3d8a408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "439b2135-bdb6-4fe5-8240-f7d132a88136",
        "cursor": {
          "ref": "b870810a-c245-4983-997b-6030f1540158",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "2a05db99-54d5-4117-a20f-c11a8efb1be0"
        },
        "item": {
          "id": "439b2135-bdb6-4fe5-8240-f7d132a88136",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "9eecd181-7823-46ce-96a9-65ca2ac75476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddbe5594-b6c9-434b-b59e-ec8d0109a592",
        "cursor": {
          "ref": "592a6521-abf2-46d0-807a-f20c3a6d85e4",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "e399cbd1-0b27-4ceb-a366-62609ba3c396"
        },
        "item": {
          "id": "ddbe5594-b6c9-434b-b59e-ec8d0109a592",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b30a78f9-1801-43a7-b09a-daa489933fa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2a212acc-30a5-4d70-b29b-6b056f7d2215",
        "cursor": {
          "ref": "61ca1931-459c-4647-9fd9-9c11726202c5",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "5b63e913-8611-4529-9657-1395ded4f9f2"
        },
        "item": {
          "id": "2a212acc-30a5-4d70-b29b-6b056f7d2215",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "6140dddd-9e16-4a31-b31a-e33e3881685b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc367c8-6032-45ca-ac47-0983ae3c6674",
        "cursor": {
          "ref": "e22f3bde-c20b-42fb-af0b-55322bb02526",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b3bcbbd1-8d0b-419c-97ca-285d43f510ad"
        },
        "item": {
          "id": "abc367c8-6032-45ca-ac47-0983ae3c6674",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "6d73a0db-e441-463b-a897-d9aa787daf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78d2b629-f22b-426b-9584-eec98c632de0",
        "cursor": {
          "ref": "7e85c289-bdd3-4bb6-ab9c-f11c1d44b8dd",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "adf898c4-cfa0-4b72-939c-a42b1184f330"
        },
        "item": {
          "id": "78d2b629-f22b-426b-9584-eec98c632de0",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "1628adcc-14b1-4519-8843-4d01a14ae732",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f1e5e8-603b-4053-839b-dd4cb6c080b9",
        "cursor": {
          "ref": "6959bf7e-cc06-4f8e-86a8-fcc7f76bc6a7",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "e7f3e3d9-0d61-4648-9a1d-0bc1e884d29f"
        },
        "item": {
          "id": "46f1e5e8-603b-4053-839b-dd4cb6c080b9",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "b871d346-c753-4255-9ad6-2ebac4ffe892",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73581ee6-26c4-49b7-a08d-0b273fa8d8b1",
        "cursor": {
          "ref": "303cd816-a063-4bd4-924e-a47517395569",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "f4a4ae3e-32cd-43e8-8a3c-99a8b30c7d9e"
        },
        "item": {
          "id": "73581ee6-26c4-49b7-a08d-0b273fa8d8b1",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "3207fbbb-898c-4655-9f6d-34add462701c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e14155c0-2880-4320-b6a4-3ba2772598ac",
        "cursor": {
          "ref": "e8ce5e3d-7e5e-4a06-b4ef-84cfe015bd49",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "31fb3531-a757-4897-bfe7-943a3e5f481b"
        },
        "item": {
          "id": "e14155c0-2880-4320-b6a4-3ba2772598ac",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2ebbc59b-8760-4e16-81d5-f92f499ce996",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2558be5e-4f64-4a65-ace9-731277e09128",
        "cursor": {
          "ref": "1817880c-4ba5-431f-bff6-76555f2198e3",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "77f9f0ed-dbfa-4cf0-b402-ff266609a973"
        },
        "item": {
          "id": "2558be5e-4f64-4a65-ace9-731277e09128",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "b2608830-1adc-471e-9db1-a9610ad89e04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d66dadac-a216-42e0-a1d1-f016b8d5395e",
        "cursor": {
          "ref": "9914781b-4e22-4928-8ba9-52d41c921680",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "722673ab-5f3b-43cf-a2a6-7a5944b32605"
        },
        "item": {
          "id": "d66dadac-a216-42e0-a1d1-f016b8d5395e",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "0d28629a-5484-4ce9-b04c-bed1f642e22b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2274368-2fb5-435b-af0b-3aa99a90e3fe",
        "cursor": {
          "ref": "ad6c73cd-2eb4-47c5-af96-6f130545f0aa",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "3ed71663-7ff8-4c12-9150-1440f822a8f8"
        },
        "item": {
          "id": "e2274368-2fb5-435b-af0b-3aa99a90e3fe",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "7af8f90f-5013-401e-bf22-f8c0a045d181",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee421ab1-4db3-438b-a6b7-26d017630845",
        "cursor": {
          "ref": "d3308c72-2654-4cd1-8de8-29f01aeaa160",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "7e0c25d6-1561-495b-b53e-1251bf4d731d"
        },
        "item": {
          "id": "ee421ab1-4db3-438b-a6b7-26d017630845",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "d7123cc1-dc2e-4d7a-abab-0698d89568ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "717a8f23-987e-42e2-8176-efd1658f0d58",
        "cursor": {
          "ref": "92895938-464a-46df-a1d4-5b9c0ff485bc",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3dfc3953-20d0-416f-b15e-7647c6647d6e"
        },
        "item": {
          "id": "717a8f23-987e-42e2-8176-efd1658f0d58",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "ed87cc7a-1944-4740-acf4-7c5725ed8a4f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37a8c4a2-c885-46a1-936f-dd1106f5bed3",
        "cursor": {
          "ref": "a484347c-f9b5-412c-a6bb-afee7b8a0749",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "a515c734-630b-40a7-9445-0cb8d3139f85"
        },
        "item": {
          "id": "37a8c4a2-c885-46a1-936f-dd1106f5bed3",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "b8df4a3b-8831-4ad3-92d4-ac3a3a62d494",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d1432ff-daa3-4b84-8d7e-309b1263488d",
        "cursor": {
          "ref": "a4194944-f856-40e8-a6e9-c7295086447d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "f5780267-3b35-4aea-9ab2-b61ebb412f20"
        },
        "item": {
          "id": "5d1432ff-daa3-4b84-8d7e-309b1263488d",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "250fc1c0-eec4-4383-9a0a-6975441ca901",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23822854-7abd-47ea-86d4-3f6587f15c29",
        "cursor": {
          "ref": "0981c3f3-df98-49e2-8322-038ef9fea2b4",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "70e1b418-8af2-483e-a8af-6c431907a820"
        },
        "item": {
          "id": "23822854-7abd-47ea-86d4-3f6587f15c29",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "f0a1768f-0982-4d25-8002-f4167dab444c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a71a5621-d753-46a4-84e8-f660b01fad6a",
        "cursor": {
          "ref": "23ba80c9-c64c-4a59-a822-4d9cf7124aae",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "19e79be3-d5ab-4278-ba55-c593e734d7fa"
        },
        "item": {
          "id": "a71a5621-d753-46a4-84e8-f660b01fad6a",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "97ae182d-8ca0-4dc8-9114-1d90cfacab5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ed6fa20-3563-484a-85a1-f1d04680fbc4",
        "cursor": {
          "ref": "19e1e181-60c0-4472-bfea-0b5d1afb8487",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "e720d422-2051-44ab-b702-0897cb8f0ba8"
        },
        "item": {
          "id": "6ed6fa20-3563-484a-85a1-f1d04680fbc4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "4e9a5a33-dda6-49ff-ad59-7f13f8347e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b3ceaa6-aaae-47c1-b8b8-6e2ad19dc3e8",
        "cursor": {
          "ref": "8b577389-6c51-44ba-bf33-25a572eeb382",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "ec7e7525-9dba-4569-8751-772ed5de37e7"
        },
        "item": {
          "id": "0b3ceaa6-aaae-47c1-b8b8-6e2ad19dc3e8",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "625ae98a-87ae-42c1-aecb-cf2923240888",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cc377b4-ec6e-4a78-8493-f0cf3f3dcc6f",
        "cursor": {
          "ref": "aa71b2e6-a52e-419f-9ce1-cbd11bbac063",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "847546e9-c8a2-404b-b44b-6c1cafef37e7"
        },
        "item": {
          "id": "2cc377b4-ec6e-4a78-8493-f0cf3f3dcc6f",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0da64c87-d083-421b-ae59-7e56e2947c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02be6455-b93a-4829-bde4-5f9732456bbf",
        "cursor": {
          "ref": "aa6119dd-9c75-4898-b5af-a0d630f67354",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8664a7a2-df27-432e-ac9b-6c91d77b1ec8"
        },
        "item": {
          "id": "02be6455-b93a-4829-bde4-5f9732456bbf",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "5985c97d-5d15-471c-b3be-956c1e7cdddc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2b03159-b389-4e5b-99f0-a7987dec050e",
        "cursor": {
          "ref": "71f6547a-8fca-41da-a94a-480360cd3dfe",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "33a6ed52-66d5-40fa-a5d5-c338509e9a41"
        },
        "item": {
          "id": "d2b03159-b389-4e5b-99f0-a7987dec050e",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "b7501a18-a7ce-4743-a32a-35453a24c9e2",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:230)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:230)"
            }
          }
        ]
      },
      {
        "id": "d81f7b65-5627-4175-8b72-1f101e5c09b5",
        "cursor": {
          "ref": "4071660d-d7fc-4b42-becc-7f630d38dba0",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "d5c2b35b-b70c-4747-8ae3-4f3629b64a84"
        },
        "item": {
          "id": "d81f7b65-5627-4175-8b72-1f101e5c09b5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "452c3632-966f-4a5f-a17a-887a0234ccf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c150049b-dce2-4e89-9e41-607a6fa847e8",
        "cursor": {
          "ref": "d8eb2478-7239-4920-9194-2711820b4a5f",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0cea0744-0c7e-44de-ad15-c3dce8eae4a8"
        },
        "item": {
          "id": "c150049b-dce2-4e89-9e41-607a6fa847e8",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9ea53a47-e40c-482d-91b3-f94940c50a89",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f6e7c9-2d17-4586-9b74-cf3c119d31e2",
        "cursor": {
          "ref": "91e9cb20-6d06-402c-92a4-be3adb7759b0",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "460da3ef-8931-40b8-86d4-05fd3158d816"
        },
        "item": {
          "id": "a4f6e7c9-2d17-4586-9b74-cf3c119d31e2",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "d3e3b4fd-7d0c-431e-9b5d-57927fa82a5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15b2d882-7726-49f4-b3cf-c7c70e4c9cf4",
        "cursor": {
          "ref": "52462909-11b1-4e39-990e-e0fcf0236e01",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "1dda6c7f-f1d8-47ce-8c24-b74f0cee8db8"
        },
        "item": {
          "id": "15b2d882-7726-49f4-b3cf-c7c70e4c9cf4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "51be72a1-39b9-4780-82a7-5e90ad673a29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5ad452b-3f8b-408e-9983-e6ce46131a37",
        "cursor": {
          "ref": "e3a28b6c-3fa3-43a6-ac2f-95f371abb502",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "fcb4f818-39e0-4d68-b097-20a7a4cbaa9f"
        },
        "item": {
          "id": "d5ad452b-3f8b-408e-9983-e6ce46131a37",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "51b2df9f-1b8d-42e6-a29d-a93127bf02c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ade4bda-7b03-473b-a471-ffa08083bf6d",
        "cursor": {
          "ref": "207824f8-966d-4277-b67c-0e34d060d981",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5ddb6596-56cf-4fb4-86e5-4c276ca684b3"
        },
        "item": {
          "id": "2ade4bda-7b03-473b-a471-ffa08083bf6d",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "5b39ba3a-fe71-4e64-a9b7-37ac5e7a6e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "86d02fa9-1b92-4b04-ad4a-e5f936bd5938",
        "cursor": {
          "ref": "c152226e-8880-45d7-af2b-6af1751cd0b7",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "5a088f28-cc76-4f1b-a5d9-e321d7962838"
        },
        "item": {
          "id": "86d02fa9-1b92-4b04-ad4a-e5f936bd5938",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "32773f60-6c32-4d38-857e-b753ee5b4afa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4daec7c-0b9c-47d9-82d6-8b4942fa8ea3",
        "cursor": {
          "ref": "9686d812-174f-41b7-9bab-4e51fd310f38",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "db487daf-be14-4cb4-bc45-f54c75510010"
        },
        "item": {
          "id": "c4daec7c-0b9c-47d9-82d6-8b4942fa8ea3",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "373508ab-4236-4245-adad-ebec71389fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b10ecc3-c7e9-4920-b958-f949add855fd",
        "cursor": {
          "ref": "3d04b56c-2424-47bc-96c3-0c5ecfe78046",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "28a96a15-f887-4d24-b8a3-688bbf7f4103"
        },
        "item": {
          "id": "0b10ecc3-c7e9-4920-b958-f949add855fd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3c53e1ff-d8c5-4461-986f-f7118954631c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "508467f7-8059-421c-abb3-f4695459313c",
        "cursor": {
          "ref": "8e7e0960-b988-41fb-b170-256da01d8295",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "7125d77a-145b-41dd-b494-7840b3e52f89"
        },
        "item": {
          "id": "508467f7-8059-421c-abb3-f4695459313c",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "9fb92259-5c6e-4ea4-912a-c1d935c49332",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0648384c-9335-4fc7-81c5-13a83d9f80ce",
        "cursor": {
          "ref": "97981857-0802-4eef-be68-8f8c90462a07",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "d97b55e6-97eb-444f-9810-b6572eeb09dd"
        },
        "item": {
          "id": "0648384c-9335-4fc7-81c5-13a83d9f80ce",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "b61830a9-ba56-40d7-adcd-07f90c1f39bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d2fdef9-68ad-474a-b5e2-c48daab3e4be",
        "cursor": {
          "ref": "72b046b1-cc61-4027-b134-3d2405f70739",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "551ee4de-6e0c-4fd7-b125-1605d76a525d"
        },
        "item": {
          "id": "9d2fdef9-68ad-474a-b5e2-c48daab3e4be",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "50780c2c-5ff2-44f0-8067-e24e3201fcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "233351fa-794d-427e-9b38-7931575b755b",
        "cursor": {
          "ref": "70024c20-4e3d-4593-a3ae-1994ad3791f3",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "17dfbd7b-488b-4c4b-a641-a92503d7a929"
        },
        "item": {
          "id": "233351fa-794d-427e-9b38-7931575b755b",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "e6d3dc97-6101-436b-8d0a-dd7703db376d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74b6315e-818d-43be-b0e8-6733467b65b2",
        "cursor": {
          "ref": "f04faf36-bf61-48bd-8642-240d60083ed3",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "b2721287-52a3-4065-986c-95a0a7bb51ae"
        },
        "item": {
          "id": "74b6315e-818d-43be-b0e8-6733467b65b2",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "89ccfa4e-2e06-4ad2-beee-7d9aefffdef7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aed073b-3b38-47c0-85d9-be8eef6696b4",
        "cursor": {
          "ref": "c701c4fc-a805-445e-91ee-8db7bac1e299",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "02a33f3b-8ebb-4f0e-80eb-b80f5259c822"
        },
        "item": {
          "id": "9aed073b-3b38-47c0-85d9-be8eef6696b4",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "aed8ca11-c58e-444f-a4b1-8938e8bf2086",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5aa4e83-5f34-4833-b18d-57f0deed97d1",
        "cursor": {
          "ref": "b33c73af-d659-41fd-9f54-fea7785946b5",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "a6fee70e-fcb9-4681-ae0f-501f011a504f"
        },
        "item": {
          "id": "c5aa4e83-5f34-4833-b18d-57f0deed97d1",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "5c30db56-7827-4b18-81c8-18c92b1c674f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7e71b54-44ef-4527-b725-33ee7fe8d277",
        "cursor": {
          "ref": "0027f353-8e25-47e7-bb65-d3e3f13a0761",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "d5c12547-f2b2-439a-adac-05c0f8ae6b1e"
        },
        "item": {
          "id": "c7e71b54-44ef-4527-b725-33ee7fe8d277",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4f4c4b78-b466-487a-b69d-8108f2c75db7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1f7a49-565e-4885-9b86-3f46171dc173",
        "cursor": {
          "ref": "f8e12c80-28f3-4b38-8205-d440c3b8d796",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "7e922e74-7679-41f5-892e-78ff59c30731"
        },
        "item": {
          "id": "bf1f7a49-565e-4885-9b86-3f46171dc173",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "b5d7693a-3903-4a98-bb7b-87b88e3ecf2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7f98f8f-3a70-4336-b5f5-c6c160d9864c",
        "cursor": {
          "ref": "edc5818b-1960-4d27-a2e1-aca9f1254079",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ebe992bc-dded-4b7b-9b00-d909da9ea9ef"
        },
        "item": {
          "id": "c7f98f8f-3a70-4336-b5f5-c6c160d9864c",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "b9447496-dbfe-41cf-b55e-7dd14e1dfb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c3f5f34-b859-4a34-94b6-5d042472329c",
        "cursor": {
          "ref": "dc9e671b-a3a4-46b1-a38b-6d9a0fa7d2fc",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "92558afc-d7ab-41f1-8cf2-75bafe9eec7b"
        },
        "item": {
          "id": "7c3f5f34-b859-4a34-94b6-5d042472329c",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "2b977dc8-8300-4a2b-ae27-4f91698f2339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a020626-0c09-4c31-a256-1fb978de1059",
        "cursor": {
          "ref": "346dc9be-b860-44fb-9324-ce061d8ba195",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "484ac2c9-b15b-4bc6-9bd7-776e69a0ddbc"
        },
        "item": {
          "id": "3a020626-0c09-4c31-a256-1fb978de1059",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "a89a049c-bce5-436a-880d-7d53c234b37b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e738afd-76cd-43bb-a1fc-d6c9cc62538d",
        "cursor": {
          "ref": "be761342-ce9d-42b5-8999-d12c2d5db4ce",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "947e48c7-6c2b-4b9c-8d3b-3d57be112327"
        },
        "item": {
          "id": "4e738afd-76cd-43bb-a1fc-d6c9cc62538d",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "5691b637-2ce3-4627-999d-00e9976517b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04605203-c107-4782-8903-afbe9802b368",
        "cursor": {
          "ref": "0f3db864-9194-4be1-aeed-79f2d5f4480e",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "7b5e13b1-dc7a-4c25-a988-955e8f1a73ac"
        },
        "item": {
          "id": "04605203-c107-4782-8903-afbe9802b368",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "9879a4ef-103e-4392-b5f3-71d0a2a72aaa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da37b979-d5b3-407e-b160-9292d93fa4a0",
        "cursor": {
          "ref": "c50aa5c0-efcf-4109-a990-76700daf7262",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "a77d0d38-4b06-4e3a-93ac-9aa545898d2b"
        },
        "item": {
          "id": "da37b979-d5b3-407e-b160-9292d93fa4a0",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "46772b51-c80c-4d36-9eb0-866becd7bc32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b4ea5f3-365c-4a66-b445-1687ddb5c1b8",
        "cursor": {
          "ref": "70009d23-6754-4158-970e-df1c242b0e92",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "349db2c0-62af-4239-baa9-a9f4ebf78426"
        },
        "item": {
          "id": "9b4ea5f3-365c-4a66-b445-1687ddb5c1b8",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "eddd4ed2-7197-4d55-bc41-6027487a5748",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "28fdd147-4216-4199-88ed-480b8c5d13e8",
        "cursor": {
          "ref": "54fc6521-06e0-445a-80cd-8b133df82c21",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "71c7fe11-6df1-4e0e-90bb-2c7d50dda3cc"
        },
        "item": {
          "id": "28fdd147-4216-4199-88ed-480b8c5d13e8",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "65138c82-43c6-401c-b72e-1b178bc8b028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b20b148-ecc3-4103-b25a-2611f11f3111",
        "cursor": {
          "ref": "461c954b-c995-4015-93be-dcf41efabb97",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "368163ee-f1fb-4706-822c-86403e25aae9"
        },
        "item": {
          "id": "1b20b148-ecc3-4103-b25a-2611f11f3111",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "4796f97e-0754-4fae-b0d1-7ec85ed4b4f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efa5149a-521b-4642-9ab4-23470073347c",
        "cursor": {
          "ref": "51db4892-a9a9-435c-88cd-c7ce3680db28",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "6c62bdc4-1c2e-4858-a145-184858c14416"
        },
        "item": {
          "id": "efa5149a-521b-4642-9ab4-23470073347c",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "c428951e-dcaf-4074-bb38-cb69575ea7db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbd173ca-de34-4cb7-b173-ce141f75ae44",
        "cursor": {
          "ref": "afb69b76-70fc-4579-9879-949a0cba8d97",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "797ea3a1-ce91-45d8-bdc1-d65a81c63f09"
        },
        "item": {
          "id": "cbd173ca-de34-4cb7-b173-ce141f75ae44",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "c06dde9b-9920-4168-ada7-881e71d762fe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03cba983-2319-413c-8f27-12ac3b8c3793",
        "cursor": {
          "ref": "ff44086e-9a8a-4d73-a01c-7a2c5964b69e",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "fb91e8e8-09fe-4789-b57e-660f40a9c710"
        },
        "item": {
          "id": "03cba983-2319-413c-8f27-12ac3b8c3793",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "ac2893a9-f8a7-44c7-87f6-04bd03228176",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6759d072-3a61-45b4-9371-83d1b3066148",
        "cursor": {
          "ref": "bf4c2a47-cdc3-4e13-b480-bd7539f053b7",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "0f044b15-9b2e-4f86-ad93-08ed9105e2c6"
        },
        "item": {
          "id": "6759d072-3a61-45b4-9371-83d1b3066148",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "747f7f58-ae3f-4ed5-be06-34a3c8df486d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf82eb73-e7cf-4811-b733-c09533517ae9",
        "cursor": {
          "ref": "99e37eda-37f3-448c-844f-6b3ea275b714",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "4cad26cf-ae09-4d83-9b49-2ee8b1415108"
        },
        "item": {
          "id": "cf82eb73-e7cf-4811-b733-c09533517ae9",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "44408597-2c25-42e0-9e66-6c4a9da4b816",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08d88fb6-e8fe-4c00-8b1c-82a3a713ce69",
        "cursor": {
          "ref": "c7c005e7-7f9d-49c9-9655-547bc9f053b9",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "586af391-0eb0-48b8-8b1c-bcff8104a643"
        },
        "item": {
          "id": "08d88fb6-e8fe-4c00-8b1c-82a3a713ce69",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "1de4b172-0066-471c-85dc-163d56a5b3d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b60826b0-5f75-47e1-924a-bfaabb3ac182",
        "cursor": {
          "ref": "e451441f-21d9-4dd9-8ac6-b58785dac6d8",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "2051201b-35a6-48d2-bb0b-8a1c00f4a9c4"
        },
        "item": {
          "id": "b60826b0-5f75-47e1-924a-bfaabb3ac182",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "414b2974-c79b-4f9f-8b29-f228f4351fa3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d68c1272-81fe-4ef2-a51f-f1e4814842bf",
        "cursor": {
          "ref": "7473d8a3-4218-469c-91c4-3e3490d5aecc",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "665755be-8386-4731-906a-e7e714d0bce4"
        },
        "item": {
          "id": "d68c1272-81fe-4ef2-a51f-f1e4814842bf",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "e7b8b49c-20d0-4992-920a-64b63cd1477d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a496f71-4c90-4d5e-b440-0017b3950261",
        "cursor": {
          "ref": "74a38249-87ba-4318-9c24-a47ea6e4e351",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "22171041-ba79-40d2-8628-7700336a3de2"
        },
        "item": {
          "id": "6a496f71-4c90-4d5e-b440-0017b3950261",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "46ba0233-1940-4284-8693-d5ab3f3d9e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea9815a1-8866-4d09-b08e-8d45ed3d6793",
        "cursor": {
          "ref": "2018a6f5-c34f-4be6-9b50-697e3d09cea6",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "085666dd-3da9-4735-a581-e637ad4118ec"
        },
        "item": {
          "id": "ea9815a1-8866-4d09-b08e-8d45ed3d6793",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "a5cbb221-e094-4ee7-ac05-2bef32d7150f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "beb12b7c-2c4c-4850-8d2c-500062fae2e8",
        "cursor": {
          "ref": "7e4dca8c-0139-4ed1-a0ed-b4a11dc6589b",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "ac66be0f-d8a7-4927-96ce-2433dc5898a3"
        },
        "item": {
          "id": "beb12b7c-2c4c-4850-8d2c-500062fae2e8",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "d319a5d5-ede0-42bb-9cdb-473382ef5756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc4cc093-8aa2-4582-9c40-ef3077747bbf",
        "cursor": {
          "ref": "9b557494-048c-4ec1-87e2-375b37412277",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "c199603c-2edc-4bad-b827-6164c0f897c1"
        },
        "item": {
          "id": "dc4cc093-8aa2-4582-9c40-ef3077747bbf",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "d30438be-ec57-4809-bfca-01766f921c66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d65f62aa-a250-43fd-aff6-cdb37578d86c",
        "cursor": {
          "ref": "449b2702-ba3b-4689-b1d1-af3e3eb4a6db",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "004a1763-3857-4bbd-8cfb-ebc1a469a27b"
        },
        "item": {
          "id": "d65f62aa-a250-43fd-aff6-cdb37578d86c",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "7b606bf2-2805-451d-9aa1-9dd86ba02adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af7c14e8-7f00-4059-8728-d99e01aff8e6",
        "cursor": {
          "ref": "804ea751-e95d-4840-92ea-ce6d4a5e7e2d",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "2e773173-62c1-4a33-b823-e30f25293e8a"
        },
        "item": {
          "id": "af7c14e8-7f00-4059-8728-d99e01aff8e6",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "2b755a20-671f-417e-81b1-9f69f739ebdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ceb338b1-7ae7-4bdc-b84d-5ae5b76e446e",
        "cursor": {
          "ref": "3d73df1f-a13a-4576-b1fb-898d7dbfe59d",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "33748c93-f482-4cc5-acf1-85b92edc4e17"
        },
        "item": {
          "id": "ceb338b1-7ae7-4bdc-b84d-5ae5b76e446e",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "a3f539d2-3357-42c9-b3a7-25e5dde0dd1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94a5540a-88fc-48ba-acf2-704be69e52d3",
        "cursor": {
          "ref": "7c891847-bb7c-4f4c-ba9f-82786ff11481",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "7d22630d-fe18-4cf0-8d0b-f6383be8d4a9"
        },
        "item": {
          "id": "94a5540a-88fc-48ba-acf2-704be69e52d3",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "4179246a-853f-4179-93eb-5c960d08d4f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cefafca2-0ba5-43be-ad90-9026f850caae",
        "cursor": {
          "ref": "812f390e-644f-4bfb-8ac6-949cb4c76be2",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "24d23519-973a-4974-bc9a-abc0f7288c56"
        },
        "item": {
          "id": "cefafca2-0ba5-43be-ad90-9026f850caae",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "a9087ec3-168a-448e-a5d4-9290283408b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8694454-bb09-434f-9208-5cf5b15c0180",
        "cursor": {
          "ref": "606b278f-7d57-4798-ac0d-e6e6c7c734b2",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "daf0eb21-20de-4b24-9ec3-7fba85064476"
        },
        "item": {
          "id": "d8694454-bb09-434f-9208-5cf5b15c0180",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "9ea29370-516d-4310-b66a-a684a0ee45ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ffe18ac-27b4-4ad8-903f-aafb62d2163c",
        "cursor": {
          "ref": "91244370-c5db-464f-8ee8-8fc81f642f26",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "51ddaf1c-1d22-4f3f-b45e-c1e8c19d0609"
        },
        "item": {
          "id": "4ffe18ac-27b4-4ad8-903f-aafb62d2163c",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "fc9f7600-b09f-41dc-a1bd-b0e18770fbee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15f8897a-a4fb-4d5e-aae5-97298787c604",
        "cursor": {
          "ref": "cb86da9e-71a6-49be-bf74-591a137710a2",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "cdd921b8-c191-4771-a678-18497c42b115"
        },
        "item": {
          "id": "15f8897a-a4fb-4d5e-aae5-97298787c604",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "fa25a296-25c1-47c7-97e7-e9cebaf2627f",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f5d2b221-a273-415b-979a-36c1ae01ac8f",
        "cursor": {
          "ref": "e4d09069-b8e3-4ba3-8b50-79f46ae3e4a7",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "c76abc86-b56c-4946-b0d6-29a138a4b1ce"
        },
        "item": {
          "id": "f5d2b221-a273-415b-979a-36c1ae01ac8f",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "6c369905-f874-4d8a-a42a-c4b6a60f282b",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "27346ce8-a141-45b3-a311-5500fc79f474",
        "cursor": {
          "ref": "75ecf87f-3fc5-4648-a877-9488d982b22f",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "78123898-7beb-48ba-a883-fe1ec18b28a4"
        },
        "item": {
          "id": "27346ce8-a141-45b3-a311-5500fc79f474",
          "name": "credentials_verify"
        },
        "response": {
          "id": "739fe059-8bfb-4317-914d-5736b6c7b51f",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b2d09ea8-2e81-4d62-8a9c-9d0d2c9701c2",
        "cursor": {
          "ref": "76c18df9-1fd3-48f6-aa85-f582ff19e7a8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "3c99480e-9778-4b83-8506-6fc3c81a7d27"
        },
        "item": {
          "id": "b2d09ea8-2e81-4d62-8a9c-9d0d2c9701c2",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "a94ec893-d23f-4d53-afca-50a990273f2e",
          "status": "OK",
          "code": 200,
          "responseTime": 75,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "11991d17-53f0-4cc8-aaa2-2836bf860a7e",
        "cursor": {
          "ref": "d035b6c6-6f98-4f4d-8f98-ff537674a668",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4dd693df-2202-45d1-9228-3ee3ea4c85e8"
        },
        "item": {
          "id": "11991d17-53f0-4cc8-aaa2-2836bf860a7e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "26b6e673-2b9e-4dd7-a82e-343be0d4f4db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11991d17-53f0-4cc8-aaa2-2836bf860a7e",
        "cursor": {
          "ref": "d035b6c6-6f98-4f4d-8f98-ff537674a668",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "4dd693df-2202-45d1-9228-3ee3ea4c85e8"
        },
        "item": {
          "id": "11991d17-53f0-4cc8-aaa2-2836bf860a7e",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "26b6e673-2b9e-4dd7-a82e-343be0d4f4db",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "835c0645-6aa9-4e62-9eb6-631b17f488dd",
        "cursor": {
          "ref": "199ef209-c5e7-4e58-ae2c-6dbf4eacd1e1",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "550813b5-9a9f-49b0-b439-4327d2507a7e"
        },
        "item": {
          "id": "835c0645-6aa9-4e62-9eb6-631b17f488dd",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "fe6f12df-f4d5-4dcf-9ef9-f62972fda796",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "693d64c5-5986-4c0c-9ef2-907f4c9e6e8f",
        "cursor": {
          "ref": "1dbfc7d9-6d40-486a-950c-603711790d02",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "b15f397a-f643-4bc0-a6d2-48bb385eed63"
        },
        "item": {
          "id": "693d64c5-5986-4c0c-9ef2-907f4c9e6e8f",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "57c565cd-87a4-4ae2-997a-b7b5570260f1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 62,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}