{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "a1ca9b04-7999-4d1f-be62-e4b77ceeda76",
        "name": "Clear Cache",
        "item": [
          {
            "id": "452f9477-d481-4f0a-b8a7-aaeae7a0db7e",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "39937652-d95b-4c8c-975e-eeba4711dd02",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "932d0307-cb7b-45f2-afec-25611f4fcf00"
                }
              }
            ]
          },
          {
            "id": "e93cede6-020a-4955-a116-09350b1b4af1",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "eab3d1bb-6558-49c6-a19b-09fc300b6243",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "eb55c790-e7c5-4b59-82c9-916ad5aee054"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "b5559774-0065-449d-8d77-f68a0a35ac65",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "03764f91-dcd0-4edc-b579-6dc7cd9b33b6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b24c9dc4-c1fd-4a1f-bb24-f3ca20ffd880",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f52f5a5-883c-4dd7-ad99-c8fe27c1900c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "02a96ff8-9cb6-4d24-9ab3-a1bd5b24cd12"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2d15a8e7-e213-45c2-bd30-9e8bbda9dd8c",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "706a97e1-1a4a-40eb-bbd8-97c07035d315"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "c4ac1e34-b78f-4640-ad81-9d57044d93c9",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4da5283e-2a3e-4b11-931a-704601d6fc02"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "99748537-f05c-44e7-990e-0c44488ee328",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "632cb6e0-acf1-42ed-9165-acdfa9b63a2d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "258ae737-9a61-4d84-a3af-3df9141d43dd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "4923f81c-a803-4172-a163-fdc66c151705"
            }
          }
        ]
      },
      {
        "id": "a5b143cf-b82d-4498-a14b-0a5acbcd2080",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "aba82a1a-51da-4cae-b771-430832937c58",
            "name": "Negative Testing",
            "item": [
              {
                "id": "42d4b2a5-8f66-4c2e-8abb-c9cdd9bf1e63",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "d1a37ab8-1379-4c7c-a6d4-5d0fdda409ad",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92322f5f-8457-4cbb-832f-d5660f9446a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "72a35c4a-26e4-4919-9f06-70e014884f54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ee94d58-9efe-4fc3-b328-8ecb943bde26",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34d73df9-227f-4eeb-b458-36ffbc25413f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "eda691a6-96e2-4bae-a19e-535da0426737"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4b8d857-070e-4a77-bd32-c9b1a5cb1aee",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "890e5735-1793-4f86-8615-3077ff9a03f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6916264b-c8b9-4c7f-8b43-98c49186c940"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "00751962-5f5e-404f-8e81-66ec9c7a4a51",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "412a43c1-5c2e-40fd-b4cb-59acf955901d",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4456afc-7799-437d-bc04-e4230525a3ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "48da607e-d6ed-4c7f-867d-0732756ec81e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7380451d-6d5d-471f-82c8-101e686e3a84",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f38ee6cf-e4d8-43ce-aa56-a73787ea111a"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "bbec4cfa-3c6e-481a-b3ae-f6f6b6b1120b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7d9c9338-1896-43b3-98ea-878253acb8f8",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "adca4f7f-21ce-413c-a40a-a27473766f10",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "e8e97a95-3bc9-4cb0-9611-99b80d515b8c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "3e3d0f17-75f1-4287-97cb-ee46eb582988",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e43e523c-6e8b-4cf4-bc60-d437623578d1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1caab1c6-3fb9-496c-aec0-d493ba091241",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6d1f0fc8-af38-493e-b0eb-7a4df76fa6a2"
            }
          }
        ]
      },
      {
        "id": "d28bf7e0-6839-41cb-8a74-2c1c9389fd4d",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "9b8dc076-ad3a-4399-a563-e0c05d9cacf5",
            "name": "Negative Testing",
            "item": [
              {
                "id": "17ee738c-cc65-4bd7-b747-fe7e86bb988f",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "35c072fc-dbeb-4b2c-84d3-4a110396c03c",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "753b4e52-f1bb-4982-9933-6099e8748572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f65cca2-dbe5-4fee-be27-0da81488baf2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1b87de6-77e2-4cc5-8c64-7c0865364ca4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "39724f16-4a9c-4926-86ac-4ddb98ef29ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60e35da8-5e52-4b79-bd0e-455bb9b58309",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9bfcb2a3-48df-4f06-9e91-1fa6cc7e96fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "76c6108e-e971-4c56-bb3c-7fdc592e2c48"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e76d2cb6-0a59-4a12-a7f1-3eac1887044c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a666a77b-7004-430c-8455-1ad6738cdf71"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3f9b139b-fb62-4875-8585-d8fdc4cd4220",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d43baf33-a2da-483d-b019-6954dd621076",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29cbb383-b08f-471d-97c5-f68f1f37b47e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47abfcdb-02b7-4b9a-b121-0f8876733fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b9df7fdf-a25e-4390-8316-415aed48d2d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afd059f3-8d7d-4d49-ab19-5587a10075cf",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "818ea42f-0097-4a99-824e-3b244b2c2e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328c5eb8-a04d-4376-89ab-d86e0eb3a2b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a7a4189-459a-4227-9527-b894fc92695b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "674354f3-776a-45a8-8731-6549de86cf40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "068169cf-23e4-4723-8b5b-e28555df78c4",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b72317f2-8662-4940-a61f-8de53f0c3b02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c5a6584-a160-415c-a728-1903362a5fab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df6dfba2-1b47-47b6-9d80-48dac6ac9290",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c86b255-4ded-494f-ba89-076c92e047fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2b147cb0-9310-463a-8a02-20e8ecbe9770",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c7327ba-d26a-4443-9e91-53803156e31c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0410d85d-ccbd-4056-8412-3519f7565e95"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ccf1a7-7d0d-446d-8bba-fd93a2e7f47b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d7f5202-4096-465a-a944-5f5148cf71fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "015a5b31-1021-47a4-b419-60ea5b032393",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5758f7e8-395f-4e3f-bbfc-d84bd4fd4500",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71c2e2e4-1cc5-4214-9f6d-8322332b17de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcc38504-ded3-45f8-8dbd-37ed2ca6202d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "79e33ca8-f827-45bb-b65b-dfeabb70208e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2cd5061-9b2a-49c1-92b0-a2260763fa6d",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f09581af-1a37-471f-8ce6-28fa9201f128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b52ae0a7-912e-4be5-af20-d30251696f6f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a781cb0-1e46-444d-8181-0483272e6f01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "62f9b7a9-1670-4658-ab67-959cd56e1791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a166d7e0-338e-4419-8ad9-53252a26bf4c",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "893c93f9-7a4f-4599-8a6a-4042c568068a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2feac52-2692-466d-8e8b-179dce160a94"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab133797-5195-42f2-82a5-6d08232245d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "24102737-2f16-431b-bed8-d33b752377eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0c42f49-d043-46af-a9db-a9dcc4239ad7",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62c92832-c8ce-40ca-a814-51155ba1cc3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74eaccde-e13c-417b-80bb-c9fe2e31474f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2e8448e-74c0-4a9b-b3d6-d1eaa49a0791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "16bb78a8-0fd6-468f-9968-4317354c0a15"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74afbcc5-b798-49e7-a5dd-2aca36d4a270",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37f300f6-396c-4d30-a172-45ee3ca4590d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a272f12-da84-4555-8b4f-e11f11885173"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30e70736-2338-45f0-b9d0-f05579bfc1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2929749c-99de-442a-9360-dd731a4dd9c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c56c6c6f-1e9d-417c-8051-ba33694e06b2",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61072de1-0cef-4e95-a44f-4b2ea5f4606f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eebd33a-63cc-4a63-baba-c5011accd49a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d86f043-a723-4bae-b130-bef91a394499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e1193668-2185-4ad7-bab2-b6a2910bc65f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afe0afc1-91de-4f4a-8ea4-2bde5d6c66d0",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c2e9a19-ea65-41d8-92f5-30a95fa366da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "916a19af-7d85-4ace-9327-d388f08565aa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eda3cc4f-e71b-447c-beb0-1515449f9a90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3111acfe-9567-40a1-8801-ff4b1d9f74e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8fe1732-d7d5-47be-99f0-450df8e73bf8",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a5d969e-7f50-4078-8c09-7237232af6ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "461bd07a-1a09-4097-8f8e-0eaa49fec87b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74df552d-8854-4553-abbf-cc0d6c76a7be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f66b793b-76eb-48c3-a59d-b28aa0aad273"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45e03f14-cfbf-47c1-912b-d94d96cef38a",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c4a5cd7-ae89-4ccd-a90f-ef6537970ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "175a60ad-dc83-4fec-b15f-b0062acf3ec8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dde786aa-53f1-4779-9d87-1e163c2bfc1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9443c5c2-3f59-4c4b-825a-d4d251038e01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1b7b411-7bed-48c7-a675-994080e928bf",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5b2765d-b72b-4711-b36f-9db5be265112",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9d0cf4-c57c-49bf-9c7c-02257c4ed438"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e532f706-32c9-4b14-b49e-a75945edee2c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3791fbf7-18a7-4e5f-b047-6bff2f073f98"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a42238-dee7-4649-8158-90ee907ea4e8",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b357dca-7a6b-41e8-b34e-15bc73183552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f041ced-c39a-4eb2-af89-587212b43410"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b490ebe2-bbeb-4195-a045-aa96c93d0531",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b267e757-0e37-4bb6-9dfb-3d2947a99517"
                        }
                      }
                    ]
                  },
                  {
                    "id": "09215b24-d067-4e23-bf8d-1041de8da322",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2e96d722-de12-4198-a024-3de3050a435b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7550b0cd-bf62-406c-bc9f-d419b159b020"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e8ffab9-878a-460e-bf4d-35fdb2a04dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "0cd11589-318d-46ae-9c93-ab327aa0298c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "22c6b880-2b45-438c-990c-bf4d943f1b01",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "287d72c7-95d0-4efc-b5d1-9642dde673de",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b3a52c75-ceb9-499d-b3dd-11ef8c21b2ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4186e2b6-4c6b-4ee7-9895-988cfecff562",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "c17149bc-f219-4529-8a66-d61e6dbe8ec3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "89024968-74d3-43c3-80c6-63e32d22baec",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e38ab3f-6856-4544-a61f-fd9d2784371d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f6c1ec7a-3407-4fed-8781-8a8ba4dcb8dd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "71c1a329-86dc-4341-921a-1dc419b3f3c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ece3a78-9d8e-4430-be68-644beb906ea8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01c6c829-e379-415c-b066-4f2abe39bae1",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c438119-021d-4112-b7f9-91aea5da82a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae86a329-566b-42c1-ac3e-dde9477f3cff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d35fcdff-8e9b-4184-9b2b-c170b8160b70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6585be08-940d-4c03-8101-044bd5a51fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "488cfbe6-e11f-440d-9d3b-50f09b687927",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88a06e9-5255-40ba-95e8-cbd9cfe80a49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "feab4d95-ecea-4bac-8f40-f47c97675511"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "acf7ab8b-d2b8-4c03-99f1-c7a136a8c11d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4e01c5b9-2b75-46ff-8dbc-ed8fc059f07a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d3de055-1c38-43d1-aa10-39f81fca1e57",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fdd5e22a-3667-40c8-b91d-11d40ad86fd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3191529a-8e5c-4b51-a1c3-63f5181811b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff36fbd1-a15a-4b2e-a000-988d437bcef7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9bde9d58-5def-4778-9489-ad17bb4df060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "087f95d0-fff9-4dca-bca1-8ef85af37285",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc499668-3dca-455c-8604-52eab16d8336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d785664d-64dc-4bf3-8a71-30d2b49755fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980d919b-92e0-47fb-8c18-e7665e5b265e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "e09408fc-dbb6-4cf9-9c56-01b2309b8cd7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "507c3209-f57c-4502-af3e-72b47cfc0f27",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19d37d83-b524-421e-92e8-c6532436d7cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b639e1b-5fff-4361-ada1-a53617ae7944"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ce56927-edf2-4a9e-a65d-a50f7a3852f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "1f870125-368a-4b33-bf22-55dc7bf5f1e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bda3a2e1-af75-4bf4-ab76-de075f6643a5",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19991877-3521-4971-80f3-041f4f22b89e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b82e67f0-4ead-4d98-908e-65fe85d057ed"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e07acc8b-1fcb-49a0-8359-11882b073c4b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "36f31e95-7158-4385-8ca2-72a9578036a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "152968e9-6e78-476d-afb2-a6cb3e492022",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55e1b0f8-3b9a-4f6c-b35e-fc6f4275f2d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d4f39d0-3172-4ed8-8dd2-af34c9092a50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dd9e270-8ea5-4ae4-b830-9a967887e7df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "c2ba59ba-ea48-4f29-a8a5-26bf70a9ce38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b963a20e-49d3-4aa3-805c-1efdd3042ff5",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bf4576-f971-4a0a-9132-eb0e21ac084b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9877cc99-6875-48a6-be38-60aada4e1539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0559f432-dac0-4360-9ba1-ace82516cf0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9b5fa011-be5f-43d5-9db8-916852bdd4a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bc98c0-e83b-4195-8a0d-b5a71f180b1a",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b08b6903-305d-4c9d-ae02-d2fb5e4e6086",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc198956-ae3a-4eb8-8809-cacd22c332f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9788c774-2768-436a-98fd-971a5a0dc2c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8124e584-7545-410f-8914-b49ce973f641"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cf2f2745-2d71-43b4-b81e-cd922a9841f8",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e63aae8-69be-4f04-a165-c6eb78089c63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "489b73de-1b8f-4de0-bf82-adf323600444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dcab45b-3bb7-4ade-a709-568463f9ce3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f017fab-283d-4a5e-888f-55a6f5d3c186"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8ad5e7a-d17e-45ce-b514-9d4364bd75ae",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed0944a8-afe7-4f5b-be31-17866381f89f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6fd4b412-3255-4fd0-938e-b8914a60dfd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67c7a628-5ed8-4432-8160-95fdc3bfebfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "5d9e13db-b44d-401e-9915-49e2739e5ee7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eebf978b-cad6-4407-a03d-2d7ee3bc00da",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0cd34169-1ea3-4d2a-9440-231d7f5681c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c73e6477-6348-4d9e-bb90-cf6bf519c89f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab44cdce-6109-49cb-9e33-f11c2c42f579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "67821c3e-642b-4c07-ab52-b514589922e7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80cbaa83-86a0-4195-83f3-b55d9ee8f7f5",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df5b005c-fec6-40a2-b384-db7203286022",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71fd43ce-b4bd-4d33-8dc7-516ce81908f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d113d501-8538-44d3-bbf1-40362f247fd0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9805c9f-a194-48bf-9a86-0ec60b4b8401"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9e01464-ff0d-4f58-9bb1-9ed1acabfa64",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a3ec353-7175-433f-ad59-7c559063d416",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1631e195-c62c-4e06-94e4-95fb57a93f0e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1de398c1-b92b-491b-9d3d-13de9bde4d4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b7913173-0df8-41de-ab07-6e0870d6194c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70cf4690-49dd-4365-b770-f484d7a79c03",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f19ab85b-21dc-449a-9c6a-78f55f872be9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b987e80-59d0-4db7-aa7b-ff5d10ebfbae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67203360-4b83-44b6-97ef-48fc26ec924b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "cb9bf923-0f60-42f8-b776-2e2b6440aff3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2aedc153-fd7c-4350-ba1c-a1ade2da4a0e",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b150ad9-68ab-404f-9fe0-db3bc4901b49",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2f16a1d9-fd92-496c-b523-262d4e2dc8b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189cb20c-b064-4ba8-aee8-c45c7c35150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "50ff0a2f-291b-4f46-8f14-034505ef99ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d578611-c2d8-4f35-b98a-2620b4802d4b",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "21a2a560-68f7-42a5-87df-dc951294763a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f5882ae8-f0d1-41fd-86f0-07606d8df269"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca5644a7-e8a8-4330-8676-ebefbb15f9b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a5c519-87d7-4f95-975f-17bceb495a3d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9cb1312-412c-4490-991e-ec739d81bcf1",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ac6cf1f-ca4c-4b8e-941e-5f03a40963df",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73589d6e-3168-47ad-aa98-6f5675b489ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e25cf9fc-03af-41c5-a544-1407c002ee02",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f4410f67-bf59-4b49-bbf7-8c5478bc6201"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e08ba987-7978-4ad4-b40c-d95453cdba8b",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "562eadf7-1846-49b2-a518-dc3af44cdaac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96659b12-c86d-46cc-b07e-1ad3887a9577"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be596132-2c13-4c91-aed2-318deef50e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "27450ca1-88da-4645-ac7b-6bd43b457df6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd82cabe-ca58-4804-a7e2-b94dccfd4ddd",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c63c253-faef-484b-bc85-82df2780645f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82e6f063-0e3c-4c1a-85d7-a14a487fb868"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6575a91-eb05-4f63-aa17-afd0d8ba68f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "c651fcea-ae70-4d2d-9613-28d2b9698489"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26ef6fed-3aab-4244-a162-f12da2866059",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94c95533-5214-46f4-a9ef-7c15a6bceab7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7d56e550-263c-41ab-9578-a63657705d1e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1cc8e6ec-ef66-4dca-ae83-2a8af0dd4a0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "8dfae327-cc64-4f72-a781-d3915bb48e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9748e88b-2e57-48be-9eb3-73fce703dd0b",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "58434f7d-c3e4-47c5-97c1-d2f539ea7411",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4106b428-a60c-4295-9a53-003a8dbc64a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd588f5-fe97-40e8-b449-32fc3aeb12f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "13270ae9-6a30-43c5-8e83-8a14305426f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d6f901d-3b56-408d-b6f4-b5748a8e46d3",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bb3543b-e9f8-49b5-8a98-3235449140e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd54e1a8-f7ca-4591-910a-b9bfc5a2cb5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74a45ae4-6578-44ad-9945-c05ea5df54aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "78a5da00-7704-402b-9db5-1f27958a89cb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1ff191f9-347d-4003-8955-844379f86c5f",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a6bd732-e8ff-4f49-8098-f79a9abb5e3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0d0b7807-f4b7-4593-a029-e7940e5a31a3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4853f7f-cd0d-405f-8023-bc3ccbf03360",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c87b5aa-86e6-4a00-ad1d-aae8d9eb8c38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3828da83-dc71-413b-8421-3a960c490df0",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db7d42f9-fa32-4b7f-9d19-6d1edd7c8cfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73cd150f-95bc-434e-bb07-f7e136ba205d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc3f3acd-8ce3-4411-8bd1-3f7ce7584253",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "3eb3edbc-d5d4-401a-aa36-5a0ed5d6b348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e66d9ab7-6ca7-4ab1-a5c3-2b1288ad9e74",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f572aa5-59ad-4874-9d13-cd7020bfb6bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07359f5c-fe89-4e44-84c5-636ac003bf64"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3d6a6d50-cdb5-4d3f-abcb-18cf7f23d573",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1052f047-9c04-4d1d-86a7-591f022c1e5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ea775202-7464-43ef-b899-89d9e920c20b",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81efe987-78e6-4f0d-a26e-43a7b7de162c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9d33cbc3-3cf3-4336-b939-1bc1f8ac4240"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "61e5acb8-3a07-4982-8ad4-c64b1454229e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "56c153e7-7f44-4e19-977f-9f4fdadb54f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1daa26-bdc4-4497-a37e-0b93610cd8d4",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b9f3fa-1642-40e9-b513-cc2d586c620d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cbfd281e-aa1b-43e8-813a-6cca2b54f9ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3c215a7-32e8-4b1f-80c4-5ac87daebb13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "70bb3bf2-ea94-4591-9ce6-94feedffe1a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7564e65-78af-4853-98b4-04ceeabb8444",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fbeb0f-a11c-40fb-84e4-5cd00d37d443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d6153c6-fc7a-469e-b476-66bf4f3e268b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c60f51-dcf3-4959-a12c-894937de85a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8124926-3130-4164-8a4c-69ac120a42b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87f9c8dd-2954-4122-8f20-2e4f17e6b377",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d5ca9db6-10c0-4313-a23d-697920c1548e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eab4f33a-8e33-42a9-87cb-f12bdc69ec97"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5bdcab4e-1ab7-483e-9c26-5df3048f4698",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1d47465d-7b68-4681-bc7f-9f875890bf3e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b378e99f-4589-4a50-958c-565385b64962",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cb17107-9daf-4fd1-9bf3-0406ac52093d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "23688826-4ffa-418b-9e6d-7e9e97e1b4e2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6a9f314-7492-4724-8e8e-eefff6cc2e85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "fa482585-a8d2-4a33-81ff-6eba193c05d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56176de2-0dff-4a39-b42d-c2e86dee34bc",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "86865ff6-9419-4013-9472-5227eaa79cc2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "293e5576-fa96-4f5a-8412-6625cb7335c1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d95b693f-3d39-4861-a723-938489482182",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "72b590a8-d781-40d3-98b8-e59edba508f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0560433f-ccf7-4c04-b12d-18905c4cffa1",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bbc4a56-5765-4cd6-8260-768d95b3abe7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "137e57d7-7ae9-4e79-b0ff-bd68797d57f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bfedee2-2693-4fd1-aaf3-0fb990abb3b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "b68858a6-cf0c-4d01-bc87-1612c16929ce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f83f27-ace6-4123-a4c5-34d5de3d114b",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "471b8a3a-e1eb-4114-b009-f5bc0ef23f3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af2500e9-df5f-455b-afc3-6d4e88a4e7df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3c8e9417-d0f6-4026-a20e-18acc5428d07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c9c79797-e111-48d4-9c92-93b80b27e9c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0751196b-adf2-4e20-81fb-e5625df2aeda",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3997acc0-5b16-4b4c-aafb-18dca41110e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "994c232a-86aa-4076-9c51-f5c73ba9d44e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c74206c6-edc8-48b7-a1e7-5293b4c0c308",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4e6a5b3-7342-4b8a-88ed-066ab115ef84"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d7f67a3e-bffb-4035-9d4b-0f59b70ab865",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "123d583d-4276-4329-bf66-2f7e199d7db7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8671f83-ae76-4564-a5a7-52f1c844a6b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5e79335-44d0-400a-900d-d14766e28ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "03264a68-9e46-42cb-bdcd-7508f8cc2cad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5decbca3-fd13-463d-ae83-0bbfd701f88f",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ee89a9-c2d4-40fa-81c8-57f794d077ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e9b785d-6f97-4c3e-bff1-a9c669c86e81"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c8017bb-99e0-42e1-b265-4b667817581f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c330534c-6b3d-4c7c-9811-ffef3e109a7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7ebc048-73ad-4a30-bfe5-309c50323f42",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11e1fe71-c0f8-4c7e-bbbb-13439ccab143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e23ff891-c335-4426-bf52-9fd52a5cdfa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a042edea-c6d6-4de4-a1fd-30efd7fa3236",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7178920c-5b10-45bb-9e93-463346500c0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8a0ae1-715a-44c7-a9ef-d9038182aca7",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "546f346a-9c22-4c27-b606-336abac139d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b013f58-4cdc-477d-ac29-fce93837f463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff4c5ad-dfa1-4a7c-87d6-1dc133e35b21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "55e1cb40-6eea-48ef-8993-f9866325db76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff6082b3-8bc5-42b8-94ee-1d6dccfdb7e6",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6872d998-47f1-416e-8610-3b083bff17c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36a01c85-6a32-4855-b320-328a50b698da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "33d3358f-0269-4592-ade5-807d38fe0e7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "53bd3184-a1f8-40d7-9133-707b1aaa7018"
                        }
                      }
                    ]
                  },
                  {
                    "id": "961b75ee-2db1-4245-a11d-975357cf440f",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1fb25a9e-313f-40cf-8ef8-fcb2aebbc8ef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe8deb3b-6e80-43e1-9fd4-309e5bb74116"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5bd5f0a-ff71-420f-9b01-3c3d4d0c38e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "412806ae-a317-4c04-96d9-c608cf80fa01"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4131369c-4fdc-4184-a875-cdcbb041632c",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e477f0c-46f1-4173-84cf-78e147767085",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21604dc5-f10c-43ff-b496-898f050b77eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "278be7e7-39bd-492d-bcfc-85e39e5f6d1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "88d1fe51-9aa5-4c42-8195-1d4436dcf476"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d27905cd-c7c7-4009-a0f4-6265da1f03f3",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0793e630-754e-49c0-859f-9f2763a9b281",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dca6f296-0d4b-42fd-8b9a-b7f852427421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9041108f-5fec-40ec-93b6-245fda610401",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "66d44c74-d930-41e5-ab89-8beba22c3f24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8608994e-d23e-4f65-b2cf-84081ee5a501",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbece453-11f1-45de-9b92-778e4bf326d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f67e770-faad-43c4-8bf0-8d4109461380"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c23ec46-ac66-4e25-ba10-ab1609b7e1b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "24a2ac8d-4e4e-4be7-8733-9f45b952ff30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57b94d9c-6edf-41fc-9f13-8834954c8581",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4008ce8b-6f0f-40c7-a314-bc47f4131808",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f902a1-4d20-44d2-b77c-76c449952510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08e798fe-55d4-4b55-87e1-62305e7b3443",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "edf2bae8-2fc5-49ca-aa7f-7e7dc4be8f68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec6a2367-8956-4adb-9e7f-6b4c6c4c7e17",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a27aad9d-a1b1-4650-81a6-a6f9de651913",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ea3dbd2f-fc79-4822-b2d3-92bd375ce490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "028e7ce5-e952-4c6a-a906-aac87e6d20af",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "dc942c8b-795d-44d0-b40c-7e48c4454a62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f544a453-9d05-4d46-9ea8-382eb689c0ee",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dcd706e-133d-4463-add6-f9867cccabb5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "73dba595-4603-4dcd-8240-b08be7a84d25"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2bf5eaa0-e57c-4494-8a54-587dcd8a8b0f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "490bdf39-57c2-473b-8954-cae45b99edc8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "251fd7cb-5586-40d3-bcbd-c028a7e3cb5c",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8aeb17df-c3d6-48ff-aa1e-c6a1318f6694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a07b57c9-1912-4f4f-8b81-7f080b776ac2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e130b234-53d0-459b-aff8-5e3ab8036dea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "4ea38d0e-f5c1-4720-9848-2871c0d4ed85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c016e3a4-d702-458e-9c7f-dc01bea8d442",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b13c4d7-1621-45e9-a9a3-dc43a28d1d09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96a7288e-9338-44e3-bff6-df50f5844b06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8b2463-6445-4fc0-ac44-ae52af60035f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "af379db0-7971-4cce-83cd-aedcaf4c52f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad3c1e05-4f4a-4e08-b596-14f213f4b78c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2492354c-84a6-4468-9d9c-ff5a4c0ecc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "942a3da2-fce7-40ee-8119-ef33cd84c0d2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00054823-c847-4e9c-8bd0-1d24517ff0c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a30cf4bf-e17f-4d42-aaa2-f8bd94906546"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcaaa913-d249-46ba-af80-23e53f581d5a",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd2d292d-a39d-4cf6-b2d4-ed68fd48cbe2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e8952364-7bba-4a19-9ab9-7af8ad416de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1082115f-4894-46c0-99e7-57634b5b5c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d5a82002-af6f-41ba-9411-910a1e3137f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c9b1c54-b3e5-4adc-a191-cd8ede76a349",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d85a9e72-92ad-4005-95d0-8e0f8abbfd01",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "532a89d7-2658-46f8-819c-2e3351334da7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88818f78-ccd3-41ce-bbf0-524e405b8dc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "75b3c97c-f934-4573-bfeb-ef81b58f38f3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4886e85-df41-4fa7-b293-2a5c11c5fb3a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "77c9b6ea-ee7e-411a-819c-d66a1b6d86f4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e009c5af-0c33-4b41-ba6d-a730bfb3afa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f437aae-4360-486a-9f88-497c6bf5f9dc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "85960296-e109-4289-a331-26d7b206e54c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a3f4447-d666-4b45-b152-40c24c5b56d4",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "963b2f91-b6cb-465d-b96e-a1cb1c3b9e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "41f7686c-f9bf-43b0-b389-8a11e2c812f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7164aa7-95e9-44d4-bac5-f1b17619abbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "afb0b129-8ffa-4490-8b4a-6687984f247c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71a80488-f8bd-45ee-8e67-25b97678aa96",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a834b438-2cca-4f07-abf4-8590aa7cf656",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e792b5dc-1d15-41c1-970d-3770ca8a64a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfdad3f5-4427-441b-9ae9-452657ee021c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "584bfca0-ce05-45ee-a7ce-feccf4c3ea95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c338d5c3-9ed1-43f9-8106-b9913f7ad399",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25a667e9-520f-4422-b19d-af00cb0e2ef6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e5f9501a-0094-4253-a694-e999fa37ddde"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae4918b7-f8ab-46a4-be99-bb10b494b935",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ef5be0bb-083a-4b78-8d47-1d3997049d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e157a189-c688-49d9-b825-d4d83d9490a0",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "038d23c6-7c0a-473f-b702-ed47692db123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "677f11b6-dc6b-45d2-a224-ebe4d17519c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d7a2ae9-f30d-4637-8aaa-a3b236455014",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ad09e438-1cd0-4b3d-828d-ed5e4e60b1af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2d863f1e-58ed-48bd-925a-2a309513867a",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36ce06b7-0c79-447c-b0bd-f39e84b5bc14",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f07d1c5-fd15-4705-a0a9-157ba9b030df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dd5869d8-4958-42f1-b474-db34e3d10714",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4c317b2e-8c8f-4cf6-8541-fdaf67956924"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d00eebc5-14e0-4a80-b720-339316b44b2f",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea56b83b-9622-457f-a077-8254d12fc417",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c052b95-aebc-4750-9b3f-34bf246b0c3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4164ef72-d16a-4cfa-9022-e93054235280",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2b25a093-cf50-4e88-a6ce-bbcd4a745533"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a27f452-763a-413b-b80e-e8ca81254bdc",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3d1a3f04-3d5e-4b9c-826d-e1a282463f7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0b799c9c-2c97-4ddd-b60d-d2581708cb7d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ae421c6e-efd2-45e7-a198-8fc211337930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "6dea2376-8703-4b30-8e69-d05278f75b54"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c014e40-99cb-4744-83be-a071626f3b2e",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "79a0aa8d-71f0-4227-ba82-052c796b5176",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ac553c5-2181-4668-bbd1-8f7d16a6e658"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9b9a451e-66e1-4f7a-94a9-b79254914387",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7e53943-a002-433c-ba5d-f85d3cb97d17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dade9a78-ed48-4999-8002-94d653b634ea",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "10961e8e-9adf-4344-afac-d1b968d81f84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f91a45f-9695-47dd-a16d-e298d78251a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18cc2fea-cb00-4336-be79-aef675b67d3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "fc656cc3-14d9-485f-8b34-738dce5a486a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "389e9c83-a58c-4e38-96e7-6f717821fa8b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6c4b3ae3-0c0a-49c9-aa18-51ad4131b4ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af1ae623-e6c9-4135-b1cc-ac1aa5682dfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "674b1014-e692-40c1-9bd1-1826cfffd579",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f338f2ed-3a64-4249-95be-aba7ee5c9169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "464811cf-ec36-4724-aed0-07c9c3d3fd18",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a57969f1-044c-4b46-a328-388922ee3805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bbdb0c8-b4ac-45b5-8cae-cd222ee09741"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed631c80-1cd2-4e1e-889b-eb302beef368",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e0393a62-0848-473a-a459-37323902c1a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "62daaa8d-3c93-4ff2-9c1b-39f3baa920b4",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "956d1b01-70e5-482c-92f5-e42d1790d2c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0ee0e9f0-8159-45e3-837a-6880b9be926b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d0bf0573-0eb6-4540-b26c-aa531474be54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "dfec5a50-f312-4cae-bf0a-189eb9ecbed3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5d0480-5dde-4eb3-b9d7-8ae555cf4b8b",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96ae4f12-76db-445e-8e39-ac1593377bc8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8592caf8-f61c-4b69-80b0-835b440fa7b4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6ae4c92-b50e-4953-a670-abdc6b98d58e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "1a158993-cca7-4c24-b25e-bdb48a185d49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63125c58-e066-4324-bb85-1cd89a1444b1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "730dc650-d527-4a1c-8beb-1bf0424f52e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f26d937-34ca-495a-acff-b1fb850299ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c74768e-7f4d-46e8-b062-0cd9460c5fa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f12b1e71-04fc-4dce-a54a-21e78cb5fc93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bdfaae74-8ce2-4202-b383-eb5aaa67a013",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c91fd103-7753-451f-8b4a-99fc54c263d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d12999a6-ae7d-4c15-ae85-43e92e62f6db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d29621b-8f59-4373-816c-4f7950f8d930",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "699aeb80-d6da-4b72-9117-f76f219d6aba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da390b65-f453-4c64-bd99-9976176eed3d",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b209d2ff-d5c1-4612-9da9-82a94b7d5781",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f3b8b43a-cd42-493b-8aa4-7ad1fb7c94fb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79db6492-569a-4b30-ae2d-3243c2fee9b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e23b40b4-abf1-45a6-adec-ce48f1957f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47db715f-e1ed-4328-943e-4bfe0d3da0e0",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8fbdbed-8dc2-4b6a-8a97-567aede58c79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5b8683e3-bb32-4e74-ad52-d2b282e40f58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea4251cf-857c-4244-adc2-ed1a5d331aac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3aacf232-f2dd-466e-89ed-b5fa931d9abc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d2c68db7-312f-4570-8b3e-754eb0cb04bd",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1563cae5-2a0d-4b01-8e62-f1fa60a421c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1595d95d-995b-4cf0-be03-df87575587c5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2c299a0-1304-4680-859a-47e2d9a11edd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "250415bf-aa60-4be7-84fa-859a2545e89d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c731103a-7cf2-4bcc-8ce8-a815b75a1ff5",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f3d5c01-cd02-41a4-8bcf-e7696881c397",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "511becb8-8f5c-46e8-8977-d77add6e7d24"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84e950a4-5702-44ce-8fa5-ad9d378b7ddb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d69637f1-f6de-453b-9d0d-66add0c0d189"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "92d6dcf8-36fb-4504-980e-0bfa3de9235d",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "371123cd-9b8f-4adf-8f6c-a05f69c68f8b",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2651f44c-57ad-4dcf-9de7-009762398552",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "035ef533-143a-4a0a-8fb9-31b4273daea7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb33f24b-b293-4b4f-b10f-589fb1ead95c",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "af3d0989-fb93-429f-b97b-6b5676ac6195"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f3b6a058-6fb1-4e47-a70b-b4df80bce969",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "447c9f0e-92de-4f1d-8016-2d26354af917"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "bc7ad2b4-11a9-4b0d-937b-98a82f2cb913",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b69a9763-e6b6-4894-81a8-25790c7943c2"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "1ec6f5b1-f528-4f15-a822-0767233badfe",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "0e153cb2-481d-4479-9ff1-59ff8fe56c2d"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "e1dcd26a-8613-4256-894d-d41b73bb0ee4",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "19148d99-f5b7-4cda-b527-24a188467a1a"
                }
              }
            ]
          },
          {
            "id": "69ffdc5e-e640-4e59-93f9-896dcd334241",
            "name": "Positive Testing",
            "item": [
              {
                "id": "49fe6a05-5c1e-46f6-9454-e8e91fb26acd",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "8225de5a-304b-42fd-ad73-4071c56606ef",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8472573-a983-405f-b385-8ec70a6bfc65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "97ca1e21-a572-41b9-9c3f-c6a965f0123d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23f6bdc0-d249-4d0f-ab2a-38701c1f8b1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8512bb01-af9f-42cb-b225-3e7b4fd14c59"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "6e5cfd6a-1d55-4908-b87e-a900d89b8eb7",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "9e970be3-29a4-4fbe-bd8d-dd71a5de672e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "705da252-2857-43c3-bfaf-3851c34ffb9c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b229074b-3f28-4669-a093-fb5f245ab771",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "df6b240c-98cb-41b6-8a75-ef53b003d56d"
                    }
                  }
                ]
              },
              {
                "id": "1fbd58db-afc0-4850-bcbd-0112c1619713",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "005e6889-9f6d-4a68-b2e1-9c1595f4845b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "c1e5fd15-b335-44b2-856b-6dcbe8c6fb96"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "819dbf7d-dfa5-4d8f-9e7c-8c0bc6a71038",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "c62f6098-05ce-45ed-ab10-09e20a04f6f8"
                    }
                  }
                ]
              },
              {
                "id": "3cbd7455-251d-45dd-b5bf-c0e31f799b7a",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6b353f8d-b71e-4c68-9675-2b3a3607e077",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "98e47fae-2d43-4ba0-9202-300553d4512b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "3df6c048-d0ad-4d21-9ddc-d8eb827f48bc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "0e7cefa2-8765-4236-996a-45ab67f4e156"
                    }
                  }
                ]
              },
              {
                "id": "9819eb57-b65b-4999-baf5-2626461d3e55",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e7e2cf54-3b5c-4d21-b69b-fe20291cfde0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d27e9f32-1eda-4304-9d7d-fd172d51a267"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2ffbe959-838a-49cc-a3cd-fa316625b9de",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "7f397141-806c-4f95-9d9f-91d0bdef9707"
                    }
                  }
                ]
              },
              {
                "id": "308fe45b-53d8-48ae-aca0-3ec8d9084c2b",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "c21bdb1e-5fe5-465f-b94e-a324f2d82475",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "db639148-eae2-4de4-9ad8-3b28e58c2e3a"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d637a820-d672-4886-98fa-a88adf24efc6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "722718f9-45f3-4d97-be61-8576483d2dd6"
                    }
                  }
                ]
              },
              {
                "id": "816e0b58-e59e-4e50-b6c8-704902ccf4dc",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "7f7ef6c7-1a4f-462e-b3f1-d9f827dbfa04",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "75ae6606-cfde-42ab-b03c-6db9e0c09f31"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "260ee459-be7f-40d2-8a5e-5aeabe1774d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "ba214081-ca18-4bc2-a9b4-6cfd12ae5c2b"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7bd0264c-e1f7-4fa4-b38d-a80190437042",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c25fc8c9-4200-4c25-ad96-1a56d0e3aa32"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cab6542c-c93e-4f1f-b978-934c4baad08d",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "21734448-bbea-44f1-90db-5b607421cdd7"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "390bef47-692a-4f5b-816d-8159e4a6b138",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "84cf479d-763f-463c-a43c-7e4bb69b30e7"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7a911ad0-86b0-4a3d-8691-4ef6d23e171c",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "20f79e7b-17de-48d8-99e1-930f3469535a"
            }
          }
        ]
      },
      {
        "id": "10cfccd5-f44d-499c-8cd4-7f5c1b3428a0",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "816b27fd-8e90-4971-b5a7-91c7f5f4fd0e",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1776b4a5-d91b-408d-a49d-e4560f40d0c2",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7781fdb0-4047-480d-867f-7563f8ea7a25",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33b5c807-9051-4b39-92b1-6259b5c59a22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12f94a73-832a-4ce5-b01f-464c9f2e8c2c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af284664-bb5c-4897-945c-9ebd5513e6c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "e17c63ce-aee4-4281-bbac-503f3e883986"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b463f3ab-8285-447e-a89e-9ab607193537",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9057eb15-a288-4f18-bab6-ac35afafbb2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5362b51e-b98c-4c9b-8fdc-843e3f16b82d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfb887ba-48d2-4953-9485-2058684dbe1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1eae2b6-08d9-46a2-87a8-d18d6748c900"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4c3156bc-407a-40be-8322-29495bede196",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "30c3f168-c37c-4882-8073-080086edb1f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceefe568-f75f-4271-a38f-3729a8d0de37"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23c02b17-4860-477f-892d-3cf9298c0484",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a086e65c-6780-49d1-93c6-4f9a197784a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7aa140c5-57f5-4b99-88b8-04cad94fb552",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac1dd9e-ae03-4db8-9265-a263244e4502",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2a6bc92a-bea5-4673-ae23-c255f5528e8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a851734-979c-47ab-8afd-683d82c5fa44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "42dbcc26-7c88-4b62-ac12-e3eca079d3db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84d83c43-718d-4939-b20a-c0e56d79149a",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73fa4272-2ec8-4fc7-8104-d65c167828fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "155ebd28-57b8-46fd-8d54-5488917a8421"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4da807d-384a-4ea5-94b6-f778f8b1d5eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "091d5ac5-50fe-473f-846e-622b0205e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cea3e896-69b1-4afa-8954-7b0fa9204510",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9128f38b-54fd-4601-b27d-e666b57bb1a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b90e1559-fc71-4688-a8b3-eaf03a57b949"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "229b6057-0706-422d-8fa2-20692e94086c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f45b59c8-dbfd-4627-a3f1-06f6f4d9d418"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c178f61-2374-4ead-bae7-aab38c1ae8cd",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bbea4f8-fead-4e90-b966-04b01468e27c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d4cf3cb5-a103-48a2-96e1-f332b7316086"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1039e742-5c36-4b24-a024-13972086f980",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "ac7398c6-cd31-4747-b721-3052b76c205c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f46038c-b4fb-47fe-a58f-7fac0023c420",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca7cc3f3-707c-4541-84ca-37c20cc44ebc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b9382e1-345c-4e78-9b6a-2bc0e30a32cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9464af00-8712-4a25-a36f-a7687f2e1554",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60cac8b3-1996-47a6-8063-28b921cb85e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46670318-fc12-4efc-abfd-7b176ac5cad2",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "72f50c5c-f75d-413b-8364-71fdede69336",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18f53443-6ae6-4fb0-ade1-919008a6902a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a23720d1-2a6c-441c-842f-f244240bbc62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "f82d5d39-0807-447a-83e4-5e4ffc52c324"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0518d3eb-646c-4e4f-bdde-eeca8045c835",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05e626e-c1e3-4184-ae2b-7d865464437e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b9923dbb-eade-467c-b36e-578591093841"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e17f601-7a2b-4e1b-bddf-b52ffedd3b6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce952cf5-3826-4cf2-b340-de0e816260b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80e6d931-78f1-46b4-b3c6-6c6e5b167927",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6642076b-90ac-4e0d-a6e8-7dbf7a8f9c0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "911a3554-726e-4b6d-be16-253e52a4b30a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c20e0454-e222-43d5-8d5b-03337d6b1725",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "f85f51a4-b48f-472c-8e56-7c82f192855a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3200bb54-9496-4bea-ad7c-ee57cdbbe2d2",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01599721-5877-4f4e-a9c3-845a60639ba3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e0414d27-2a0f-4286-bb61-8296673bbd50"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e977b386-9e75-4a9a-939a-2121c948c77a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb94707-7c8c-42d5-98ff-545d42ab88d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7655b1fa-bc7b-4f5b-b0d1-570544927154",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ff7624af-1e2c-4d8f-b849-4b0109bf6829",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6323ca16-58d3-4f25-bfa7-5d47aa9e705b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d895e3d-357e-4ed3-bdb3-51b51de3bca9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11362cc-3a26-4141-855e-4d23f3fa4d9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83914d09-ce45-4026-93ce-da69e0b3a24d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "403aa3c4-472b-4966-87d4-f560e81cead3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaf57ef9-8862-429a-8e30-192c07070864"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d5c01d-473a-4e65-8de2-ef43173fb561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9223a8ff-65c2-4ef0-b8df-4dced6fccaec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e374822-fc91-48d8-a1f9-d5cc475751a0",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f57f33bc-46f2-4c2b-aaf5-156db2374802",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fa8366-60fe-46d5-ae7c-ec530c683101"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7740b5e-0089-432d-8a19-4354a2a72a9b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "a04781ea-c456-46b5-9aef-5e753d8a0eac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ecb02ed-118c-4f81-8a89-176dec51e056",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00645d68-90f6-47de-95ec-22b5b61b5833",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "40d4d78d-a297-408f-8ba0-0d2dbb4c37a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a17546dc-966f-4f5b-84a5-c567db939996",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "bcf09625-9f17-44f7-bf3b-a1c0b25a2ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63bf2006-304a-43fd-956b-e5f415ae4867",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82251a0-25d9-4abb-b92c-09bc9eb3a362",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "96da4dee-253d-4980-a97f-6c37c8849725"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4092c10c-82db-4538-8afe-44b4895cd7c8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "3dfa4a26-97c5-448c-9475-128df5208933"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf1455ec-01b0-49df-a5f9-24982ac67a92",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccf212d1-2e74-4e40-ab74-a94d8c3169ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8e255fa4-e1bb-4774-b553-628a02588e7e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64af34f1-8b85-4e1d-a39e-fb8955948caa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "345ac569-a52c-421c-8a7a-d32b743c0ca2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16aa9099-23f0-4b8c-88cb-2b4b2281402f",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3735b63-30cc-4eed-93e2-e43b05deeff8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe35b25d-46ae-43a3-ae8a-eec5f0f12ca9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77f5bcd-da56-4fe8-91c0-c39c205bf83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c950f77f-4265-4122-b3ca-07c74a66b282"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a593d05-aec2-4c4e-bc47-651fe0bec4ba",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11c2a53e-5e2f-40a0-a3c6-37eca266d266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "24fdb345-44d8-4e8d-bbd5-47ef395facaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06e27df-1e49-49c7-ac4e-162eb5f5127a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1e782e8-bbaf-4813-9dac-c0cac73bdfc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c2efd0f-8516-4c51-bd57-1bf643f6e918",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05846109-6920-4923-88d5-588c809e0be6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc86e915-70a0-45bd-91d7-c444ba9c4476"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b763e824-ccd1-44ac-86ee-87b9921467d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "aefbebd3-75b7-49e4-b80a-257e1bb227a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47f46766-d3e9-4b9d-ae4a-84ed829fefe4",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "338e7e1f-a224-4ab7-a642-e6aa125385e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f2cbf19e-1fd7-4cfc-a3dc-748f0f070224"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4e0d6d5-d182-479b-b683-8618a858ade2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6ee3d43f-0ea3-40fe-8464-12a6ed14457e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9d3a84a-38c2-49d7-9448-1ff657c5a400",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c62b36c3-e224-4463-8004-cf891cf146d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a0f2993-7a7f-4c3d-95c2-2e4cdef4ae3d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "850c616e-dd23-473f-9286-1324b622b45b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3800c3da-7084-4126-bca4-a41445b142e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7644592c-6967-43d6-9d63-5fd6e83cddbd",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe517e49-8d97-4e6d-ad4a-76ad9365b805",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c2f4cef-4c97-4b94-9eac-59bffeaf7c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "887bf0c7-35ee-4200-ad4e-8e300d00c5ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8fb04dbb-b4cf-4c2e-9d2c-3e4abe688d14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf1f001-aaf2-41d9-83a2-853a7219fc06",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6660be5e-7463-4be8-b9d1-e00c0e2b306c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e88a7d2-4cbf-46fb-83c4-c073cdc9d65e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e3a58cb-9c31-4d30-9df2-05e7142978a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1d79c538-e257-419b-8cbe-bcd4348ae755"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1338fa12-2b2a-410f-912b-129a1c232180",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8682eb73-c243-474b-b85b-212596735e3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79846d3e-3201-4e32-8c62-38a8080f017c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b964964e-4d0d-42c5-9fa9-81fcdb4ecf04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7712cb14-5549-4583-8f90-3bce83513f9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4eb06638-7b98-47b7-a384-c19e0cd7ef8a",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6873a617-b12d-48ba-81b8-fc2f068e5a98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6010312a-8c47-42d6-a1a9-bb601696d8c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eb936233-3d05-4640-af57-fccb4823412c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5a73ac-85ec-44d3-b90e-04c47039ff5e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f278c03-a7b6-49e5-b785-5991365ca5ed",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4bde3fc-3537-414f-a14b-b9c20be32de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26770f2b-200b-4aa8-a436-4838573e1465"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd03b575-69b6-45c0-9c69-ce4f4881cb3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "810d1164-dff4-4a50-bc91-5e7e1472f720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7a9da54-9d5a-4d7c-94ea-175aa277294b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9657ec50-605a-4491-84e5-b47cb019c0e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66ddd174-e8b4-4c6d-8e90-5030a4b57c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c628977-436a-40b3-8962-4d33b28cd620",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32dedd6d-4bd8-452f-8ca0-4439936676e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e898e67b-55af-4595-b6a8-d961411737ba",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04172ab1-1127-4e2d-bbaa-2a0fad79a42e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "71eb33a4-192e-4a9b-b88f-60a7e0d4ce55"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ccc3367b-73ca-46c3-9b02-7412b6d4aa6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32d40fbc-d9ea-4879-93ab-33db387d6cdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "061e5517-a64d-4b6d-8233-d5e6c07cb4cc",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "036baf7c-45cc-4bf0-ad11-15ab3e8827d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4a72b8f-7dc3-46a4-b351-80240afecef7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1320f96b-9de0-4454-853b-04f9faa29baf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8d37db66-6055-405b-a09a-e830b4e8d48f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c893edb-b0b0-4260-9799-a655c1a9dae4",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b300a28-a1ea-43f3-80e9-6bfdb6162c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b36757e-25d0-43b0-af9b-813b0a854cb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "47e19392-1eec-4b1e-b972-36a30ad3bf37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9505f187-d7b2-4e4b-ae3b-42be47e48741"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "ef9fa5d4-8727-4ecd-a5b4-d5a766cffc47",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e7992566-ff22-429f-b706-e22e912ee9f4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0bd38e-01db-4e55-854d-5809ac591160",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "ee9f8a64-454f-40f4-a968-601461b6a659"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "676cae29-5636-476c-8749-3ddbf333d90c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b942afc9-cd41-4a84-8704-d3e34b9b9ed0"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "136c9211-bacd-4fe5-af68-83e21fbb44ca",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a328115d-6818-4a02-abaa-b50fc2945c88"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "53d98b0c-c4a6-45f4-b737-1115ee64ecad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9ce50c60-e38c-4d0d-b2b0-b03095b2ea31"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6be1f359-1855-42c6-b65b-c4af3084bdef",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "61946168-1b41-4c96-bd36-a0e4a9bf1852"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe2c7bef-0bf2-46d4-9b39-c6d06ad1af3b",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b3bd8cba-b3cd-48cf-9f7b-ccf270c86e80"
            }
          }
        ]
      },
      {
        "id": "a9d343d8-8505-49fc-9268-cdc50b8cc3a9",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "f67eb33c-2a48-4d1b-956d-ecd43797c9a3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "9dcf13f9-1470-4912-bd16-48ddac12d6e1",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0393487f-1acd-4a65-a0eb-46414591ae34",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cad895f0-6bda-42dc-bdb1-1c6c6968b499",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "548dedab-3927-42b3-b835-d5dbd4aba475"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4a9af1e-6240-4db5-b525-b26e2b30c84f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "915da4bb-c426-4cc3-ae5f-276c53878ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "15bc8468-2768-4402-b483-db77abdef4e1",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "686ec49f-22b4-4472-b1ce-d0a8e9be59b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "394f567e-d464-4352-93ba-e0763629e4dc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "472fac7b-6ae1-4686-a51a-54b2b5575327",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c7975480-75c2-4090-baac-aabaf536075e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d4c2453-d8d9-4dd1-9052-b8eebe640c84",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab2bf2e0-80b8-4878-aea0-9ad124e42d39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "503ac9aa-789d-4968-bfd1-fbec43a8365d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc566a2b-3db2-487f-acfd-d899cbbc343a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "adb887a5-04d0-4943-b1cc-c94deb01c06e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9dbbee6d-7f15-4c2c-a445-817c1ee901c2",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90b10c5-a53a-48b4-b279-bb4d4bf1283a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "47cbc0d1-2593-40e8-a9a8-358d8f6c4cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6545929-a9c7-4f23-af23-f44ed9d54991",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9e915edc-a9d5-48b2-b6b3-a6613b387b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6805f0c7-565d-46e8-b33e-5c53149256b0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2c2401-b00f-44c2-ac66-545605358fec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "16b5d8bc-9789-4368-8a70-19dc5b6d830a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78ad8494-c166-4b5f-8337-27073fd1876a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "fbbd7f74-a5b0-41b3-8db2-da02a9ad68f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66ca875c-dbb5-4e05-b54f-e0ebcc136b41",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "996521c2-36d1-4bb0-bb63-16d09403383d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3e0162-44cc-4ce4-89a5-2cb2ff939539"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c09bbc2a-6f63-4e53-821e-5ced6bbb8163",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "32e5d0f0-21ae-4b1e-9a41-22a875db6957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186de1df-5d44-4898-8505-b8e03ae63199",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b462d4fd-37b4-4cf1-86d2-b76f846625ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c9a7574-ce58-4900-b56e-cd2a1cc513f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dc16f3-8670-4d2b-b569-3a12398ee1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "891cc161-529a-4f82-86f6-8f31233947e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7682ccef-bd57-4b99-ac58-c8d4417a1f32",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fafd329d-be05-4827-9223-4bd851d28179",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6ee2699-bcef-401e-a486-405b5c66d34c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c6fc62-0bb0-4515-9b59-d9876bd0b868",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ae85e687-f603-4826-8d07-5e29a7178480"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c616f0a3-2801-486a-9921-e8c989a20c24",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0caaecc2-17e1-40f0-b901-d7f7e7f34c84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63734999-b6eb-40bd-ae3c-52a9fa6ca6cd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35479fb7-6a06-4ba6-b8ab-fe40b4f730ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37c16cf1-05b9-4310-95f4-245670119c88"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01bee4cb-d5ad-4481-a2fc-92bbd45eb7dc",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "efefb59a-9578-4b8b-897e-8e932e6d70ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdad4c5b-b433-4401-a89b-733bffe14b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eec326b2-c985-4962-904b-621b2374238b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b618a835-1362-4f31-a010-1d845e91931f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd97f127-6d7a-4e8d-af3a-6a097930a997",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aedb0dd5-a40e-4fa5-9a56-8c6dace8de5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "79a74b4c-ce45-4775-bc3a-8e117d5599ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11c67a76-bddf-49fe-8e16-3fabcc710a06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a8ec521e-9408-499c-bca7-8213415f0919"
                        }
                      }
                    ]
                  },
                  {
                    "id": "813b0f51-0329-48b8-adff-1b114d8cb81c",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bed7f7a6-93a5-4eec-8be8-c884ffd62ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecf7934e-c4fb-4742-aaec-e4eab8ab1cb9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b16ccb14-f49a-4047-9b44-c7586971db58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "59cd1ad3-1fd8-4881-ae51-9f346954a53a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad928799-d35e-4fef-87cb-4696afa5ef66",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1344041d-3ed6-4367-ac2f-a813989a68e8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a09b7395-4bb6-47e6-ab08-be5c48f343ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51413bd-2b69-473f-8cd9-89751ddb9586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f1a95ad7-b8e3-4f25-8959-b4379028fb04"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0f433ea-31c4-4a8a-83c6-6fd2a76a2a76",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9eb3978-d1f3-4637-8252-425f1ba280ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6dd26a53-cce6-44c2-a303-b38a4ae3ce84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c954fee-0d2f-4acc-8838-4025101f33d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "60324189-ca31-4336-b187-5034a7aa2410"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c1156b7-1fd0-4e40-a517-e82ca1e86ed4",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa48a176-8b4c-42ad-9647-35aa8dea5669",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3499fd21-1783-45be-a551-135d01e01095"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1182ae85-0602-4404-8255-fdd62feeb6e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "733da51a-a69b-47d0-b94f-4d8620a1fd24"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50c17e74-0e03-4f64-b201-d205d0a0ff34",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a578c797-35f8-4cb4-9796-7a2afbc74a6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "90d6c9db-99d1-425e-b2ca-0696589e39b3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0a4cd374-732c-4a5c-9e89-34a515214bfc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce42fbc2-dad4-4ae7-bef6-54951d06e275"
                        }
                      }
                    ]
                  },
                  {
                    "id": "555dbed8-2496-47e9-b143-4333213a0469",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1645a4-7f22-454b-8b02-ef462183c248",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1308ba77-8542-48a4-a202-af0b4593563e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dfcae1c-fab0-4f97-a3c5-4018d3fa2884",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "fb6855e3-c791-4763-8322-c0c5784d393c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f06dbc1-6309-4062-b775-8bc17433bcfa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca40efc1-970b-4cc8-90fc-ae03df13a7db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eea38482-e4f6-4506-a8e7-2341c4690a5e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "609c2f94-f746-4499-8fd8-215c8138cf77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf738b0-ab6e-4490-9714-44b077c20d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cb46421-16a7-4375-a795-7b91791d68e1",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "36c399f7-df27-477d-9cd9-0c2e83ee58a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9be5dba8-6f74-4831-9722-52b847e36c4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d175103-e81a-4887-a173-aaf38b678fb4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4497eefa-f2d6-4957-8796-1b52adcd4499"
                        }
                      }
                    ]
                  },
                  {
                    "id": "acb4ed94-7c9e-4d80-a1c8-b94a50d6aab6",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7afe6f74-f37c-414c-8f0f-772bb23a6234",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df0e1d34-f3b5-498a-9e67-3965bfb929df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a925991-3046-46e7-8226-41e78c355309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0351c631-6266-4abb-b113-798b55fb5a0a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "158657b9-61ad-4510-94e4-0116471cdad2",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e54576a-02d1-43e7-81fd-1dc436b499ac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ceec7507-0733-4789-bf99-eb2e5cba7f2b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a664391d-527b-454e-b2cb-eab6c5418029",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cee21e9a-75e7-4f03-8c4b-a89b7268aa87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "36cf5953-3343-4375-8ea4-76ab5081e9ec",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ebc04963-aa2a-493b-96a8-303ff07049f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab66d227-8665-4729-b765-fe99157b0b8d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c29b10-792c-4035-8571-bc9686678bb7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1dc185cd-0f74-405b-9405-cd8a60d29d41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "584f05fc-56d4-461d-815f-4ddbf00d8d3a",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5603162b-3bff-4c49-957d-1d6a2efad2ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aef1175a-746e-41d0-866d-ec9fa3da8e27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e45784b-f624-4064-9561-1636a91b84ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "745e3376-960e-4ea7-9ec6-934b5503301a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d94f448-6a23-4b31-8a9b-32005324d817",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb131c9a-5c36-46d3-b500-af2e3ae2e02c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "392830e3-94ad-4e6d-a438-479215ba3177"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7510b1f-25db-440d-85db-b1b5ddc07e37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0321dcc8-0422-4683-99cf-88413990783e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ca64603-2ba6-4e48-b277-d24d8af4e9cc",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08758c84-dcff-4914-ad63-3943f2070f45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e74c1831-afc6-4a50-beda-24ea9eb79384"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c682baf-7eae-4c3b-af4d-62cce4daee43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "10fc7ae5-656d-4000-997f-270334173157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0edcb84c-00de-403a-a860-8018c0b022e8",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0bedb76-fd1b-4078-a405-2da6bae8dad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "38be9438-c5bd-4db9-922e-7374ecebbbb4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "670f991c-20f4-41fa-867a-2a03c2dd50c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e11e1dc5-68b4-46e0-aecb-33363913b8c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b19f5038-3a27-42a2-b9ef-9d9f97028b34",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "285c805d-9327-48a3-b004-ed5cdbf36afe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da9954e2-15e8-4851-8e88-8a8946c45ae4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a378ab1-2f3c-4741-8842-056b7033d2d1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d27b8e10-b66d-4a12-955f-8b63f39a6931"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52f88537-351f-4879-bc97-33b709a3e5d6",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b59a357-afc0-490a-9864-250500d0a39e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa36ad06-969e-4112-99d9-ce2b13b2a353"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6ea5bc9-c832-46cd-87dd-2dab437b6c7a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6c3f457c-4c60-470f-b9c5-8d8b5df67071"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce3457f0-2920-4125-ae1a-b7e90428be9b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c96c6d3-c2da-448b-8535-6ca3d7deed1a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2556e53-8d61-4894-8b12-1f17da2806f2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0eff72-1d0f-41d2-ba48-ac9bc3bcda52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "147320e1-2065-4b74-8830-68b85d563834"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb6c812-d730-493f-b4ef-140b21728670",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e5a9df-1bc1-4cb5-b006-c6ed12d4369d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb0eb4e6-a5d0-4886-acd3-2360106942e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4155f05-6615-4aea-9c02-2fabed8ed57f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "867df12a-bbed-430d-9ef0-39fce11c8f49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de34d4b4-05ee-4e58-bf47-4a7b7e2f7350",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "345c06c2-30e5-4ffb-9291-95cc06f225ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7c6711b5-31f9-4d2a-ad80-788a083be47f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ddd54d5-4048-42d7-bf51-1528e140b207",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f0d8eb05-048b-4d6b-ba6e-5ec37afdc576"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77727018-4d8c-41c9-b743-11090ff04008",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42551471-15f8-4216-93f5-59ac11bb3910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b57d244f-4f14-47ba-b146-a1d38afc2b68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7027bb45-aff4-4849-b826-9f78f54bc53e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1db6fc50-c379-463a-bc30-a2b709734778"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5aa2d4bc-ae89-4482-b032-925532a9cbb3",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87b0bac9-9096-4321-b3bd-dc55c2e2eb70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06416d30-0fde-4be5-b6c6-827d0fefd899"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41c415d2-2a80-47a6-97fb-99b404592245",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "81718cd6-34b2-49a6-8275-316a0da9fa36"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3c2b5ea-35b8-417d-9905-d23ee80c6ee1",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e212964c-420c-458d-80a6-5dda27f1674f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09d9dc35-0952-4d95-825e-a4afdac70ff7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e863ebf-281b-42bc-a509-6741ab724584",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "930b305e-b974-498f-85e3-d025be2e32b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0555db1e-730d-4e0c-b688-372f4181d886",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6e6ba91-0187-454e-9cae-a83f0fa4b1db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "272389c2-6e4f-4bcc-b746-71af26a0a022"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd67c663-c801-4a41-afb2-d9b943050951",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f73886b5-7804-48b2-beb0-1318526cce76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85cd3b6b-d624-4fd8-ae1d-2982698d8396",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "46e4c400-570a-43ed-aad6-c0f975ea23a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d97ac6da-567a-4ed7-b78a-550a0c726af5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91c6bed0-adb1-45d4-9cff-07eb32959946",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e345d0d-9390-49f5-af94-ed0958d5bb7d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbcbdb9f-8747-463d-967a-14e062dae8a9",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc105015-59c2-4a3e-a301-538cf82b6c74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad096cfd-954d-4700-8a89-abd974a1ffc4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "07e0a37d-9aa9-4e7d-acce-bc5ad26a30e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "431579ff-80ad-414e-9770-0b115bcd6276"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3ab557b0-2c65-4043-8ec9-a643fdd3c59e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "402e4b82-e652-4fb4-894f-0d023cbd9be4",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b710d46b-5069-4490-9542-dfe8251cdc12",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "d52c38f5-77fc-4daa-84c4-6ac54c11e874"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe985063-9973-49e2-b922-bbcb86d2aacc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e7e27872-1977-40d5-a7ae-d49c7e460c02"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e550087f-ab86-4a18-9956-96a371ed1b7e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b6ba02-8a24-4561-bdf7-14dd2f0f7d2a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "16d7d67b-0147-4048-a0aa-34a605b9d42c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f9fc81e1-32e6-4f4d-8aba-e01b93f3e194"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f611ee7b-ac72-459b-ac42-2d30ae85d1ed",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1624e458-5fb9-4613-80f7-40a8824c7a6d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ffe24100-0b43-4670-958f-910b20e94a3d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "6c7876c6-c1d5-4c11-b846-658806e7e208"
            }
          }
        ]
      },
      {
        "id": "20ff5adf-da92-4110-bb8b-165090fcbd67",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "18dc6c2f-cc8a-4766-9436-d1ec841b4358",
            "name": "Negative Testing",
            "item": [
              {
                "id": "5c35c9a2-2d0f-40ea-8c02-3df52a206c39",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "bc82a3d0-427c-4d5d-94b8-20e299faea5f",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ae73931-35e3-4580-80bd-692bafc1a501",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44d2069e-0107-4724-ad4d-d2938d5ccf1f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8e93c01-06ff-45db-a2f3-1e20c4f0c4cb",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a0cd0e8e-62d4-4799-b7ce-b1d2a20324ec",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2cabf344-f5ba-483c-9104-a64fdfc8ce5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0004f5ba-0b06-4e62-9902-fd6a6e707782",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "43ab5798-62f8-433c-9e88-bce2bbb4357e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "786fda2f-c05d-497c-bdfe-fe602c0694d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53c979d1-3286-4316-ac18-c02b32fca001",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4af0347-10b2-49ae-acfc-3f4696862e85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0cbd7e85-08dc-4e09-bf0b-6830b9b5bf29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e15893a2-97d8-4625-aab0-30f15d40f730",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d59a431f-4449-41b9-99a5-356a20268ab2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc784fc7-388d-40e8-9056-d878327bcbe9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f1edb986-ea86-4839-9fcd-32cfadad8c7c",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e4df70-eacb-4c80-a347-b4ad287fc1e6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "95536a1f-d74f-42c1-ab06-6a7445ca5a9d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ec4c2169-71aa-4adb-8897-e6b4681c0ce6",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1ac02cc2-ea34-46ba-a74b-c77fab3ca03f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "36509d07-2863-4165-8967-a4193c2224b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12c49f9d-1db0-4f29-9264-5a831107bfdd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "983493df-8573-4be9-81f5-a1e7e2275017"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7baa4d39-7424-4cdf-9898-6de195242d72",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38cba0da-444d-4b9a-a510-3c06da8e7403",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cc3c1404-cdcb-4e12-8162-2fde78c89289"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c09cae9-c263-4627-9248-f7198b0cfe53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e61160a3-e276-4bb6-b910-0488125f7044"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11892948-800d-432d-99e9-4f2932a62eb3",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc15143b-69a3-4338-9319-e9972a6ff102",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "db1bad0a-1c7a-4ad7-96c0-a94cc3803027"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "957915e2-917b-4bdc-af9c-f6d8748106cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9acac0cc-a41d-470f-8345-d73b605394f4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "397c467c-1323-4323-8b2c-7013f483b174",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64a04055-7009-4464-8242-015b4150cc60",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d81d708c-cc92-420d-809c-0631a6b19f89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f81a7a6-148f-41f6-9904-6f05d08fbfde",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57cbcb85-5e29-4466-9e47-d8b1771fa348"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8bdfce3-d689-4d50-af03-f0d0dfbf8f1e",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97e833cb-7f67-4112-babd-ed51450fcb99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bbd1c64-8ba6-4d34-8c07-b5db731a37c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2e66bae-6e9c-4cb1-8347-9fec1ae3ce66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00004e3f-603b-4bb1-a688-9e27f5a55b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55667371-3337-43ef-8265-1c6013ef0057",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "06e2b9d9-8d98-4828-a40f-bf696848c80d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c0c61bd-1a98-4ed6-8b01-f182079e644d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8b1c1236-e6d9-4a03-a1d5-16a13d5fb1aa",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00721c93-6d84-4828-a709-c1a27f573ed5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f667697a-17b3-4d44-ae57-039e99b5d74d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c7b672-799c-446a-b42b-6a18acad6866",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "02cbfae7-bd25-42cc-9e2a-e9f8023f744a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e468e0e-39db-4c27-b71e-de571234a69c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf4b9c3-2e69-4193-962c-55f6acd2baa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b70c5287-ce7b-4a11-905c-d763eb03596e",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1c9f1d6-6017-4b41-83fa-278b685ef61a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b72840cb-26c2-430d-a32c-a3021235885a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36e5fa50-1d9f-43ca-91d3-6e10353a69f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5418d4c1-9443-4de5-bff5-d0a472951692"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b01ed374-aff7-4351-a469-10e4922539d2",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59ef2c78-7d64-48be-bccb-7546677f7073",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c77fbb06-d0da-475a-b28d-239008368ca2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6d50327-cbd4-4f16-88c9-a3ed7c109725",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d3c4ef1b-ee70-45aa-bb4d-c7d0808695db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5702dfa9-ca8e-446a-9651-2da220c945ea",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e49053a9-44d3-4c4b-bea1-c8296f723339",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f185dd84-cdb5-4997-bb00-0bd8d9eea8fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ef13c22-c2af-4bc2-914f-3b03e478c19d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abad5881-ef7d-4ce6-9ac0-7e990e1a3473"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0b420aea-f65c-46c6-a063-1fc7a141874b",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df9962f9-b4b1-4440-a46d-5ebcfb9e64b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd38b4a7-aec6-476f-90e3-fb230a24c948"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2394da8a-6fab-4f34-a93a-10d261577d8e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b7e5739-54c0-4979-aa0e-7025d8608c4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5fa60f7c-3596-4abe-9b35-6a3d48bcfde9",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4208c7b7-cc51-4207-b6b1-b2eeec51de28",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "281b32d4-1f7b-414e-bd28-a43506200c81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "506eecf8-9cad-4062-9d6c-ff99753ba269",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79b5b29f-0367-4821-8c02-0d12d601b5d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4f16aa1-adc3-4d21-b5d8-b818d1438e91",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5860191-eee8-4ae1-85d3-ccf4918d21b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48bb1ce0-4ef5-437d-b943-a61114330a6f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "57537d7b-d5b3-4c7b-ab80-9412761ed3b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2af46a8e-1fd4-4ec4-b69d-7321567a97cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2c05bd1f-1e8f-4a07-bff6-b55a100fee9b",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34576481-736b-484d-b501-f1cd3a3d0cdb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45b98ce2-69e6-45f1-8cb8-2bac952a468e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1252cfc1-86b0-41bd-9922-17ad454dff34",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7bd0b9d-7e50-4a59-8d58-8503ee3ba130"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b0e4519-7b5c-4d6c-9f02-d86604632947",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "555a7d02-dc71-426d-ad6f-b923bd1ca4d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e890593a-0390-4040-bdce-0f102a270cea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad502864-8259-4b83-b3a7-f2717bcd563c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76024260-1b8f-40b7-ac24-065f441fc286"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34b99a54-e646-472c-98da-e63336297364",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a0ac8af4-1283-4ecc-ae39-7a4522c930d5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "babfca6a-43c4-44c8-9c68-c21c84a085e4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5fb1066-8546-41b1-8c75-b0586df035d8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fd7c215-f1b5-4c39-8f83-af845a5ef4ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "95236c72-5779-4400-b194-7752c4cb7d31",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "413fe26b-e347-42d5-be27-baf2560d9fd7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7583a9a0-68a5-4b73-b0cd-2f5186825510"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3c6aad68-ff16-4f8c-9a06-643dff6eb386",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a13f58-1c91-4de8-9af9-0fdf9336351f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0117b9dd-9bec-4297-a492-f40d4716eb38",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf1483a3-e069-4329-8b65-b4d143eeff0c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c06118b-1934-4de4-b761-836987378ee9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4dcf4aef-d7c0-41ee-aa61-b7a2a555bb80",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0aa6ad8c-b15f-4997-a924-968eb81e3250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae07d270-2928-4eba-8e8e-48402378e60d",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b081551d-ba74-493b-87f1-dfea5d204f33",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac0d86a-c303-434d-ad4c-293c19246164"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a20bb52b-6161-4360-b278-e62ac1f7d22d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "902c7cce-51ec-481c-9e81-d7a221bc6739"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9c844277-3f43-4382-b8ab-73bc37b24bb1",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97693ce1-aa91-4977-b823-6df1b3b7cc83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4483dfdf-8432-4f08-8b73-44d4c06fdf73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4e95d07-7ba2-4d89-92d5-0016b3fb8f9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8cae6d20-2603-411b-8a90-b4aeda64b556"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00d3f2c1-0cd4-4bfa-9ce9-b98ea6ba23cf",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cb66a96f-381a-48d5-8e33-19e678d60d25",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d5f0b01d-8e0f-427b-88c7-b20734d8efaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f54f25c3-a03c-4800-b5ba-46da63a4169d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "367d5d05-444b-43ca-98c5-72c7e32b4ddd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebe53cbd-f79a-46ba-a4e2-09a4e55de4f4",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b544c03-d370-42bd-88f1-addca0a1ea14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1938dc89-d1ef-4d97-97d2-b48e955b9d50"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cf2937f-c6c2-47a2-922c-bed61362a3fb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "264fd41c-8a6e-4dba-9494-a11fbe4af664"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78c430e7-2c59-4562-83a2-e1dbac2247da",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99355fb1-4378-461f-bc8c-d464c1968735",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e078b121-57b4-47db-aa38-def677e0f0fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21f2d635-f9ee-42f6-938f-b9ad05aaa38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9eb1dde4-f4e9-4a69-a96d-3688a339660c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66fc9b7c-a4cc-4863-97e4-4de7024e801f",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25e2122a-3e1d-4194-8f32-4e41b5d46acc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f597aea9-7640-4f51-8c92-c9843f20aa4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96323f33-9e07-4bef-acca-df990d7189a4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76cd6e6c-1b06-41f7-bc9c-a17435aba0d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97aade3b-bb6a-40ea-b90e-0a07da7364a9",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ba5b4cd-f58d-4d49-b2ce-40378ba75e9e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3c3c577-5d5f-47eb-b00e-ee8e21853940"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36f3e00f-e4d8-46a8-9c71-06e47d64e743",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3eb01979-a602-47c3-a15f-e1bb4f679be1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0db3e982-335a-4188-916e-8bbe747ffdf9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88896c7d-8232-4ea1-993a-62276a766864",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90fcf0b1-050a-44bc-ba78-44fe8464d782"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cd3d7b9-1bb6-4c82-b9aa-10287238672e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85440ef7-8a9a-4aa1-8b12-c8118d74eb83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "777ab312-0e5c-4cae-8f63-f8027687a659",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b76a942-ff05-49a3-84c0-b59ee98f986e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e5f766d-3633-4ddf-8f26-f34137d6e91c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef450fc6-a000-49ed-a026-7f052089c18f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "569fcb3a-2915-437e-9bb5-879a61b9876a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc689175-29be-476e-81c8-c9513e9dca3e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eea6d52f-4832-4df0-a6cd-6c5f4627ad43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "71891dbf-096a-4b30-8fc5-0ad5cf5d917b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e612b26b-bdf3-48c2-91fc-77668c0d7869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c5a9c449-0366-470e-a116-b45228b3d4c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5530b021-a116-40a5-89c6-b3795a8e04b4",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7674aea1-f8ac-4ba5-a5c3-82f56243ee96",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "539a37f2-edcf-4e06-89de-3bcba45a3e9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e30cce0-242e-4003-aa35-565a1532dcba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f719cb-8d44-43c8-997e-35dbdadb6d23"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc3e71f6-44cd-4412-bbb3-68663e1166ce",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "256ddc7b-89ee-4133-a08b-13565c24d9f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebdfce8f-e425-4625-909b-9b81c67baba9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5163d55-eeec-4a63-90b1-f9f20b10e859",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c93006c-cb75-4012-8ab1-1aa27f434bf4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a40aa2b0-c95c-4e28-92b9-7552427fea0c",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49053e9d-0002-4f1d-9557-23ae6cf3a2f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b22222b1-ebba-4f4d-b672-ef7ab0b7c8a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a32457dd-3a3b-4018-b77f-c3cd2f67dd62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6a2eb7af-8159-4a0e-902c-8d90228b3b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df621d91-9ec2-433a-9df4-b4ecb86190d3",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "654fefc1-a3d2-4fa5-b250-560edb0b43ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d69fa345-43ef-4a19-98fd-abda04e9b7fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a4e9e3-b491-41d9-949b-047fcf689335",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "257c8678-e7e4-48aa-9036-6c473f84293b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1625e1c-c65b-4b9d-af31-d9170b5a5b0f",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4b8ee77e-29db-415b-b543-ada243ef2205",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a09a71bb-36e5-49e6-a58f-77dcc44798eb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "21631da4-adfb-4af6-82f7-28573d52d0f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4185c5a-c4db-4eae-9248-f94604c1e55f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db21d3b0-d186-4f57-ab9b-228047b6e5de",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cafe4657-4c08-41ff-b9ca-b801d0964b0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ceb31912-8657-4f94-93dc-2ffcb296c765"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a788e22d-52ca-47e2-ae3a-cbf991064d9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16a23452-4754-4b21-b763-931681bc70db"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3c4bec76-3425-4ca2-81e1-84ced503feb1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80b66659-866d-4ce0-9a4f-1f22aa8d824c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f3e48eab-348a-4589-a6c4-5d67ad095476"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "535041a3-cdf3-4749-8318-3ed97ffd4e70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "856b1f35-68a7-4845-b3ba-bfc1862f1bab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "222ef198-d27b-4cdb-8c66-1219678e84bd",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f360d2c-25b7-4234-b4b6-5c9eb8260c15",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9c0b20bf-c7a3-4fd5-aab2-3552b4e3febe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "923d2d7a-0d68-4879-b015-7fba56fbabd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27b90a9a-2281-4d79-9145-32155acf5453"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44717f34-ddf1-42f4-893b-ced6f6ca92ad",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d39545c8-f3a1-40ed-974f-c46a830eb5a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ae15acef-a09e-4f9e-9362-7cfabb42e45d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "06652745-cbd9-4ad4-be32-0e26708a54e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03ee3560-18f1-4f52-90dd-18029245c303"
                        }
                      }
                    ]
                  },
                  {
                    "id": "865ab77f-4ac0-4f44-9020-aca221b56c8b",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d5c36b6-c713-47b3-bf2e-bd6af4bf6bfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7ded810-25b3-41cb-bd5f-77b651dd32f7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7c196c1-fc75-4127-80b4-e63cb91abd73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8da27526-9bee-4b7e-ad69-97162392f07e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5345256-8ca7-49c4-a442-ce2f7aa9007b",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18ea9813-ee16-43c8-8cb1-68e675fb2f33",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "307c54dc-ac31-42a7-b845-199dd567cdff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fcc233c-3151-4aaf-9642-9a151f09e12b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "21f862f2-7d21-454f-8194-1198d1bb35f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8dcddcf5-10bf-4c43-a14a-727b9f97e28f",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f93a1ae7-3305-4d88-af59-ef00f0b59a76",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45769c59-ef16-48c5-8c8a-f91a11887bc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a211171-88e6-4320-8380-080d2ff5aeb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cbabf295-a833-4542-a9df-7a75853a2999"
                        }
                      }
                    ]
                  },
                  {
                    "id": "884fbfd9-1f57-409d-ab6d-e37fe6c58fd6",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a9f315d-8c47-4780-940e-e5b96cbd2f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c4b85d2-2353-47ab-862f-06eea1eb5cc5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "724dd5a9-206f-4f9b-a775-0a13585c159c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20ef06a8-1f93-4dad-a0e5-9713c4e9739f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83484ce2-c298-403f-b94c-cf55a232ed89",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984ad2d5-1383-4ae9-a838-844280081978",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6484f4d-8da9-4e34-946e-df90d6fe8eaa"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0bd90e60-2ed7-48d8-9c84-d8121c0bfc09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aa8fc8bb-73ee-4cd9-bc96-cff052393397"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a435d566-c357-4166-b5e1-8ea8b456be5b",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e7c45cd-079d-4b8c-b00e-ca7b37bc5bf1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aec5ed1d-2bc0-4f4d-ad5a-001e21455a58"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dc77f5db-e3d3-4c46-b651-88f8ea8d7800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6eb716a6-e6fc-4dc6-bf0b-22bb5f384876"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66d7efe-ab21-4ef1-b820-02250e29cace",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b34c2e14-f38d-43e7-9296-13c68f549cf6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16898df2-4220-4f23-86f5-b124b4dab12d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe3e77cc-ff34-4bd2-87d3-ccb425331302",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51d7b17a-f4b1-4522-92ea-323c504aaa96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0d94d4c-04af-4e85-914d-1d6656a774a8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bcc486dc-6062-40a5-9530-efa5b21816de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52134b01-707d-4d68-b2be-4a3459fd0ae9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1921d8e5-6ee9-4f36-8006-9bf427e5fd21",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7ea8dbd-ebb5-44b3-92be-c8bd012ea9c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "362908dc-5f2b-4d4d-b83c-a53cb1d8e2ea",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2a41949-84fa-4ef6-8924-e074898d3558",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cee93b0c-6079-4daa-ae7d-6a7f3f02ebdb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe47d124-f496-4986-a764-da8d6f0fcf1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "673d94fb-a0b6-4622-bf3a-da94229a3c70"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b5a35b8-9070-4e26-9dc3-7278dc8f677f",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa9623bc-c5cb-42bf-863c-59daced7b231",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08b376bd-52a4-4fec-99f1-284d174b3e1b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "562aece9-dda2-4243-a76b-9c15734069cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "39f240f3-5d9b-4f67-97d2-2be1dfc6ce5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd75127a-c741-4373-90f9-e6268345621d",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4dde6c06-517b-40a3-992b-0dff9b57971d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "82780dcf-eb5b-4bdc-8221-a13e90945ef7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d90e2268-cdbd-4f9d-b1c5-d32559c47aa9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c69ea473-3d9f-4ee2-89c7-1a15fa695929"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9f9aaf46-66a3-4e03-9612-3032b3fafac9",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5531f672-7cd0-4505-9384-dd7825860cb6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4a833c89-d5f2-4996-9344-d39cfd2380a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dddaf815-02f1-4ebb-94f2-68d52a57aa09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "756e94e6-d93f-4858-9a0e-4e4d4deecbb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bc0c4d9-2eef-451f-8493-e403b25be5f3",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "49fdc2b9-a2d0-4e7f-b413-c82f7c286197",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f9be876-9278-4245-abc2-314581088688"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6ee479c5-ade6-40a1-a116-fe29b7e260ba",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed41de71-0f43-4286-ab14-f95d7a0f347c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "119a7e38-733d-4708-8c62-d7ec4a8fa0f4",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2d96adf-ae91-4eac-8ab4-0c1c3cc20f32",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43bdb94c-98d2-46c2-a034-d81bd29dcfff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd9ba10d-3b4f-4ab9-bf6f-1d7eed570b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5acccd1-78c9-4d65-a6b9-b01f9a55962b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57cf8b21-9e13-488c-be61-bc83e9b292f9",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed0d4e58-e639-428d-97af-03f6d010dfd5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c0b7b668-5462-4a0b-a7ff-8835f976f7cb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42744330-db5c-4dcf-b78e-8fe4205d38a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c94edfc8-ae65-4343-8323-49942aa3e67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "74fc568f-8b16-4ca9-837d-aaaa36b71ae1",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e356692-fce6-4bab-9a60-963823f32fd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4986b719-e528-427e-a581-1ee248504275"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e5fa506-6ab0-4c9f-a670-99c3188d73b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eddd7a95-551a-4b79-8db4-6b6ae822fce8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a76b304-5af0-4b54-b6b7-b3f9125d145c",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0aab1818-d7b4-442e-8752-0b6154723b6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15f76a19-4d39-449e-ac86-b799bf879e89"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9c8af7c-8764-45b7-b54e-6320c986f551",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ffbfb3c-4728-43cd-9b07-fe5f01ddb764"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5cd8da-d2ca-430a-bae7-3632d885794a",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa97b466-4881-4c8b-94ad-b69c4b67b38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5a2efd73-8a28-4bda-9a9f-b7c85868bae5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "431a549c-54b9-425b-8119-1d9525f924b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd9e4e1-2b29-43d5-9412-cdaa1e981636"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97ee1187-7b6b-490b-a7cc-85b1cb0130d5",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ed36d019-868a-4219-b924-df1e9c446061",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fac2c92d-2c3f-40b1-8808-9bc5577febc9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2b311234-ea9f-4ecc-ac6b-650d548f787f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e7e2d07d-1725-4e48-9fdf-8885a7b20497"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac376dee-bd5e-4a6c-916c-7064dc612010",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dcedf7b8-4779-4a0b-874b-53ac02726582",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86379225-9304-4a7d-adb2-1602aec7cf1e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae590a72-b936-4df7-a3d5-f815000256b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24bb6a38-2561-4836-831d-79f4b2efeba8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5bf0168-ca54-4ea4-aa94-f505a3b6b852",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ab61cf-5832-4c97-a284-70ac0acadeea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "208edbcf-8d8e-499b-b0b1-72ad2402482c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f8e20aa6-9259-43f2-831d-6a66319354ab",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fa79511-a623-417d-9306-45ca49839902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f28b0e-4d4a-4364-834e-cc7551a0e924",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21815c8f-72eb-4015-be66-cd53351798b7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d08527da-ada2-4885-b692-0bb34bcfdbc1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e88667d-38b8-4d4f-9e41-e2a29db1474a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4802abea-a5a7-446c-820c-b77eae8d06d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad8f4584-7a42-4889-8c90-15c6d1a3a8ed",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bf86e44-71b4-4f82-984c-6960eff24c39",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "64a5e8b6-c9f7-4c92-b76e-4cbc54eccb86"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f63cc348-2502-41c1-adcb-901fa332b5c2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cbec150-5f75-4e7a-b759-9d8eeda68dcb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d278e67-8b8f-472b-a5ab-3cada96d9c6d",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fcdafab6-ffb5-4553-99d2-a6c175d83ece",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "37906880-97c6-4ece-9dc4-143c8ec79622"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7bd690-e9f0-4bf3-89d3-e00e4e9597c1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f63cf496-b62e-42af-b19b-814f6ad08356"
                        }
                      }
                    ]
                  },
                  {
                    "id": "798955d5-1dbd-44de-af61-7566b4bebe26",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "41f93859-e3e1-4b83-9121-e40d693a42a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "df9cfd57-3960-404e-9dca-7f32aa2d73fb"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d818a33f-9eb2-4c7d-80d9-f014bd9ab221",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7fc3bd03-e2e9-491b-a2ea-cea0c61d5617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "902983fc-8728-426d-9353-4b334a78d9f5",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9debaebb-a69a-45d7-9995-1f2339c40769",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bbe053bb-b195-4bff-b747-dbd89e820818"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "355def6b-6455-44f5-a0e6-7f4e42ae0e39",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9648ba75-1d6e-472c-9229-1a8a28ddd99b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f56adb5d-56b2-41c0-8042-306188e5d374",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6375c2fa-d5b2-4524-8c18-69980089417e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5decdeeb-d1d8-415b-b3d2-970bbea6c111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bc68b11-37ef-4d6e-8c8d-1ef14637c918",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c3b92c-b45d-4abf-9add-4e48980ab3eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a650384d-1979-42d9-b9b4-4d5e1e41273e",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2da8b4a5-f3c3-4786-a6e7-b5da9222570d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "90c04cae-484a-4d01-9e1b-f92b2fd7150a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dede9d4f-22da-4615-bf0c-90d71d294cf8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a8315b94-eab6-4b00-b147-58a92eb98bf2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a211f6b-0bf7-417c-bb69-012fef4e05e3",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803daec2-fc61-4b14-8b5b-bcd53c802792",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "547cba56-c348-47fb-9739-ce05e07a2f9d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "713f1642-3a1c-42b3-89bb-70933e6b1f7c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61b8316c-4f99-4f46-97a3-8c9057cb5deb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "23a611d7-9012-4ac6-9b26-778deb508b43",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "110cff39-3085-44bf-9c14-b35c79c00788",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "473ca1a9-5e47-4a2e-a4a5-5ac959742cb1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b9ac7fbc-733a-4f61-87a2-401e0f57c0c6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ebca63e1-04de-487a-a2fd-ed012fbc725e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5267b3b-df21-4c30-9d03-0c5b78f59995",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "80d835bc-cd25-4c8f-95ff-27a61b713c24",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "960f2d1d-f0b6-42ca-95b4-a25306357ac0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "84bce6b6-c7c0-4857-8570-228dc7d3cd93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b50171-4d45-42ad-a41c-f7713a09f3c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1f471e4-d6a5-4cd9-bca0-d71291b3b71f",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b0b11d4-0c2e-4664-a83b-37317567ed95",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1f228c3-a35c-4037-bac6-1be2055d9f78"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07cf4715-59d2-43c4-8593-b1b6577d449e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b8b4b17-5682-41d5-bdd9-fb22fc29a1f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cd59a39-777b-40a9-9d28-6e2a412f7aa4",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50446d11-9b69-4942-ae2d-8103989fc465",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e3820b55-602f-4c06-96ee-76619a681db2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59aa7c4c-d4cc-43f9-897b-66ffeb146b02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019fba97-ca51-4762-8378-cc71134bb0c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "70b5cb00-c941-4668-b68d-bb901f032a25",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b26fe785-7f70-49f9-8c58-125a81dbe7f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79b8a787-1eb3-42df-8939-e061af858540"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "108371ae-9c8b-4211-a517-bacd2523555a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2169d7d9-c002-487e-b9a8-49fb9020ceed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32c501a-491f-44ef-b5ee-03cb7a254b3e",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c8ff6ca9-560e-4285-a079-b7f8135520dd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9d0c319e-0b34-4e89-821f-48ff65e4a792"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "079bb905-ba11-4fd7-998e-3473cfcad310",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6546913-b3bc-42d1-a2f7-fdb66c6549c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ae1c1ee-a18d-4ac0-af0b-833679918163",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c28af1-8147-466e-8cd6-86dbd3e8b755",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a97e872b-e1f8-43c7-ab36-4deea1e8a229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c80a045-ef77-49ae-8580-17a29131035d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91153f37-1183-4911-92a2-d6ad00e9d334"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3938788-21c8-4053-860c-d877f249f0d9",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3e4a6d5-d26d-4c5d-bdbe-8b1ef0e35c7d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a94ededf-c053-4996-a84e-7afb339f93be"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8505440d-ff6b-4b70-829e-47a6986b3c5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea825edb-4d06-4427-81d9-b309820f3806"
                        }
                      }
                    ]
                  },
                  {
                    "id": "642d2e60-32f2-4b99-bc4b-64b39190094e",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d7d0522-1efc-4822-859c-fe58a9640e7e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6a7e82c4-4295-4347-b8eb-1fb7e9b2e381"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ccad320-c08c-4880-800c-8613a159bd5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7ae1ef3a-3e60-40f2-b1dd-89be65adfe99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b9b32f7-469b-48ae-8e1b-97e57f3cf1c2",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8dcc3341-345a-4e22-8e0f-ae5f878e295e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b17bcf46-2ab1-4117-af6c-d86db15b2b71"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "df44db87-04b1-457d-896b-9ad0b60ba77f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7d3d432-3bf0-4009-9283-e7b97952ac86"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19b61ad7-3b7b-4a5d-b68c-64193f1bd630",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a804011-131c-4f0f-9da0-0128f26b500f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9901d005-3cc3-49e6-81b9-809c722f3041"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b98aafbb-e7b4-4690-b26f-2cf04c34a82c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3abebd9a-eb32-40c6-aa04-76ea68c3bb41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "067666e3-30e0-4c67-8b32-58ae8a17d261",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "63174fac-27e2-49ef-b461-eb2895102d23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e5db09d2-c9ff-4085-bc9f-c7e62cb64346"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb8b317b-8bdd-4ea7-b61e-c581d22b8c9a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55f85adf-a827-4374-913b-4d2cdbee0472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee9418c8-fcd2-4653-91c1-0d057f044199",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94bbc8a4-f5ab-4b15-be44-61c05906cc0a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "781a0455-3aa1-45d3-bf77-5f7a9a268629"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b4911563-a3e6-44c3-9ff9-65b6c4651d47",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "676832fc-b048-4ec5-817b-54234145f7ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7aa0115-5988-43fb-945c-885ba9855739",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb6bba5a-85bd-4ea2-b116-720961dc599f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7aa63250-f962-42ab-817e-00129afd38e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9da6e8b-852e-48e5-8c5d-d454ac423e5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "09d71a9c-728d-4d0a-bbf4-4077e8bbfbe0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f06e92c1-c692-4976-bc88-af91c6a7a91b",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "511aecff-3bc4-4689-ae5d-dcb8468ef012",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7dadcd06-97e7-4185-80f5-524800c927dc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba1e5b3b-c487-4117-8f74-055890d1bbd1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "197f99e7-5a0a-4999-9a71-7b5f29bc61bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "356d3bad-fd05-4545-b038-4c06c25c1b9a",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ca81a7-0ff2-4f2f-b643-3096dbdc0861",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63529145-8cc4-4e96-b5b5-a8c9f7919dd1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bd218f29-7a99-4140-89b7-2088a4506c90",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "de7ead11-8193-4c6c-be06-8855f58b6a00"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8f0eecf-7c37-4354-870e-1bc1ad5120bb",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43e750d9-8d4f-4613-b9b7-4d7088600c8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ef32069-9858-4676-a9f5-dd4c4fd835b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b50eed2d-deec-4b15-9302-385688c29d7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a0b6d40-d9f1-4890-b2b0-1e01dfbe1c74"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cd8c8d4-d0dc-4af6-9a42-ef0f109d239b",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d3552403-46dc-40b9-8a37-eeda1cef45de",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8545c81d-7467-4b4d-bafb-70de37372483"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "07d0d7be-9669-4ee7-b31e-fd8064d739f4",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "22ce7e76-56f5-4eae-b078-c6352ce1219b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bded4a85-5705-46ee-ad37-51ef5306e891",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d64db8c2-e962-4cd0-8b89-7af0835631e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8814890b-fb71-4718-95c5-d2fcdbe9102b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02b23449-f534-4998-abe9-7db74b47d35d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5f73288b-bc03-425d-8982-53580ad7836f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57be8b5b-70b6-4635-859d-5de08765b95e",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "958c2474-0098-49c9-ad7b-d23037de7713",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f758074c-0958-4689-bde5-4176e6e240c0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fbfac76-e6b0-429b-9c97-19681f51c8a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "57a7ec8d-37a4-44e4-a191-bbdcfdc8d18e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "209bd59e-5a99-4bba-8ec7-417d5f3717ee",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "855678ef-9e08-48f6-a16f-8d0227970705",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "418c39fc-1e80-4733-b32c-42370a39d4ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "690806f1-a0ac-403a-a43d-9ba80f01f710",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b49724ba-04ab-44f7-8903-dfe2f23b3258"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f4240cee-69e6-417f-b93a-f69ec172d100",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fff9835f-bc59-4cdf-a869-74f107515781",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f1a58b4-28dc-4b31-9687-86aee8ba736f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5714619-16d2-4eaf-b7c8-935fe36347cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab2385c-aa4f-4115-8417-2cc9bb314700"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b62b7e9-6b61-4b3f-8852-4c0c6ca2c90d",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d407c9d5-c11d-43bb-ae82-7bc739698de4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0ef66e13-8288-45b4-be18-bd738a990191"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296583ba-0af8-4248-8c11-cd4ffa97df26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb799974-3790-404e-80ff-2f4e8bebbc3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68da6688-a5a2-4023-8e41-875ab4b09618",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e5b5db72-dbfe-48be-b43c-16eb076dd31a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b1e6053c-9589-405a-ac15-38f173736b61"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b9b3f73-4be2-4cc2-af1b-26340aeb84bb",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "faf5ce65-7f77-471b-b0ac-a469222f6b65"
                        }
                      }
                    ]
                  },
                  {
                    "id": "354702da-6e69-420c-a81a-96dedfb3ec2d",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e7bbd5a-ea59-4ddf-8739-dbfa475d8c98",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "74f9b51d-b038-4cc8-ac7c-0cff185882bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d38143df-fb62-4857-9f03-7a30c855fe52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8493193d-31b8-43be-b2e1-b3db17848adc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f8c97f0-636b-4359-8a23-ae329254e8fa",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4a6e8989-a0c8-4b0a-a369-37277bc2d455"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "619b834a-6672-443a-8c6c-d9880f2e39d1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "01a173b2-0b8b-4ee3-9f15-c6d8c78d0927"
                    }
                  }
                ]
              },
              {
                "id": "6b55c3ef-bc2c-477b-9f85-f658708494f8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "2d0bcfdc-aac1-440a-bdbb-c2228fe38065",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "28e8c61a-e241-4838-8031-bdef1e129c2f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "a54987f8-279c-4aab-9b40-0ea388fc2f99"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6971b799-6eea-4140-990b-28cf8a9b2066",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fb825749-3efd-401b-aecd-2efbb8bc18d6"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a29565dd-467e-4eed-9742-ff2f1bb5ee2e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2f535a62-1e37-4dd7-920a-7acb06e0a559"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "12fa23ad-856f-4e54-bb8c-f2985f1b4e09",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cdb8d9b-85a4-4fe1-9f4a-dd56df2ae2a4"
                    }
                  }
                ]
              },
              {
                "id": "46f49932-eefb-476a-9ca9-983159c69fe8",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "70030d27-cd8b-480d-9f1e-6bf177856020",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad6a4aac-87ad-4be1-a5a1-abeb67c69f7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "f87398f2-de25-481c-9c6f-8726b2299e49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c503a14-2f5f-4c87-b2ba-e3e2c9ca8895",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "64309da9-ebea-4ca1-bdc4-21fd17747768"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "4b37b601-129e-4d63-996c-16903870013c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "4b1d644b-c755-40c8-afa2-a2b00f22f672",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "6445bb9d-dce9-4cd2-a2dc-d9e9c8b36696",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "42b25c9a-096f-468b-b57d-3263bb5a18ab"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dea5ddf1-c8e2-4632-8cd6-fddb1c1c0c07",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "4d62db3a-4d9d-4afb-99d2-8bb527a2bd52"
                    }
                  }
                ]
              },
              {
                "id": "ae6b0aa7-9e59-4e57-bf97-31301836ff3a",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3323168d-5f95-4c2b-ac98-5126ba75cab3",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e1bf6141-f88e-4eee-80df-b12b9f2abed2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eabdcfd0-85a9-4bb3-9dae-da89ced93fb0",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "7cd94103-f60f-4bbb-ae2b-049eaf6158a3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "fce1a620-419b-412c-b188-a08b04bbe9dc",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "f367884c-5d2c-493a-a2af-9b133e856ae8"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a2360364-ccfb-4437-9bcc-5ec564469809",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "55ca2a18-e5af-4f62-bdfc-27fc0e2bf2d2"
            }
          }
        ]
      },
      {
        "id": "36845119-106b-4563-8f7e-85b7c823d9ab",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "9cd15b34-5e89-48de-9423-fb2cf7637840",
            "name": "Negative Testing",
            "item": [
              {
                "id": "7fba2fe9-e351-4456-b074-195e49efce23",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "efdb93d8-d1e4-4a68-96ab-83653696b4b4",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "189d4175-4e8d-4df6-96d3-f8f71fcd9ab5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "122d081e-00a3-4e00-881c-b4d3231767a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "68c72838-e26c-4264-9d0a-b3c02645dbf8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "b70d2143-f7c3-4910-9e11-9eb0c65fb4d5"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "29fa0b63-9ab2-43f8-b536-aed42345074a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3ca7a3b-6b61-4cff-bbce-a26624e03201"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "29688c1a-4fec-4e6d-9a6c-12e5198748be",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "f6c42496-4b5e-417e-92a4-c269e9614b02"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5dd2ac82-5705-4799-a8c4-e53d8e8d2f2c",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "ebdd442d-8042-4609-99d5-b1a53c66aed5"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0c622428-d67b-48fb-afca-4c4cb2398571",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "01feb620-fb0b-4d75-a244-ab91115ea4cc"
            }
          }
        ]
      },
      {
        "id": "0f2f1325-5b85-4b5f-b8a0-6cef95d53519",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "fa148a40-3812-4e79-9562-e0263396ec2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "96130899-b8bf-4232-b7c4-06573f3d2063",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "62ae16ad-5c52-4b86-8cc8-1c776c1024f1",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56066b8a-98de-45f2-a58b-25fc845522d5",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "d1f9fa53-6589-46eb-af82-68e4f50f4247"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fab0d6c4-5cb2-4e81-b52a-fd252eb995f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "8a19cb12-dad9-482d-9050-8760bc5c5a78"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1c59de3e-e4d8-4d2a-a3b4-a9e5e18effce",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3b4d4c44-5b0e-466f-ae12-039ae0c3ca1e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "33e20c75-c759-477f-a69c-6169e863656b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8002a081-96bc-4cf6-ba82-2414f3bae17c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c6532f6b-7144-4951-a664-12f463a28037",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "1e0196cf-28d5-426a-8d44-c249648afddb"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "68fe9852-fa45-4d40-b8c8-24aea743e9d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "abcabd91-cd67-467a-9d5e-c5f5c01a6622"
            }
          }
        ]
      },
      {
        "id": "b2f582be-7c0c-40cc-8cd2-815b0f809dbd",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "503136c7-d1c8-41c3-869f-2c3c3d9ce37a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "14509fa2-732d-473b-a459-33ffe83dbf6e",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "48fac402-e1de-48ae-87e5-358bf3402ece",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "449780b9-14e1-40ef-9207-1f969fc6c7b7",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e0734f1e-6f76-4453-b7f8-8e5862449375"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dde6dcb5-582f-4eb4-a98c-12f791c71059",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "865ba6da-4d27-40c8-96e3-847e13d3859d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4592c521-33f5-4078-adc2-62357dd1f192",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a3fbe7cb-19b1-43f8-afc1-51890b3539ab"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4fa4cb05-ff21-4f8c-865d-385e51ff487e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "e278c564-465c-4027-b745-ac9728a0880a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "50afd9d6-1073-4793-b68e-2f38d08e93eb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "8f5b709e-5d7a-4c88-bf2e-35ce8516ca78"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a845da91-8338-4ed8-b9e6-bc9f6de82c72",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "de87d15a-8b41-4b6e-9522-d426a3a5fc73"
            }
          }
        ]
      },
      {
        "id": "7b989aa4-cbaa-4f74-8608-cd420b901f01",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "6109becd-7e9b-4333-b81e-125ba1ccc4dd",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "c846fba5-5ef7-429d-81b0-b6cfcfb8e446",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "b93df2cb-adda-47b7-a6d2-595c94ada6b5",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "aebfee6e-62f9-4bd3-8fdf-13ab5f10fb98",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "69cdb9d4-1944-4d8b-877a-19b40af6ab1e",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 0
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 68.06315789473686,
      "responseMin": 6,
      "responseMax": 243,
      "responseSd": 20.433620657768767,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698971637918,
      "completed": 1698971670845
    },
    "executions": [
      {
        "id": "452f9477-d481-4f0a-b8a7-aaeae7a0db7e",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "c1f46fc0-c72b-4017-9bae-b684b6a09143",
          "httpRequestId": "749921d2-430e-4d2f-bdbc-2c3527022919"
        },
        "item": {
          "id": "452f9477-d481-4f0a-b8a7-aaeae7a0db7e",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "aa4c3d4f-6cbf-4faa-bb7a-be6499790c2b",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 0
        }
      },
      {
        "id": "e93cede6-020a-4955-a116-09350b1b4af1",
        "cursor": {
          "ref": "84c76d41-7358-4769-a933-90db9637957b",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "7e4baea3-54ee-45a5-8105-37fcc659e79d"
        },
        "item": {
          "id": "e93cede6-020a-4955-a116-09350b1b4af1",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "01507234-ea2d-4f8c-aaa4-81b20c0a4b93",
          "status": "OK",
          "code": 200,
          "responseTime": 6,
          "responseSize": 0
        }
      },
      {
        "id": "b24c9dc4-c1fd-4a1f-bb24-f3ca20ffd880",
        "cursor": {
          "ref": "50a6276b-fff0-4e7e-b962-4d54a93ed060",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "c6b3bf8d-5180-412e-9a4b-b3fe0e0956b1"
        },
        "item": {
          "id": "b24c9dc4-c1fd-4a1f-bb24-f3ca20ffd880",
          "name": "did_json"
        },
        "response": {
          "id": "df6194b6-941f-4301-97a7-e6b801793c65",
          "status": "OK",
          "code": 200,
          "responseTime": 219,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a37ab8-1379-4c7c-a6d4-5d0fdda409ad",
        "cursor": {
          "ref": "4a365c57-afca-4e83-877d-7113c4de75d5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7eb97451-1f2c-43aa-9193-60868418d339"
        },
        "item": {
          "id": "d1a37ab8-1379-4c7c-a6d4-5d0fdda409ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb2b3341-9f00-47d2-8a80-423b2cb6e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1a37ab8-1379-4c7c-a6d4-5d0fdda409ad",
        "cursor": {
          "ref": "4a365c57-afca-4e83-877d-7113c4de75d5",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7eb97451-1f2c-43aa-9193-60868418d339"
        },
        "item": {
          "id": "d1a37ab8-1379-4c7c-a6d4-5d0fdda409ad",
          "name": "did:invalid"
        },
        "response": {
          "id": "eb2b3341-9f00-47d2-8a80-423b2cb6e0e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 180
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ee94d58-9efe-4fc3-b328-8ecb943bde26",
        "cursor": {
          "ref": "14c7bc25-8f6d-416c-9792-c1cb63428df9",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "d5d5b989-9dbf-45ad-a55f-dc3e26e60929"
        },
        "item": {
          "id": "2ee94d58-9efe-4fc3-b328-8ecb943bde26",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "a62f4f29-fd65-4d28-bf9d-5748d2d88e54",
          "status": "Not Found",
          "code": 404,
          "responseTime": 107,
          "responseSize": 221
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4b8d857-070e-4a77-bd32-c9b1a5cb1aee",
        "cursor": {
          "ref": "ce1412b1-f4e3-4603-9ffc-16b5bc77535c",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d36c7b7b-857c-4d49-8dfe-4aff369eb1ea"
        },
        "item": {
          "id": "c4b8d857-070e-4a77-bd32-c9b1a5cb1aee",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "c5d41d50-5ff9-4e71-8956-59f50cefa49a",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412a43c1-5c2e-40fd-b4cb-59acf955901d",
        "cursor": {
          "ref": "f2b3cd7d-4c0d-40a1-bbb9-5e4b32286c71",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "a7e6a1e9-4832-45b6-b0f5-b4f5ba5ee61b"
        },
        "item": {
          "id": "412a43c1-5c2e-40fd-b4cb-59acf955901d",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "f343dbe4-98b2-4a08-a70b-acd3bdc6773e",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 65,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d9c9338-1896-43b3-98ea-878253acb8f8",
        "cursor": {
          "ref": "137fdeec-3f5e-4c15-8008-b6ee5b236f8b",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "ffe6daac-7ef7-4912-a1b9-f4a10fcff682"
        },
        "item": {
          "id": "7d9c9338-1896-43b3-98ea-878253acb8f8",
          "name": "identifiers"
        },
        "response": {
          "id": "504a167d-61af-4569-996a-51ce5d8e628d",
          "status": "OK",
          "code": 200,
          "responseTime": 128,
          "responseSize": 1345
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35c072fc-dbeb-4b2c-84d3-4a110396c03c",
        "cursor": {
          "ref": "68aa8d1d-7513-42fe-8eeb-bf51ff4f471d",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "d832bac3-0f73-4728-b117-677a66b5b8a5"
        },
        "item": {
          "id": "35c072fc-dbeb-4b2c-84d3-4a110396c03c",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "60617621-9353-46f0-b210-8da80c2a88ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 217
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60e35da8-5e52-4b79-bd0e-455bb9b58309",
        "cursor": {
          "ref": "83dea603-ae42-4026-b366-9dc0020bacb3",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "7fae11d6-2bcf-4b4b-9d1c-0f5f6a36d669"
        },
        "item": {
          "id": "60e35da8-5e52-4b79-bd0e-455bb9b58309",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "89754168-2407-4361-b05e-89a78bc6962b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3f9b139b-fb62-4875-8585-d8fdc4cd4220",
        "cursor": {
          "ref": "6ae7a088-e1da-4b66-8228-eaca76768946",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "20f528dc-771c-4549-aa7d-99cf24585ece"
        },
        "item": {
          "id": "3f9b139b-fb62-4875-8585-d8fdc4cd4220",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "57649b63-90af-4141-bf29-cc24828d1b19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afd059f3-8d7d-4d49-ab19-5587a10075cf",
        "cursor": {
          "ref": "364aace0-96ea-4ef8-aa06-3d6e9f18b8d6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d1b6c8dc-e824-4eef-927a-29cba7c96b9e"
        },
        "item": {
          "id": "afd059f3-8d7d-4d49-ab19-5587a10075cf",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "deb4e350-67ea-4cae-a564-3ceaf9383cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "068169cf-23e4-4723-8b5b-e28555df78c4",
        "cursor": {
          "ref": "d760a7ab-97ed-425a-ae4b-49778025fe28",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "f6c20092-02b7-42b5-b5f0-56c1c9d92179"
        },
        "item": {
          "id": "068169cf-23e4-4723-8b5b-e28555df78c4",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "fd527b97-6573-47a4-b789-93a6d29378f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2b147cb0-9310-463a-8a02-20e8ecbe9770",
        "cursor": {
          "ref": "82edad76-94e0-4b0b-a28c-de2a5b28523c",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "c3ce3fd2-d575-49d4-b97d-4d5d16ec8faf"
        },
        "item": {
          "id": "2b147cb0-9310-463a-8a02-20e8ecbe9770",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "1ea48d27-1c3a-4020-8c67-52a866a100c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "015a5b31-1021-47a4-b419-60ea5b032393",
        "cursor": {
          "ref": "799d04b2-3dc4-4290-b778-3545243f393a",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "d10c902a-af32-486e-a098-707e764c509d"
        },
        "item": {
          "id": "015a5b31-1021-47a4-b419-60ea5b032393",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "68f82de3-b5b5-4b5d-bdc9-0e5d9bb830b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2cd5061-9b2a-49c1-92b0-a2260763fa6d",
        "cursor": {
          "ref": "88ca3b1f-4123-400b-9ac1-92637834e757",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "f1210e07-3a89-4c70-babf-6718e2bc3957"
        },
        "item": {
          "id": "c2cd5061-9b2a-49c1-92b0-a2260763fa6d",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "aa3b0dc4-c35b-4ecf-83f2-fb6eb65a7f81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a166d7e0-338e-4419-8ad9-53252a26bf4c",
        "cursor": {
          "ref": "52e91d77-bba0-4033-a776-56cd6b8f5f91",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "57bd1854-e0f5-4b21-a1ca-585e08515958"
        },
        "item": {
          "id": "a166d7e0-338e-4419-8ad9-53252a26bf4c",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "967a9e84-3eba-4d5f-be6d-8badce45b3c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0c42f49-d043-46af-a9db-a9dcc4239ad7",
        "cursor": {
          "ref": "f04abd83-d118-4333-902f-575afad14136",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "983d0e92-6009-4708-a11d-604e919f53a9"
        },
        "item": {
          "id": "a0c42f49-d043-46af-a9db-a9dcc4239ad7",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "2dd6fdba-f1b9-4c3a-895e-f9a17db2b008",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74afbcc5-b798-49e7-a5dd-2aca36d4a270",
        "cursor": {
          "ref": "e362d5f5-446d-403e-a78c-acc21a6b0804",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "c07dd2cd-a651-43ad-87f6-970deab6a163"
        },
        "item": {
          "id": "74afbcc5-b798-49e7-a5dd-2aca36d4a270",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "c8fb7475-fc9b-4702-becf-a394556f1cf2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c56c6c6f-1e9d-417c-8051-ba33694e06b2",
        "cursor": {
          "ref": "2d32e006-7106-40c9-8a4c-d19e08aa04bf",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "505cc394-fe8d-4103-a09c-2f7a454149b6"
        },
        "item": {
          "id": "c56c6c6f-1e9d-417c-8051-ba33694e06b2",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "863a91de-88c7-490c-86dc-f3c541609ef2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afe0afc1-91de-4f4a-8ea4-2bde5d6c66d0",
        "cursor": {
          "ref": "c6ddb204-22d9-4d37-8a1d-8b5e100c4f26",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "86fd679e-bdcf-4bed-a759-23d9d38690a4"
        },
        "item": {
          "id": "afe0afc1-91de-4f4a-8ea4-2bde5d6c66d0",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "c7f5fb48-8575-4097-bf9f-c884fb648418",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8fe1732-d7d5-47be-99f0-450df8e73bf8",
        "cursor": {
          "ref": "bbb3e989-b08c-416a-9fea-5ce8f0e5a159",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "725d16fc-cfdd-425f-ac54-e6ced45fa9a2"
        },
        "item": {
          "id": "a8fe1732-d7d5-47be-99f0-450df8e73bf8",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "30ea10d9-eb65-4dbe-91c5-4edb041c054a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45e03f14-cfbf-47c1-912b-d94d96cef38a",
        "cursor": {
          "ref": "28bd7968-3c6e-453e-9076-79a91570a32f",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "b19ea2cc-73a1-45e2-9d5e-7dfdb2f02489"
        },
        "item": {
          "id": "45e03f14-cfbf-47c1-912b-d94d96cef38a",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "2c7ddc73-013f-45d1-aaa7-2435b2375a1e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1b7b411-7bed-48c7-a675-994080e928bf",
        "cursor": {
          "ref": "bacb2280-789b-466d-ba4f-b44f3f84dfd4",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "e604107d-4e87-4ca9-a6c0-89cf31c9e77d"
        },
        "item": {
          "id": "e1b7b411-7bed-48c7-a675-994080e928bf",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "9e9b6df5-7b10-44a7-b61a-b8ccafdb5367",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a42238-dee7-4649-8158-90ee907ea4e8",
        "cursor": {
          "ref": "17b574aa-558c-4c8e-a9fa-fdeb0c553294",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "0edfe254-cb4f-451d-9621-b6366afe7500"
        },
        "item": {
          "id": "e8a42238-dee7-4649-8158-90ee907ea4e8",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "85b4e627-b224-4efb-9ea6-0030a4af3a30",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "09215b24-d067-4e23-bf8d-1041de8da322",
        "cursor": {
          "ref": "68742671-490f-4114-a7bc-814f3e38395f",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "210c5cd3-153e-4d06-8ffa-1bc650d698e2"
        },
        "item": {
          "id": "09215b24-d067-4e23-bf8d-1041de8da322",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b0d42d47-8b48-429b-b259-1717681c9980",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 146
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "22c6b880-2b45-438c-990c-bf4d943f1b01",
        "cursor": {
          "ref": "fc01f13a-abfd-4298-9791-4bb9165bc807",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "ae768c54-5eb5-4a18-89f8-adbc4f2530e6"
        },
        "item": {
          "id": "22c6b880-2b45-438c-990c-bf4d943f1b01",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "e65e88f2-da30-4580-8395-3128407aa084",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "89024968-74d3-43c3-80c6-63e32d22baec",
        "cursor": {
          "ref": "819de9f0-83d7-4fb6-ac62-903ff49b2fd7",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "002fea0c-1e9a-44d3-8b22-4ba277399ab8"
        },
        "item": {
          "id": "89024968-74d3-43c3-80c6-63e32d22baec",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "8448c4bd-8b09-4ca4-91d2-08634bc39b3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01c6c829-e379-415c-b066-4f2abe39bae1",
        "cursor": {
          "ref": "07c91c05-e613-491f-a4c8-d73a7840f0f4",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "9d7d2f7a-2e1c-4717-9262-687551f32f53"
        },
        "item": {
          "id": "01c6c829-e379-415c-b066-4f2abe39bae1",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "33e6ce39-d452-4031-995c-70a5be41f60f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "488cfbe6-e11f-440d-9d3b-50f09b687927",
        "cursor": {
          "ref": "da3bedcf-2a9f-445a-b58d-21d22a72545c",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "0b2a1517-d90f-4cef-a445-fcac3325eb21"
        },
        "item": {
          "id": "488cfbe6-e11f-440d-9d3b-50f09b687927",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "942f8694-c101-4f1a-84cf-a221e911709c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d3de055-1c38-43d1-aa10-39f81fca1e57",
        "cursor": {
          "ref": "0628fdf4-9cc6-4924-9a44-048bcf87b49a",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "f44a4137-0f94-4273-947b-b3290b3c05cd"
        },
        "item": {
          "id": "2d3de055-1c38-43d1-aa10-39f81fca1e57",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "6c93987b-79a8-4975-9dec-935075ded8e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "087f95d0-fff9-4dca-bca1-8ef85af37285",
        "cursor": {
          "ref": "0be52c17-d22c-4aa9-a423-4811542c5483",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "bcbbcbf8-e9f1-4016-8eb2-27495a6c1650"
        },
        "item": {
          "id": "087f95d0-fff9-4dca-bca1-8ef85af37285",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "9267edc2-b3ec-4142-982b-cdacef18cecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "507c3209-f57c-4502-af3e-72b47cfc0f27",
        "cursor": {
          "ref": "9a29178c-5b74-402e-a43e-d08c92287f1d",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "d33f98b3-56e1-428d-8b9a-a66c5db5e618"
        },
        "item": {
          "id": "507c3209-f57c-4502-af3e-72b47cfc0f27",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "554b98dd-ce81-4311-84d8-93af2ee93b68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bda3a2e1-af75-4bf4-ab76-de075f6643a5",
        "cursor": {
          "ref": "a4d24c93-e2e9-45bd-8f6d-8a053f9fa6bc",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "0f0343cb-86fd-4a4d-871e-166a0e9ad564"
        },
        "item": {
          "id": "bda3a2e1-af75-4bf4-ab76-de075f6643a5",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "66bb87c0-a538-4904-814b-437a2f29beea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "152968e9-6e78-476d-afb2-a6cb3e492022",
        "cursor": {
          "ref": "2c5e1538-4aff-4682-a004-9de6e5e83edd",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "61160b3a-7f9b-420f-9e19-06e8ebfd4a7d"
        },
        "item": {
          "id": "152968e9-6e78-476d-afb2-a6cb3e492022",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "68e2077d-9e02-4954-aefa-adde3bf9af02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b963a20e-49d3-4aa3-805c-1efdd3042ff5",
        "cursor": {
          "ref": "2ffe1835-eead-44ea-9f0d-8685431c57c8",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "c2f6e9df-36eb-4d18-a901-4dd40fa44689"
        },
        "item": {
          "id": "b963a20e-49d3-4aa3-805c-1efdd3042ff5",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "0327299b-a739-4fe8-8814-5154e1fbc715",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bc98c0-e83b-4195-8a0d-b5a71f180b1a",
        "cursor": {
          "ref": "8b23eeb0-1466-4153-b21b-41c25e1478f3",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "56eb41ae-2fcd-4f1f-a94a-1525d8f549c0"
        },
        "item": {
          "id": "c5bc98c0-e83b-4195-8a0d-b5a71f180b1a",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "eb8e841b-2cc6-4ceb-972c-91d88a7c4c14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cf2f2745-2d71-43b4-b81e-cd922a9841f8",
        "cursor": {
          "ref": "ea3cffc9-d92e-4712-a465-b794a95b3e6c",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "d29a858a-b53d-4d6f-9560-fc42208fa563"
        },
        "item": {
          "id": "cf2f2745-2d71-43b4-b81e-cd922a9841f8",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "ef8d05de-a619-403c-acb9-e319b6169a42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8ad5e7a-d17e-45ce-b514-9d4364bd75ae",
        "cursor": {
          "ref": "6c56b7c1-f71d-4987-bd7a-1b8d561fc16f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "2d2a958f-8447-4953-8e12-04d7a8f545fd"
        },
        "item": {
          "id": "a8ad5e7a-d17e-45ce-b514-9d4364bd75ae",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "9db1e3fd-f655-4a81-bdaf-56265d569014",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eebf978b-cad6-4407-a03d-2d7ee3bc00da",
        "cursor": {
          "ref": "d0fd3c53-6deb-43c5-a772-b1d9483fff18",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "05273cda-ca9b-4511-838a-7ab693318f25"
        },
        "item": {
          "id": "eebf978b-cad6-4407-a03d-2d7ee3bc00da",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "65793669-b2af-484c-8594-1847dab6353c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80cbaa83-86a0-4195-83f3-b55d9ee8f7f5",
        "cursor": {
          "ref": "ed0b6c50-6873-447b-b1ac-34b9299dddc2",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "944da81d-151f-4982-b4bc-6242cddfe83a"
        },
        "item": {
          "id": "80cbaa83-86a0-4195-83f3-b55d9ee8f7f5",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "594d2bb1-ab69-4abe-8168-b01758ad499f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9e01464-ff0d-4f58-9bb1-9ed1acabfa64",
        "cursor": {
          "ref": "2814c6b9-19ae-4b17-a3b9-9431e7f87670",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "50bae218-f730-4511-95af-06bd6e21f86f"
        },
        "item": {
          "id": "d9e01464-ff0d-4f58-9bb1-9ed1acabfa64",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "5bbbc7cc-1f21-4de8-bbe9-8572952d4992",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70cf4690-49dd-4365-b770-f484d7a79c03",
        "cursor": {
          "ref": "6d49ee63-6123-4881-9167-5788a90afcee",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "e3332971-2426-4854-937a-d0bf24f9dab2"
        },
        "item": {
          "id": "70cf4690-49dd-4365-b770-f484d7a79c03",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d269530e-850b-40b0-9ac2-ad55f41bb365",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2aedc153-fd7c-4350-ba1c-a1ade2da4a0e",
        "cursor": {
          "ref": "cf47adf4-785c-4830-855d-4cc27b676987",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "8a84ecc1-422d-4894-ae68-b06aaed9c117"
        },
        "item": {
          "id": "2aedc153-fd7c-4350-ba1c-a1ade2da4a0e",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "6aef882c-cd7e-47cc-a87c-0e32678d3cfb",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d578611-c2d8-4f35-b98a-2620b4802d4b",
        "cursor": {
          "ref": "c510fd3a-84f0-4436-b1da-395223e9d02f",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "9d4ac71b-2ca0-4ed2-98f2-be073082ea9a"
        },
        "item": {
          "id": "7d578611-c2d8-4f35-b98a-2620b4802d4b",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "13f6b013-17e2-4006-9dbf-4355b9cb2305",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9cb1312-412c-4490-991e-ec739d81bcf1",
        "cursor": {
          "ref": "d02e022d-5d35-4e3e-afb9-3f22762fe273",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "be714be7-974c-43c5-92db-f09661744a8d"
        },
        "item": {
          "id": "b9cb1312-412c-4490-991e-ec739d81bcf1",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "acc8a792-3bcc-4446-be73-8831c91258c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e08ba987-7978-4ad4-b40c-d95453cdba8b",
        "cursor": {
          "ref": "47510b44-434f-4cce-a6aa-bafab65dcc1c",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "15a282c4-05fc-4f13-861c-88a23916e8ed"
        },
        "item": {
          "id": "e08ba987-7978-4ad4-b40c-d95453cdba8b",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "f15ed45b-bbf8-49e7-b7fe-5e49c40d0ab5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd82cabe-ca58-4804-a7e2-b94dccfd4ddd",
        "cursor": {
          "ref": "8520d3cc-7912-42ed-9df2-e73b2886fbbd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "a1f07fd7-79e3-468d-ae40-a4494ffb9ea2"
        },
        "item": {
          "id": "cd82cabe-ca58-4804-a7e2-b94dccfd4ddd",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "b2a4c82b-148f-454c-97c1-f52fd878ac59",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26ef6fed-3aab-4244-a162-f12da2866059",
        "cursor": {
          "ref": "989a883a-954d-4fd2-8075-72d7c65fe488",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "75bba24c-b008-4974-813d-3e883e0d52ed"
        },
        "item": {
          "id": "26ef6fed-3aab-4244-a162-f12da2866059",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "88aa214b-cd0d-413a-841d-24c03a147053",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9748e88b-2e57-48be-9eb3-73fce703dd0b",
        "cursor": {
          "ref": "e1a19675-7864-4887-95b9-8af268951b62",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "057143ae-b00c-43e8-bb34-7f70d1f37a85"
        },
        "item": {
          "id": "9748e88b-2e57-48be-9eb3-73fce703dd0b",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "fa6b789a-02e2-4a99-a364-649e6d6de735",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d6f901d-3b56-408d-b6f4-b5748a8e46d3",
        "cursor": {
          "ref": "0e613ddd-3160-4911-a2b3-eab80ec0ac91",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7c854d6f-4fb0-4546-bb5e-9050306c76b7"
        },
        "item": {
          "id": "4d6f901d-3b56-408d-b6f4-b5748a8e46d3",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "8a2be564-a049-4752-96b5-a233f8646656",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 79,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1ff191f9-347d-4003-8955-844379f86c5f",
        "cursor": {
          "ref": "65014412-205d-4843-b745-c79a8cff6b67",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "f9b2a59f-2d03-43be-b118-b60b412c48e4"
        },
        "item": {
          "id": "1ff191f9-347d-4003-8955-844379f86c5f",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "1efa78ec-6f87-42a7-a464-9fce28fbe9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3828da83-dc71-413b-8421-3a960c490df0",
        "cursor": {
          "ref": "9b7a9cdb-cc0f-4138-b2ab-78df6e747f7c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "756f9c89-1c59-4323-98ec-c5a43b4cbdf3"
        },
        "item": {
          "id": "3828da83-dc71-413b-8421-3a960c490df0",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "092abc0a-654b-4120-8a6c-76abfec454b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e66d9ab7-6ca7-4ab1-a5c3-2b1288ad9e74",
        "cursor": {
          "ref": "92a06d60-266e-4f91-905e-d8a053943a4b",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "0145fec9-5f5d-4230-986b-5a113e13acdb"
        },
        "item": {
          "id": "e66d9ab7-6ca7-4ab1-a5c3-2b1288ad9e74",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "511a2256-d4a2-4390-8427-39c819b7fce3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ea775202-7464-43ef-b899-89d9e920c20b",
        "cursor": {
          "ref": "a073bd30-a732-4017-9d6b-d885900e7a0f",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "1656e01d-ac4a-4e12-baee-b37a8e104ee8"
        },
        "item": {
          "id": "ea775202-7464-43ef-b899-89d9e920c20b",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "24ca4661-c1fc-4744-8a19-9e7c50f725f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1daa26-bdc4-4497-a37e-0b93610cd8d4",
        "cursor": {
          "ref": "3a065362-a23e-4f79-9be3-aea4b3988e72",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "762e247b-1dfd-4070-be11-5d2a04f5833e"
        },
        "item": {
          "id": "7b1daa26-bdc4-4497-a37e-0b93610cd8d4",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "7ae847cb-ad49-4221-bdfd-773ccec4d5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7564e65-78af-4853-98b4-04ceeabb8444",
        "cursor": {
          "ref": "85e6e6f0-c6a3-408b-88d7-c3d5e2a2feff",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "560e4730-825f-4b43-908d-f75bb5c2c180"
        },
        "item": {
          "id": "b7564e65-78af-4853-98b4-04ceeabb8444",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "d027e50d-68dc-417d-9f92-b7fa41138e91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87f9c8dd-2954-4122-8f20-2e4f17e6b377",
        "cursor": {
          "ref": "3685034d-b18b-4ded-89bb-f434306b40c1",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "af547df9-f236-4af1-8149-a8759f380242"
        },
        "item": {
          "id": "87f9c8dd-2954-4122-8f20-2e4f17e6b377",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "c02de4b4-ec49-46db-9651-44f1c8b27b1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b378e99f-4589-4a50-958c-565385b64962",
        "cursor": {
          "ref": "40c6291f-e29d-49ec-8fcc-1a5e3f5abe9b",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "89f1ebea-0b5a-4d8c-90fb-ce56073076fb"
        },
        "item": {
          "id": "b378e99f-4589-4a50-958c-565385b64962",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "391754b1-6a2d-4807-849d-fbdc7c3527fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56176de2-0dff-4a39-b42d-c2e86dee34bc",
        "cursor": {
          "ref": "c5d0bbbf-7937-4539-bd80-aa94bf185318",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "863493a7-e5f0-456a-8cf9-4b47a00de7e4"
        },
        "item": {
          "id": "56176de2-0dff-4a39-b42d-c2e86dee34bc",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "94ec9808-f67e-47d1-b825-ef0b35aa7839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0560433f-ccf7-4c04-b12d-18905c4cffa1",
        "cursor": {
          "ref": "8f5623d2-41ae-4b23-a13c-41fb65da3f5a",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "40c59739-a8a6-41b9-8dbc-e0f7513e965f"
        },
        "item": {
          "id": "0560433f-ccf7-4c04-b12d-18905c4cffa1",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "2d3f9abe-06d2-473a-911e-f08a43d6ea1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f83f27-ace6-4123-a4c5-34d5de3d114b",
        "cursor": {
          "ref": "bbd07b96-60fe-49ea-939e-be61ab027221",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "f7326126-986c-4f44-822b-3759f6c17785"
        },
        "item": {
          "id": "b1f83f27-ace6-4123-a4c5-34d5de3d114b",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "9bb72574-dda0-4bf6-b20b-153c5470cb07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0751196b-adf2-4e20-81fb-e5625df2aeda",
        "cursor": {
          "ref": "a7c3a533-9f54-4755-b3f0-3310a469fd21",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "aebe822e-866a-4f79-a7ed-97472e1e22ab"
        },
        "item": {
          "id": "0751196b-adf2-4e20-81fb-e5625df2aeda",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "f08ef6a2-874a-42ec-ab68-0718403b665c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d7f67a3e-bffb-4035-9d4b-0f59b70ab865",
        "cursor": {
          "ref": "74e8d40f-1acb-4113-b37e-6e2c601c0eb2",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "d26a2878-603a-4ba3-bbc3-875a0138f2f0"
        },
        "item": {
          "id": "d7f67a3e-bffb-4035-9d4b-0f59b70ab865",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "84414ff3-2be8-44a4-a649-bbd4a5914f9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 144
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5decbca3-fd13-463d-ae83-0bbfd701f88f",
        "cursor": {
          "ref": "457bc8c1-e9bb-4cd0-a961-e936c427ae49",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "18cb16ee-c6a1-49bd-98c1-f19a72a9fd89"
        },
        "item": {
          "id": "5decbca3-fd13-463d-ae83-0bbfd701f88f",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "358ca73c-4696-4ca4-bd98-c1cff2a998f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7ebc048-73ad-4a30-bfe5-309c50323f42",
        "cursor": {
          "ref": "b10ce324-9271-40df-b829-f34d810d2d84",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "ce55b140-f84b-4573-b76f-839077eb85d5"
        },
        "item": {
          "id": "b7ebc048-73ad-4a30-bfe5-309c50323f42",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "12f043ce-c203-409a-9432-94ca647748f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8a0ae1-715a-44c7-a9ef-d9038182aca7",
        "cursor": {
          "ref": "80694ed6-39f8-401e-864a-0cc4a05da5ef",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "4b246272-8e83-40d3-9c2a-c67f9792241c"
        },
        "item": {
          "id": "af8a0ae1-715a-44c7-a9ef-d9038182aca7",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "87cc6674-0ef3-418d-a51a-faefc0bc34cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff6082b3-8bc5-42b8-94ee-1d6dccfdb7e6",
        "cursor": {
          "ref": "5a615e29-54a0-4661-8f94-e2338b5070f6",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "f17a4a64-89c3-4be6-b47e-9381d870a6f7"
        },
        "item": {
          "id": "ff6082b3-8bc5-42b8-94ee-1d6dccfdb7e6",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "e08e2733-bc4c-497d-ba64-2d15d3d665fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "961b75ee-2db1-4245-a11d-975357cf440f",
        "cursor": {
          "ref": "7ea00e57-ee64-4b23-85e2-8e5e16ec67f8",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "6dd7897b-91d2-431d-9398-fd0d82d7f64f"
        },
        "item": {
          "id": "961b75ee-2db1-4245-a11d-975357cf440f",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "fc275bca-b0e9-4fcc-898c-6525d27826df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4131369c-4fdc-4184-a875-cdcbb041632c",
        "cursor": {
          "ref": "bac0c535-4a2f-4f8b-8381-f045e406488c",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "ff4c19cb-7e27-4aeb-81f9-f713666c9d4f"
        },
        "item": {
          "id": "4131369c-4fdc-4184-a875-cdcbb041632c",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "29fd6f3d-4a6f-4291-b7e5-b5c99ff5b71b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d27905cd-c7c7-4009-a0f4-6265da1f03f3",
        "cursor": {
          "ref": "ac69225e-9ab8-4df2-afc5-2d2eca06144a",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "2df3882f-aa8c-485c-b71f-657218735de7"
        },
        "item": {
          "id": "d27905cd-c7c7-4009-a0f4-6265da1f03f3",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "794ade00-704b-4c7b-9e4a-30ce9ba7ab42",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8608994e-d23e-4f65-b2cf-84081ee5a501",
        "cursor": {
          "ref": "e9e6fa5b-4991-4ba8-95f6-ca6d1b4988f9",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "04f27256-be18-435d-b012-d4780bba6cf3"
        },
        "item": {
          "id": "8608994e-d23e-4f65-b2cf-84081ee5a501",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "fd70f6da-c0ea-449a-b8f6-3d24e7e8d390",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57b94d9c-6edf-41fc-9f13-8834954c8581",
        "cursor": {
          "ref": "5ded9f56-728f-4870-ad47-0d5d2f1ad6f9",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c6fd436-3058-47ec-92fa-3054ba6582a3"
        },
        "item": {
          "id": "57b94d9c-6edf-41fc-9f13-8834954c8581",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "97d9fe65-fe28-4d1f-8369-998884c67a41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec6a2367-8956-4adb-9e7f-6b4c6c4c7e17",
        "cursor": {
          "ref": "64e0b3d6-6166-4b10-93ac-7ec91340a305",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "80a9c0fb-1705-4526-8072-9158d2fe4cc7"
        },
        "item": {
          "id": "ec6a2367-8956-4adb-9e7f-6b4c6c4c7e17",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "612fee4d-7549-4ad9-a526-c095a22a2a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f544a453-9d05-4d46-9ea8-382eb689c0ee",
        "cursor": {
          "ref": "d01ae870-ecfa-4624-b41f-f1fdb0063b5f",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "63609f7d-c444-4333-8c46-9ee86343ff78"
        },
        "item": {
          "id": "f544a453-9d05-4d46-9ea8-382eb689c0ee",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "cf23bcfe-4c06-4c72-943d-e94df6bce9c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "251fd7cb-5586-40d3-bcbd-c028a7e3cb5c",
        "cursor": {
          "ref": "490a56ea-5df1-4549-93ed-c09a0fed53f4",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "b275b564-43c9-4bdb-b87d-c0934fa272ac"
        },
        "item": {
          "id": "251fd7cb-5586-40d3-bcbd-c028a7e3cb5c",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "1a4b5ca1-428f-4c20-86ce-76cbe5ef96ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c016e3a4-d702-458e-9c7f-dc01bea8d442",
        "cursor": {
          "ref": "e3e87ced-d608-4206-8888-81712825e5ab",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "1f218211-d126-4234-8c7e-9c1d75737351"
        },
        "item": {
          "id": "c016e3a4-d702-458e-9c7f-dc01bea8d442",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "f2e5de10-8c68-417c-8a1a-079d42070a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad3c1e05-4f4a-4e08-b596-14f213f4b78c",
        "cursor": {
          "ref": "008d3b93-d48b-43b5-bb12-5c3f96b5fbc2",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "0cc0cf72-0701-4c3e-8044-0ab67d7f4925"
        },
        "item": {
          "id": "ad3c1e05-4f4a-4e08-b596-14f213f4b78c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "b6c36f4c-307d-4848-8983-8e2e0ee6782a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcaaa913-d249-46ba-af80-23e53f581d5a",
        "cursor": {
          "ref": "ac9f2719-5016-498c-9bdd-8d140e6d4d86",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "915ed3e2-a489-4ad6-8b97-2ea080c72830"
        },
        "item": {
          "id": "bcaaa913-d249-46ba-af80-23e53f581d5a",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "162482ed-47b8-40f1-bf31-62d2f1c2ba99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c9b1c54-b3e5-4adc-a191-cd8ede76a349",
        "cursor": {
          "ref": "991a2513-53c8-4312-b2ec-39a5ce7114c6",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "7a2f971d-7da7-4295-b823-282f7f4fc7f6"
        },
        "item": {
          "id": "6c9b1c54-b3e5-4adc-a191-cd8ede76a349",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "d4ef7823-4e95-4fa1-a119-12062f824e40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 213
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4886e85-df41-4fa7-b293-2a5c11c5fb3a",
        "cursor": {
          "ref": "1b8ad348-6cd8-49d8-bd79-13178f835f27",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "a004aa35-b037-48f3-866b-b8ae5399ecec"
        },
        "item": {
          "id": "f4886e85-df41-4fa7-b293-2a5c11c5fb3a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "135de160-43d6-43e8-b3ed-ebdabb50e198",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a3f4447-d666-4b45-b152-40c24c5b56d4",
        "cursor": {
          "ref": "5c876ee3-5f34-4d2d-8ffb-52e4d9cb44db",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "66d54026-0024-4154-8038-48fed7e8990f"
        },
        "item": {
          "id": "8a3f4447-d666-4b45-b152-40c24c5b56d4",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "ba79f15b-97a1-481b-ab06-11b0c84eb871",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 169
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71a80488-f8bd-45ee-8e67-25b97678aa96",
        "cursor": {
          "ref": "b888725a-2ccb-4661-bba0-0a380036c1c4",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "f6c93371-5115-4f17-adc9-716534409459"
        },
        "item": {
          "id": "71a80488-f8bd-45ee-8e67-25b97678aa96",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "a88b8e9c-ff8a-4f58-85f5-652ef20c12f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c338d5c3-9ed1-43f9-8106-b9913f7ad399",
        "cursor": {
          "ref": "b7c9db6a-0cfb-4216-97bd-143ebe34c196",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "bbdbafae-3f10-4fbd-8924-317221dcbfdb"
        },
        "item": {
          "id": "c338d5c3-9ed1-43f9-8106-b9913f7ad399",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1d5eee7d-48dd-4ee3-a0b3-9ad934567122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 305
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e157a189-c688-49d9-b825-d4d83d9490a0",
        "cursor": {
          "ref": "aacb7aab-29a5-4330-929a-c7cde2a545d1",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "306d6082-9921-4a65-8f95-41303b4a448f"
        },
        "item": {
          "id": "e157a189-c688-49d9-b825-d4d83d9490a0",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "ba50e783-f2e6-45fb-9af1-87df2dcc373b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d863f1e-58ed-48bd-925a-2a309513867a",
        "cursor": {
          "ref": "31a5b9f2-6778-4b91-a8e3-c5e496335c67",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "d75906d3-45df-466a-b7a9-f10d570c972c"
        },
        "item": {
          "id": "2d863f1e-58ed-48bd-925a-2a309513867a",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "81190e16-c819-4dca-8d30-422558232d1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 211
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d00eebc5-14e0-4a80-b720-339316b44b2f",
        "cursor": {
          "ref": "c3c74e4e-8372-4f2d-92b7-72efd2d6e17f",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "1f8e02d7-c8fd-4ead-9d48-9f1a46eef0a0"
        },
        "item": {
          "id": "d00eebc5-14e0-4a80-b720-339316b44b2f",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "6a7c1563-56e0-4186-a07e-b2ad708f705f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a27f452-763a-413b-b80e-e8ca81254bdc",
        "cursor": {
          "ref": "4f6294a3-09c1-478a-9d30-1cd89060a0c2",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "e9c9ff42-00af-4f19-88b6-4d2f19f1aecf"
        },
        "item": {
          "id": "5a27f452-763a-413b-b80e-e8ca81254bdc",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "3faf7a6e-5dfc-47ab-a7f0-a4b7820857e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 361
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c014e40-99cb-4744-83be-a071626f3b2e",
        "cursor": {
          "ref": "cd8ec2ff-28a7-4df2-92fc-9adbf0659c30",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "f82d0622-a80e-4b6b-bbf1-e8c46ce29512"
        },
        "item": {
          "id": "2c014e40-99cb-4744-83be-a071626f3b2e",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "89a72ed4-4001-4262-aee6-a2de068644b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 402
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dade9a78-ed48-4999-8002-94d653b634ea",
        "cursor": {
          "ref": "56cf9bdf-00a5-4ac9-95f3-b126a29c4d08",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "02d9d36a-4910-4005-8149-92ab2cf81970"
        },
        "item": {
          "id": "dade9a78-ed48-4999-8002-94d653b634ea",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "3785786c-1b20-4560-8c46-64cbd69fd047",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 401
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "389e9c83-a58c-4e38-96e7-6f717821fa8b",
        "cursor": {
          "ref": "5c7aad77-a311-410d-b35a-f0fe201c6ed9",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "4df38a58-e422-4073-bb6d-bb360fd0ae7b"
        },
        "item": {
          "id": "389e9c83-a58c-4e38-96e7-6f717821fa8b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "5d0e9a04-4587-4529-83bd-8a9c53db9429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "464811cf-ec36-4724-aed0-07c9c3d3fd18",
        "cursor": {
          "ref": "6f194562-979b-41bc-9111-97e8cc28ad7e",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "dcad2cdd-feb3-446d-b032-f6dc52bb3698"
        },
        "item": {
          "id": "464811cf-ec36-4724-aed0-07c9c3d3fd18",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "58340d59-3cfc-42fb-8775-3b0941be7b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 220
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62daaa8d-3c93-4ff2-9c1b-39f3baa920b4",
        "cursor": {
          "ref": "6fdf72d9-8202-48de-b5a8-7d0124d8e4ab",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "b7c4b4fb-7902-4bd9-b68f-4fee6eecf077"
        },
        "item": {
          "id": "62daaa8d-3c93-4ff2-9c1b-39f3baa920b4",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "ec32a1f0-a66b-43d2-9a9a-8967979df562",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 403
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5d0480-5dde-4eb3-b9d7-8ae555cf4b8b",
        "cursor": {
          "ref": "d5fb597e-f83f-40b9-b231-250f6d4f767e",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "fd8fbea7-3333-4672-9858-4e525f3f9a73"
        },
        "item": {
          "id": "fe5d0480-5dde-4eb3-b9d7-8ae555cf4b8b",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "741aff80-a219-4de3-b0b6-dfde0450e7d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63125c58-e066-4324-bb85-1cd89a1444b1",
        "cursor": {
          "ref": "a716a9ee-845f-4647-82d3-12c6fe92fa2e",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "84f6a4f6-25a1-48dd-8c61-4be1df6b9087"
        },
        "item": {
          "id": "63125c58-e066-4324-bb85-1cd89a1444b1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "ba5b8907-b69e-416b-8b43-1d0d6c4002fa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdfaae74-8ce2-4202-b383-eb5aaa67a013",
        "cursor": {
          "ref": "8e25ed05-1ef2-4dce-98f3-907088380b8b",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "e87722f3-a0a8-474d-8f73-0769bed1f98b"
        },
        "item": {
          "id": "bdfaae74-8ce2-4202-b383-eb5aaa67a013",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "ae2b088e-349d-4b68-9994-62c6bcbf296a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da390b65-f453-4c64-bd99-9976176eed3d",
        "cursor": {
          "ref": "e1f6c655-65c5-44c3-b5b2-bff61fdb1751",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "87689db8-a738-4a9d-ad12-562d055d1c37"
        },
        "item": {
          "id": "da390b65-f453-4c64-bd99-9976176eed3d",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "8d79e4ab-33a7-4f0d-85a1-2e640b552e92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47db715f-e1ed-4328-943e-4bfe0d3da0e0",
        "cursor": {
          "ref": "24e05839-bb78-4bca-b09c-a1c4881c2938",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "06eea6b9-c8e6-4bd4-8009-43b77e090187"
        },
        "item": {
          "id": "47db715f-e1ed-4328-943e-4bfe0d3da0e0",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "a8e1ec3a-c110-4671-86f5-b48e5e38e1f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d2c68db7-312f-4570-8b3e-754eb0cb04bd",
        "cursor": {
          "ref": "46c5f6cc-1251-4631-84dd-f21a01402c07",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "3743c2de-66e3-47f3-8276-40478484f087"
        },
        "item": {
          "id": "d2c68db7-312f-4570-8b3e-754eb0cb04bd",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "f86148b1-24c0-41d3-a76e-8bec32fafa26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 302
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c731103a-7cf2-4bcc-8ce8-a815b75a1ff5",
        "cursor": {
          "ref": "a809d9fe-4b87-4675-8832-67ddc0de3dbe",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "9e07f5b8-352b-4f41-9938-71e8ef15ecf7"
        },
        "item": {
          "id": "c731103a-7cf2-4bcc-8ce8-a815b75a1ff5",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "f9656e63-7d0a-4c2c-9441-9817418a910f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 227
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "371123cd-9b8f-4adf-8f6c-a05f69c68f8b",
        "cursor": {
          "ref": "40fcfdcb-5f5b-4a8a-834b-e214fce2f285",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "dce7eb3a-2215-450e-80d7-9a67ca877b73"
        },
        "item": {
          "id": "371123cd-9b8f-4adf-8f6c-a05f69c68f8b",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "9a02c6b5-55d2-49a6-b181-fcaa12cf95cd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8225de5a-304b-42fd-ad73-4071c56606ef",
        "cursor": {
          "ref": "2e66ad7a-c580-4a9e-9da9-a4616b92466f",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "63aa868c-3077-47b0-87bd-f40dfeeec9a9"
        },
        "item": {
          "id": "8225de5a-304b-42fd-ad73-4071c56606ef",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8c66fd7c-c87f-44e5-b05a-884fd275f0da",
          "status": "Created",
          "code": 201,
          "responseTime": 97,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6e5cfd6a-1d55-4908-b87e-a900d89b8eb7",
        "cursor": {
          "ref": "a7877f72-98f5-4683-a9ae-bdd625b421f7",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "86f6fc9a-49fa-4a33-bbf5-f925f41bc0e6"
        },
        "item": {
          "id": "6e5cfd6a-1d55-4908-b87e-a900d89b8eb7",
          "name": "credentials_issue"
        },
        "response": {
          "id": "c287bdd2-0977-4925-b59d-a9ed65669b37",
          "status": "Created",
          "code": 201,
          "responseTime": 239,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "1fbd58db-afc0-4850-bcbd-0112c1619713",
        "cursor": {
          "ref": "14c17ba5-3c52-457e-8595-77c4e552c857",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "dd194ce0-8a0b-4e36-8280-ea8e2cde86e7"
        },
        "item": {
          "id": "1fbd58db-afc0-4850-bcbd-0112c1619713",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "1192d34b-9ac1-477f-94d8-6879b7eae226",
          "status": "Created",
          "code": 201,
          "responseTime": 117,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cbd7455-251d-45dd-b5bf-c0e31f799b7a",
        "cursor": {
          "ref": "9cf339ba-e97c-4e02-87fb-a2009e60698d",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "5054021e-329c-4a35-91c6-742a1fcd0601"
        },
        "item": {
          "id": "3cbd7455-251d-45dd-b5bf-c0e31f799b7a",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "4f103730-f4a9-4349-b369-8762c1352bc1",
          "status": "Created",
          "code": 201,
          "responseTime": 89,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "9819eb57-b65b-4999-baf5-2626461d3e55",
        "cursor": {
          "ref": "fed29fad-7008-44c9-b2a3-cba8a881a964",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "fcf3b96b-806f-4574-88ff-2881166f58fb"
        },
        "item": {
          "id": "9819eb57-b65b-4999-baf5-2626461d3e55",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "5d7cd8fb-c8c6-4355-aa7a-430b1deaacc3",
          "status": "Created",
          "code": 201,
          "responseTime": 88,
          "responseSize": 930
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "308fe45b-53d8-48ae-aca0-3ec8d9084c2b",
        "cursor": {
          "ref": "5cdb9765-7613-42d6-ad3a-2ef7870de6d9",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ed5d77f6-0d09-4866-9900-eb0631a2548d"
        },
        "item": {
          "id": "308fe45b-53d8-48ae-aca0-3ec8d9084c2b",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "fea90ee5-0e75-44be-84d2-da398b96ed20",
          "status": "Created",
          "code": 201,
          "responseTime": 92,
          "responseSize": 909
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "816e0b58-e59e-4e50-b6c8-704902ccf4dc",
        "cursor": {
          "ref": "95f58d4b-13d4-4398-9e16-1c50228e335a",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "7c7b9b1a-6ff7-44a4-a948-dfdcdeb69fc1"
        },
        "item": {
          "id": "816e0b58-e59e-4e50-b6c8-704902ccf4dc",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "261a1ff4-86c4-4320-8bcb-c713b5759899",
          "status": "Created",
          "code": 201,
          "responseTime": 90,
          "responseSize": 919
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7781fdb0-4047-480d-867f-7563f8ea7a25",
        "cursor": {
          "ref": "1e282c5d-f44f-4380-8898-4462c34c780c",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "208d948c-3224-4636-b40c-782a13ec8dcc"
        },
        "item": {
          "id": "7781fdb0-4047-480d-867f-7563f8ea7a25",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "dc4556d8-baea-46f8-86a4-ba18371be285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b463f3ab-8285-447e-a89e-9ab607193537",
        "cursor": {
          "ref": "6463d9bc-e36c-463d-95b5-b2f99d7c7f38",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "dcd3c78e-8bd5-4b6a-875a-3f4412558c17"
        },
        "item": {
          "id": "b463f3ab-8285-447e-a89e-9ab607193537",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "1a15ac4f-4e42-45d1-a124-f57d141a95af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c3156bc-407a-40be-8322-29495bede196",
        "cursor": {
          "ref": "6e73a1b4-1868-4fb6-a94e-abac6e18e134",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "5eee2512-fc84-4935-bbf8-a9d5fff512d6"
        },
        "item": {
          "id": "4c3156bc-407a-40be-8322-29495bede196",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "393a459a-057a-47c3-b6ab-80c8ebc7288c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7aa140c5-57f5-4b99-88b8-04cad94fb552",
        "cursor": {
          "ref": "723b2157-42fe-4a22-acfe-a8dd6368a9ee",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "e0949286-4daa-4292-88aa-0d402a3ad9cb"
        },
        "item": {
          "id": "7aa140c5-57f5-4b99-88b8-04cad94fb552",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "d04ec78c-2c34-4bd8-a878-13b577d0788c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84d83c43-718d-4939-b20a-c0e56d79149a",
        "cursor": {
          "ref": "e9756c69-1e66-4ae1-86c5-60c770510d03",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "270d2575-8196-4b40-8176-7c65bff3b372"
        },
        "item": {
          "id": "84d83c43-718d-4939-b20a-c0e56d79149a",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "4ed90228-f37d-4c34-9558-fc830c680a83",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cea3e896-69b1-4afa-8954-7b0fa9204510",
        "cursor": {
          "ref": "d04c1f3e-74e9-4352-8823-251ce48c9817",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "acccf125-f66e-4ea0-8a83-fa726d311161"
        },
        "item": {
          "id": "cea3e896-69b1-4afa-8954-7b0fa9204510",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "c2e0e1a8-e309-4e9f-a211-0f2644f48054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c178f61-2374-4ead-bae7-aab38c1ae8cd",
        "cursor": {
          "ref": "cac06d40-fd3d-4ea5-89ac-d73ef8a9ca37",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "67d5fcef-65b9-45ac-8cc2-1ec5b279fdfa"
        },
        "item": {
          "id": "0c178f61-2374-4ead-bae7-aab38c1ae8cd",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "5703c1b7-e50c-4be2-a173-fd40d44d8652",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f46038c-b4fb-47fe-a58f-7fac0023c420",
        "cursor": {
          "ref": "6c0dcaec-2d40-49a8-8352-3ad59b5e716a",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "4f444a8b-043f-4186-8b50-dfdff33d3e3e"
        },
        "item": {
          "id": "0f46038c-b4fb-47fe-a58f-7fac0023c420",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "c305bdd4-bdef-45c3-b3bf-8266b21d7101",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46670318-fc12-4efc-abfd-7b176ac5cad2",
        "cursor": {
          "ref": "6916053c-c764-41d1-be38-824362de6cd3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "4520d795-1578-4b6d-8024-f38b6a254221"
        },
        "item": {
          "id": "46670318-fc12-4efc-abfd-7b176ac5cad2",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "893c45bc-9fe1-465d-8b60-9fa9d2a0fbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0518d3eb-646c-4e4f-bdde-eeca8045c835",
        "cursor": {
          "ref": "3a96a07e-f98e-4dbc-bec1-83f39d2e14f4",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "17091fa1-6dc8-43be-b765-95bd84d4479a"
        },
        "item": {
          "id": "0518d3eb-646c-4e4f-bdde-eeca8045c835",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "94107d9a-14c3-4223-9cb1-089521f654d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80e6d931-78f1-46b4-b3c6-6c6e5b167927",
        "cursor": {
          "ref": "0ac6bd12-a392-4fdc-9ccb-b223668a6bd6",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "fe8fb5d5-2d28-4265-89fe-65ecf19d03fd"
        },
        "item": {
          "id": "80e6d931-78f1-46b4-b3c6-6c6e5b167927",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "36f20ade-417f-4e76-8e65-773b5534ec56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3200bb54-9496-4bea-ad7c-ee57cdbbe2d2",
        "cursor": {
          "ref": "23400536-b5c8-4f06-ba13-9231110345f3",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "6decb9d3-9bff-4a85-a489-dea7db07885c"
        },
        "item": {
          "id": "3200bb54-9496-4bea-ad7c-ee57cdbbe2d2",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "563425e1-aee0-4cf9-a177-06717016ca02",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7655b1fa-bc7b-4f5b-b0d1-570544927154",
        "cursor": {
          "ref": "69131e59-6d65-4b6b-84b7-75563acb687f",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "53ae0664-4dcd-4a88-85e0-6b559d1054ba"
        },
        "item": {
          "id": "7655b1fa-bc7b-4f5b-b0d1-570544927154",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "379ff243-a718-43fd-8f23-05b3f25a1870",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83914d09-ce45-4026-93ce-da69e0b3a24d",
        "cursor": {
          "ref": "819895fe-8ff5-4134-b9a8-f6d90d397171",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f9c65461-56a8-4787-8ca6-c186b211e801"
        },
        "item": {
          "id": "83914d09-ce45-4026-93ce-da69e0b3a24d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "9ab9c3b2-d9e7-4b94-912e-48f6afef4637",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e374822-fc91-48d8-a1f9-d5cc475751a0",
        "cursor": {
          "ref": "10805b8a-8fe0-4fb8-bcee-d03842b4f214",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "92c2e835-5cd7-4d2b-8e27-dcc47a99c7f0"
        },
        "item": {
          "id": "3e374822-fc91-48d8-a1f9-d5cc475751a0",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "565a1a7e-ab95-443c-9fd3-58d24cffe8f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ecb02ed-118c-4f81-8a89-176dec51e056",
        "cursor": {
          "ref": "1f04e5a5-0605-4b6c-b860-907bced6bc27",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "6b0f0748-feca-460c-bedc-cea1a4057f0d"
        },
        "item": {
          "id": "9ecb02ed-118c-4f81-8a89-176dec51e056",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "99a5b874-3644-4965-b5b0-27949e9de73c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63bf2006-304a-43fd-956b-e5f415ae4867",
        "cursor": {
          "ref": "b3020382-0b7b-48ba-9d8f-f5db9fc3e784",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "0ae01b59-165d-4740-9e35-ae6acd3388ff"
        },
        "item": {
          "id": "63bf2006-304a-43fd-956b-e5f415ae4867",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "18805b56-8a4c-44a1-9756-5c177f500179",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf1455ec-01b0-49df-a5f9-24982ac67a92",
        "cursor": {
          "ref": "852bec2f-e17f-4fa4-841c-14ea42cfa4e8",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "6dbcccf1-6d11-475f-81b4-5a01e40ffed4"
        },
        "item": {
          "id": "bf1455ec-01b0-49df-a5f9-24982ac67a92",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "aab8e289-02c9-4741-9fd2-caaa47522cc2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16aa9099-23f0-4b8c-88cb-2b4b2281402f",
        "cursor": {
          "ref": "e7a1b260-7088-4286-aca0-714783623b0e",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "494189f0-897a-4456-8d1b-406353b6a354"
        },
        "item": {
          "id": "16aa9099-23f0-4b8c-88cb-2b4b2281402f",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "f28ef183-7e48-4813-89ce-7517ef17df73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a593d05-aec2-4c4e-bc47-651fe0bec4ba",
        "cursor": {
          "ref": "11f1a905-5aa4-47b3-8116-d87b81d5485e",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "2275e591-f5bb-403d-aabd-5bb7ed173966"
        },
        "item": {
          "id": "5a593d05-aec2-4c4e-bc47-651fe0bec4ba",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "3b1e6d4c-2179-4513-a31b-ffed68ae2097",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c2efd0f-8516-4c51-bd57-1bf643f6e918",
        "cursor": {
          "ref": "b2053a6d-c3db-48de-98de-c87cf0f3a275",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "6aacb7be-5620-40b6-b0ce-0a76dbc0f1ed"
        },
        "item": {
          "id": "1c2efd0f-8516-4c51-bd57-1bf643f6e918",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ce602b60-bd6e-41f4-a348-bce0aee41d8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47f46766-d3e9-4b9d-ae4a-84ed829fefe4",
        "cursor": {
          "ref": "ac112a4b-a341-4b3e-a104-89de77cc319d",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "01db8c67-1849-4866-88e4-9d78a5c98bc4"
        },
        "item": {
          "id": "47f46766-d3e9-4b9d-ae4a-84ed829fefe4",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a3788baa-8858-4f7b-9a60-69fc9d0ed487",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9d3a84a-38c2-49d7-9448-1ff657c5a400",
        "cursor": {
          "ref": "fc477c18-1e52-4795-955f-5fa5afcd0375",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "2e23814a-38f7-4cc4-80ef-356acb7cc68f"
        },
        "item": {
          "id": "f9d3a84a-38c2-49d7-9448-1ff657c5a400",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "1097af5a-e7a0-4383-b070-3f934f521f5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7644592c-6967-43d6-9d63-5fd6e83cddbd",
        "cursor": {
          "ref": "dc284ae1-cf03-4d29-aaf7-8f2dda109bf7",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "3e922696-cdcd-4344-be6d-14c7fb1f34c9"
        },
        "item": {
          "id": "7644592c-6967-43d6-9d63-5fd6e83cddbd",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "7ff292d9-4313-4544-9769-21b667b6b08b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf1f001-aaf2-41d9-83a2-853a7219fc06",
        "cursor": {
          "ref": "371524f5-7590-4e37-99d5-f4c0adc3702d",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "57031318-e30f-4130-9aa6-df2ba781b2c5"
        },
        "item": {
          "id": "eaf1f001-aaf2-41d9-83a2-853a7219fc06",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "69e65ffc-3e6c-4333-bd1b-5e164aaccac1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1338fa12-2b2a-410f-912b-129a1c232180",
        "cursor": {
          "ref": "5b80654c-3379-4c80-8de6-2fb829d20d34",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "3bc7df97-d1f2-4a95-bc16-613f6413e3b5"
        },
        "item": {
          "id": "1338fa12-2b2a-410f-912b-129a1c232180",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "9502a08a-0191-4c1f-94bc-1d91d2a73780",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4eb06638-7b98-47b7-a384-c19e0cd7ef8a",
        "cursor": {
          "ref": "7768a012-8059-4120-bbcd-03c139f55beb",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "a9585f18-0599-4f09-950d-21c61aa39f4a"
        },
        "item": {
          "id": "4eb06638-7b98-47b7-a384-c19e0cd7ef8a",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ba1478f9-6c06-4328-a65d-9782546fe520",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f278c03-a7b6-49e5-b785-5991365ca5ed",
        "cursor": {
          "ref": "ffa36440-52b9-4a03-bec9-ecebc09b02a2",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "6c7342c0-74b9-4987-b9e0-f035281236db"
        },
        "item": {
          "id": "8f278c03-a7b6-49e5-b785-5991365ca5ed",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "ad9c2238-45be-4233-8e99-36c76d542b64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7a9da54-9d5a-4d7c-94ea-175aa277294b",
        "cursor": {
          "ref": "9c38ae7b-93df-4300-b210-f1c595ee4e82",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "d5e486ba-fc66-4e10-918b-8d08fa009bb3"
        },
        "item": {
          "id": "e7a9da54-9d5a-4d7c-94ea-175aa277294b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "7fba190e-b2c3-44cf-9ea5-9ae64c66ff2b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e898e67b-55af-4595-b6a8-d961411737ba",
        "cursor": {
          "ref": "c94952f7-b86e-45a6-8800-816192477cf2",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "80019033-b6e3-406c-99fb-7f9c236541b3"
        },
        "item": {
          "id": "e898e67b-55af-4595-b6a8-d961411737ba",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "ded7bd5f-ce1d-4413-a3a6-f0dc4aa16109",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "061e5517-a64d-4b6d-8233-d5e6c07cb4cc",
        "cursor": {
          "ref": "e75a63a1-3ccd-423b-8bac-8b1fccfb81d5",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c989e427-87bd-49a7-b564-bce9b0528e81"
        },
        "item": {
          "id": "061e5517-a64d-4b6d-8233-d5e6c07cb4cc",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "4329b779-c0b1-44c3-9a24-d431fbbff564",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c893edb-b0b0-4260-9799-a655c1a9dae4",
        "cursor": {
          "ref": "acade463-e46f-4893-8d8e-335c943b1693",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "9b8a49ab-3627-482f-bef3-dad632addf96"
        },
        "item": {
          "id": "9c893edb-b0b0-4260-9799-a655c1a9dae4",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "5aa263fc-311f-4888-a04d-c3a7ec753adf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7992566-ff22-429f-b706-e22e912ee9f4",
        "cursor": {
          "ref": "a1ba7e03-748a-4090-af5d-cd5fe9b69fd7",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f0667a22-bff5-487b-90f5-a1ce51b25f06"
        },
        "item": {
          "id": "e7992566-ff22-429f-b706-e22e912ee9f4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "5c3968a2-c53c-4470-a3f2-02cc1ffc0a74",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0393487f-1acd-4a65-a0eb-46414591ae34",
        "cursor": {
          "ref": "8639d7bf-a3cb-49d6-a21f-f1872533b24b",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "1f37fd8e-c92e-4ed2-a08a-c90d138f00e8"
        },
        "item": {
          "id": "0393487f-1acd-4a65-a0eb-46414591ae34",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "76240a86-0541-4beb-b85d-4966e63b8447",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "15bc8468-2768-4402-b483-db77abdef4e1",
        "cursor": {
          "ref": "e6d2e004-4f8f-4dd8-9f4d-70f23b58956b",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "edb54fbc-c80c-445c-aa98-26464fb7ba64"
        },
        "item": {
          "id": "15bc8468-2768-4402-b483-db77abdef4e1",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "67f76bfb-670c-4028-9e8f-345ff4f90e68",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 307
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d4c2453-d8d9-4dd1-9052-b8eebe640c84",
        "cursor": {
          "ref": "667dd25b-084f-4c54-83ef-ebd4c40df053",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "f33ad548-ca73-473d-871e-2cd060e4a238"
        },
        "item": {
          "id": "4d4c2453-d8d9-4dd1-9052-b8eebe640c84",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "823849ba-6a69-4d3e-914c-14b76c19bffe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 306
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9dbbee6d-7f15-4c2c-a445-817c1ee901c2",
        "cursor": {
          "ref": "4ccaeb9d-a45d-4307-994c-0cac3a4d96a3",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "4d434a4d-d939-4942-8104-8c65928aa3c9"
        },
        "item": {
          "id": "9dbbee6d-7f15-4c2c-a445-817c1ee901c2",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c2c9ffbb-64a4-4c1d-b3f2-48382bca4da7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6805f0c7-565d-46e8-b33e-5c53149256b0",
        "cursor": {
          "ref": "003aeadd-03a1-4718-99da-35ff08e353f2",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "93d9ced6-471c-455e-8db1-dd8ca4da7467"
        },
        "item": {
          "id": "6805f0c7-565d-46e8-b33e-5c53149256b0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "d6e07d4b-3da6-4901-a4ba-62b777730fc1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 222
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66ca875c-dbb5-4e05-b54f-e0ebcc136b41",
        "cursor": {
          "ref": "6b01dd7c-77de-4e01-a1c8-d8770d94cf64",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "0074bbc7-dfa3-4834-9306-99988df2327a"
        },
        "item": {
          "id": "66ca875c-dbb5-4e05-b54f-e0ebcc136b41",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "eac15337-df2e-4630-a4a3-1605d463f327",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186de1df-5d44-4898-8505-b8e03ae63199",
        "cursor": {
          "ref": "944622ef-b5fe-46e1-a684-4e3d6066be03",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "7a04db47-a3de-4d9d-b398-75230725eb98"
        },
        "item": {
          "id": "186de1df-5d44-4898-8505-b8e03ae63199",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "ef7629df-520f-4388-923a-96674500731e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7682ccef-bd57-4b99-ac58-c8d4417a1f32",
        "cursor": {
          "ref": "f08582f5-1d49-4a67-9365-f5929d9c8d25",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "4e435384-f868-4c63-939b-7f84847edd5d"
        },
        "item": {
          "id": "7682ccef-bd57-4b99-ac58-c8d4417a1f32",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "6be859f1-1fbb-41c9-9e79-e835956aa29a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 334
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c616f0a3-2801-486a-9921-e8c989a20c24",
        "cursor": {
          "ref": "431797da-3cd6-495d-863c-4005d34126a5",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "4a94a017-7be3-48aa-a1d3-1e850e9548c2"
        },
        "item": {
          "id": "c616f0a3-2801-486a-9921-e8c989a20c24",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "5cbf0f84-ca63-4274-974e-786acab61df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01bee4cb-d5ad-4481-a2fc-92bbd45eb7dc",
        "cursor": {
          "ref": "f55e8797-a92c-4fc7-9eb6-e0c12cbb939b",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3c969cb0-0ae9-4f1d-a28b-13a2fc7af193"
        },
        "item": {
          "id": "01bee4cb-d5ad-4481-a2fc-92bbd45eb7dc",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "16d144eb-0875-41ef-a3ee-d834e68f5839",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd97f127-6d7a-4e8d-af3a-6a097930a997",
        "cursor": {
          "ref": "bd0be5db-c9cf-48c7-bf72-ca49162d19f7",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "02290442-9f7a-406e-a289-6d2af14832f8"
        },
        "item": {
          "id": "cd97f127-6d7a-4e8d-af3a-6a097930a997",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "acf4c3b1-0156-4ab6-8e04-4ab531b97e38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "813b0f51-0329-48b8-adff-1b114d8cb81c",
        "cursor": {
          "ref": "d6df4d5f-34bc-4840-bd9a-34d347acf0fb",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "711d0aff-5e36-417e-901d-d8d47f1e8871"
        },
        "item": {
          "id": "813b0f51-0329-48b8-adff-1b114d8cb81c",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "870d066f-8cda-4d26-bcc1-1555691981db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 336
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad928799-d35e-4fef-87cb-4696afa5ef66",
        "cursor": {
          "ref": "2033c94d-9d20-4f9a-845f-0ce243f0d5fb",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "6f1198c1-c45c-4b43-b2d0-10b715684e97"
        },
        "item": {
          "id": "ad928799-d35e-4fef-87cb-4696afa5ef66",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "c4e26f41-198a-4de0-93cc-94bf1ef83064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0f433ea-31c4-4a8a-83c6-6fd2a76a2a76",
        "cursor": {
          "ref": "4c6f83e2-d926-4ef3-a960-2128b3bb3a7a",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "e352f931-f41c-4b2e-b9ba-cde03db28594"
        },
        "item": {
          "id": "f0f433ea-31c4-4a8a-83c6-6fd2a76a2a76",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "f6290fd7-9322-4c8b-8aff-26ed3d1ebe67",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 538
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c1156b7-1fd0-4e40-a517-e82ca1e86ed4",
        "cursor": {
          "ref": "2a807f59-bc9f-49c3-b8a1-76b04b0b38ff",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "da3a24f8-b21a-4741-9969-22379fe43333"
        },
        "item": {
          "id": "9c1156b7-1fd0-4e40-a517-e82ca1e86ed4",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "630385c8-4757-4244-b983-5fbbb40950dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 537
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50c17e74-0e03-4f64-b201-d205d0a0ff34",
        "cursor": {
          "ref": "b62dcba8-b4ec-46d7-8238-03ef026750a1",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "8fc1c196-0c60-451f-87db-20b822a06aec"
        },
        "item": {
          "id": "50c17e74-0e03-4f64-b201-d205d0a0ff34",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "298df859-d024-45ad-b628-ce3912a54fc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "555dbed8-2496-47e9-b143-4333213a0469",
        "cursor": {
          "ref": "dda07c7a-c08f-44b5-916c-664894b768b8",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "61c2ebc1-2dc0-4b6c-8329-eb7be2bfb0eb"
        },
        "item": {
          "id": "555dbed8-2496-47e9-b143-4333213a0469",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "0ea1ba9e-6215-4821-96fe-40fc69ace465",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f06dbc1-6309-4062-b775-8bc17433bcfa",
        "cursor": {
          "ref": "18070f80-0e4b-40b1-9ac6-846096bfc0fd",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "fdef70c4-3019-4f94-bc60-344da27a59c2"
        },
        "item": {
          "id": "6f06dbc1-6309-4062-b775-8bc17433bcfa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "288acb1b-08f7-4f85-abd2-de37598e1bfa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 539
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cb46421-16a7-4375-a795-7b91791d68e1",
        "cursor": {
          "ref": "954783f7-7eba-4bee-9022-705dd7a7928d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "c8c29e8a-40da-432e-94ae-0a4bc48609da"
        },
        "item": {
          "id": "0cb46421-16a7-4375-a795-7b91791d68e1",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "e429d729-147f-43b9-af3c-3f964c2250aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "acb4ed94-7c9e-4d80-a1c8-b94a50d6aab6",
        "cursor": {
          "ref": "1f0daf1f-ca6b-49b2-b636-651b561b655d",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "d97c0c13-4e9a-4ac7-aecf-afeac59197bb"
        },
        "item": {
          "id": "acb4ed94-7c9e-4d80-a1c8-b94a50d6aab6",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "00845c73-bb2f-4ace-b6d0-e6f83227d58d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 293
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "158657b9-61ad-4510-94e4-0116471cdad2",
        "cursor": {
          "ref": "99b5cc89-8c00-432d-8e6c-e83d8493f3ff",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "d8e7c325-e296-45d8-818b-683bd0204596"
        },
        "item": {
          "id": "158657b9-61ad-4510-94e4-0116471cdad2",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "4b9b4f0d-dafa-4066-aafd-4e15375a9a36",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 292
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "36cf5953-3343-4375-8ea4-76ab5081e9ec",
        "cursor": {
          "ref": "cd1d45a3-b7dc-4779-a574-794b25ceaef7",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d0a2c1a0-d1e1-4143-9f35-68e18a9de1a9"
        },
        "item": {
          "id": "36cf5953-3343-4375-8ea4-76ab5081e9ec",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "ec650bf1-957f-4be5-b9e2-431923c1dafb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "584f05fc-56d4-461d-815f-4ddbf00d8d3a",
        "cursor": {
          "ref": "9b605a52-8682-4083-a515-cccbd659766c",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "9c02e20c-8e59-4ebd-8108-a4f4f471d934"
        },
        "item": {
          "id": "584f05fc-56d4-461d-815f-4ddbf00d8d3a",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "6a2734a9-7918-4be5-a762-f43738905f7e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d94f448-6a23-4b31-8a9b-32005324d817",
        "cursor": {
          "ref": "6ffc5e48-1496-4828-b458-45f412ecce55",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "899688af-5c6b-4bd1-8aac-4de0795ce94e"
        },
        "item": {
          "id": "4d94f448-6a23-4b31-8a9b-32005324d817",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "f0a81b74-fca0-4505-af34-13e8dbe5c770",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ca64603-2ba6-4e48-b277-d24d8af4e9cc",
        "cursor": {
          "ref": "242ac762-aaec-400e-bbba-22bee6a9550c",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "8dec0132-e274-4873-90da-5f3114417044"
        },
        "item": {
          "id": "3ca64603-2ba6-4e48-b277-d24d8af4e9cc",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "beafb6b4-e7c4-428c-8569-3d807dc91fd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0edcb84c-00de-403a-a860-8018c0b022e8",
        "cursor": {
          "ref": "70d4285e-b6fb-48be-a890-0ee44c7a7d49",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "54e6ab32-daab-4315-8265-f7954297e675"
        },
        "item": {
          "id": "0edcb84c-00de-403a-a860-8018c0b022e8",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "ff644ec9-7f7b-4003-a316-237c03bb8ee0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b19f5038-3a27-42a2-b9ef-9d9f97028b34",
        "cursor": {
          "ref": "55d2cccb-6e9e-478e-b739-b081659844ae",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "d81208a1-e958-4840-b692-a095b75c9c3d"
        },
        "item": {
          "id": "b19f5038-3a27-42a2-b9ef-9d9f97028b34",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "59866e1f-d044-4349-af93-55b39e46ca43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 295
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52f88537-351f-4879-bc97-33b709a3e5d6",
        "cursor": {
          "ref": "32b43a10-a2b7-4eb0-a8b7-77aa71fd19ef",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "fc3dfdfb-1cf5-44e5-9baa-85617839db00"
        },
        "item": {
          "id": "52f88537-351f-4879-bc97-33b709a3e5d6",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "9ac0055f-9552-494e-998d-084f6ae91119",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce3457f0-2920-4125-ae1a-b7e90428be9b",
        "cursor": {
          "ref": "ba9f46a9-eba3-46f2-a3e7-15a09f2e20ce",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "ea9f5246-32b8-43d4-8d5b-1b4cce062b66"
        },
        "item": {
          "id": "ce3457f0-2920-4125-ae1a-b7e90428be9b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "6f9bd2a5-7a53-423f-af5d-65477bbbe549",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb6c812-d730-493f-b4ef-140b21728670",
        "cursor": {
          "ref": "76d6f930-09b6-4917-a4fa-86ddbe966c5f",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "72bc9964-d317-488f-94fc-6a2f88c09904"
        },
        "item": {
          "id": "8cb6c812-d730-493f-b4ef-140b21728670",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "431de247-9d39-4651-8899-575b13df98c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de34d4b4-05ee-4e58-bf47-4a7b7e2f7350",
        "cursor": {
          "ref": "ccc7d038-0331-419c-a85e-83f79da463c3",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "0b2cfd17-8ece-48dc-acdb-008f24e0bc65"
        },
        "item": {
          "id": "de34d4b4-05ee-4e58-bf47-4a7b7e2f7350",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "7e368618-2e96-41f5-be3a-f9f0d931772f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 296
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77727018-4d8c-41c9-b743-11090ff04008",
        "cursor": {
          "ref": "f9fea7b4-cdbc-4a04-9433-653132fc18a5",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "9d730413-cd0a-4be8-a517-f59913efc26e"
        },
        "item": {
          "id": "77727018-4d8c-41c9-b743-11090ff04008",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "ded46c11-0e8f-4248-96d1-cdc70f0775b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5aa2d4bc-ae89-4482-b032-925532a9cbb3",
        "cursor": {
          "ref": "54ddd256-5fe5-450b-baeb-2e24836c465b",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "339148ee-f2ad-4c0e-af0d-2c3f24c9aba9"
        },
        "item": {
          "id": "5aa2d4bc-ae89-4482-b032-925532a9cbb3",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f43372b3-0aa9-4e63-a467-f932d78eece9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3c2b5ea-35b8-417d-9905-d23ee80c6ee1",
        "cursor": {
          "ref": "0f082af0-0b81-4c47-a67e-3b5873362f5f",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "96c7238e-e0fb-4ca7-8088-5b05bd5f17c9"
        },
        "item": {
          "id": "f3c2b5ea-35b8-417d-9905-d23ee80c6ee1",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "479d9fba-3572-4484-a029-489b890f3635",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0555db1e-730d-4e0c-b688-372f4181d886",
        "cursor": {
          "ref": "c6ccc3d1-4a8d-47ef-ac0b-e52b370b3c37",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "6a193318-bc14-4571-9ad7-27429e5a787c"
        },
        "item": {
          "id": "0555db1e-730d-4e0c-b688-372f4181d886",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "a8a0d8a8-30ac-4ffb-95a9-a4f0a10dd8cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85cd3b6b-d624-4fd8-ae1d-2982698d8396",
        "cursor": {
          "ref": "551744ae-1ff3-4efc-bc7a-95625507324a",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "227de603-a0c8-4241-a538-15e8ea34915d"
        },
        "item": {
          "id": "85cd3b6b-d624-4fd8-ae1d-2982698d8396",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "0b2a0004-fae3-4e7a-bf63-ce158e613321",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbcbdb9f-8747-463d-967a-14e062dae8a9",
        "cursor": {
          "ref": "546d50cd-694e-42a5-a01c-da957e05a0d7",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "02d4b18d-7133-4a6e-83be-d6542e35fcf6"
        },
        "item": {
          "id": "cbcbdb9f-8747-463d-967a-14e062dae8a9",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "bbaaca8c-1fac-45e5-8cb1-09dd5d5f5339",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 139
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "402e4b82-e652-4fb4-894f-0d023cbd9be4",
        "cursor": {
          "ref": "5570586b-7782-465e-819a-ac534bc4db92",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "4f522255-b147-433d-a0de-d046eaf25697"
        },
        "item": {
          "id": "402e4b82-e652-4fb4-894f-0d023cbd9be4",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "89d2fe4a-e557-4f81-b233-e7202e0c92d4",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc82a3d0-427c-4d5d-94b8-20e299faea5f",
        "cursor": {
          "ref": "8dfa995b-8584-44b3-a2aa-06bebed873db",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "416cac73-4285-40fa-8e76-282a0558e986"
        },
        "item": {
          "id": "bc82a3d0-427c-4d5d-94b8-20e299faea5f",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "246677d3-27eb-4c49-ac6d-30566669f7de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 238
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8e93c01-06ff-45db-a2f3-1e20c4f0c4cb",
        "cursor": {
          "ref": "fa4c414c-a966-412e-baaa-19405924e963",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "5679ef2c-c4ef-4b70-89a8-d3766b8f6e93"
        },
        "item": {
          "id": "b8e93c01-06ff-45db-a2f3-1e20c4f0c4cb",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "362f37e3-3b5a-4433-95e2-873fabc18bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0004f5ba-0b06-4e62-9902-fd6a6e707782",
        "cursor": {
          "ref": "b9ff3995-5de4-43a4-b3b8-997749bc081b",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "98e9119c-d6c4-4d50-b3d6-117b80cd0af2"
        },
        "item": {
          "id": "0004f5ba-0b06-4e62-9902-fd6a6e707782",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "7ae3cc40-4d82-4ddc-a545-02632d154612",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53c979d1-3286-4316-ac18-c02b32fca001",
        "cursor": {
          "ref": "820e7b8f-9d91-468f-a3d6-6cba7ca522d3",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "4973bddf-3fec-4041-bdae-46dbb7e45fe8"
        },
        "item": {
          "id": "53c979d1-3286-4316-ac18-c02b32fca001",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "65aa85a9-974e-424c-a4ce-6fefb41490c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e15893a2-97d8-4625-aab0-30f15d40f730",
        "cursor": {
          "ref": "2a16072d-0260-4787-a400-d8cc06e3a170",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "3bcbe93c-1eb6-439f-88af-43295ff58efd"
        },
        "item": {
          "id": "e15893a2-97d8-4625-aab0-30f15d40f730",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "bf0b294b-e628-4ff7-8357-0ce75d68bb48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f1edb986-ea86-4839-9fcd-32cfadad8c7c",
        "cursor": {
          "ref": "bf8f08e1-247b-4297-b588-0b647276a3da",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "fc5f0fbe-92ec-4a4e-8294-6defbd8cc6a4"
        },
        "item": {
          "id": "f1edb986-ea86-4839-9fcd-32cfadad8c7c",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "55617d20-784a-470a-b2ef-8cfc94504e8c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ec4c2169-71aa-4adb-8897-e6b4681c0ce6",
        "cursor": {
          "ref": "1564f42c-38ea-4ee5-b056-9c3c9f591e82",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "5b6039dd-2892-4a66-a5d5-ee65e0dcf33a"
        },
        "item": {
          "id": "ec4c2169-71aa-4adb-8897-e6b4681c0ce6",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "575edb7e-8579-4317-88f3-cd2f8a60e72b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7baa4d39-7424-4cdf-9898-6de195242d72",
        "cursor": {
          "ref": "f6698d8e-2030-43ff-a23d-b7daf97920ed",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "e6575423-4198-407f-a0af-e75d07085168"
        },
        "item": {
          "id": "7baa4d39-7424-4cdf-9898-6de195242d72",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "74542423-a690-411d-b7bc-3d911b59b7f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11892948-800d-432d-99e9-4f2932a62eb3",
        "cursor": {
          "ref": "76a52946-2b54-4c83-a391-acadf4c5b9bd",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "7ccb5131-f1d3-4f95-a565-a3f81246d8ca"
        },
        "item": {
          "id": "11892948-800d-432d-99e9-4f2932a62eb3",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "e71fa6b1-1930-4d6a-9d2d-73f280e00625",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397c467c-1323-4323-8b2c-7013f483b174",
        "cursor": {
          "ref": "39b019a5-afd3-4132-8ce3-2272b8d7d033",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "08cdff7f-4493-4f0e-9486-537d84741b2e"
        },
        "item": {
          "id": "397c467c-1323-4323-8b2c-7013f483b174",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "ab3a474f-80a8-4a07-b170-0531f13ec756",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8bdfce3-d689-4d50-af03-f0d0dfbf8f1e",
        "cursor": {
          "ref": "eedae731-df3f-4cef-be24-669f17d874c8",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8140d200-6d78-485d-8a3e-1a7a5a55a6a2"
        },
        "item": {
          "id": "d8bdfce3-d689-4d50-af03-f0d0dfbf8f1e",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "7675983e-ead5-408f-abdc-10a05bac914b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55667371-3337-43ef-8265-1c6013ef0057",
        "cursor": {
          "ref": "a04102e7-b998-4fbc-9cf6-cab3ef7ddde9",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "43e3716b-118c-4c86-a191-3aded0542962"
        },
        "item": {
          "id": "55667371-3337-43ef-8265-1c6013ef0057",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "b9a44fa7-3def-42e0-9c93-3af75fe78371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f667697a-17b3-4d44-ae57-039e99b5d74d",
        "cursor": {
          "ref": "1ca2518d-7ab7-4245-b07b-6a66b6423b31",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "df569b18-81ca-4413-8667-831fa4cb53e1"
        },
        "item": {
          "id": "f667697a-17b3-4d44-ae57-039e99b5d74d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1f3782af-d2c8-42af-85db-d531b741798a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b70c5287-ce7b-4a11-905c-d763eb03596e",
        "cursor": {
          "ref": "a260d30c-904b-4969-a762-b170aaf45d41",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "89c96b46-3bbf-4a12-b28c-ef603082605b"
        },
        "item": {
          "id": "b70c5287-ce7b-4a11-905c-d763eb03596e",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "51f2a0df-853b-4961-ae5c-6ea0a721f5a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b01ed374-aff7-4351-a469-10e4922539d2",
        "cursor": {
          "ref": "14c34602-5ef4-4804-91bb-d2e941a6ca99",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "707ae8d8-2690-4cb9-9a42-0bd243a3e74b"
        },
        "item": {
          "id": "b01ed374-aff7-4351-a469-10e4922539d2",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "66c9b759-2ea4-4809-9aec-dcffe32bb5f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5702dfa9-ca8e-446a-9651-2da220c945ea",
        "cursor": {
          "ref": "2b0ee07e-83ef-430b-a444-fdc4eaf87d87",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8a506555-1543-49c2-bbd5-d08ed7acb234"
        },
        "item": {
          "id": "5702dfa9-ca8e-446a-9651-2da220c945ea",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "438c6f50-d71f-42e3-98e1-cda74d2c6371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0b420aea-f65c-46c6-a063-1fc7a141874b",
        "cursor": {
          "ref": "40a476d8-48b3-43d6-8e13-945586fc4d18",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "188a1b75-65a9-4439-bbb5-056bc81fd700"
        },
        "item": {
          "id": "0b420aea-f65c-46c6-a063-1fc7a141874b",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "47a96dbc-08ce-4b3a-876c-0eebe0a50269",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5fa60f7c-3596-4abe-9b35-6a3d48bcfde9",
        "cursor": {
          "ref": "b62141a6-25b9-4ba2-902e-7e8e641c7f16",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "23e047f5-6a35-4a17-9f80-9e5cd45aeeee"
        },
        "item": {
          "id": "5fa60f7c-3596-4abe-9b35-6a3d48bcfde9",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "730374af-8b10-485b-89fd-7578e8ae6cdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4f16aa1-adc3-4d21-b5d8-b818d1438e91",
        "cursor": {
          "ref": "76991d0f-7007-41de-a500-0a9cc201c57d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "3aba6269-54b0-4329-a65e-c7f2ae2e59bd"
        },
        "item": {
          "id": "a4f16aa1-adc3-4d21-b5d8-b818d1438e91",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "6681f2cf-9e44-4d4d-b0c9-2ab7826ef650",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2c05bd1f-1e8f-4a07-bff6-b55a100fee9b",
        "cursor": {
          "ref": "d4a4bb99-5665-4e9d-84d8-36c76a301373",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "e29e4962-d07d-433c-8518-bd3ee8e68883"
        },
        "item": {
          "id": "2c05bd1f-1e8f-4a07-bff6-b55a100fee9b",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "4bfd9a7f-d951-4a48-a9a3-096736ff6022",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b0e4519-7b5c-4d6c-9f02-d86604632947",
        "cursor": {
          "ref": "8814c5f1-2c83-441b-bb53-1f2c23ddfc49",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "b96a2978-7899-4fa0-929d-3c8cb40117e4"
        },
        "item": {
          "id": "6b0e4519-7b5c-4d6c-9f02-d86604632947",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "3cf2b2ee-1cdf-4b76-8fa0-6b40bd6d06c0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34b99a54-e646-472c-98da-e63336297364",
        "cursor": {
          "ref": "4db3d292-2788-4dc5-88a7-f9c905b4bb48",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0f837622-b9e8-4134-b876-1a89f2c27b9b"
        },
        "item": {
          "id": "34b99a54-e646-472c-98da-e63336297364",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "c63530c4-559a-4219-b441-97115e79a0c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "95236c72-5779-4400-b194-7752c4cb7d31",
        "cursor": {
          "ref": "93b417ca-8ee9-4f0a-841e-49167cabac06",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d06563a1-6c15-48ce-8153-8634eef0690a"
        },
        "item": {
          "id": "95236c72-5779-4400-b194-7752c4cb7d31",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "df36e525-4bb7-4666-84b8-e297cd0349fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0117b9dd-9bec-4297-a492-f40d4716eb38",
        "cursor": {
          "ref": "70494fc7-8976-4a7a-b68f-39e2bd086808",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "c4792a28-2e16-4e1e-926d-b769fe6ef76f"
        },
        "item": {
          "id": "0117b9dd-9bec-4297-a492-f40d4716eb38",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "462757f0-396d-4de4-9481-f23e50ea85a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 199,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae07d270-2928-4eba-8e8e-48402378e60d",
        "cursor": {
          "ref": "d466ed07-f57d-49a6-9b49-3a90d770c242",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "189b4432-96f1-405a-bc4a-0e06b0d32974"
        },
        "item": {
          "id": "ae07d270-2928-4eba-8e8e-48402378e60d",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "d5d76b41-0de0-46b1-8fed-ee3e3dd23856",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9c844277-3f43-4382-b8ab-73bc37b24bb1",
        "cursor": {
          "ref": "56aa0280-1947-4289-b83a-b4ea696f3559",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "273dec26-4419-488b-b18a-791b38c4ace0"
        },
        "item": {
          "id": "9c844277-3f43-4382-b8ab-73bc37b24bb1",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "2f0a7567-79d4-428c-a936-831dab0c3556",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 184
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00d3f2c1-0cd4-4bfa-9ce9-b98ea6ba23cf",
        "cursor": {
          "ref": "79546413-dff1-4e86-a690-ffebfff9b815",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4cc9eacf-e6bc-4ca7-81f0-2f062dd3eb13"
        },
        "item": {
          "id": "00d3f2c1-0cd4-4bfa-9ce9-b98ea6ba23cf",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "1c2a807f-782b-4331-9fed-421550e49eb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebe53cbd-f79a-46ba-a4e2-09a4e55de4f4",
        "cursor": {
          "ref": "9c0c00bf-a9dd-485c-aa90-aa7af8b7b7e4",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "924993ee-425f-4a90-8d85-eb75f1b7cc90"
        },
        "item": {
          "id": "ebe53cbd-f79a-46ba-a4e2-09a4e55de4f4",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "680dbb19-211b-4e36-af15-46a978d228e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78c430e7-2c59-4562-83a2-e1dbac2247da",
        "cursor": {
          "ref": "03a91196-0bf0-40be-970a-f2b09790871c",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "020ae722-8afa-4b11-86b1-e08e203924d4"
        },
        "item": {
          "id": "78c430e7-2c59-4562-83a2-e1dbac2247da",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "dccbd5e1-71ea-41b6-8567-8369f52db4a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 182
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66fc9b7c-a4cc-4863-97e4-4de7024e801f",
        "cursor": {
          "ref": "bf80b459-4ed8-43e0-a299-7156dbde75f9",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "a4038dff-17d5-48a4-9212-7cf275edddab"
        },
        "item": {
          "id": "66fc9b7c-a4cc-4863-97e4-4de7024e801f",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "a2e22c72-373f-4dc3-8c00-89e5d50fc779",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97aade3b-bb6a-40ea-b90e-0a07da7364a9",
        "cursor": {
          "ref": "73e8eeaf-ab24-472f-9d79-137dd7f4fb22",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "68918155-1f55-4acd-8e01-a739c6737f94"
        },
        "item": {
          "id": "97aade3b-bb6a-40ea-b90e-0a07da7364a9",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "f9e7a9b8-641f-4983-92d9-404f78639209",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0db3e982-335a-4188-916e-8bbe747ffdf9",
        "cursor": {
          "ref": "2aef16ad-676f-41b2-9df6-7768f3b3fbfd",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "2b8a8e57-a42e-4225-9fda-0d24e7166027"
        },
        "item": {
          "id": "0db3e982-335a-4188-916e-8bbe747ffdf9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "82874ad9-f0bd-4514-9f52-3416dce8d4ca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "777ab312-0e5c-4cae-8f63-f8027687a659",
        "cursor": {
          "ref": "c225440a-3a23-44e1-bf8a-6d613d8215f0",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "768334e3-77e3-43d0-87eb-2309b0620cc5"
        },
        "item": {
          "id": "777ab312-0e5c-4cae-8f63-f8027687a659",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "fa5ca272-c641-4b39-8f68-5cca7086c8d9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc689175-29be-476e-81c8-c9513e9dca3e",
        "cursor": {
          "ref": "7d2a6b02-0465-4d77-844f-bea4011a8ea1",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "be04d4ec-3744-4c60-8378-41c65259b269"
        },
        "item": {
          "id": "cc689175-29be-476e-81c8-c9513e9dca3e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "a7782a1a-89b1-4cc3-8d23-2f4ee74fdcfe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5530b021-a116-40a5-89c6-b3795a8e04b4",
        "cursor": {
          "ref": "5dd62b04-7da4-4f53-8bb0-4412ea08e51f",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "c9c629a9-439c-497b-b3ad-d54b77010916"
        },
        "item": {
          "id": "5530b021-a116-40a5-89c6-b3795a8e04b4",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "169ec36b-5c66-4648-8e83-319bd81ea8f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc3e71f6-44cd-4412-bbb3-68663e1166ce",
        "cursor": {
          "ref": "8c44f372-36e4-44a9-8d25-9bd30a95af5f",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6e2c111f-0d72-4cde-bb76-f27adffbd60d"
        },
        "item": {
          "id": "dc3e71f6-44cd-4412-bbb3-68663e1166ce",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "915a0b34-93d8-47db-adc7-44d601a4e842",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a40aa2b0-c95c-4e28-92b9-7552427fea0c",
        "cursor": {
          "ref": "0eff991b-451e-49f7-87f7-97ec339225e2",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "2187640d-4eb9-4137-8d15-ec99a4bfd8e2"
        },
        "item": {
          "id": "a40aa2b0-c95c-4e28-92b9-7552427fea0c",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "932e4245-133b-404a-a7b9-fddef627f374",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df621d91-9ec2-433a-9df4-b4ecb86190d3",
        "cursor": {
          "ref": "1d665736-4454-4bd4-b970-5f129b99bf56",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e7caae90-b2b7-4637-a734-98933f027a8a"
        },
        "item": {
          "id": "df621d91-9ec2-433a-9df4-b4ecb86190d3",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "1812dc72-3c62-4cf6-9870-929d6eeb3df4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1625e1c-c65b-4b9d-af31-d9170b5a5b0f",
        "cursor": {
          "ref": "b215f223-d518-4c87-85cc-824afa554fd3",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "7fdba88c-34f8-40e0-8264-d8c1f7b12efa"
        },
        "item": {
          "id": "b1625e1c-c65b-4b9d-af31-d9170b5a5b0f",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "c11e8dcd-1d9f-4434-9811-60eea1e6f661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db21d3b0-d186-4f57-ab9b-228047b6e5de",
        "cursor": {
          "ref": "ba145a91-3e9a-4b9f-8bf4-937f8e7d12bd",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "561d03ec-1ef4-48b6-b63b-378ec77b046e"
        },
        "item": {
          "id": "db21d3b0-d186-4f57-ab9b-228047b6e5de",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2c0215b7-a856-49d8-b1c3-228c88ddfc3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3c4bec76-3425-4ca2-81e1-84ced503feb1",
        "cursor": {
          "ref": "9078b4e6-c82f-419c-95e7-2f5f5d62d393",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "2db86d7a-373d-483f-a8d1-3700ad24469c"
        },
        "item": {
          "id": "3c4bec76-3425-4ca2-81e1-84ced503feb1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "5d618969-956c-45c8-9403-9e0e4dcc3486",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "222ef198-d27b-4cdb-8c66-1219678e84bd",
        "cursor": {
          "ref": "d3e42dde-63d1-4a72-b9e9-727776dc3fc9",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "6cadf789-a0dd-4433-85b8-da16ef622be8"
        },
        "item": {
          "id": "222ef198-d27b-4cdb-8c66-1219678e84bd",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d745257a-047c-40f2-b3fb-0383778aaf7f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44717f34-ddf1-42f4-893b-ced6f6ca92ad",
        "cursor": {
          "ref": "d7ae1ab8-4764-47d1-bb0c-5e3ce76e19b3",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "e2897a9c-ec8e-4196-9e67-4930bf2c3e6f"
        },
        "item": {
          "id": "44717f34-ddf1-42f4-893b-ced6f6ca92ad",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "ad72cfb9-116f-483c-81e7-91e958a5b70a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "865ab77f-4ac0-4f44-9020-aca221b56c8b",
        "cursor": {
          "ref": "ca730b0d-36c1-4dea-b114-b086abd61b1d",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "9d4d5784-1b5f-41f7-abd2-1ac4c531cc2a"
        },
        "item": {
          "id": "865ab77f-4ac0-4f44-9020-aca221b56c8b",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "eb767419-ee45-4a24-ae5d-6641bcdc34ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5345256-8ca7-49c4-a442-ce2f7aa9007b",
        "cursor": {
          "ref": "8bdac5e4-4786-4eff-bc08-145da972162f",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "3d343b96-5d54-4d0d-ba06-ed63d532cf8a"
        },
        "item": {
          "id": "d5345256-8ca7-49c4-a442-ce2f7aa9007b",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "46d5ca06-cf33-4124-bfbd-a6eb633363d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8dcddcf5-10bf-4c43-a14a-727b9f97e28f",
        "cursor": {
          "ref": "0e52de6a-4124-446b-a913-0d0b4199d435",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "85bbaa4d-7f75-457b-85c3-877d223bd2c1"
        },
        "item": {
          "id": "8dcddcf5-10bf-4c43-a14a-727b9f97e28f",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "3ff48f00-d6f7-4e12-8135-d6b9eb517130",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "884fbfd9-1f57-409d-ab6d-e37fe6c58fd6",
        "cursor": {
          "ref": "88b20a2b-500a-4956-8e4f-9003edb46d50",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "0935582d-42fa-4d7c-b253-0e682c17cc0a"
        },
        "item": {
          "id": "884fbfd9-1f57-409d-ab6d-e37fe6c58fd6",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ba3a8fe8-0fea-467f-b478-bb5343035a88",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83484ce2-c298-403f-b94c-cf55a232ed89",
        "cursor": {
          "ref": "31823c28-15a2-4ee6-a85d-224fcf4703fb",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "094ad50a-9893-4817-81dd-4ac6bc048014"
        },
        "item": {
          "id": "83484ce2-c298-403f-b94c-cf55a232ed89",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "d310e8df-f895-46a5-aff5-cdffede207d2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a435d566-c357-4166-b5e1-8ea8b456be5b",
        "cursor": {
          "ref": "37237308-6fe6-4b32-bb74-f5b35e52ee7c",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "c7218009-bcb7-47ea-84d4-faf738e8fe39"
        },
        "item": {
          "id": "a435d566-c357-4166-b5e1-8ea8b456be5b",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "041b6bf4-27f3-425e-b34b-71468f93f344",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66d7efe-ab21-4ef1-b820-02250e29cace",
        "cursor": {
          "ref": "e517a27d-4110-424e-b193-14d54800eec9",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "6544c7f2-fca3-4b45-9084-daed7143862a"
        },
        "item": {
          "id": "f66d7efe-ab21-4ef1-b820-02250e29cace",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f3f967c0-aacf-4cec-9d50-efc64f12aa62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0d94d4c-04af-4e85-914d-1d6656a774a8",
        "cursor": {
          "ref": "7571a6d6-2e68-4434-b146-89edcf988c9f",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "ab9b27f3-0778-45ee-a204-f59181101379"
        },
        "item": {
          "id": "e0d94d4c-04af-4e85-914d-1d6656a774a8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "ee3bf0c6-046f-4bb2-a14f-d5b2a40ae67d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "362908dc-5f2b-4d4d-b83c-a53cb1d8e2ea",
        "cursor": {
          "ref": "59a090fd-becd-4c44-809a-1f3b58d97db2",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "f9da9e37-2d08-4e3f-a2d1-7351616386a2"
        },
        "item": {
          "id": "362908dc-5f2b-4d4d-b83c-a53cb1d8e2ea",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "acd4bfe1-2a8c-4206-bc8e-e5b0ac2357b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b5a35b8-9070-4e26-9dc3-7278dc8f677f",
        "cursor": {
          "ref": "ab8187a1-7f2a-4f1c-815b-a5079c1fba17",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "fa6f07b4-85ec-473a-9289-6370fcef4269"
        },
        "item": {
          "id": "6b5a35b8-9070-4e26-9dc3-7278dc8f677f",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "96719213-5cb8-42b3-a5ef-636e7feebbaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd75127a-c741-4373-90f9-e6268345621d",
        "cursor": {
          "ref": "3b7ad5dd-69f5-4c5a-8681-a287148c9563",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "f823af1a-f905-4012-9b63-ff471515a8cd"
        },
        "item": {
          "id": "dd75127a-c741-4373-90f9-e6268345621d",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "458dcd3e-1e78-4406-a1ab-ae64e6d370b1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9f9aaf46-66a3-4e03-9612-3032b3fafac9",
        "cursor": {
          "ref": "96034a44-0532-4487-93ed-9e1722c97509",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "feb88775-da03-4861-a2ef-dd3682da6ab9"
        },
        "item": {
          "id": "9f9aaf46-66a3-4e03-9612-3032b3fafac9",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "1c3e366d-62ca-4f4c-b48e-3ae4a6e22cf6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bc0c4d9-2eef-451f-8493-e403b25be5f3",
        "cursor": {
          "ref": "d52380d8-dea9-405c-8c11-8befbd45581f",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "a981eca0-c963-4d10-96d6-d28ef0be2c27"
        },
        "item": {
          "id": "2bc0c4d9-2eef-451f-8493-e403b25be5f3",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "249fd36d-c868-4bd7-8ef1-4d68f940bbfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "119a7e38-733d-4708-8c62-d7ec4a8fa0f4",
        "cursor": {
          "ref": "7bd3a9fd-b753-4599-896e-15817bd502c0",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "6cc15ea6-1a12-420c-a41f-7b6224590473"
        },
        "item": {
          "id": "119a7e38-733d-4708-8c62-d7ec4a8fa0f4",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "2b1be032-43a7-4ffc-8cfd-28fa2a6769b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57cf8b21-9e13-488c-be61-bc83e9b292f9",
        "cursor": {
          "ref": "476e2a9b-6eb7-4243-8bb1-cdc460e1a1e6",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "9e7d45d1-a03f-4f54-9e8a-3191c1fdae6f"
        },
        "item": {
          "id": "57cf8b21-9e13-488c-be61-bc83e9b292f9",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "7611c113-aa13-4b4a-9b11-4c33fc8fd699",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "74fc568f-8b16-4ca9-837d-aaaa36b71ae1",
        "cursor": {
          "ref": "3eda22ef-f65c-4202-8ecc-e620b84ebdeb",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "b05555b1-9f70-4817-8703-ebb36fecec43"
        },
        "item": {
          "id": "74fc568f-8b16-4ca9-837d-aaaa36b71ae1",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "43c27c5d-c959-422d-828a-9d967df7c45b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a76b304-5af0-4b54-b6b7-b3f9125d145c",
        "cursor": {
          "ref": "186e1f22-1ead-4397-84de-3d57cf057a01",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a563586c-27e4-4745-8493-3025d61ee6cf"
        },
        "item": {
          "id": "5a76b304-5af0-4b54-b6b7-b3f9125d145c",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "70ea3dfa-0187-4193-b789-a2e25c7ae696",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5cd8da-d2ca-430a-bae7-3632d885794a",
        "cursor": {
          "ref": "ea6dfca1-8d0c-4afa-8c7d-464bd357a842",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "2af13227-6e72-46d0-aaf7-01682fa5afeb"
        },
        "item": {
          "id": "8c5cd8da-d2ca-430a-bae7-3632d885794a",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "783c498e-a78a-408a-9760-14fadeb95c4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97ee1187-7b6b-490b-a7cc-85b1cb0130d5",
        "cursor": {
          "ref": "8b8e855e-6859-49e4-886f-449293158e8c",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "1ece5860-5911-4592-bb39-8593d6c3319c"
        },
        "item": {
          "id": "97ee1187-7b6b-490b-a7cc-85b1cb0130d5",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "e05a6d21-fbed-4f50-a382-8458b8a27268",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac376dee-bd5e-4a6c-916c-7064dc612010",
        "cursor": {
          "ref": "796e7d51-8c11-4b33-b715-6b18e7e69724",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "809a3888-d025-4554-ab16-0a9f739e1f5c"
        },
        "item": {
          "id": "ac376dee-bd5e-4a6c-916c-7064dc612010",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "0a14ff46-40a4-4fbd-9b55-da7326b14c12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5bf0168-ca54-4ea4-aa94-f505a3b6b852",
        "cursor": {
          "ref": "3f761f2b-9ce9-4930-a88f-da2a4fcabfbb",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b92dfbfe-577f-461f-94ae-981d5c83f83e"
        },
        "item": {
          "id": "d5bf0168-ca54-4ea4-aa94-f505a3b6b852",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "f3297f8a-a451-41f8-8d9b-47b283531394",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f28b0e-4d4a-4364-834e-cc7551a0e924",
        "cursor": {
          "ref": "fc4da418-c8a6-45aa-a23b-840abc710ddf",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "2d3f8458-b415-47da-9410-6505ae447b59"
        },
        "item": {
          "id": "58f28b0e-4d4a-4364-834e-cc7551a0e924",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "ec7c8777-9e89-493a-aef2-9185bc8145bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad8f4584-7a42-4889-8c90-15c6d1a3a8ed",
        "cursor": {
          "ref": "e7d440a5-3e3e-4376-b570-324807ec7aca",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "09752870-0983-4311-9372-0f5c0afc245f"
        },
        "item": {
          "id": "ad8f4584-7a42-4889-8c90-15c6d1a3a8ed",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "92bcc79b-01c7-47a9-98fd-fef9ac744b7a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d278e67-8b8f-472b-a5ab-3cada96d9c6d",
        "cursor": {
          "ref": "40009701-c272-4c87-b28b-22d132ad43c7",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "678551a9-181b-4f7c-8593-96a23d632c62"
        },
        "item": {
          "id": "4d278e67-8b8f-472b-a5ab-3cada96d9c6d",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b13e86f7-b870-4398-96b7-694066d69b62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "798955d5-1dbd-44de-af61-7566b4bebe26",
        "cursor": {
          "ref": "a7c3acac-b74d-4449-a804-1fd73f6e1a7d",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "6a2f2056-7f87-4f16-b2b6-c985eebaeb64"
        },
        "item": {
          "id": "798955d5-1dbd-44de-af61-7566b4bebe26",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "d133cc6e-44d7-4614-9644-1be0dfe21d93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "902983fc-8728-426d-9353-4b334a78d9f5",
        "cursor": {
          "ref": "775caef8-4d1a-4dbb-ac65-321e90eb82fb",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "f6d025ee-c3cd-450c-beae-9315870342bd"
        },
        "item": {
          "id": "902983fc-8728-426d-9353-4b334a78d9f5",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "1082cded-f815-4cbf-b491-97c9a7769dbe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f56adb5d-56b2-41c0-8042-306188e5d374",
        "cursor": {
          "ref": "52170325-a2a0-4333-8c73-26372874b329",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "2a0da7b2-8906-4250-8f60-16ea947457c9"
        },
        "item": {
          "id": "f56adb5d-56b2-41c0-8042-306188e5d374",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "0cb47c3c-a9a1-490a-b180-99585dc78d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a650384d-1979-42d9-b9b4-4d5e1e41273e",
        "cursor": {
          "ref": "f6eb2e75-af29-4fdc-ba10-41e9636af412",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "dc6ce4be-7523-44a5-a51c-f1d11518167a"
        },
        "item": {
          "id": "a650384d-1979-42d9-b9b4-4d5e1e41273e",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "328b8526-ad06-4b31-a715-e5bc61d9c343",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a211f6b-0bf7-417c-bb69-012fef4e05e3",
        "cursor": {
          "ref": "37aedad5-ef92-48b5-939e-52212745c614",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "75961b02-ea8f-4d9e-a0bb-5c84fd4e45aa"
        },
        "item": {
          "id": "7a211f6b-0bf7-417c-bb69-012fef4e05e3",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "7439366f-3063-43e0-b087-2c44739fe253",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "23a611d7-9012-4ac6-9b26-778deb508b43",
        "cursor": {
          "ref": "0bff0585-ffc6-40b7-bfbb-ff76a14fe01b",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "62302d21-2570-48ab-8b9c-16b1073f37dc"
        },
        "item": {
          "id": "23a611d7-9012-4ac6-9b26-778deb508b43",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "ead7cd22-b4b1-4769-bf83-54af036dfe4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5267b3b-df21-4c30-9d03-0c5b78f59995",
        "cursor": {
          "ref": "bd7d8da3-e892-4000-914e-320a86b1c860",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "0972a381-cd66-4c05-acc5-71729c211b7b"
        },
        "item": {
          "id": "a5267b3b-df21-4c30-9d03-0c5b78f59995",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "286a2ec8-0866-4fd9-9cdd-8f21e15c7370",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1f471e4-d6a5-4cd9-bca0-d71291b3b71f",
        "cursor": {
          "ref": "65d62185-deac-4a86-859f-929e74cd37a2",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "26d44a68-0d59-4a51-bd11-118ea3443266"
        },
        "item": {
          "id": "b1f471e4-d6a5-4cd9-bca0-d71291b3b71f",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3b035178-5224-4e77-8f2a-060edd576fe1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cd59a39-777b-40a9-9d28-6e2a412f7aa4",
        "cursor": {
          "ref": "dda438af-53cb-4f95-8fd1-99c470444e54",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "7d2ac976-febc-4b6e-9846-c640b546a504"
        },
        "item": {
          "id": "4cd59a39-777b-40a9-9d28-6e2a412f7aa4",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e4445286-9964-449b-acb5-ae888b7ff4c1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70b5cb00-c941-4668-b68d-bb901f032a25",
        "cursor": {
          "ref": "8e78faa6-1f67-4a33-816f-8ca43ef24d00",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e9cb6d4a-725c-4be1-9572-09f3a58c94cb"
        },
        "item": {
          "id": "70b5cb00-c941-4668-b68d-bb901f032a25",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "8c4a5e99-e92c-4329-adb1-28e437b94054",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32c501a-491f-44ef-b5ee-03cb7a254b3e",
        "cursor": {
          "ref": "42187a3b-7adc-4ccc-96ee-753a5819f1d2",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "04bd5994-ee39-4aae-b358-a53dac48cdc5"
        },
        "item": {
          "id": "b32c501a-491f-44ef-b5ee-03cb7a254b3e",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "62915aef-5eb3-4c3d-ae1f-83721975b27b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ae1c1ee-a18d-4ac0-af0b-833679918163",
        "cursor": {
          "ref": "09f06ab1-09dc-4ddb-8a48-696b01fad840",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "257fcbb8-660d-48d5-9fba-4b6e58a40a23"
        },
        "item": {
          "id": "7ae1c1ee-a18d-4ac0-af0b-833679918163",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "f64ea8c0-5120-4509-a54f-462a2087fea2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3938788-21c8-4053-860c-d877f249f0d9",
        "cursor": {
          "ref": "98937087-c207-4409-b377-587113c9b63f",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "49ce8972-ea1b-419f-9f3d-9bacc11bfc8a"
        },
        "item": {
          "id": "f3938788-21c8-4053-860c-d877f249f0d9",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4922ad60-8203-4a55-9b58-1100a880eef8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "642d2e60-32f2-4b99-bc4b-64b39190094e",
        "cursor": {
          "ref": "5e8c4f25-6ab8-47f1-ba8a-6fb945413862",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "96179356-0290-4c24-b016-7b7d022aa406"
        },
        "item": {
          "id": "642d2e60-32f2-4b99-bc4b-64b39190094e",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "92d9d937-38dd-4c41-81da-e84ec8551587",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b9b32f7-469b-48ae-8e1b-97e57f3cf1c2",
        "cursor": {
          "ref": "70ad513c-e8dd-4d05-9f1b-1ee369875ccc",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "feae5d79-0f6a-4c3f-813b-6dfdeabb0aec"
        },
        "item": {
          "id": "5b9b32f7-469b-48ae-8e1b-97e57f3cf1c2",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "e6bc108a-d332-431f-aacc-bf3058ad0296",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19b61ad7-3b7b-4a5d-b68c-64193f1bd630",
        "cursor": {
          "ref": "7efc3be3-fec9-4443-b109-718d031efa04",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "04746933-aba3-4892-9e9d-8140888ad03f"
        },
        "item": {
          "id": "19b61ad7-3b7b-4a5d-b68c-64193f1bd630",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "04cadd0c-5f4e-4fa2-bbac-c420ece836d3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "067666e3-30e0-4c67-8b32-58ae8a17d261",
        "cursor": {
          "ref": "1902a011-427f-489f-a1ed-6683d23b984a",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "387ffe47-e619-4985-ab2b-9790225bd535"
        },
        "item": {
          "id": "067666e3-30e0-4c67-8b32-58ae8a17d261",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "5c85a6d6-6cf7-4558-a222-1736a2600b9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee9418c8-fcd2-4653-91c1-0d057f044199",
        "cursor": {
          "ref": "7cb89208-1e28-4a33-a387-e6e3a4bdabdd",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "8742d3fb-836f-4511-aa74-2fe2abe1a757"
        },
        "item": {
          "id": "ee9418c8-fcd2-4653-91c1-0d057f044199",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "e0e215e4-6ed9-41ac-a302-17f278028cd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7aa0115-5988-43fb-945c-885ba9855739",
        "cursor": {
          "ref": "301e1413-73af-41ef-b2a5-c597bb061555",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "a0fe6826-7e2c-4171-864f-14f32931ebf3"
        },
        "item": {
          "id": "b7aa0115-5988-43fb-945c-885ba9855739",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a36ca9f6-9137-4327-895a-c92e50983384",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f06e92c1-c692-4976-bc88-af91c6a7a91b",
        "cursor": {
          "ref": "8dc29674-075e-4e24-aec1-32649a4bb243",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "c0cb1aa7-15ee-4a97-abd9-7a5c7fdd560e"
        },
        "item": {
          "id": "f06e92c1-c692-4976-bc88-af91c6a7a91b",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "948e73d0-81e7-422d-9e75-6cb5526a5a75",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "356d3bad-fd05-4545-b038-4c06c25c1b9a",
        "cursor": {
          "ref": "aec66520-e649-4d84-af9d-8161484ae493",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "985eb17b-0744-4971-8120-e903987bdab9"
        },
        "item": {
          "id": "356d3bad-fd05-4545-b038-4c06c25c1b9a",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "baca9b98-9141-45f5-95de-3e850063f711",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8f0eecf-7c37-4354-870e-1bc1ad5120bb",
        "cursor": {
          "ref": "6ca2b3f2-b1c2-402a-b98c-80fe47c634ed",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "6a246563-a2a0-463a-83fe-1df350b83270"
        },
        "item": {
          "id": "a8f0eecf-7c37-4354-870e-1bc1ad5120bb",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "f923bc7e-4f5b-4bf3-a375-9147bfdee3f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cd8c8d4-d0dc-4af6-9a42-ef0f109d239b",
        "cursor": {
          "ref": "f11d2ccd-1f59-48cd-bcc7-f216231edba0",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "2968aad7-4637-46e4-bae9-53dc40687fae"
        },
        "item": {
          "id": "8cd8c8d4-d0dc-4af6-9a42-ef0f109d239b",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "b63ad5c0-47d5-4267-b3e6-9b968f183d0a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bded4a85-5705-46ee-ad37-51ef5306e891",
        "cursor": {
          "ref": "906da1e8-b6d9-4cfe-beb5-559f6279d06e",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "040d8e6c-815f-4a20-a2a6-f7425aa4cbea"
        },
        "item": {
          "id": "bded4a85-5705-46ee-ad37-51ef5306e891",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "2fbeea94-70be-4044-9aa1-7a2b4f9dc2d6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57be8b5b-70b6-4635-859d-5de08765b95e",
        "cursor": {
          "ref": "57ab14fe-88da-4e74-86d2-fdf85a9a3a11",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "fbf169f9-d7cc-428f-b92b-2e6893498fcf"
        },
        "item": {
          "id": "57be8b5b-70b6-4635-859d-5de08765b95e",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "f517c771-7314-4544-bc0e-3cd56c4be39b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "209bd59e-5a99-4bba-8ec7-417d5f3717ee",
        "cursor": {
          "ref": "2b9d3a47-731c-4563-974f-c158daf011df",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "8ca3cd14-725a-439f-a5ae-067eae8f8de0"
        },
        "item": {
          "id": "209bd59e-5a99-4bba-8ec7-417d5f3717ee",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "6271d0ee-0506-4c2b-8970-2ba178c3068f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f4240cee-69e6-417f-b93a-f69ec172d100",
        "cursor": {
          "ref": "95fc790b-b4f6-42e0-9d39-a0a51a099d09",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "6810df26-c916-4cf6-ac57-3d8647a3d11e"
        },
        "item": {
          "id": "f4240cee-69e6-417f-b93a-f69ec172d100",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "54174446-e0e6-4fb8-a6f1-4ea36f6067ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b62b7e9-6b61-4b3f-8852-4c0c6ca2c90d",
        "cursor": {
          "ref": "f5cdb6aa-76cb-4cce-8e43-8ebc43d9387e",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "c626f13f-76e2-468f-9e03-ad6062dea5f5"
        },
        "item": {
          "id": "8b62b7e9-6b61-4b3f-8852-4c0c6ca2c90d",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "9fa9a55f-f340-4717-9834-326a42d391dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68da6688-a5a2-4023-8e41-875ab4b09618",
        "cursor": {
          "ref": "3e02c57a-34ee-424d-9cbd-7e9f92b71535",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "28b4ef6b-4a41-4e5d-9032-bfdb3d85e249"
        },
        "item": {
          "id": "68da6688-a5a2-4023-8e41-875ab4b09618",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "3934fdd0-345c-4e31-b359-3822936edd25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "354702da-6e69-420c-a81a-96dedfb3ec2d",
        "cursor": {
          "ref": "a92334e0-3ce4-4097-a9e4-f4d6798566be",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "99125a5c-18cb-479c-af2e-5c2d7907c985"
        },
        "item": {
          "id": "354702da-6e69-420c-a81a-96dedfb3ec2d",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "c65c016d-7b8f-4e70-af4d-b02498fd9476",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 151
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2d0bcfdc-aac1-440a-bdbb-c2228fe38065",
        "cursor": {
          "ref": "e9772a49-93a7-43c2-b9a3-b23aff869a7f",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "2b0c574c-a901-4d90-9334-efd13370a0f8"
        },
        "item": {
          "id": "2d0bcfdc-aac1-440a-bdbb-c2228fe38065",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "b71cb305-1089-4e21-8825-3f46818f9a8d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "70030d27-cd8b-480d-9f1e-6bf177856020",
        "cursor": {
          "ref": "b10c385d-fd73-4472-9afb-3df8d541b075",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "d466de09-afdd-4915-a4d2-6296f3c1f0e9"
        },
        "item": {
          "id": "70030d27-cd8b-480d-9f1e-6bf177856020",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "9c0ff532-3399-45ec-9d1b-6b4d9a297dc3",
          "status": "OK",
          "code": 200,
          "responseTime": 65,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1d644b-c755-40c8-afa2-a2b00f22f672",
        "cursor": {
          "ref": "3963a84d-64d4-425b-8428-77a213d75b11",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "df4ed18c-6882-46f9-a59b-d9c71a1729fd"
        },
        "item": {
          "id": "4b1d644b-c755-40c8-afa2-a2b00f22f672",
          "name": "credentials_verify"
        },
        "response": {
          "id": "391b1ef0-cce0-4e52-b0a5-c90216ad5e50",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae6b0aa7-9e59-4e57-bf97-31301836ff3a",
        "cursor": {
          "ref": "a54efd46-dc1d-4c4e-9371-93fa7cbc27c3",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a82b3ec3-c300-4359-a506-e4ae27bcefc9"
        },
        "item": {
          "id": "ae6b0aa7-9e59-4e57-bf97-31301836ff3a",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "cecf073e-7926-4601-9155-a00c2727944b",
          "status": "OK",
          "code": 200,
          "responseTime": 80,
          "responseSize": 37
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdb93d8-d1e4-4a68-96ab-83653696b4b4",
        "cursor": {
          "ref": "92bd8d06-bdbd-4bc4-af34-45d5874a9f7d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d8c803b3-021e-4eef-a5ab-33b06967f045"
        },
        "item": {
          "id": "efdb93d8-d1e4-4a68-96ab-83653696b4b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3582137b-a461-4675-8d64-2c328db711bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efdb93d8-d1e4-4a68-96ab-83653696b4b4",
        "cursor": {
          "ref": "92bd8d06-bdbd-4bc4-af34-45d5874a9f7d",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "d8c803b3-021e-4eef-a5ab-33b06967f045"
        },
        "item": {
          "id": "efdb93d8-d1e4-4a68-96ab-83653696b4b4",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "3582137b-a461-4675-8d64-2c328db711bb",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "62ae16ad-5c52-4b86-8cc8-1c776c1024f1",
        "cursor": {
          "ref": "a3b86568-1da8-4610-96c4-b0fdb1ef9a59",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "0ee61d31-73fc-4bfc-be91-cf9126b7367e"
        },
        "item": {
          "id": "62ae16ad-5c52-4b86-8cc8-1c776c1024f1",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "eaae8d81-483c-43ea-9ecd-d9a4e0e33674",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 63,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48fac402-e1de-48ae-87e5-358bf3402ece",
        "cursor": {
          "ref": "96ad56d2-1281-4c66-ab21-79e1ec393454",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "5ceaab4a-31fb-4c21-8acd-65edaceabf9f"
        },
        "item": {
          "id": "48fac402-e1de-48ae-87e5-358bf3402ece",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "92e18532-2192-4cbd-a07a-e8b40b323525",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 64,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}