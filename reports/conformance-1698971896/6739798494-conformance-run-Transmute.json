{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "32d2b612-b38c-4d8f-9d06-0a190aff7236",
        "name": "Clear Cache",
        "item": [
          {
            "id": "3caf4f85-09eb-4b34-9c9b-0a6a2a22656a",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f55f611c-556e-4d59-8ca3-43e00feb17fd",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "494f2c42-0b60-477d-b177-a5ac48111fe4"
                }
              }
            ]
          },
          {
            "id": "95be0528-c249-493d-b749-54bfb94ff3fa",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c5d65eaa-f90e-4c17-9eed-710cdd091d4a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "1f8fe46c-3786-474c-8c3a-71474d5457bb"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "2597ae20-fd28-47bf-8b17-44ca2805f461",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "9a30b842-28a0-4da3-8497-429ba3fb686f",
            "name": "Positive Testing",
            "item": [
              {
                "id": "94857c22-569d-44af-a47a-67c4d8818218",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "f98aa4a6-b955-4139-b896-b857f66bdacc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "83972aaa-a42d-407f-ab62-352094703c14"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ce270d96-3b5c-49c2-b7da-0b82033dc135",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "559cef43-8a72-43ed-9035-f3d2034e5164"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "66b89595-02d8-43e0-b104-13b4d131dbbc",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "cd89652f-27f1-4a1e-be5d-1ed748e91c02"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "60f76671-8b80-4691-b1d8-33b2cf82056a",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c54e9ec7-a8b8-4bb5-98b7-77f07394e692"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "98f12c20-c071-4095-821e-e44d721e035f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cd5ba1f6-812d-4784-996f-81c5e6218ce2"
            }
          }
        ]
      },
      {
        "id": "1699c2f1-802f-45e9-9605-4923ec9862ba",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "b6998253-7571-4d26-bbd4-edd62b3ccca1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "938fed3b-b78f-43ab-8794-c6627d25abb9",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "f2e25c8c-9e60-4213-adba-40c7319e2dd3",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1646eb10-f274-4997-a0c1-14d0c75220b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "bed3ae7e-e80a-48ab-a274-9d8c57ebeb51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48b688d0-eba8-4511-a328-482f76d13ccf",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25af9aba-ee86-4d9a-bb91-0e8c29ea762f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "01aa7245-d40a-4369-b06d-26df217b8b0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db01c4bb-7908-4b24-ac99-f69fcaddbdcd",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e067b7c0-584b-459e-8a91-9606c9dcd8a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f9c9a7e9-a82b-481d-b3eb-9465e22d6f43"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "9fcf062a-1c00-476f-834d-d8abf79e1d6c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "68f5fdb1-5f34-496e-94c6-d418e8f4859b",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "db596e58-a67f-4ccd-8f5e-6eccdcd0fa83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4d4a5fbe-818c-4e3b-aca8-ff47905c2fc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de13da69-70b6-47d8-8769-445e04025703",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5c6d554-b01e-4d2a-9b70-617d56e38a7f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "91f9e0e6-58e0-469f-ae07-950e4dc094f2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "bdc47035-cabd-4306-b36e-14169bcb9ed7",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "22fb294c-eb14-4a76-95e3-09203a72c3b4",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "de9bf363-60cc-4cdf-bd79-138e85a8a8ab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "89632cce-df37-4310-8830-3730f1b66637",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "954948be-e0e5-42a2-b641-08245891cf1d"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fe9ad0bf-e279-40c4-86da-75f9d4d1ec2d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "037a220c-3f68-40de-ad59-7e46dc3c9f63"
            }
          }
        ]
      },
      {
        "id": "01a7755b-e849-4996-a5a4-4a89f597a985",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "6e40dbc3-6f22-45c1-8c62-1e432c1ca342",
            "name": "Negative Testing",
            "item": [
              {
                "id": "df4bd740-f88f-4b33-b43e-1158a4290bf9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "0f289b19-2d1b-4f8e-bee4-1ce2af51da74",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a95b2bad-0f47-485b-8556-77843ec5c8d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1defcfef-84a2-402e-88a9-d3af7d97bcb1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "194ce207-a72e-419d-8f4c-6079674ea5d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "fb5374a7-05ad-443e-9029-a93c967b5157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6401e0c2-f7ea-4959-93a2-9c451a0ea60c",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d46588e4-ac83-4aea-b3ba-fc42943e5ed4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "83901c7a-0df8-454f-95f9-9daac217949b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d370cf3c-15e5-49c6-888c-4711e334c794",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5fbe9444-a07f-4b3c-a334-ab6f5d2d20ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ce753c2e-adac-4eab-9bde-61194fe6461d",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1019ca8b-ea1d-44df-b165-c3a2d9092cfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2030ca51-ce81-4fbe-a15e-057e18dc920e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95e85f43-70ae-4038-b904-59d628d881e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8c8e1eb5-6cd2-4785-b8ff-0dd2dd89bae9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca412d05-e775-4967-b046-1cfc06e6463f",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "866a195a-74a5-49f6-853b-60f5992c3262",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67951707-fd5e-44ae-a1eb-7775e6705663"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60fa6df7-e8d4-43f9-864c-37adfe66b250",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3c12d107-bb69-41bf-be08-b79b8927d5c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8f804b4-8747-4757-960c-2d8b91c75274",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bbc2572-bb6f-495d-8b52-8a161804b1fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db1cf22c-5c9d-49fa-936b-0f3314050612"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad72483a-2357-4151-b8ac-776d70559a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "23be500d-fe29-4241-a358-c4abffbef2d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b4e4475-8eef-4fed-b1cd-cae3b194eb3b",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c87a719-2bea-45b9-b635-53c2515a5d37",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "328c10f6-7c23-4712-82da-83741f04df20"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c98c043-e5f5-4022-a8a6-9cc29f3b83f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9946dc56-4664-4a5d-87b5-a6120813363a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7751a06-adbf-4633-88a9-080637a1f98e",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87e588b1-588b-49a8-8d78-4c2ffa37278f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c63a0d1-c205-41e3-ab3b-5934dc14b7ac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "147ab93b-a82d-4a48-9bc8-6becaa19dff9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "8b7d198b-8fa6-4e9c-b50c-1ae152f5b1ed"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2bb51e6-6409-4205-a841-95501ee25a4c",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04996bb2-66d5-414a-b23a-450f0697cdfb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81bdd87e-fa56-4b89-ac81-ff999cefc789"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fba331a4-acdf-4372-8c2c-e39dd84f5762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1fa59eb6-4b69-49e3-9911-c4229682c540"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d97ed834-b264-44de-b3f2-0197db24be5a",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2c2e77e-bd70-4b8b-86a4-1cf060262694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1772c94-8e50-4117-ab16-3870b1785358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "326e0007-f2d4-44e1-89b5-058162f8503f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "988c4be8-bd74-4230-bf84-d400e28b9f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc9ce514-6405-4741-854d-4508fe891e2d",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8ddb016f-b9d7-4ba4-813f-9946b92dcce9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6f009d79-d31b-4347-93b8-7df728549952"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1855c8e-3436-464b-ad35-4efbd1aa9924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e5387b54-21fd-4ed0-94f2-43ecbdbaffc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8a2c1de-c0a0-4237-9c9e-a7a3a475e9ed",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1f65ce4-20b6-410d-ab94-175bba427bfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66c68224-4e9f-4b27-b4f2-f4ebdd9a6c92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeff268a-df12-48e5-923a-ce5f42bc3f3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6c1137de-1f0b-4998-859b-5480dacd092e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1fdcfe2-aea0-4625-802a-9ceb8d584a32",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "142bcd33-a063-49e2-8d93-83a599804d54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac76110e-f36a-415e-a579-42e25ba3c029"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a83b66b-1dd2-4f60-8d95-f76ba081e4b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "cceb8645-a298-425e-acfe-0b419a61e2dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a99c4339-be82-462a-8157-6a8d9854e9b6",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12cf5ec8-7f3a-43f4-93d7-31170862a9b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdcc7417-50a6-4e73-a5db-09bbdfa29454"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b8f91869-008d-46f2-8782-4cb779a095e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4e2227ca-70b4-4c9a-a5fc-06deda022b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "489cf7ac-5961-4106-bd2f-cc687813ffc2",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "25920aec-2541-49cc-9278-4425994962da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a0284f99-debc-4703-b6b1-984638bf2f06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f17c079d-0f40-4caf-82bd-817636b86de9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91f8715e-e46c-418a-bb33-9dc4f493c054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52efcaa4-6f61-4ef3-a401-ac5e3961618c",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aaf2e78-f8f6-46bb-a8df-991781543c42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f2cca8a-29a7-4646-b050-addc99b092a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abe4347e-157c-4214-8179-fe142bc32279",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1da633c0-ca79-4a39-824c-3450655bbf1b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e240fea1-b102-4ba6-824f-0b33f4e7e18a",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1d3d2b3d-0bd9-42c9-bd6d-388c14429b41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "35f15cfa-9430-47df-8793-d84fc322b60e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5af14e56-ae63-4c54-b843-745c689bbdfd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b13ccb8c-9b74-4e84-9cc7-77ed4835e534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4a3609c-2dd8-4f73-a375-167e981e9f07",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2c17eec-dc00-4c66-906c-bc92bb6d4c3b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5444badc-66dc-489e-bdd1-368221bdfa71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "affd2826-792e-4b8f-a51d-f960af533790",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4f06f26c-c351-4334-963f-39681bac84d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60d0a165-66fd-476f-b570-1b402ee6b897",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2191fdb-e262-45b7-b0a1-ca18dbef9c82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "39cd3a3f-23e3-427c-8c87-6a9ef36f582e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d4585e1-6f40-4218-8052-cf81ddc51bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "86229bcb-fa33-4dcd-b9d0-f878f5769e66"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfbab4c0-0ae2-4789-af4b-a5805b7d6f7c",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d60c1e9-1705-4450-aabe-9feef890a332",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fdf597ae-bca8-424c-83ba-9e54670cdc12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d75d62c-bd5a-4626-993e-3b7cc4716958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e68eaea3-97ec-42a6-985c-7bbaa9e9a558"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7a4e0db-c3f3-45fd-8156-e23f4898bde3",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "99597c8b-6920-4ee9-aee9-68c35d4b5f6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "891bded8-ca95-462a-8196-68ee009185a9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "15227032-2057-44d9-82a9-b1d3a36028a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "41dbbc80-53ae-4a00-98ea-b043d2c52b26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca9c8235-77a2-48d1-94b6-1904df0a3dba",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "402bab78-ca06-4700-b802-f315d09eeece",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a615afb5-6ca3-4e94-ac3f-c53133ecd92b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5cda109-f224-4597-aee3-a3340d02e0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb7aab61-bbf5-4da8-b2e8-947c458b84f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8943d893-0747-4c10-8707-1fc2cbce8f31",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1037fb0-fed0-4076-8f38-3c665b29378a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63f29977-05c2-497c-8e8f-496990af4d4a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3aaf0aa-8f72-4f1a-81d5-3d1f66d11d15",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "584bd2d2-7dfa-4c09-9c78-399a7577c04f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40eda30e-532d-4050-b675-1a94b703e941",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69a35657-049f-4f29-afec-6ad0d610de62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a2db73c3-0201-476d-ad1a-1f308f33050d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43836256-94eb-4b2f-ad70-f6c75f81e268",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "27a51246-d0d5-4ffa-8988-d24cbf9abd8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a84efccf-5b3c-474c-8762-e9b8e572d321",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "14dc256a-a6ba-4d6c-b429-b8ec395a538b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d29c3f36-50e2-4914-89b1-c24e977a308d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "60d69626-dceb-4367-a7b5-a656487590fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "01f04809-f2ab-47a2-a506-636ee7a951f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d19bc32-f969-4afb-9da3-e15fb5e7205c",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "697703ba-aa01-4599-8a7b-f613da7fe2d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce01d1c3-a77a-495d-b339-baed25c05439"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "505dfbff-5204-4977-9c49-8cf47d597f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bbc4bf0e-1ac7-47f2-a80f-63298cd3d8bb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "648b4caa-083a-4f33-9010-8d6c953fc3b7",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11f08d0f-a1dd-4e1b-80d5-834b6d907a46",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3e7011ac-36c3-4f3c-9c6f-49764b89e0be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36269845-0f73-42d7-aca2-32c824a0447d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab5c1ebe-4d77-4bcb-9fdd-7136486013e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be4626d2-b465-4de2-a972-4568815ed293",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca5f651-d8c5-4d44-a418-a08c1511bccb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "326d27d9-df26-4189-9280-541e66a75a4c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bdf8994f-ec35-4f9f-8bf2-88f47aeaf6fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "7c68ad0b-aaf6-4e62-9e29-46c63e7d4de5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "775fdf6d-0de7-4f58-b1ee-b6091f4fc36e",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2dd48561-83cd-4cec-b9d1-8d68d8b0e0a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "adec5236-f531-4d7e-af34-266530326d30"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21ac143b-ca50-4633-86bb-375020204303",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "89eef490-1293-497c-9a96-300ddf75ee75"
                        }
                      }
                    ]
                  },
                  {
                    "id": "283016d1-1edf-467a-88d4-80920edeed04",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f323d9e-7983-45f4-a8f0-3f0a5eaf613f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2d9cc544-39a0-4610-a4f1-7ad0715dbdf1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e016037b-ee5d-4cd2-9db1-0e44a5153fbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a663aa2-2b68-4e2d-8962-e4ed8fb1f656"
                        }
                      }
                    ]
                  },
                  {
                    "id": "452d7308-9fe7-41a9-adfe-ca1dc5a6973a",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87122401-299d-4181-bf8c-4a3da98dfe70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afac218f-bd17-4ad0-91c7-9e546b8adfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a0e4fe4-47b5-4a4e-ae5b-f334e4fb659f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "037c1739-f161-4def-822e-c7ca57e8306c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20b09ec3-dcb7-4877-92ba-f0f558123318",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fb4033c-8c06-4a56-8433-4f1fe1e755a6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aa1d2cfc-c9aa-4940-9706-559783b02b73"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6c85d6-efe7-48b2-9545-6dc170a4fc67",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "2421996e-cf79-47fa-b7a3-e7564bc154df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ae5855-e686-4455-b922-d175c9776143",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e43c590-b653-47c5-a1b9-a4b5e63c4821",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5fb90922-77d2-427d-91ff-6acb67f17003"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e8ef509f-bf04-40d6-8662-60391aad98b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "56f4a42f-fb5d-4756-a9a6-89004993806b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "888e1a78-f72a-4a15-9985-a22d8a3af32c",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcea97c6-b80b-46b4-8585-a12ec0783bee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a89466a-4c05-4312-8ad2-df8459dd12f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "04d6194b-8898-4fae-8956-0ca68de3e5a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c641031e-8179-4bd7-b151-e4d508d12e91"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a54caee-78f5-4051-a46c-93ac20faa23c",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6f8d7fe-f3ab-4d90-9ffd-27f57497dcc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "05a6036c-66d0-4558-b624-73056a7a8b51"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e991ec-a554-4fcd-8e96-34b51a93af8d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "b565f810-d3ae-487d-8bfa-27b72e51378e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63bf202-b0fd-4f5c-a20f-4d3978ad4c16",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8884a5b6-c3a5-4ff7-87f7-f1b39434d525",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6619528-8dfb-4d01-9d6a-7963f0432a58"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc1f4ae4-00ca-4ce6-bc21-7714dad7a341",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "919f72b0-ebcf-42f6-95d0-b7bc808820c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b825fc17-9f7d-4b93-9328-7fe6fedbbe0c",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cdb84101-6cd7-4a9c-b385-b8b70e3b0084",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "fe6a1f83-4190-4c7c-9223-d8a4849d1884"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2b3bb06-5c0d-42e6-a360-af3516c9fab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "de5ba6ac-4a77-4ca2-9be9-bdfe081dbf48"
                        }
                      }
                    ]
                  },
                  {
                    "id": "275dc00e-375d-47b6-9754-9dcbeac3f85a",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e455443a-44dc-4002-8075-15be3735f013",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c515b34d-12c6-4571-a3eb-8d45ec2d03a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff138a50-2cd4-4dd5-bae9-a08dd69823f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "86b77dfb-1657-44b5-b0e3-94025e7644e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d675bcf8-1305-4fd7-8c0d-1200acf134aa",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed3b21b5-b682-40ae-9e4e-133a106f5565",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42da8a1d-2d44-4955-be34-349bf04f7a62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f803a335-68d0-4d98-8722-b02c9dd342e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0b82aec8-9594-4ddc-92cd-142dbbf81cae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd2b9b36-c00e-4da1-984c-78936de18818",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c521215d-89d0-472f-b3cd-ca91b44c8423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad0c921e-1772-4fc7-b652-4a0caafc26f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4b6c85-2aee-4f69-9a65-e5f44ee31fa0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "43c38279-ac23-4469-a435-e47eb378f57e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "80568dd4-e460-43b9-ab75-651c50e10a90",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a8ee986-fa7f-4efa-9922-b412303ad1c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07e4d3ee-a644-48d0-883d-528c54579b7b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af5a785f-5c01-48aa-b7be-d854556c3d69",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2ba45f6-5cc5-45f6-ab2b-848132266350"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46e594a9-bfe1-4601-8a0d-79a9ba5ee65e",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b47b32eb-ac8e-44db-97f0-27d9cce46e8c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fe987275-3e6d-440a-841c-7fdf4fa75100"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8f5864b3-ccd9-4ac2-9d43-32bd17db4de4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "90fd3560-9765-4acb-9394-159035453bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa7bf0d6-10e2-4210-9d2f-95abba8c47fa",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5e5eebc-c354-4122-927e-3a64881d9ecf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25e26039-6eee-4a98-8cc5-abcefdee0c1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e574b331-93ac-4cae-a900-dda15f66d997",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "e4f0f2ff-7396-40b7-ab70-11e6d91ed478"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a3db952-a2b1-48bc-99a2-86322c5ead21",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28b18b6-2c68-4dd9-bc3e-f4934d25d54e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d8ac00b-d6b9-4ff0-b110-7d738726b937"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ced42ad5-0409-4d27-82c7-8ed79082344b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "a23ef6a0-b832-421b-888f-fed1ee8838af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b32da228-f795-468c-85e1-896596a2a20c",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26fe05f7-9674-4cc3-a5f3-5042ef3a6c70",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b20616e6-6110-4555-ab85-f7eacfcd2e3f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad0b7345-b9a4-4d30-aa14-f7655fec3483",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "ab12a72f-d50a-4ce6-ab7b-451c031fc398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad82673d-fc2c-43be-8e30-494480d925a2",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8499aa49-413e-4298-bfb9-328efdaf681f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15cd6b0b-bebe-482e-9c3a-0b6f706f31d5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9802e48-475a-4482-980e-d9b21fb7da3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2c6fedd-4bb0-4ba5-8156-1124d8b0774e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed16c48-fc83-4b59-a9c4-3a919ffeed5a",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ac769ba-b45b-41f1-a26f-6aeea58ac272",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "15da3271-45de-4b2e-9122-6feed441b31f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df349315-8639-4329-890c-1c079fdfe117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "da0f6310-19d2-4761-9946-65706ebc4242"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ad697731-134b-49e9-8687-6d3b389b766f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f51b40e9-eec2-4e3f-abaf-1a628e0209ad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b778fe77-288e-4b0b-8c88-dae692ea8b8c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5c7b584-3c9a-41dd-ac73-528fbe58cddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "5602f537-1344-48f7-9b3c-3a7f63d1b21c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46bdb252-f053-4cda-a842-e3b4bd9204e6",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a50e7ebe-beee-4d87-bbb1-626e1a84b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf32e9d6-39b2-47e5-b5e5-f1fec1e415a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b15d7d31-1542-4411-be77-da3359e2dd18",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "20d4bb18-109e-443c-91aa-20fdd1c3698e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fd94148-da66-45fc-a5f8-b75fbdbcc3f7",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eba697ba-ddcd-4139-b6c3-df239c095538",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "80bd56dc-90d7-4979-a2aa-cdca12870d43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "980bb4fe-c9b9-496a-9ea5-e33169264f03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "3f46ebbd-e55f-4fef-bc0c-9fc9802c9d1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaf872ac-181e-4c29-b92c-0a52d8e5b10b",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1c26c71-094e-4d3b-b71b-772634244627",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "25814d2d-4059-4739-ab53-2ee911583bb3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c68354a4-c0b5-4059-aec7-186d62ed836f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "66679e2b-39a2-41c5-ae43-e543d1494714"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e5eb4e6-0629-4e78-94ff-2a5844bd9e19",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c44540d-d90a-43d9-abe4-d64d645e62f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c90f4b91-dbfe-43ca-8ff9-e45811b4f70a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "afc465dd-3b30-4e31-ae6b-f2e760987f25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "eb508096-bc43-4c03-8097-d5ee4148304d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3719915-b1bf-4e21-b5bf-21da1161fea3",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71ea6c62-c31d-4179-9c03-b024ae6f7936",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "34043b15-0140-487c-8c51-dcd8daec5a34"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c2dc528d-c5c8-4764-a5ac-0db60214b141",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cecb0354-966e-4145-a93d-98bc2de7a35b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c1030-be92-45de-a4ed-779aaf5c9423",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c47d181e-d0c3-4ecd-a444-48e5617c4bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1d7f9cad-fdcc-4131-9b4d-b16f4a5eb435"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ac09f60-2999-492d-be4a-995471a7696e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "395d8968-298d-4967-97cc-989f5ccb6323"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d7e216-f043-4031-b0a7-c20bf0f07267",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11507544-4cec-42d7-88ee-e4536a67f83f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d7a9409-a28c-42d7-ad9a-3ce7e55e5156"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17981a4a-a1ab-4e57-b174-aa2f7d0688bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "37920244-1ac7-4a94-9559-f22ea2b39028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2be34455-7672-4a9b-8048-f169c1c132eb",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b80c713a-0219-4f5a-9667-93e2738d7f48",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad77b5c1-f640-4b28-9059-6b8dd300c3da"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7277011d-351d-497b-9682-de80e27e3027",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ce94558f-d0ca-4a25-9e0b-b308c2f33413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93a903fc-23af-4a00-915b-b845e391204c",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f4328b8-035e-4590-b639-9cc1394d6189",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4e03a961-c695-4cca-a434-4ada47bd9415"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6d41c42-b492-4e65-a7d0-9ecfc64c356c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "326e5b1d-f97d-47cb-9029-6aa685e36be0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dde5c4cc-ecd2-4218-b9c2-9a4f19334ce6",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8cad3111-f3e7-45df-8176-270401dc1863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c8c48e6-802c-4216-8f25-d70f11cd276e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1047238c-4d1f-48c1-b66e-7daad3bffefa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "acb69a1e-1f6f-4f6b-96a3-4aa7f266e76c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b0a846c-0d6c-4ed8-9075-fc6cab6d9899",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "56d1b7e9-917a-4e2f-843e-131ec1a61475",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "95b79c05-d385-4d03-af16-7b76167a2990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f621f3b7-44ca-48be-aaf0-208904c38acc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6587150e-5983-4edd-abf6-470560a52676"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb323bc2-3d86-471b-8a39-77dc1cc9c8eb",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89c67664-b5eb-477c-b09d-bb4a7a885cd3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9b30e6f9-dc9e-43de-a410-103efcc4e7b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c3b732d-9836-4fbe-bf54-99d5338be3d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "258e1cbb-c002-4022-bd0c-8a7ca3ce9adc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7908c0-8b36-40f7-9d62-671721d9cd15",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1eb232f6-9618-4c40-9ce5-5fa761afa470",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e29c423-ae36-4738-8851-ab1a401705f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6d32f07c-a420-4f5a-bae5-d4d1db00f1d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "ac378485-b019-4c4e-a3f5-dceaad5263b1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "659a1d81-f52e-4764-b243-cc46e6357dbe",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b79d324-b153-4752-896c-203cfe698377",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "59cd48f4-10aa-405f-8528-0569e3799aa6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "16b232c1-8337-4beb-8208-c76fcd1bfb32",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "44d5bb54-653f-4df4-9e9b-a7183862ce5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df364d3d-9287-4d43-8675-eac9509e5835",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bcc669f-4e62-4004-87b5-2c8ac3fa3c13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c8ca7297-416c-4eb0-8957-978f58e280f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7dc4ea0-0532-482b-bf01-4a3bb2c53ae2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "f7a9e039-9659-438f-9c0a-39e7c8db58ae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a263fb1c-3391-4a3a-9ff9-f22aa0054839",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dd00876b-2474-48a2-978c-9704f70d6823",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7f0206f9-a7d3-44a4-848f-19bfc9cd9877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa6d0b22-3544-418b-8760-b5e9bc36eebf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "fe29b1a8-1afd-4212-91da-39525acd7325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6b8a007-6ab3-4440-b95f-2b822b0fbac9",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e6d0529-41b5-4303-a41f-68b4ea48102b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "183fcd52-6e49-424a-a18f-f4fcb508ed62"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84be3c10-598e-4a99-8009-cb0bbd90f7b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "25f17449-5dc7-4f7e-ac04-e31e021ed621"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bf44552-c0dd-41be-b248-86f73e872897",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a23cc544-97fd-4cdf-a040-b009d81c6aeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "57e66d85-7958-421b-809a-6b8556cf0c5f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9507574d-a977-4a00-9fde-986bfca41d10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "ff97fd33-89e2-4fd1-9e3d-4c3ad756f3c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f3cc329-f4a0-4c8d-a5a0-9f80ab451215",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93847507-a453-4780-b16e-9c7f529c08ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "81d98e47-48df-44af-adcb-50bc1c5e9641"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e92b5d5-d1c1-4304-9d86-dc1a96c3d2f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "00202c44-4b16-4c4a-8232-407e5f00b4ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "24728314-f8f2-47f5-86b3-dac45a38f455",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b89598d-aee6-4643-bf87-ee4a9e0d7c7e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32ec4f30-98e4-477c-b995-d9c5404fd9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e17a3a0-19e8-49af-9b18-448739f36cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e7bc0e54-943f-4b88-9b64-27d4d83d9168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "976fe9c5-7ad0-4bf2-8b15-7dc1263f649e",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ace86aa-69da-4e3a-8874-f07f31d99bcc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "485d7a0d-40cb-433f-a9ee-8ab78349cfd4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b087f371-0166-4c6a-a01f-abfab351a2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "61b909c0-b14e-4919-b258-33cf004632d2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f95eb63f-91e0-4003-ad38-f5acb1a83ff8",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49d6beb5-61f1-4223-b684-e01bec17f705",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d505d2cc-661e-416b-a135-79661449a1ec"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fde30714-fc3c-4c87-b094-99dea31b7737",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "dfe44c18-52b7-40aa-ad15-c1bd0af24d51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04ba66db-c54a-490b-9a2d-7d64277297d6",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced333a4-b305-4f08-b7d0-68097ca06857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3338126-c3ee-4e00-bfbd-39f116bda808"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3de6020d-e831-4965-bb1c-4934ef90bcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "7d45c018-e8fc-4603-9dd3-eeaebcf6d60d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a13ed861-941d-40a3-b0d7-d29900b09ede",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ec8765d-f222-48e8-8887-5e5ddf298ad7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e10a5453-c519-43c0-80b2-eac6e14e3444"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "987ebc56-616c-4905-8968-60cf88b2957c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "02da883c-9ef5-4883-9374-aac2e572de3b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a773d3a-281f-4747-b474-fcbd8f8bdbc1",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2955385-f150-429d-af12-def6e8a633b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "823628b9-35d9-4ae2-ab5e-c1a20d319654"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c17565e4-109c-4d35-b555-230e86c83123",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d18cfb7f-7f4c-446c-ab95-095c9de9fc7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "761474f5-6045-4494-b4a3-f5e3e1f8586a",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69cacea1-3e2c-4920-ac20-f37fad7b6b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f591bd0-169c-4c39-81ad-1335679d5885"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e2a63b0-ec9f-4948-bdbe-ffc507b3c147",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e2a1e6ed-9816-4e5d-af04-5ee375f3241d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357e9b64-dca0-4477-ad65-b5d629c4701c",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e6e5dcb-222c-4f63-ad05-4681410e05c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "283fbdb0-7702-4bf5-8a4c-5c0ad98df67e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74df34a7-a22b-4947-8a9a-6a3677ed3fed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "5f4124a6-b291-426b-94f0-fee8c56459f0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fbe9914-06b2-4e38-8f72-10ebf1df2226",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "834ba9d0-73fb-4df8-8db6-0750adb1a791",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b61e11d8-3e9d-4b9f-8d12-a8ea9856b024"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0853bbf7-612f-43a1-97e3-3c914129ab4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "648e9d73-558a-4e57-b11f-a7bdce8bcfb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef3ea781-37dc-42ad-a606-03eb3eabcc77",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a4fd2a8-7c94-4bf4-840a-6720f7c014b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbe7c9e0-2393-4b9f-9ba3-a332d19d725a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfc9e906-7364-4764-925e-eedaee761ca7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "825905fd-d562-4ee2-a288-5afc0e5d9eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40b9b3ed-33ee-4d09-895c-5e2e6504bcba",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7650608c-ea21-4df7-9d95-88a55ceeff3d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a82b39c0-1d69-4601-88dd-edc64ba86193"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f21c65f-5378-43f0-861d-369aa9726472",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2e4b1af9-e10e-4665-a854-be4e247c82a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c5bcdcff-1f7c-4d65-883a-a31f2cee318b",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dd7fa78-8ccc-4e7b-ad98-db1e0c5cd121",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ea30af-535b-44e7-a6ce-bf9ea0a70510"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "90fdf752-0917-4958-b2ba-0c56559e0e16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "0a50c12e-c35d-4f04-b53c-b526e5adf9d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f6d959-651a-4d05-9aaa-cc69911eda36",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbe6757c-e8d9-4054-9c1f-24df0b8e39b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e9e6105-3432-48d8-9e02-b975372be9b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ea36e453-bb84-418d-83c9-fedf0a3ecc7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "2a9b0153-3bbc-4919-9155-46134ff5288f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "030d3018-37ae-46f1-a9db-2dd57dc04d20",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "474f2af3-d6f1-40b9-9c36-e44fdc2fe48f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6168fc6c-cb05-4505-bd80-6fbf3b05ddfe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ecaac1a6-ef88-43e5-824d-b44799dc979f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "9a4eb528-fec2-473c-b3bb-5db73cdb3b43"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c84cd8da-b43d-4aea-a17c-7e8943877d22",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40e7364b-18d8-4646-92c4-b7f252ae1ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b4304f7-d83f-4a5f-a57f-c25a359e3cbc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a83497ab-7dbe-4a2d-a77f-c6c59eca9056",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "964b48f5-d679-4d2c-9e70-06f055dca9ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "08f5d24b-fe17-42f1-8789-37d2c3a334e0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ece5d6a2-3f26-4716-a4af-805c6843f376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8170fb5f-cca3-4016-9cf7-290aac9a86a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de648818-3899-4781-bc50-9f980816edad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0942ea2f-b2c7-4fd4-bc13-880267907a2e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db81c2c-30cf-4116-9cdf-8975e2b181fb",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cea9ff1-3a7c-4112-bff8-3366d155a27a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6cc7c03-6025-408d-95d1-f8d53039a49c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be81a134-0592-4893-8e4c-daaa09777df5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "92714f7a-862a-49e0-8657-782142e3947e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87e923ce-71d2-40c3-9733-0fe83591dffb",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89f981c5-dc1e-4481-90af-b55153147cdc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa5d86d1-5b02-40c1-aeb1-37bd9cf4091f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bd55e0-b20c-45e5-ae3e-5e2aa27c6c60",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "61435158-2318-4f13-b217-073b5a146e4b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7319550-1528-404a-aae6-6616077d89d6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b0d78c0-9741-4967-9085-95963fd0a700",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb2aa8d-f199-4d56-9fb2-d8f7fc96b881"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe16d3df-0f7a-447a-832b-896fd9a40fb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7ee951e8-ca6b-4928-9635-909277675f8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10eaba50-81da-4256-b242-f98782037401",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a43d087b-9d83-4dbc-a5a8-a3f3a400ba78",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4284754e-fc59-411b-9f67-a4e104982032"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d90b144-4e73-42ae-9fbd-9679e7887cd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e9a1b17d-4fba-483d-81c0-81b5a5db1429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19633983-dc8f-4351-8d7d-1be60263c7a9",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f23b6567-fb03-44b0-9c4b-9c701000e751",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "281b6250-9955-4c1f-9485-b18506757d89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f44fbe07-79db-4f63-ad53-4f5820b4436a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "0676d7d7-294a-4fc1-b5f3-8738ce236eeb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "719d0087-1b32-40c4-a03d-f04a0a22a3d8",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e0e09aa-ce23-4248-94c5-46aa9bf91eec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5bc2fcc1-c658-482c-814e-37546e86c36e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bee403ea-ac3f-4932-b2e6-dee364bc1b77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a5a46ad-2697-40d4-830b-7245f4ada728"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c89da48-e04f-445a-ad57-1d2e35e6afaa",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6bd810c9-cde0-454a-8835-a147f3b1598c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "62f239ee-2cd6-47ff-ba09-11db04c3773e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75de0652-51b2-41d6-a1fa-c1783cb1df31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0cc1b366-28c2-4d81-9b05-90a466dafba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f35440a5-f730-470f-ae75-f454be5acea2",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4294a45-d811-48d7-a0e8-6488eac732c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9867d9f0-c2af-4421-8a67-0c2de1877358"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a53280d8-f57f-4159-9d11-91681cce1639",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "70dbe8d4-dd67-4a2e-866c-f5476796346c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "02149ea9-336e-4862-9bd9-929d0e0b0087",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ff69249-563d-4832-a0be-8851a2dbdfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2e0413f-00e3-41c6-9c03-5d72983731e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5cdfd36d-e174-4cfe-9719-b3d74977e3a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "f44b0b10-6685-4203-9d5a-86f65d5dfadd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c7488b5-8044-40fb-94f6-8da5672b2b0a",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced0f5f0-b775-445a-bd6f-b60d82b8cc72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f1feb8e7-e9ed-480c-9fbb-7bacb01c6d8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fb3bb34-36a3-4dfd-b6c4-b020455d5b99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "d53993ee-197b-4867-a4cf-1ae063cbb8e9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "c8cf7968-1bdf-4712-a157-042090defd16",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "37964f20-1921-42da-b35c-86ad056f5d2f",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c092e23-49e2-4616-8412-abc1ec7d5cf6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "017e7360-13ce-475c-92fc-fea9869a7754"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c374e71-9f0d-404e-ac91-5b7a367bac5f",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ecd6f7c3-08bf-4987-91df-b2aae66d7f0f"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6a090150-3f4a-4b22-8b6a-65358663db89",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0cacd3fa-2e88-4f21-a57f-7338ad946ff7"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "b42b84a4-7fbc-4f31-8730-f9d11d56e3a4",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "9a8ea911-0055-45ac-b6f6-66f898d61121"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8f7a7677-56c9-41cf-8c12-728c54737e9b",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b0c450d2-8c56-4876-863f-9ba0d293fbb9"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "cb4726fa-cf0f-4dbe-b28a-30426fec5b9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "866d302d-3fbc-4008-9b78-e218ab0c14e4"
                }
              }
            ]
          },
          {
            "id": "182ef1d3-7054-42d7-9e58-74bb82dfddc2",
            "name": "Positive Testing",
            "item": [
              {
                "id": "18f47321-2da9-425a-8644-3fa709c0e949",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "7e500f57-0018-4418-8f4d-61655050019d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f31e7570-759e-4bb8-b7ea-155d26ed0e74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "d2e21161-6df5-43d8-86be-b166483b140a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dc8f1e6-231b-42c5-9724-e651f07544e0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc06e776-4f5c-4033-be3e-cdd7828e5736"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d8dbb385-d03d-427a-a5c0-50ee41702ca0",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1219935e-76bf-4e87-b0f2-bca3a3ccda9d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "472dd09f-44d2-4ffe-8601-d2e70a6b82a4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "826d8df5-d5f1-49a5-beea-ee83da0c1ca8",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7020e008-ee07-4caa-8f23-a5c8d8fd1f91"
                    }
                  }
                ]
              },
              {
                "id": "356fb084-acb4-43a3-90ce-a41114fc8d6a",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "857ae5d9-89ce-483e-b0d6-b248552db655",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e05c02bb-63d2-4501-96dc-7ddd12057652"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "71c7e7dc-fcb1-45d6-9158-f212e57dcc87",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "6972593c-a406-4344-9340-f3f6bb7a05aa"
                    }
                  }
                ]
              },
              {
                "id": "02bc1dde-6a15-412d-aefe-01294dbe47b8",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "40c8caec-cee8-4192-bb6c-c2ab944a4127",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "d9ee9b2f-843e-481f-8c74-5997cd476cff"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "da0ebce4-c93d-4dff-874b-3a95b95f8315",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "86aa3d94-0ac3-4e14-a220-776399a4a4e4"
                    }
                  }
                ]
              },
              {
                "id": "41b76249-02b9-4544-ad6e-f16cacc1b132",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ef97fd76-228f-42c9-ae07-04ef752c048b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "3f7ba1b6-d7c5-46a2-b339-80fa28cab0c6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e2429656-e26a-48cc-8f9c-f2ad7173bbd0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "d4669cda-28da-444f-8fd4-2e57f6292561"
                    }
                  }
                ]
              },
              {
                "id": "bdf59a07-7b73-4a17-9e5b-7aa5fafb482a",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d8620b35-ffcf-4f11-ad36-a506dc455e64",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "874ea296-67af-46a6-8dac-e25ef5948ed7"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f1d40840-9423-45d3-9416-fe6b541f3110",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "314d7d4c-b4ef-4bf0-9f9b-d9c7421099f9"
                    }
                  }
                ]
              },
              {
                "id": "b40aac2f-e623-4e5b-81a1-660be5eeaa22",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "89edc447-2d7c-403f-9e7d-451836ffa608",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "86d15310-fb36-467c-a818-8a92b9396bd4"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4a93ccd5-d669-4e0b-9b64-52dc6c9af614",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "3cd677ce-fb07-440d-a84a-e89b5507af1a"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "3aec84c7-b75b-4d2e-ae2c-dc5d46f6b547",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "a51698ce-51b6-4aac-9190-ea86e3d415ac"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "bf608e7c-e202-47da-98c7-da03851e97c1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "e1fb5d3b-3abd-47c2-a09c-50db7010e58e"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "c26a0886-b2ee-4f5b-bc7e-e70292866646",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "f9a9d539-b473-452b-857f-971187fed989"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7687064a-563e-4496-89d8-c52e5f425953",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "778e1ee4-7a42-4cfd-8f53-f670a83bc7da"
            }
          }
        ]
      },
      {
        "id": "a1d7f352-d159-4901-83c2-09a5fca71fdf",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "6dc503b6-6670-4075-bde3-21defd359493",
            "name": "Negative Testing",
            "item": [
              {
                "id": "b66cc51e-744d-4e34-b1b7-78fa7edd6dd6",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "5e0fd33c-dad1-4e13-a561-87ce27f42709",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dec6543a-a433-4d14-8816-7e81dcadc572",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13bac442-7a84-45d3-970c-6255424432d9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66d833d5-32f2-46f3-9481-0f816a36da73",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "1eae479d-eeb5-4199-b32d-98a3201a3f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a833ad2-1469-4f7e-baac-a45047920ea2",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64edb5f8-06d3-443a-9636-dc9e57e865bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c6b5a6e-fae3-42ee-96bf-44ab9487552b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "81627c87-9d37-4cdb-889e-7ef394631aea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "f17b86a7-8f6d-4fee-80d7-f4de0f12520d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ba28cea6-877b-430f-a0b1-afce0b090acf",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7831ffd6-0bf8-4eab-8428-b0d1e1c6aa25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "13392621-a015-4fc7-b308-95983b4a1967"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "67285794-2358-41fa-8e1c-664b4d7d1acb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "8f1e82af-0615-43fc-bad7-119c99fa69e8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9bcd865a-2a61-43cf-893b-ca9ef5b8d3e1",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eda71046-6278-4979-905d-f7b4959abe4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "620c754c-da39-4bf7-8edf-df41e980cf49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a913fed8-72a2-4a87-8395-bc3843ea5a89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "397e06b9-b187-4208-ab8e-ce8f270bcaf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fbf82e10-a9c8-4f38-bf44-839cda8f7a0d",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1bc9837-4ebe-455a-b83a-b924728c84a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dabb3de3-eb7d-4ceb-a1b4-738fae7284e9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c03b4ad9-ed57-4ba7-8b12-9bea16afef44",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e6ecff40-112b-45bd-b953-7a51079af534"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4038d887-4b97-49e0-b90e-346c959bd5d2",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e153c61a-5da1-45c8-93a3-8de892c93caf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9409d5b7-2b1f-4a17-ba22-79bcca4ac09c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d74385e8-ec91-463c-b97a-a3959a424d52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "62993eb1-1dff-4bd5-8b3b-c3f1d044b8fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "567a6206-8a71-4faf-a38c-3f26edf75e4a",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8ccc32d-2109-4f92-8f40-967371bb22cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bdcb3e0f-f057-4e4f-b3ef-a2bf9932e337"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05ce0ab-78c1-425d-b225-3a7ba5e7880c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "70ac0735-b4f0-4225-ac7d-3d98875bf168"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca617729-a0ab-4be9-923d-f13f58911da4",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73cd4896-8dce-4f14-9f1c-822712a5e3e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61daced5-5a1e-48a5-b414-9c4ac073d538"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5fdd874-ad0b-49c9-a577-d488ca8d036c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1162c88-e6f0-44ad-ad68-d30af461df62"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ab0ec76-e802-404b-8e11-9199baf3d710",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b5e5eabb-12ad-4886-802d-16bbac8b7812",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26cebafa-40b4-48a2-82fb-bdf9847d1686"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3ae6621-5d7e-45ad-8c6b-08c9acd21258",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "99eaf74b-05cc-4cb6-a093-7ddca96af134"
                        }
                      }
                    ]
                  },
                  {
                    "id": "760b44e5-fadd-4eb7-9add-c8238e262294",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89ae8e3f-073f-4ecf-818f-ef98c40791c4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07725af1-0fbb-4fbc-8099-5a091e0376b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75e051cc-e956-4f8b-b791-5ed947462367",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "77f23d1a-6bdb-4ce8-af46-11d3041b0b7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "47ac1fe7-d4aa-4cd2-b6ed-773d1e69def8",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "26ea5d9d-da1d-48e4-9f76-14b4b31cbad6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d47fac9a-c2ba-4649-9e66-225e5f206f11"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7e462421-b0be-4ae4-bbb3-f3430f726412",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "709fbf1a-2318-484f-9580-1b480ad0d845"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2dcd7f82-83c2-435c-ae3b-b996263c5352",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a259610c-ef44-4e01-9a26-878691ce6418",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "60420377-cc73-4069-af5d-864e55a4b503"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1198fcb3-c6d9-40b5-96de-4a6d50609ae4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "492474f9-f39d-41cf-9d86-36046f76a908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a02d56f-fc72-4841-9fd6-c5e298b89281",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8eec22b8-fae0-4d81-a58f-3ca33e58bd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a06d4189-90e9-46fd-a9dd-ec6cfbb1f0f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f74e7bd-c8bf-4fdf-b081-9dec603ff6db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "f9ff68f2-2bd8-4488-ab74-f0324e871757"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4cfa727c-f254-49dd-a616-276f4d2f3e0d",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c18c0f6d-5c4a-421e-a7e4-daa39545ad31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "21b1c3be-0df1-4af6-a1f3-0583c561f7e6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "821eb5ff-56cb-42d7-bc02-81cc6a4baa52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "9975655a-750b-4bad-bee2-d594902f7f34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "712941aa-32be-4644-9456-bb5b4fea4ad7",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f53d2537-9c8c-46c8-a5f4-316bb69c080d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9bc0ad17-52bd-4072-b545-62092b434d01"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "099c4a44-c68b-4410-b809-043a1baeb939",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ce2a7296-de3f-4826-a6e8-a33dd774669e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df7badc7-9fb0-4816-a248-5ec7341b2c5e",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3de1e2d6-73b2-4232-bb0f-3fa2d4a514b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0f673e9-1429-46fc-a283-d845f230ef4b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ef1e6e-f18a-4e7c-9926-7d884be25643",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "f03e1c3e-5bea-4416-b81e-19e1d39f7fa3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da1ed487-b294-40f1-a930-9efddc56b1d9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d51c3295-ac79-4e42-ab8d-82faff7bf128",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52144bfc-bc40-4617-9560-8a094564a93f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31d3d6f1-0399-436c-9c82-d9d66b70d41d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "90488bd7-450f-4642-bcee-79c93ff775af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc97a919-e50b-4a22-b9c9-d5fcb2c2209c",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ee95ff-7f51-4787-a766-f3498c454a71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5ae396ec-f860-4039-bbed-6bc085fcbb69"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9aa662ef-8fcf-4b4d-a489-17bb89bcecd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "c11af7bf-1cf4-4031-b6fe-ec087b356bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45416d7f-0875-4ce8-afca-9184549889c6",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1732e563-6489-478c-9ff9-abf9ed21ed6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3667d677-885b-4131-9bf7-1f6ac1b37f93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4635bb03-9b07-4b1a-b0db-b5ddb319c63b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4b92a8e9-e5cd-44a6-8ead-5b6983bff7b2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58e4c35c-5731-4bb6-8c83-50fe7991948b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a8bbd554-ecdc-4403-a652-ce26e87f49bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d8b6c15e-9208-4910-8eed-07679fa74bc0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21002abc-b281-454a-8a18-e4450796e357",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1828bf4d-9404-4d8c-9cd3-00fe2c87dbba"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ef8aad2-9a1d-4e58-a623-50e42827ba24",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9e9717f-b01c-4af4-8210-8e528a51515e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "953cb3fe-3d0b-4067-bf0e-52e305b5480a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "257818e4-4509-4c88-990b-519604c72058",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "77096d78-70ce-46df-bc15-4697e4be65dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c263101-8056-49e9-8d21-5dcade8c68bd",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "417284fa-1d16-4f99-835f-ef9628ee47b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a8b2ebe-61b5-4629-9423-64b05796a4f4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7865da8b-a96f-4260-8561-44e265f88a13",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "84d85adf-147e-4b61-a9eb-edde9d7fa012"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04f8de9d-ce79-46ac-8ae8-576b6ed363cf",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf28aac4-45e9-4dff-bb57-3c4e77971c77",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a2bc37f-061a-4362-8b52-ddeaf31b6712"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b377538-9ae4-43ef-bbf6-9d749d160c71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c62ad40b-7007-4195-b0cb-619533b076e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "419af4f7-e105-4f09-afa7-04b84b97570f",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87522741-03f3-42a9-8936-3d77ad49c843",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e29ec71e-e469-4b27-95fe-1bfea94eec4f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eea72e4-9dd8-45c5-addd-1ab27f84e32b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "47169cc5-e607-428d-9873-2cf33075a1d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42c296f7-4739-4621-b0ae-66568cc3f57f",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b93f9579-69fa-4e3c-b012-6de1c4a8da97",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af07f09d-b64e-469b-84b9-980b436e0d68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ded68921-d721-44d5-8137-9b66079f3405",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9a5b67ba-777e-4d73-85f4-7b75cbbc38f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d04a6978-2629-4a1e-a0f3-4c296c6d095c",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb5c9fd8-2ad7-4fe5-a757-9738f3677d43",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca18795d-fec8-43b1-9054-14a687db2301"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "096cc1e6-362c-4cc1-8d34-aecdf7edc605",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "24111bdc-c1f0-4de8-a273-6f72e8555602"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c398bf8c-5dd2-4277-9756-208b8543998f",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "33ab3188-ea35-45ce-b78b-4c9c70058d17",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc7d3ecf-0855-4754-9cb2-122b52a81063"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0cc14bd-a6f7-48fb-af67-ed07e3248692",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0621f305-287c-4144-892e-eec0b473a843"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebfc5195-9142-42cc-9e3a-4f74640ee89f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9efae7ed-dea9-48ad-b7a2-4f354a6d103b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6df253a-5e7d-4a66-9d8c-c6ce6185f236"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59066b48-704f-47d0-8526-17b13efa31fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8a2b51f1-2213-4cd9-b20c-403d47b138bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93f609b4-2c5c-446b-a719-4cdfde03109b",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e04d7575-d37d-4e93-a0ac-6875b629c80d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cfd698a5-e35d-4155-8362-6ba09536521f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c00a1b-01b9-4509-b9c0-cb991edbec5b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7289d8e9-6413-4a44-a94c-10766d64d8d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd411b02-1734-49a5-97d8-218462353df0",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5a78098-bf58-46b7-abe3-eb4dadfd823b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cc30eff7-7deb-475e-8d4d-77e3a55d72b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d80c5df0-43cf-47a2-af9d-5fd2b59a6896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "693022a8-95d5-4cd1-977c-01ec56dcf6d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd6907aa-6765-4c70-8d2e-b28ae440ce82",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d82788f3-977f-497e-8efe-9e6f783b9390",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed0c8c1d-8e1a-4e2c-99db-0eab5b6a5a19"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03cd8b09-adfa-47c6-8847-7897ee5dedaa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "55381538-1d8c-475b-9608-f931991e80c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7d54a50-e667-44d5-b5a1-e4a3fe38f48e",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85387f1f-e69e-41d3-bd81-3339b3948ba9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6303621c-cb98-4932-a8fa-53578cc28404"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a555cfca-456d-4083-87d8-268f2fe31d6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "90b12318-53c3-4d2b-aa48-f355898bb269"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "dc1bc5d2-d567-43e9-834c-256fbfcc96c4",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "32c1cbd2-f283-4bb5-87c6-c9566aef812e",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a06ccc39-f9ed-45a7-97af-523bdc9d00f9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "6dac2328-fb7c-403a-abf2-5f37f7766fb0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be63d3c5-28c8-491c-95ea-99990298bfc1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "d07b7851-58e4-448f-9746-d36fa78fd6aa"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0eb0ed81-6cf1-43d4-ae9e-37435aa33b5c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c542799c-df32-4d97-be6f-74559dcaff2f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8f4cad4a-2c50-48b1-878c-a9b5d3f5af82",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dfadf351-3d97-442b-be0d-37cf09ecc7da"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "38fddbea-9717-46de-b77f-bd394a265b50",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "3a0a276e-5120-4a50-a3e1-3dd39d2c9868"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "85829912-1315-4b27-b334-2ad3fc2e79d4",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0f135dd5-e9e4-4f8c-bdb7-8e701c26124d"
            }
          }
        ]
      },
      {
        "id": "d7e0531f-3975-4212-82fe-7e583b2d89e4",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "b6c783b3-e67d-4da1-b451-42626b9f22d1",
            "name": "Negative Testing",
            "item": [
              {
                "id": "1385eb34-8eea-4a68-81d4-bd55273364e8",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "cec5d44e-6923-43d0-9c48-c38ed32cd021",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "950b4257-0ad0-4c4d-87e2-0a09526a2907",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bffecf59-8c4c-449e-8184-13625079db8b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2fec329-14a3-45d3-b0c1-0aab7445499e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7f5d2a12-4ff4-4bd7-ac17-167b754afaad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8177185-ba3d-4b35-8338-294cb3b1f0a3",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c5d14ba-eb27-4586-b687-15fc97866945",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8cfac171-c443-48e9-afec-dbfdcad3d76c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f4831195-ec12-4e22-b2a1-7db585bef822",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "241e5d45-926b-418c-b6f7-cee8112b3099"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bad17536-3172-47b0-b998-9e97e952522c",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92264254-52f0-4bb4-9f9a-625129851b50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "413b5e3f-fd34-4fc5-9b48-1a29fbde78ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "072d510c-ab82-4006-bc92-a9b248b65159",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "f1bb7923-5e2d-427d-bec8-7f450ef7f250"
                        }
                      }
                    ]
                  },
                  {
                    "id": "543363c3-9a23-4d0f-a648-b7dd84249345",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39523733-c108-40b8-9a98-b80faa8a7f1c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93394aee-6a1d-4042-a4d6-ed15539a86c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d629659c-99ab-4a65-8841-06e88191c5c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "79ddfba2-aa3b-4731-b811-50f77ad3650a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dce045b7-337a-408e-96dc-187b114877c0",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "27fc313e-ed58-4db9-9593-2a03334e600f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b632b203-8545-4c83-bcfe-8152f682aac7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f69e805-5d60-4e4d-a34e-380b93f1de0a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "680d3cf9-f1e6-4e01-9944-cec81e03e1d7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "df718810-e41b-487e-89e6-d744d5e52d69",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0a3d407-81fc-49a7-9201-05c7897dc6f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56c8fa70-59e4-48bc-8624-f62a17b38e29"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "205ee67b-7a07-4bd6-b3bd-0a16d46cc07c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "c2816fd0-9e38-4d71-a340-9b1ef155d942"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49b1ed33-e56a-43c8-85b9-cc214c7d5ebe",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "73afed9b-d573-4fa8-b134-58aaa7beee5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7eca42d5-95a5-4f85-8b49-ae1d85227058"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b30a4ec-08d7-4234-aed8-dd0a9742dc76",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "8ea70214-2c74-40ec-b9c8-5428031cdfdb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eaa6d61d-d321-4611-a1cc-5f41dd112a61",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac2e7f4c-4074-4bd7-a84c-f645a59799b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55e4f2b2-0dbf-4876-928c-c000f85b71a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f1242b9-a151-42b6-84e0-60927778f0b1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d8124813-f8fe-4942-9f1b-b85bdf513ab5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "57672cf4-e42d-4cba-aeed-0aaa7b495ff7",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dcd4e6c7-909a-404a-9663-a4e91e12e15c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4524cddc-09fd-4bf9-ae21-744459cefca1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9c7fbcd-afc7-4fde-8d87-520abefa98a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "07c3476c-585a-4fd9-9cb6-193f37cde74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afb78c2d-85bd-46fb-b7ed-aa47d59d075d",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85d58c56-8c8e-43cb-8007-da20a11d63f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74b21cc6-c978-4c22-807e-bad3b6285692"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd5484b6-b241-4912-9158-03532e8504b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "499bcb53-e6a3-4daa-9ae1-8b02c2b9214d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "460bea18-d3a5-4869-a58e-2409317ba268",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c5e2a71-eb7d-4083-828f-62eb2b14c7f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e6fb02a-570f-4581-a5b7-d127d918b9a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aab271a-817a-4dcf-abc8-381467ca53c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a43a6823-4d8c-4672-9216-a3d5434512d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2abf79b7-13d3-4335-9e65-70bf9e7e3e36",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5129e886-e158-4e4e-82f5-14b5b7703fa8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cd23b21-0f64-4d5d-9f2d-76fe3ba8013d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e5bd57f-1693-47ae-a48c-f326e09ec7d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "1eb46ae8-751c-4967-859d-b43ad98d8498"
                        }
                      }
                    ]
                  },
                  {
                    "id": "513c6f3f-1dfa-4f43-87d5-8b1cef441e88",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae16dc08-b557-42a2-a467-2f41f1044dc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ec20a58-eadf-47cb-82d8-2f6f9d31246d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edda71a9-936c-4890-98bf-13d6b020bcfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0021c8e4-5349-4407-a4d8-98a3cd37fe0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0d84be02-e449-435b-8af5-a58f8db5e682",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9555116f-3668-4115-abca-4371f67db24d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c9f978-6522-456b-96f7-99e672038619"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beac77e2-9e9b-458c-8c1c-a6a4c4abd481",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2b17ee5-2b14-4db2-98f0-ffdeb77f9bd1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ae19207f-e02f-48f3-8f03-a8260d06fb67",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4bec3ae-7d63-4854-a25e-33c5c7059855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e9c8fa0-d1ff-4450-8d3c-640df8e3f179"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c48ba221-66b7-4d32-9045-0c4ee9aed241",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "87d75ebd-46a0-48db-b9b6-87be8b8b599d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e63ab84f-e992-4f05-ac5e-f5d6bb0ef943",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1aea4505-dc56-496c-aa20-7206e4c7c79f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "14a707b9-008d-4107-a04e-4da1a0a335c6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "220c9e5f-60ff-4fd9-925f-580eb0dc45da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d814a2-3bff-45e0-b48a-2c0af34dde68"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2b7dad3-be62-4c3e-8c77-20f88ccb7222",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f58c2495-1016-4b56-85dc-61c30957ab22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "66405bf6-ddb3-460d-9773-7d8877909491"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa0229b-c83c-4a40-bdc2-fd006b438bd5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cdcbe60-2f3c-4733-ada6-9680b20423dc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb7ea23f-12de-4464-a0e5-05d00ab1a43a",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94746e17-9810-428f-ab4b-10dfa36ba043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "33db7fd1-5d81-4ed0-8429-990e06e6cb76"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "566a7c13-f6ae-4a82-b202-d7e141d251ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "4823b63e-78d3-44f1-b702-37bffad80067"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cbb81f14-b6ae-401b-bdde-d4a2cf0690da",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b1b4c51-abab-40eb-bd5a-9f8b045017a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "00bc7b76-9691-4b10-9526-d801ccf3e068"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e55f3ed1-ff27-414c-99f8-4be69ccd1061",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b961b37e-217f-4663-819f-a919f433f433"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0fa916e8-7f4b-487c-a113-940762ef2623",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e7a50bf-b605-4974-b210-a16cbbae894f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d98641b0-f47f-4d8e-ba8a-15e8d82a1a32"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e18a43f2-7cde-4ea7-b169-862262d79aef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "82dc2a99-32f2-4948-95d5-9f6bdf678de7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "20d8220b-e87e-41b2-8db4-2503b70595f5",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "97fb8105-704b-4ccb-98d1-1e607314f232",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0503079e-9711-47ea-b478-e77f64860197"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4036dc77-5e14-4be3-9018-658e2808d76e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "354378cc-828f-4d9f-a44e-b02f82f92acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfcb5ae1-f28f-4743-9439-52a0cfb3b756",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cb4c7e-0901-4dc3-912d-646a484d80e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8b50a0f2-4568-4639-a000-1587a7dd2be5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b11df440-04db-487d-8e66-f1789feaf22b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e2e9d7d6-b74e-441f-9d21-ad69e36f1136"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3a9d6dc3-55ef-46e0-b25e-36e0234f03c6",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9cd30fb5-ec90-4990-bfff-beb458fb9117",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec6c9c3a-73d5-4a4a-9691-ad25c864a702"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de8abc01-4ace-430f-ad25-51868e02dcea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b15f0bc9-702a-4222-93fa-d3aa949c6f1a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "238a7b75-9a62-4a4f-a5f4-e1bb968319b0",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7d853982-4cb5-4489-8d43-f9649ffc1223",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5595c1a0-e8ac-4c52-8624-0bf4198ae3a0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0af0612f-1a99-4b1a-8b16-d43c565f95f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "7e4ad12d-86bf-412e-bf2a-78c84515e574"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f63b12c-b994-41b7-8ae8-ea4bef157756",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50b717f1-df8f-46eb-bc47-3d7087921da1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d238d47a-52ba-40a4-b135-068bbf861b89"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ba41fe1-3353-4dc7-b7ba-1f01c2fa2a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c816920-ccdf-466f-acd3-7da1ccf4dd0e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f0e2d675-f711-41ac-aaad-629571cbb76f",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e73eb02-63f5-4623-9755-5a2000129910",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "509bf586-4158-4bfa-8a2f-f9a144cfb6eb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c720338d-28ab-47b9-85c5-7a0fc18cbb11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "abfa4ddb-4f67-4aea-b62d-7254ce38bc63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f47fef3c-c920-44fa-bc08-1e4b708596d3",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f431e82-ae8e-4256-af2f-af861c06790f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4fd9b30a-f52c-4943-9fd1-4faa936a8463"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b770fed6-22c6-440b-9443-83ad127bd91c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d49553a1-21d9-4f4f-9654-5cd77b628157"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa9caed3-45e5-4023-a913-ab428f7101de",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eb1bcb33-f09e-45e7-b5ea-56b14fcc3855",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "56089668-6409-4e5d-a312-3989c2acdc9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dbd7e2f5-ad96-4547-b475-6258aec89850",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "d9ab874f-75bf-467f-acd0-ccd5e179937e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "934e04fe-f095-49b6-9845-38885ab685a5",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c09aaeea-dc8e-4d37-94b3-537a4ffcd1bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8ab1a00d-f2b7-466f-bf2b-b96fafefded1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6756c50a-bc13-4d70-b0cb-5905778e2d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c378e38e-1a23-4b81-9e76-b1b112f35387"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c41050c-b1a4-40b0-8e15-1d2d06fdabe7",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b337a234-f781-40de-8348-dac307b227c5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "423bc8c5-8d71-4dbd-a0dd-49d1b3052a27"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8848a883-4ccc-40df-99c2-3ff6a3f73c72",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6b07ad0-52a7-412c-bf01-667c72b1e6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b40933e-e994-4f9d-9588-9216c56cb323",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5d70206-9c3b-4f9b-8c8d-2cef132a2e6b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2c790bd0-b69d-4ed1-9ca4-4411365ce646"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3ccea498-3a84-497d-95e0-ddc82a5e6f89",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0f6efe37-2628-427c-afc4-5985502af261"
                        }
                      }
                    ]
                  },
                  {
                    "id": "59f3c375-67b4-4b1a-81b6-dbf0fd4fdd4e",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "163abfc8-81e1-485d-950b-728eea876acd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06aafffc-82cf-4fd2-876c-19890e3b5a92"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14bcb6f4-30bc-4ae1-b8b7-8fe79cc8ecb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "065ad1ef-3666-4dfc-b11b-21f70821d839"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ffcffac-2e42-441e-a992-97f55c1af64b",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b5d4b0a-3224-4437-bc24-c3e000d5545c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "aaab76d3-f134-4d08-bcf5-2483d820b878"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cfd33f7-e97f-4685-bc86-bb8e4cf380c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eccd49a2-cb59-4985-a1c1-51cf0c0bfbab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e98f937-3e49-4f44-9f00-30fc9dbecf63",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0495c841-51d5-4f43-9d07-fd15bca98b71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7856216f-3d9d-47fc-a2d3-018250a545e1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "00d721cd-0bb7-48d9-aa87-a43b341ab2e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e1fe9119-2730-4a06-896a-691c00837e2b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cfb6b06b-e181-4ea2-9497-e7723e539dec",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8acca29b-0162-4240-86a3-eeb51d6ba101",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2be7f07d-7b8a-4b6b-9532-e88b82c7ad72"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cda37a6c-edb2-4015-b969-977993ad0b9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e3ffa080-b6f8-4e33-b9da-da11f029881f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a4669e6-d964-4a3f-999f-d99c3c48b7e2",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0f8bd0bf-9536-4769-8183-fc09124cca2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "364b36f7-088d-4f21-aaef-b37e96264498"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46c9eafc-0bec-4269-b5c9-fe0d7a779f19",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "37101990-56f4-4c7f-bf15-b19345954e49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f154ffb-2aba-4ed1-a2b5-985b5564576d",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c9885ed6-0ca0-421e-a42c-958ef51b9c05",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "161000c1-6126-4267-a2a7-11f8e967d7a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97fbb5a3-6784-4bb8-821c-cf6a6d1237c1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ef674b38-4391-4834-abd1-f7f01a59dc31"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "231eb260-f803-47a9-a1d6-b2d10b1ba726",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "c818ce4e-f519-4a30-b634-b6bde30b80a7",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da952f3f-32ad-4581-aba2-885a27202874",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "51ad4aca-607f-4cd0-837a-9894a75ea670"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12bf8e6a-2b64-4d46-81ef-2d4e563fd5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "4cab6318-05a3-43b7-ae35-975928cdde21"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "990bb3ca-2fd2-45d2-ab91-02403ed79249",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "872891b8-af25-45bd-8899-f6387f51fda4"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "17506b8d-fbe1-44e2-8373-d890f48d804d",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8886a3fe-bcb8-43a0-ab45-5110dcb74f04"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "e72df77a-39f9-4a31-8175-a62662748cdb",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "cd026cf0-8efb-4419-94a5-34abcb13885a"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "7b9316e3-3a1c-4853-be2f-85e4c2992de0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "a63e7f41-3e2c-46ff-8080-9846df672423"
            }
          }
        ]
      },
      {
        "id": "38293e96-1eb3-42e0-bded-28e5608cc3f0",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "e9e9c3ff-1fbd-4584-95bb-5545057eae28",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c3f0056c-4fd1-4a83-bc59-129cc07c90af",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "6af1b2aa-8bce-4086-adb9-c3759ce6cde4",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e415f2e-1fc0-4ac5-8b44-0f1c0e174667",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fa9e54e-6527-4dce-bc02-279d796f5bf6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "948871f0-17db-480b-8de1-84a9cf3ea5ba",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a9ea0a7-1552-49c2-a4d0-4562abdfbd5e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd259528-6f89-4fd3-9976-d8a127a6023f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "357b59f8-9360-47c6-a1b8-85e59784c366",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "384b8dc9-e48e-4841-9c5f-7cf6e03c4a9e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "66e4ddd8-eb35-441f-a55b-ca043c6b5665"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d8870cdb-f8df-4811-a0ed-55b177ac05cb",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1eb85f7-b0f5-4cfc-851e-91cb04e64e3c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9bfbf04a-068a-4360-9cdc-b37fa41396ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "33df3f53-42fa-46f0-9ba4-2dc5f52e9299",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fb50d6f-cfbe-4892-8125-aedbbdca780c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79806f5c-c0a1-4432-bbe9-e01bf4bf7c78"
                        }
                      }
                    ]
                  },
                  {
                    "id": "45164d1e-15c8-419d-a6aa-595d6388f709",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee17114c-edf4-4aba-8c62-84dafb4a8446",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b105638-b0ad-4a82-988d-fad5acbc34f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc8e76ad-2c69-44ba-a00f-62d03c6bc8be",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8a92910-8142-423a-a205-b76cf9afd4c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cbcf305-8b96-48d1-b25c-1b13f6a7c72c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d7c7897-0ade-47c2-a478-704413013605",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54c6bc6f-fb4f-4970-af4e-81eb1b49fc26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48a1be96-1ee5-4df0-8e70-99337218d2c5",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31477542-b065-4fa6-8ebc-61a43038e133",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "aff72267-cd80-4251-8286-23ef669d0538"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d9ed32f-a518-4bb2-a3a8-646570a21f85",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2a272c27-ca6e-42c8-8ae8-2c8a4b208522"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8abf67fb-ca36-46ad-8bae-2c01991c1d1d",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "780dec5b-81cc-4fed-81bd-ac0bb6b24523",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e1317f08-6005-4162-96e6-e1fd7d7b7df9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "87693885-9398-4756-b14c-710ceb7169f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "464de8fb-b4a6-4614-a6c3-b2ba3a65f9a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63c13e47-da1c-41cf-b161-83a78d0516b5",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b75f5442-8069-4f45-9908-173bf77b33f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "986489eb-d5d4-44ac-a442-ec2e29794ae7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "24e3eee9-4706-4df2-96c4-d7daf3bac3cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e56df190-e62e-423d-93fb-2070f50580a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "273203b7-97c5-4517-b547-49eaba2739f7",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71c85d1-83de-47c9-af67-1ded6625921c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eadd443e-fe32-49f5-af6f-ae3f98859d04"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c9bd118-3479-45df-b889-8c4fb2dee4ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a67616a6-0b2a-4bdd-b4f5-4c74c04078f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0247a0fd-071a-4224-ad86-10eb59c3b8ff",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d282b61f-d40c-4dea-bcca-a7f74f45848f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47c6a98d-a412-494a-901c-320a401c30c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96f5d788-5d0c-44fc-8c3e-9756c388110d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "669f328f-fa5a-4ecf-8709-c52a273f6553"
                        }
                      }
                    ]
                  },
                  {
                    "id": "437b3033-eb9b-4bd1-afc0-7edebd9fbfb8",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66581811-3e50-4fb4-9bef-8a6cece71105",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2c3c4f4d-8b1e-418f-bef4-0cf3a83444d3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce6877f-5ba8-4306-b016-23e0da934b05",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "28c2d869-cf9c-41fe-81ce-01c1ab313eda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7bbaf103-dfc9-4a65-8d20-f0f6c5dca683",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "215e7678-7680-4d88-b0ff-b7a4c07ac8f4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5312fc60-d79c-49dd-bfb7-21d5dcbc1ecf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ae021a34-7b57-42fb-826a-7213a36c07a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "96cf84d2-1b9d-4d68-847e-d78da0f5db03"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53a881f0-7ada-46ba-b2a7-e0f6a3314c0d",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d733e26-2484-4705-9628-59167fb85a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ee3e51a3-2ac0-4796-8cdd-8086a868c90a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5e41c4c-0788-4bd3-b459-a0e496f43757",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e71d25d1-58db-4a25-9623-71439aef4cca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5ed3f7a-23b7-40d2-a672-3ec3f449aa34",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe089930-7983-4496-98e1-ed413c46e800",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "fb5a5c8b-399e-4e65-bf23-5b91226a4d94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8680e2c0-a9f0-4822-8734-bab80b3e5f1a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "873e533a-3bf6-47fb-ac0f-fe3c70034d19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e355d043-20ff-4915-899c-65ef723f2cf1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "03877d99-2d0e-4731-bbb1-7c6d65f9d882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49565178-bac3-4340-b290-fe8b8c2924a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7ac3a9-a2d1-4ddc-abcd-7909a665e69a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5f8aedb-7407-4a81-84b0-bcf885479078"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0a8733de-2dac-4f7b-a2f9-04c4f38f209f",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "484c5372-6119-4a1c-8320-85a34530c9be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1c137a58-e8a3-4665-b177-d51e210791c1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef764e03-3579-4837-bca2-148971d2658f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9fc08ec9-deae-4f01-b17d-8906331f7a28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b0345941-d0d3-41cf-9bc5-c215de3efe6a",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b1cc7c32-d87b-42d7-96be-95195e2f203c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0e6052c1-f5df-4b07-a90c-117ba16ba7a8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fdcbf87-f9ce-4ff3-b126-fd3a7983f3b9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "713d1c85-61c9-4584-a7ee-d73d20797e14"
                        }
                      }
                    ]
                  },
                  {
                    "id": "37e8ca3d-4cdc-4e58-a346-384ab015dca1",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0a45f3f-cf4b-41bd-95dd-63e9e62cfe58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7daf382c-8c36-4b1c-836b-cbe5b7dcf763"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "deb41b28-53a1-451f-8dc0-060d9b640a4e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e8104f5e-90ee-47ac-8264-d0ffa4f97171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8adca6d2-f353-4a71-a5a6-df6d57e69ba7",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793f45e0-f93a-4aa7-ba2b-e4a88f889056",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "48e38b5c-6eeb-42d3-8959-5522adbb4ebd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2d924a8-3db9-4427-a78e-8ac9df6cc740",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40c0d35a-b25b-430d-a8df-a64f3090b405"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31411355-2382-4697-a80c-71185a76175c",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f88eae76-34d6-4b2c-b103-d1b6b402bf1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ea87ed3-a2e7-4507-822a-ff248db6b911"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e904428b-f8aa-4ca6-9006-230020c9c173",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7b71f0a9-7851-4dc5-b193-758e2112c9a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea6da1f-4cc0-47d6-9817-601ae0f0b50b",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "56fbe48e-5cf0-4f02-afd3-4b8e6ed36089",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec31d59d-19e2-4a8b-b039-d0cb7c78b111"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2817c5a5-6b7e-4283-ad7d-84b86c5976f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d74224c2-2ee3-48d6-a2aa-4264f493e707"
                        }
                      }
                    ]
                  },
                  {
                    "id": "93144a0a-3f1d-47b9-94f1-51404ea913c0",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bec73530-634b-4a44-9379-d74ad25e8c3f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4a7cdd1d-b77a-4aca-a174-522b1ca7e4b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b29891c-d06c-426b-be7b-4a3136c0c8c8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a27c4ffe-2373-47ae-a02e-35fa12ad51cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3cf5c986-f6a8-4c3f-8ad9-67e630835428",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98613efd-236b-4b7a-a79a-0559b21710c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8006fd03-e26b-49e4-8938-1dc87be3dd05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a90f2b7-1f68-44f0-9fc9-608f9a2a2b66",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6006918-646d-4321-8c5e-ab5588fefac5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94c42a2d-a7e2-4360-ba50-29f929fe02e6",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a1393a45-08bb-4fc6-a920-0901b4871472",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3b62f56-4dc3-4067-ae82-b68f763fd5d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6fa1f414-8423-455b-b60a-e6a32617cfd3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "127d291d-ff76-4731-8304-b4c99eb00eff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a95c69c8-9231-45bb-bd12-deb0bf6e3be8",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0166b96a-3bfe-4eca-b32c-8d7f56210c9f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb1d947b-46d4-4fbd-8f8f-5a64fcaf2248"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ce37a81-8dde-452f-bd70-97461494ea73",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "91439b71-49bf-4a60-b21b-6de50766b8e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1372efb1-4520-48eb-8f65-76f48e5e5c1e",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "edee6efe-d87c-4f18-8318-bb749179c123",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31ffd35d-48c1-47cd-84c2-c7ba49582602"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "742c8ef0-f66e-496f-a15b-001efe27eda2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c144233-6e81-4470-9cad-d45458604b22"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a8c64f3d-ed92-4048-9be1-b090c060972c",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "891cec9d-dc66-4c31-a481-e66bade79983",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "358c4e81-40e4-45cc-b2bf-dc7315c79474"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ced0ca2b-ec37-4c1a-86d1-89518edfecb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e69047cb-d321-4aa4-9b11-775105892170"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b4aebb53-b5ac-4023-b97f-8f7d03f0af6c",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d8c877db-5f29-46d2-8132-125f46eddb0d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e598dfea-2250-4b37-a63e-1258c5baeecc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6f1a40d-8a78-40f7-8fd9-17ef2b29ad50",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d409380-770d-4a4c-b3f8-4729b51b42e0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a722578-bdb3-4547-a230-c338e1ea3e03",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd63fd62-adf7-49c3-9319-6a7d8037e187",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ac2cd6f-b93a-4285-8a0d-e3a4bc4f4026"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc3b771a-a9fb-4ab3-becc-3e461024c489",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dcacb45c-3bd7-4501-968c-b47e3187f06d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52fd1ba6-70fe-4e49-b8b0-f3e5133416b5",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3f38b02b-758b-47c2-94c4-bd25fe3962fc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "46e84f64-2527-4592-8a9e-90e9fc4d9e47"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe234ffd-ae01-4a6a-84af-efec0e11efc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a77add8-e351-4e9b-be8e-67f06238f7de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc7381c2-a64b-49d9-a05a-d8080b231c0e",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c72296e6-7a26-4efd-a645-671fc5fbfb2e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7d853f2-a594-4015-b057-643bd5bed194"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "877ec3a0-825d-4596-9720-169f5473d11d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7abb9818-a436-444c-b46b-a556c3d8266d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64747e57-de70-41df-87d3-9454e0e724f3",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c9d0006-59e0-43e5-8fc1-f0460dfa49fd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "096133e0-fd65-47ae-b9be-bec78d35abbc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "600f9264-e305-4fb1-b12a-e57d28b800f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8ccb88e3-d778-4d02-b800-506a1ba10126"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ebc7f710-ccf9-4bba-8aff-02d6e53ce622",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a210dd-10ad-4b2c-8680-38b43bee8ec8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aef73e01-2d15-4834-8900-1473884b71b1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "46ad01e0-3c81-4cd8-9a38-b79335e67c72",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7837893a-eb4e-4644-b330-7d0cf32666c8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9ac91-4993-4e57-89ca-66025e3f600f",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af55cce2-2708-4dba-802f-0e9b4967d632",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5e1255f6-f4d7-408e-b3fa-afc8a578b4c2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ecd82e6f-08a7-42c6-b947-fd125bc6bd1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7070b45-80af-44ff-8837-5b63222e2bce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "483a67f5-84fd-4576-8801-959ea5842584",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc51d852-98aa-4ab7-9dca-d254ee7cb616",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1fb03590-3669-41b5-be90-4eeff4230506"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "296a8718-bc26-4f1c-b733-43652a640baf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b775c6e-e500-4195-b512-0a81f5cfbb94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b9bc943-5270-4215-883c-ca77d962965a",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2fd7240-0189-4340-9006-7ccb66aae250",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff2a2593-03f9-4486-8ef6-235c7b1955da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1e635e2d-1faf-4ae8-a8bb-4c7f7522e7c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d385e1d3-6624-4211-9b49-d8ac9c8cc724"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c649497-41ce-4ed7-9dbc-435343b21003",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "abbac836-f490-44ea-a04f-211f7a927906",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "acc13686-56c3-4668-84b9-470034a47830"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8e16320-a6d3-4d27-8a28-63ef8659e5da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9276ab2d-29e8-42a2-9889-674a3a585ef5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d7d992a-1f9b-48b1-b8c8-77fe81d778b1",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab0b03c0-7282-4d22-a2d2-b1a26292614d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2f2e6b78-517a-414c-ba03-d0fea6fd6d12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "da9bce75-b0aa-4b7a-8cb0-b65f516c4cfe",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b77dfb20-5f40-4888-b6a4-7b2432efb7a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "be68c319-7ca7-41d7-a296-1681bc4d53f1",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "826d1edc-6cca-418a-a56c-0062a05e401c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0d62ed81-c0c0-49a4-892e-b0e9d34638a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfb5b21a-c7a1-42ad-9441-861fe1a0841f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "078831cf-c194-4043-b6e5-2229fd98dd50"
                        }
                      }
                    ]
                  },
                  {
                    "id": "16d14d87-2324-470e-ad4b-0eba7d01191f",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26bbaec4-cdca-46a4-a53b-96c15e5cf7a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55da75e9-6436-454a-a401-6af8ea70b812"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2a87659-b6f5-4002-8da5-1136b55b2d2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f30ca21-9ff3-4335-b6e9-de38c2f91299"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f7527e8-079b-41c8-9041-4db586aead7f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9aa0667-a217-4186-9215-c2f3235a0602",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2245094b-a2ed-4bbf-9b0c-4ed9d06e8379"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ea6232-0573-4278-a3fd-dbefe870d41a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a97413e1-acab-40d8-acd5-476efc41d2fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f20dbe58-8e16-4036-ab5b-6471763892ac",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e16a43dd-3eda-42a8-8d14-64f35055b38e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ff09c8e9-6c06-43c7-95d7-6a9311195f4a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "54d02f23-4871-4510-b023-529f94fea88e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "eff14e03-fbd6-4a99-86e8-30ef70d2cd58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b643ea99-3120-4e12-b3c4-d539eef0bea4",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88c8a894-f822-4e10-bb18-b0ddee353072",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "877cd9dc-1327-429f-87ff-4bed2e4ca849"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4c8b8d6-58cd-4436-9817-0ba4b203e1b3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b55411b-1a09-41a2-a181-f8f7091a76fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "42b4e9c7-628b-4bfc-812c-ce42ed328987",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9ff5980-19b7-4f1c-b202-4294f783e070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "27de8609-0d61-4528-9e1d-68a336d167a0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "110ef92c-c3ca-4853-9114-111d6a94d0dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7951c4e3-7877-46b4-a09e-d3dc8db21060"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5b537b6-8301-4144-87fe-6e75cbb8e3c4",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6aa225e2-2531-4ffd-ad77-2f68cdcd695f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331689a0-e62b-44dc-ad7f-ae6a99f61d25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0284716e-d234-41bd-be52-64d424fe5b55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "004e8064-cc68-47c6-b0b1-c46187480ae4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f01a8ebf-c832-4519-a3d1-9c7932b2809b",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbe2f77a-c5c7-40ca-b24b-1747376d554c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6763271-18bd-467a-af89-09f8882a3d2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e83a2e61-beb2-43cb-ae51-87ea3e0fcef3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dc45ae71-d64f-47d0-b301-8337b4cedd77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f9bb1ce1-e76e-4e90-bc6b-6926cc767342",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "325696b7-c5be-456e-8de6-bd269b4903c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "722e4b7c-a61a-49f3-bdbe-f684751067fe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "39632936-ce0f-42f1-adc2-c68dbfe630f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e4b4737f-fc57-420b-8c90-33c90ed22398"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e7931175-fa2f-45ad-983a-417a3f042043",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ded7254-9dc0-4244-a387-2240c1119f64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e870a694-1310-441f-9303-9d66c2b178a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bc8192a3-0e0f-4e62-a89e-a5bbad3b593b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0c81045b-0ff0-46aa-babc-6f971b60fa32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4abf069-292a-43f7-b422-4acc73e7fdd8",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d371c144-5469-4955-9e18-6f36cfa8e285",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b7aa654-daf9-4c64-b202-27bae294e4c5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5094cb1c-319c-4032-aabb-88550b58fcd2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "38e24a94-4463-48cd-b595-0e4b36dbd054"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a755e6f8-26f1-43c6-9d8a-5e28dd5c6203",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35434a97-e034-4edd-b349-373cb88c3ea1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "30d31591-8bc6-4661-91fa-b584ca82d1d0"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a04c40b6-47ed-4df0-9f79-3859629cc7e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3f5b2880-eaa5-40b7-b730-ef88247b1828"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ed008b0-e9ac-4443-ba71-8beaac14890e",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0a276b9-7f07-4cfc-89ac-46e6f7c76019",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25f27905-acfe-4efe-acdd-e65830be5dd9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "03ff50d3-b029-4bc5-9d2e-a994ec6efce9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79cda708-3f47-4d7c-8f55-454e4c8084f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccf421b-61b1-4ec9-9b7f-dfbd78909722",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e2645c41-177c-42a3-bf9b-752bb594de82",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "43c864b8-8115-4a59-9264-ea900182e28e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b035cd5b-6d02-44bc-8544-956f89cd08ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "94eca086-e1f8-49e0-9ee5-8b655786f639"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcb4b8c5-79f4-48bc-b067-a3502c049f19",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "beca15d9-7d6d-4f66-938c-52c20949bf87",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a15e067-bb7d-461f-b4a2-70be4556a1d1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8e131b3-8b76-4ddf-8424-9fb79f574447",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec22c574-73b5-465f-a8ff-ac98ab1a0ff1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c41d0db-f4e8-44c5-9bd1-28241dc4256e",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0d106d81-f176-472c-b3b1-3b4fb14952ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cde811c2-5373-411a-aff9-3f25d0340fa7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ff5a3d-5bd5-4425-b9cb-98c34e390f02",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f192596e-376e-4e9e-a0ce-3b7ab43cd57a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a3ebad99-51af-4009-8322-f4e8d0d38b14",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10932db1-76a2-417f-a74d-569335626b14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "199df76a-966a-49ae-84ce-8e94321c5b05"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abdf9b1c-eb31-484e-a6a5-0c56a40af856",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb095237-f860-4080-8a5b-4bc5c554096a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49164a8d-30dc-413e-979d-cda3e046aad8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fad8c524-de20-4c98-b9a7-bce26e5af57f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18055fd1-7cb9-4e3c-9fbb-cfb2c5ccd7ff"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a7f6481-c5de-4692-add4-513f152ce953",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "091d88ee-afa6-4c91-8499-7dac19f0e9f2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "29f35050-bb1a-423e-9d40-3731e3c09a76",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f5a4c9fa-3f91-4a08-a8ae-96c18af61341",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea224354-52ac-4792-b438-3a7add4d4a4b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b3bfb378-3a19-4a8f-91d1-5c430cb1b3b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b888082-591b-4960-9c3a-cd49fd87469f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8cb66f43-e698-4677-b564-7f7a0523f89d",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7b3c784e-afcd-46e4-857e-37a3f2ded5a8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4543cdb1-968f-4886-b84b-c7871eacfccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "920d7bb8-5a63-4ebc-90b2-923c67c31217",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b42e7eed-257c-4d8d-b91f-df9c413311bc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb722434-e4a1-4907-9640-ee27dc8b1af1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9642c0b5-afb3-495f-a548-0e6c7214b475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ffc19fa-8248-435a-81e7-7d45c5cfc5e7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d173e9a3-edc5-4360-9830-7077c25b2064",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88ae5a71-1f5a-4878-9b61-78d74e35efa5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1310788-e409-4b18-a057-f710e0098c26",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ad7ad8cd-12dc-4200-ac1c-302f4394bc55",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b110320e-5edb-473f-aae9-c6410bb4c534"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d26a359-e449-4b4e-8fef-940832886360",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9040a6cf-8a36-479e-b6ab-0e8debdcf13d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a085d28c-309f-451e-9148-023d05a0e172",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a963260a-7e01-445b-9079-5f8abf152112",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31f598f5-ae2a-4341-a277-94e623d15851"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c10e120-0440-419b-988c-c4a1b9ec74db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03c7040e-c4e8-49d4-abb6-22c71b950eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f680af93-e0e6-495c-b8bf-3afdf1cda0b1",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d91368-e47c-424c-ba3d-55d3b79bb7ea",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f3b24a71-c10b-4d0b-a928-91d66ba3070f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "36343907-339d-4e58-ada6-304013a97fe9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e9312b94-90c3-436c-ac04-ecc34e5a9dd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "610cae91-e635-4202-a47c-987f8eef621a",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e0ebc81f-4b5d-4123-9d73-7ddecdcce872",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2969526e-c64b-414d-b27e-46c6a14bb1a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3b8dbe94-d036-43aa-bd31-ea70a227534e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d018f15d-de0d-4ac2-b875-b983a6e219e2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d33ef741-9d8c-4458-8652-30f97acc6a1e",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20f41a8a-ab00-48b0-a77c-1ac3f8ff5fc7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c326687f-6159-4e07-9ec4-a85a1e816ec8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6dc97028-656f-4a40-96a2-3f6decb4b40b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f1214725-8bef-4a3c-a204-8207c864ed5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0ca3a14-e88a-4166-ab05-fbc70fe04791",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3717cda1-5812-4a3b-9f1c-6827a92e9a01",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f74e8ff2-a941-45dd-9fcc-3ca833a39558"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0d23d92-a2fd-48d8-b85f-2e7798f7b68c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "20f496ed-eb40-444a-bdc9-e9b7c01313d3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b538f930-fb0b-40c7-8631-cf7908edf9cd",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "844d4075-1e5d-4177-be74-18a2a19aed09",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "668e8fae-0efc-472b-8290-0f41a9b80c34"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "febba73b-d0df-4776-bbb9-be8a164f07b5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79516dc0-04e0-400b-a724-a519f7ad331e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f76c44-6f9e-4a53-b1e0-14562ffe5207",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39e20f42-f3fd-4642-a731-a894f964cd44",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "34133588-5b22-4da0-9968-5baea96d914a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "118a74a6-0e40-4064-a124-c3844fc6b189",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "913f5772-0511-410e-9312-e6e387c65dd4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83e26a4b-40f1-40f7-8f8e-879a282687a1",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dee0e1fc-f8ef-4aee-9564-bba570771ccc",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6734be63-9878-4f86-9f33-59217798028e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2fffe1aa-061a-4261-96a8-b28312424833",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65ae96c9-c287-4aca-9e61-e5d5aa18b55c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ac648a-3ca9-493a-a631-ff0a9cdbc978",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b281b27-993d-4f64-9585-60eda02bdd5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24eb17aa-5123-4e52-9f4e-dd3c7b06095d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f28fc510-ae56-417d-b1a2-434974c2c545",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2919edfe-1570-4906-830b-1f68262e893e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1740afef-205c-4987-bea0-78a96b81f7d6",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "997958aa-c1eb-446f-a5f8-a76413b3fef9",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f7456e1-8f60-4549-a954-2e8c873bdb2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "221f792d-64ce-4040-a943-d401dac678ed",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a1a9631a-640a-4395-a17b-1f9e7dc1e011"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9213ced5-6682-4289-958b-a2ff203adb12",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bed0a28b-74f2-4011-a3d3-6003e639b7ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eaa37774-bfc4-4070-b048-b52be2c63358"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2665549d-5f93-4d4e-84d9-d1b747ea6160",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "720159f3-aaae-4d69-b2ab-14ee7c2ba1d8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d11927b-0645-4d0c-906d-fee3e663cd57",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f0e494a8-1058-491b-bc09-2dbe2b711bbe",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8e1d8883-7cce-407c-871b-cae723bf2a12"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cff5cb2b-2110-4024-b3f6-aeca920ca8bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b2cd9922-5073-4d20-b57d-62191ee51064"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dead0848-74fa-4e9f-9389-a160eb9e709e",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c96f9435-d7d7-48f6-954b-420939f49457",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dcf3240c-96cd-499c-adf7-dd9270f406d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ec6e7656-ce2b-4651-be92-03031a332232",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88b07a9c-4dfc-4f6a-a3cb-56476a8d92c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c6f4cba4-b3c6-44d0-ae86-af637509ebea",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a79a9482-efdc-4970-9884-948d207537e8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9cc66cf1-69b4-42e2-868f-90110ae15a23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8efe79d-91d7-4f5c-99b3-9b4d6d7aeb0d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "52723869-1e0f-49f2-9ca8-aa6ea51686c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac47f37d-c5ea-41bc-baf6-092f340adbd4",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85c204ae-feb7-4568-8930-235023b07460",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b7c4e319-b0ec-4416-9a15-d5116c0fa8df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4cf05fac-ae18-48bb-a756-eb937ca1954d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a3dedf0c-645c-432d-aef4-4dc88022e86f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6be83747-55f2-4b77-ab7e-5e8770feecfa",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "482445e9-88fb-41f1-936a-a8c83a702b29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "63b1df41-0bb5-4ec2-8c61-05efbc1b672a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12b58af4-4b45-48c6-970a-7a0a2eb1f5ac",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03e7089f-d8cd-4ab5-913b-bc59a3be95c4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1db747aa-f8a3-4744-ab4a-41875e00e57e",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0cd664b5-2af9-4c9b-8257-54e7aef82e92",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "636bac63-06aa-4018-8ce2-87bda3d48d7b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a418cdb-937b-4b69-9414-aa7c734ade9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "35586331-8b0d-4f7e-9aea-269886552d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17afb8b8-cc9b-4ec8-b24e-019a41e19d1d",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a778e7e6-c8ae-4bbd-9811-e49b96d8d0bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9831a37d-8638-43ab-b172-dc7715eaf87f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "414034c7-448c-4576-9310-4bbeedcc0329",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8576003f-62b2-4976-836f-13940465814e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f5c9187-0489-4d51-ba8c-2ddad443e9d6",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0122a178-2995-462d-aff7-a3c558bd5c00",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5242da88-1af9-46e5-a841-fe0fbf1d53b5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a2027b9-f395-4956-9589-4077293caad2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4bd85537-fc1b-40e8-820c-9179b57da15f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d09e54f-8719-4f6e-b7cc-2967ea3e1bff",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7abcf66-a6e3-4790-8e0c-134d0475c160",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6f9545c1-1ccf-4295-888b-a59fab301b3c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cd5b88f1-4e08-4204-884a-2de34dae2e62",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23745ccb-a5ec-42ab-89dc-d454e1ffd805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bd63c791-c6f4-4052-8819-3d38bc81bb5a",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee58ec3f-4705-4034-95c0-292ca99f1d65",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "35c22789-edce-4cc5-a7f8-89abff470e90"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be212ee0-1804-4ea9-a390-c6480edd0b5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c722f585-340b-4985-9bb8-9574f92e97ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de9b96fd-2d3c-4f5c-9801-029708773b05",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8277aa74-04cc-488a-9f08-da832622e907",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f85f4b95-1c4b-4706-91bb-8c76c3dcb4cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "682d97a1-5b2c-49b5-9f20-e548112507ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "31dfbf3a-b52e-4569-b148-907ef5d29825"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67697ec2-a870-4e66-95af-7ec524622d4a",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a46b690-5465-4220-8e44-13f92b668397",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1f2448e0-75eb-45db-acb7-de706963f897"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7f3d5f9-a900-43f5-9c30-fd4309beded0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "62b99fa9-48dd-4332-ba6b-fc7b0f9249b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ecf50fa5-b18c-4192-97a8-85b78d26a177",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "610d30e9-78f0-4eb5-a775-e210b64bc474",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff118709-1945-4391-bb8c-a2c33c89e25f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc7fa8c9-efe5-4dac-a795-c15f821a8bef",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b567a993-4880-4dfe-bb55-4b282ea70599"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5c65dc-5bb1-4c83-9495-098b09543fc3",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4f8f1af-b620-49d8-abdb-f958bce5cfc0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9b8aa565-5c31-42c6-b61f-288741350b21"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "52176517-ff6e-41e4-900f-df781aee2745",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "73da91b7-4213-4eb5-99c8-45d66b0e5f77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "681fc0f5-e9e6-47e2-8e71-2f7b1726f605",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb18dea2-50f3-454d-b96d-69efc2a4535a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "557205f5-2ee8-4ecb-a25e-3551fa1b92c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9ac1a3e-070f-4a47-b570-ee02ee1ee776",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "84bf83a9-190a-40a8-b251-0cd2689fc3e9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "914207f4-5cea-49a6-bd6f-ed42473e7c9d",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "169aa9f6-c023-46a6-b18e-4f0c19b03921",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f6e038a3-ddbf-4fff-b49f-a04a9cc5f303"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1daed89f-e0d0-4afb-a17c-0764cfbac355",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f5c2598d-67ac-49db-a237-0989db8891b3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "81b33e2d-12bf-4550-90e3-ab1b7539c7bb",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4732f5cc-7a7c-4395-9a90-58d58161347e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a7e90d85-b445-4df2-afe5-03270153fb0d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f8d1ba4-4a4d-4ab9-9f2d-46fce9c6fcde",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4461441e-22de-4202-b716-ae1d9d692ce3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "56354030-8a94-49c0-bf93-b4e8b2a8e96a",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c9d30b42-b2bf-438c-ac91-3c1194236330",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e4b354bf-6028-435d-a143-5e86c86b7b9a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e6cacca-df3e-4c70-b108-dbc757821161",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61fd55fd-5f2c-44a7-af24-bf81a0e2bcc0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff04a17f-61b4-4479-85ea-2706dcdad5da",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b050a3e4-20bc-4ad5-96f1-391e3d7657ae",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eab2891c-4be7-494e-939e-d7a53865d080"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb9c1bc-c85f-477b-8727-863240d493df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d84c771e-4730-4436-92ce-e5ca14ad9ba0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f38a7f57-18b6-4b66-bf35-677f1cfe68cd",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac016288-d37f-473f-95eb-f9034bef3ef7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "658d6b13-6fc7-4b14-bcde-a933f6fa7e8e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "25892698-f941-417b-94e5-ab337f09a506",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fc62c12-e301-401c-85ac-db441f4c0d9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f419a58-3a5f-4cbf-b2ae-3a42478722ef",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e74cfb1d-1652-48e8-a999-a158cad33f43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f1410e62-49b5-49ed-8ef5-3433198e838c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3b01afb-3eb9-43ee-af78-b093b0fa624b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "857f9999-b310-49f9-a9f4-d6df604df38a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6b10c8b-9953-4fdd-88b5-6727d96c33ad",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "65427799-b7c9-4b8f-be22-7c6b8fcac8f6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e35c6a01-4192-4d1d-8a77-bc59e7f3d668"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d858345-9e50-4700-a1a5-cc26c5831f99",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6d194562-7810-49f4-97bb-7cb1df665402"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fac11a42-329b-48ed-8e05-16eae9371b6c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14cd18e8-6095-446d-90ea-f18dccc92f9d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cea4aac4-1279-463f-a385-97e42ced4aaf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "299dd389-892a-4901-a62b-1b723e39480a",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c9ef9a3b-8ef7-4c46-8ab3-995f0ed7f74f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21b3ea9f-2afb-4322-8fa4-0191d5761cfe",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ba6ab93-b306-453d-8ab5-3e54bc2fc2ce",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72bdb480-8bd7-498e-9bc2-f82a2e89df1a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2101c45f-f97e-4621-9870-187b8530c023",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1170146-bafc-46ec-9589-3123fa0bb23a"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "dc69697d-e8c7-4d97-8899-1ad0a24cc176",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "15cc817e-7ee3-4fcb-b582-82dbde85dac3"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "eb287f70-cea9-4ac3-85ec-aef829dc0b3b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "059a1434-c788-4607-be13-b8c1da8a76bf"
                    }
                  }
                ]
              },
              {
                "id": "d75682f3-4653-45bf-8ed3-4ccf5232fed0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ccd22d0d-d6ec-4eae-a358-95f040ca0655",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44ce4b9c-df41-4022-b6bc-8e1ed2165835",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "ab8c4c3c-0027-4c94-ab72-b8427960cc7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80e868d5-6b2d-4dad-815b-ab37ff08b29c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "076afac2-cb98-43d5-93ad-70e8f6b74414"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "5c7af0b6-73ae-4e15-8236-d438f0c728f8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "c783fa95-63f7-4b5e-b96e-247a025c3835"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9f702a06-6c0e-4223-94f6-d135f0dccabd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "0c811e9f-9e83-412c-a2fe-52f908be574f"
                    }
                  }
                ]
              },
              {
                "id": "ac5f1346-01e1-4ff1-823f-0b16e6ea1cf5",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "397d84b1-586e-4c77-9895-f971ee2b1d05",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8af82cec-eace-4f2d-8df9-9ce82accd143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "b83cf480-9e3d-4691-a467-406ef1a68178"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dfb048b-11c3-45a2-9546-b5959da97c70",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85ff5541-0a6d-40ce-995d-666b706e8375"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "6696726b-bebc-45b9-9162-ca6047eb178b",
            "name": "Positive Testing",
            "item": [
              {
                "id": "7b169b3f-5219-4639-82d5-284259f9febb",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b34fd743-3740-4e67-a863-b0553d0da147",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "0a45b81a-ccb6-43cf-b3a3-5e8c44338cad"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "706cafa5-8c51-42c8-9e98-00fbc8660d7a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b96dfd4c-46bb-4b1d-ac33-19b7fea90477"
                    }
                  }
                ]
              },
              {
                "id": "97cc5ecf-6431-4fe5-9404-819cad2089f7",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "937123f3-c74e-4c18-a841-34bfd7bedf93",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "617317ce-960d-43f2-9d44-aed8476b9e3d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "cdd71e52-1b41-4664-8c05-9f13baa6a596",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "139d8a0d-3503-4a9c-8d03-b0b59d04bba4"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "749a2754-fc2f-484a-b2f9-289f5a80cd27",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "517a097a-67f3-46ca-8b96-11ab73b65644"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "0bcd6f58-7364-4363-a4d3-b431c842b75a",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "f44e7886-91e6-4ea9-b060-f9db5c8261b1"
            }
          }
        ]
      },
      {
        "id": "82945028-b22d-4b95-98c8-d7465ab9ed88",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "da1fcee7-52a6-4d67-aa2e-49a1e5dae752",
            "name": "Negative Testing",
            "item": [
              {
                "id": "88f74209-fa6f-4377-bfa3-5e5d21a50b78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "b870e21e-5ff5-4533-82c6-df20092dbaa9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b399d686-2631-4130-a960-d99d2e0406b1",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "1537e536-c1f2-49a4-9182-c3a46c42ca48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32707fbf-e5c3-437f-a058-34d1080982a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "621b09de-5f92-4fc0-bd18-f054f126d87a"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "2f9d7186-05c6-4c67-bbe6-2476360de4b9",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "749bedfd-7ab4-4f35-92f8-12b320e64009"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "601d5055-3e57-41a1-87ac-85f0f5aa73f2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3824b92d-2eec-4857-a3aa-cce652107b3a"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "07962e82-d144-441a-ac6e-7ee165aa5491",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "10b25efe-c387-402e-9b0a-ad4a659b1eba"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "af005ea9-91fc-47e1-9ea7-ecedb5def35f",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "b45f1a57-c257-4b32-a497-8e32446b686e"
            }
          }
        ]
      },
      {
        "id": "35a6bd4c-4616-44ae-ab50-701840e097c0",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "0c104868-a248-416a-94d9-0728282ffb86",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c663091e-39ab-4ffe-8b2e-4abc443ebef8",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "87cf6654-57cc-45b5-b943-e0df6781f664",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b17a841-abc0-4f95-8878-dfa09d271570",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "35578726-7a22-44c1-97e3-347061f11654"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "236a9dad-eed6-496c-93f9-86b2fe3d62e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "608dee0b-7d48-4540-a650-0a629075859c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "6c544cdb-17d7-4b81-b7b1-44d4272d4220",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a462b682-df66-4fa5-8563-d0fe4739f5c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "cb606df2-e1d3-49b1-b28e-c28932949536",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "eec0d000-946a-42e8-bd36-d07f50c95b6c"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "08558165-3736-428a-a89b-f551ec25f920",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "a53be920-4fb3-4fba-b9ca-c64188576105"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "44ccf348-9e2a-47ae-b446-730587cea323",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "101f18a4-eba6-4c98-bc5a-c3430963a061"
            }
          }
        ]
      },
      {
        "id": "3b60815a-cdea-400d-980b-c376dfea715e",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "5249845c-d74e-4b09-9fda-0e3e9bdc8cd8",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f8803e7f-100b-4207-bb86-d1147b0a5e78",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "a2e26732-bc12-468a-94a6-252862a89f53",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "103eb556-6df8-4a52-a4f9-80cd12b98998",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "660147b6-b67d-498c-947f-0386664298fc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66437a21-112f-4267-a2a3-47cd5a4ff14a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df6a196e-25ee-40f5-87a1-583811288894"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a19c73ce-5baa-442e-8dad-2a207b3836d5",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "79f67743-8d49-4215-926c-327c93b4ef41"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "045e5eaa-bc9a-469f-8b98-4651da918591",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "cf6edd58-b4cf-4b5e-a752-99de40ac4237"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "f11b06c7-eec2-45f2-bcba-6d563469fb17",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "e2603712-b619-49b7-bc8c-17fe1fea2fe0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d38fdb6a-ddcc-496d-ae59-ddeb5ba016f3",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "7a592608-053c-4960-93a1-2f8c5431359d"
            }
          }
        ]
      },
      {
        "id": "998fc307-d6c8-4924-a0cc-73e6f8cdf99b",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b978bbc0-30e3-41de-944f-258ee4f6961b",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "a88ecf1b-89d3-4bce-a7d0-7e1290a5fb9d",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "e41c60d0-2bf9-4e2e-b50b-4284f13cb3b8",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "b0f36e0b-9556-449f-a455-ee54e1125962",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "42f2ae7a-133e-416d-9293-80e86618d897",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 9
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 228.6771929824561,
      "responseMin": 5,
      "responseMax": 9344,
      "responseSd": 1155.286664967518,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1698971627261,
      "completed": 1698971701717
    },
    "executions": [
      {
        "id": "3caf4f85-09eb-4b34-9c9b-0a6a2a22656a",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "5b422afc-642f-44e1-b6da-3509e18b7ad6",
          "httpRequestId": "a3e110cd-a489-4401-956d-501179276852"
        },
        "item": {
          "id": "3caf4f85-09eb-4b34-9c9b-0a6a2a22656a",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "172a9730-14d5-48e6-bc0d-fdb090c8d378",
          "status": "OK",
          "code": 200,
          "responseTime": 64,
          "responseSize": 0
        }
      },
      {
        "id": "95be0528-c249-493d-b749-54bfb94ff3fa",
        "cursor": {
          "ref": "7650d7f8-a820-4d5b-a50b-7d56b8f74d72",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "59770aa7-9b7d-41b8-8ceb-e1b877e6cdd7"
        },
        "item": {
          "id": "95be0528-c249-493d-b749-54bfb94ff3fa",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "28e6f80d-dfee-4136-be72-f52cacd36cf3",
          "status": "OK",
          "code": 200,
          "responseTime": 5,
          "responseSize": 0
        }
      },
      {
        "id": "94857c22-569d-44af-a47a-67c4d8818218",
        "cursor": {
          "ref": "11299d24-d95b-493e-b28f-4db05bcd8c19",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "674e43b6-7b03-4930-bc39-559204dffecb"
        },
        "item": {
          "id": "94857c22-569d-44af-a47a-67c4d8818218",
          "name": "did_json"
        },
        "response": {
          "id": "d14e1801-c5fa-493d-bce3-99fd1ca3bf88",
          "status": "OK",
          "code": 200,
          "responseTime": 1582,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e25c8c-9e60-4213-adba-40c7319e2dd3",
        "cursor": {
          "ref": "1f961b43-e584-4ad5-a104-3cfc7946fabc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b920d7f9-1178-422a-b928-6026132428e4"
        },
        "item": {
          "id": "f2e25c8c-9e60-4213-adba-40c7319e2dd3",
          "name": "did:invalid"
        },
        "response": {
          "id": "15161eca-adfa-47bb-9bcc-5d44dd6ad64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2e25c8c-9e60-4213-adba-40c7319e2dd3",
        "cursor": {
          "ref": "1f961b43-e584-4ad5-a104-3cfc7946fabc",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "b920d7f9-1178-422a-b928-6026132428e4"
        },
        "item": {
          "id": "f2e25c8c-9e60-4213-adba-40c7319e2dd3",
          "name": "did:invalid"
        },
        "response": {
          "id": "15161eca-adfa-47bb-9bcc-5d44dd6ad64e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48b688d0-eba8-4511-a328-482f76d13ccf",
        "cursor": {
          "ref": "79159cbf-252e-46ff-b2b1-eb49cbba0af1",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "a2129c23-bcad-4e69-86a9-e95aacf136ca"
        },
        "item": {
          "id": "48b688d0-eba8-4511-a328-482f76d13ccf",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "fd2b3c08-89d6-4064-8117-4f238cd3fc7f",
          "status": "Not Found",
          "code": 404,
          "responseTime": 137,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db01c4bb-7908-4b24-ac99-f69fcaddbdcd",
        "cursor": {
          "ref": "05ed9158-7380-4d51-96d2-b9470fb8b188",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "f40a3612-6a8b-483e-b836-14084c46ee1c"
        },
        "item": {
          "id": "db01c4bb-7908-4b24-ac99-f69fcaddbdcd",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "8286014c-7f38-42a3-9a65-af1d4f6eef06",
          "status": "Not Found",
          "code": 404,
          "responseTime": 43,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68f5fdb1-5f34-496e-94c6-d418e8f4859b",
        "cursor": {
          "ref": "d607047b-25ad-4b3e-b2a7-5f63df08511f",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "5d1fe655-b471-4497-a0fd-997ac57a762f"
        },
        "item": {
          "id": "68f5fdb1-5f34-496e-94c6-d418e8f4859b",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "d553ec96-ed06-4aae-9c71-da591b37dd79",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 41,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdc47035-cabd-4306-b36e-14169bcb9ed7",
        "cursor": {
          "ref": "f6c4997e-5152-4e71-a015-c14ae5b6908a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8927c2e9-4168-4d17-9e6f-0d88fb364f45"
        },
        "item": {
          "id": "bdc47035-cabd-4306-b36e-14169bcb9ed7",
          "name": "identifiers"
        },
        "response": {
          "id": "eb2d048a-4d86-4070-8541-788a846dd7f5",
          "status": "OK",
          "code": 200,
          "responseTime": 1278,
          "responseSize": 1656
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f289b19-2d1b-4f8e-bee4-1ce2af51da74",
        "cursor": {
          "ref": "baf3c75f-327b-461b-99fa-395ec67ad4ca",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2a4778a5-54f9-4be3-8fd0-e4fc6d37221b"
        },
        "item": {
          "id": "0f289b19-2d1b-4f8e-bee4-1ce2af51da74",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "541d9d1d-a9cf-4244-a0c7-b772047185f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 301
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6401e0c2-f7ea-4959-93a2-9c451a0ea60c",
        "cursor": {
          "ref": "394d3ae2-1051-4742-a244-1957802adbd0",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "8cf552e6-2a45-4a2f-a408-ac45feeb42eb"
        },
        "item": {
          "id": "6401e0c2-f7ea-4959-93a2-9c451a0ea60c",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "29bfdf8e-8d1a-4f3f-ad84-98f6a03d2792",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 511
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ce753c2e-adac-4eab-9bde-61194fe6461d",
        "cursor": {
          "ref": "1351a5a2-e142-4c2b-b814-b3ac7c5f5c1b",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "88f581f3-0b82-4408-a61b-c366e0b7db27"
        },
        "item": {
          "id": "ce753c2e-adac-4eab-9bde-61194fe6461d",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "9afc2456-4dba-4286-9abd-b251b3b7cb27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 519
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca412d05-e775-4967-b046-1cfc06e6463f",
        "cursor": {
          "ref": "88a94973-8d30-47ce-8bdc-90dd8057aaa7",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "d984738d-d29d-4706-ae23-13db21dc1e4f"
        },
        "item": {
          "id": "ca412d05-e775-4967-b046-1cfc06e6463f",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "9baa35b7-6f1d-498a-bb6e-2685087a78f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 516
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8f804b4-8747-4757-960c-2d8b91c75274",
        "cursor": {
          "ref": "b9f3ed55-70bc-4ac2-9149-563698191aff",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "9982a41f-f5c4-4aef-b15e-63c1fe0563fa"
        },
        "item": {
          "id": "f8f804b4-8747-4757-960c-2d8b91c75274",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "41fbc901-f1bd-478a-bbdf-d852b3e7a7a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 518
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b4e4475-8eef-4fed-b1cd-cae3b194eb3b",
        "cursor": {
          "ref": "b928cde5-2acc-46ed-bbd8-fad892e43490",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "db8c911c-6d1d-406e-9e03-51dae2bd79ae"
        },
        "item": {
          "id": "6b4e4475-8eef-4fed-b1cd-cae3b194eb3b",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "ff6c03b9-a0dd-4371-b033-0267703318f4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 565
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7751a06-adbf-4633-88a9-080637a1f98e",
        "cursor": {
          "ref": "5b0584de-3ae2-4ed9-8672-d33ec1bde3d7",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "6278a20e-6f04-4c70-89c9-142644857cc2"
        },
        "item": {
          "id": "a7751a06-adbf-4633-88a9-080637a1f98e",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "75cf7d39-ea52-412d-839a-07505dded3a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2bb51e6-6409-4205-a841-95501ee25a4c",
        "cursor": {
          "ref": "35918cff-4583-477b-a9cc-92701cdfce25",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "7da10153-3e5d-4b71-b610-0ffcfadbb7de"
        },
        "item": {
          "id": "a2bb51e6-6409-4205-a841-95501ee25a4c",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "763d651c-7cf4-4972-9a45-0e293aaac1aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 603
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d97ed834-b264-44de-b3f2-0197db24be5a",
        "cursor": {
          "ref": "84674c1b-1e8a-4be8-92d7-2d54ce31692b",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "2ec8cd03-a973-410a-aa31-fb4a9079f9fb"
        },
        "item": {
          "id": "d97ed834-b264-44de-b3f2-0197db24be5a",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "9b403fba-7811-41d7-9fb7-4d8d7bfb5860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9ce514-6405-4741-854d-4508fe891e2d",
        "cursor": {
          "ref": "5c3bd0da-8e46-421d-8a19-0c2ea823f0d6",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "0667629e-f341-45d6-81b9-82369658195c"
        },
        "item": {
          "id": "fc9ce514-6405-4741-854d-4508fe891e2d",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "489867c5-cc2c-4f68-9cb6-db192a2a0320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8a2c1de-c0a0-4237-9c9e-a7a3a475e9ed",
        "cursor": {
          "ref": "37c9d17b-25ac-4fbf-aa8e-fe53738e68de",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "b45d47bd-c8e1-42b5-b50d-90ea5cbb2863"
        },
        "item": {
          "id": "e8a2c1de-c0a0-4237-9c9e-a7a3a475e9ed",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "306baca2-1dbf-4f57-bffa-30c4aa4df6c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 105,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1fdcfe2-aea0-4625-802a-9ceb8d584a32",
        "cursor": {
          "ref": "9241c388-8e1d-4013-8eb5-9cfc46d11b8b",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "45049cb1-e030-4013-9289-8d735540815c"
        },
        "item": {
          "id": "e1fdcfe2-aea0-4625-802a-9ceb8d584a32",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "99d9128a-84ba-4fe7-9e53-df6ff4ce6b1c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 612
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a99c4339-be82-462a-8157-6a8d9854e9b6",
        "cursor": {
          "ref": "fd7b2cb8-b6bd-4c91-9372-2d72443c6460",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "21f77add-9cc0-46fd-8802-c6ccf7ce2e80"
        },
        "item": {
          "id": "a99c4339-be82-462a-8157-6a8d9854e9b6",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "14571e48-a322-410a-ad94-d23370317cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "489cf7ac-5961-4106-bd2f-cc687813ffc2",
        "cursor": {
          "ref": "4185e7de-5cc6-414f-9bab-18e8e7f5c7d7",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "cfe89a41-9f48-4e1e-b80d-8c2ae7cc822f"
        },
        "item": {
          "id": "489cf7ac-5961-4106-bd2f-cc687813ffc2",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "db926c93-6b2f-4fc7-ba32-38a7b35e476b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 583
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52efcaa4-6f61-4ef3-a401-ac5e3961618c",
        "cursor": {
          "ref": "dcbed193-2e04-436e-8c6b-3983233dcfcc",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "28e7a593-02f8-4e76-b093-f4a759234879"
        },
        "item": {
          "id": "52efcaa4-6f61-4ef3-a401-ac5e3961618c",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "f0b6ec62-1adc-4019-9db7-a10b86159690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 580
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e240fea1-b102-4ba6-824f-0b33f4e7e18a",
        "cursor": {
          "ref": "aa2240e0-e5fc-4345-a1cf-202b529d0ac7",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "babde27c-2299-4800-b77b-375aa0240c98"
        },
        "item": {
          "id": "e240fea1-b102-4ba6-824f-0b33f4e7e18a",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "2517afb7-99aa-4608-bd26-47b65a09c466",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4a3609c-2dd8-4f73-a375-167e981e9f07",
        "cursor": {
          "ref": "e245202c-7d00-4ded-929a-7dddd0900cbc",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "cf50e51c-5fef-4c5d-b294-b6e8d9b4db59"
        },
        "item": {
          "id": "b4a3609c-2dd8-4f73-a375-167e981e9f07",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "7d113db7-33a4-480d-b16b-bf28ea1b0aa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 632
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60d0a165-66fd-476f-b570-1b402ee6b897",
        "cursor": {
          "ref": "40d3c10d-5d65-44c9-8988-166f41ca624a",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "366e1f49-8b04-4742-95ba-62e6f50425db"
        },
        "item": {
          "id": "60d0a165-66fd-476f-b570-1b402ee6b897",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "b645e1b8-6874-4326-892e-daafef3bc125",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfbab4c0-0ae2-4789-af4b-a5805b7d6f7c",
        "cursor": {
          "ref": "726bea57-fff7-46af-a30d-86cbb215f2af",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e2bab5f6-d3db-47f3-bdcd-72233dd66b94"
        },
        "item": {
          "id": "cfbab4c0-0ae2-4789-af4b-a5805b7d6f7c",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "a9f48b08-66e5-4efb-8c48-491026fe8b6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 555
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7a4e0db-c3f3-45fd-8156-e23f4898bde3",
        "cursor": {
          "ref": "317c905b-008f-425c-a148-bb7e65221d6e",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "9be7a664-9a8c-4dee-a59d-c9113639c831"
        },
        "item": {
          "id": "a7a4e0db-c3f3-45fd-8156-e23f4898bde3",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "6a385bda-c225-4c39-ad8c-fb2c9fe2cf9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca9c8235-77a2-48d1-94b6-1904df0a3dba",
        "cursor": {
          "ref": "79e19f83-9cf5-45a6-8ed9-29cf5c2bce1e",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "40475d59-9c10-4161-833e-42b4cdb2422d"
        },
        "item": {
          "id": "ca9c8235-77a2-48d1-94b6-1904df0a3dba",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "e3d0b5e3-583c-419d-a8ad-2c553671f7bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 554
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8943d893-0747-4c10-8707-1fc2cbce8f31",
        "cursor": {
          "ref": "edae1452-798c-4e3e-a36d-7b660a303709",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "9c872b08-b3c4-459f-bc6f-fd29eb26ec4a"
        },
        "item": {
          "id": "8943d893-0747-4c10-8707-1fc2cbce8f31",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "b52e0848-8b6a-4b3b-a2e5-92d86c57a166",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 552
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40eda30e-532d-4050-b675-1a94b703e941",
        "cursor": {
          "ref": "5115a3df-9d60-408c-9ce5-8ce30bf27ffb",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "1e7ab079-8abd-4058-8efc-5238157b74a9"
        },
        "item": {
          "id": "40eda30e-532d-4050-b675-1a94b703e941",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "63bf705f-9299-4631-a336-3776cf6b3272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a84efccf-5b3c-474c-8762-e9b8e572d321",
        "cursor": {
          "ref": "19b8b430-7de1-4a9d-a4a4-26fcff17815d",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "6d9ae750-67c6-43df-aa4f-ebdc1f4a52a5"
        },
        "item": {
          "id": "a84efccf-5b3c-474c-8762-e9b8e572d321",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "6f0fa606-5517-423b-8b7a-cd3143e81409",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 574
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d19bc32-f969-4afb-9da3-e15fb5e7205c",
        "cursor": {
          "ref": "495a2b76-eabf-413a-bf18-393d6e631e60",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "96d8d047-4ffc-4088-88f2-d505ed266828"
        },
        "item": {
          "id": "0d19bc32-f969-4afb-9da3-e15fb5e7205c",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "8b26cba8-f86c-430d-aafd-abee00810655",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "648b4caa-083a-4f33-9010-8d6c953fc3b7",
        "cursor": {
          "ref": "58f36fc5-9b06-4808-9501-57875717686f",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "9cc1946f-1722-435f-b0e6-ede8058a3080"
        },
        "item": {
          "id": "648b4caa-083a-4f33-9010-8d6c953fc3b7",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "a5b3ad04-01ae-42c1-9246-2e05f8cac72c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 590
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be4626d2-b465-4de2-a972-4568815ed293",
        "cursor": {
          "ref": "231c848a-ed1d-4f4b-84ac-19756a64126c",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "15aa6044-8172-496f-a427-118e1b856db6"
        },
        "item": {
          "id": "be4626d2-b465-4de2-a972-4568815ed293",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "ab40348e-f50e-4614-8c27-e69107d1e464",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "775fdf6d-0de7-4f58-b1ee-b6091f4fc36e",
        "cursor": {
          "ref": "3d856955-94a4-4ca6-a4b1-c010c7ac88ff",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "80c44285-1e5a-4730-86ee-ba4325ed9f93"
        },
        "item": {
          "id": "775fdf6d-0de7-4f58-b1ee-b6091f4fc36e",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "44427fda-90bc-40a0-9105-37af447d847b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 589
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "283016d1-1edf-467a-88d4-80920edeed04",
        "cursor": {
          "ref": "a69c5b86-e535-4064-bf82-168c379edc22",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "62399774-e638-42ce-81c1-a4923749c9d1"
        },
        "item": {
          "id": "283016d1-1edf-467a-88d4-80920edeed04",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "a67fad65-c9f9-4920-8a4c-654be01b148d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 587
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "452d7308-9fe7-41a9-adfe-ca1dc5a6973a",
        "cursor": {
          "ref": "d5732f2c-7983-4251-8f53-166d8d7c3dde",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "449993d9-305d-47ff-be8d-6b4401269631"
        },
        "item": {
          "id": "452d7308-9fe7-41a9-adfe-ca1dc5a6973a",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "b81b32eb-2418-4885-a061-9e19efd72f99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 512
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20b09ec3-dcb7-4877-92ba-f0f558123318",
        "cursor": {
          "ref": "c59a12d5-6ab5-43d9-be4b-08f39fd87f9c",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9db90acb-46f5-4f41-afb7-5408ba3f9ee8"
        },
        "item": {
          "id": "20b09ec3-dcb7-4877-92ba-f0f558123318",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "95c102c9-d8f3-4fd7-bd6a-9b9527595582",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1012
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ae5855-e686-4455-b922-d175c9776143",
        "cursor": {
          "ref": "582da1c4-00c4-4a29-ac90-d0335899d185",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "36f92b55-03d8-4266-8a58-834b9653c076"
        },
        "item": {
          "id": "53ae5855-e686-4455-b922-d175c9776143",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "1b0f4165-20be-4529-b3e3-0a619b075dfd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 941
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "888e1a78-f72a-4a15-9985-a22d8a3af32c",
        "cursor": {
          "ref": "2ebfce00-e38c-44f6-a350-7991f90a8857",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "666c1a40-0a62-4590-89c0-e58f094e2b87"
        },
        "item": {
          "id": "888e1a78-f72a-4a15-9985-a22d8a3af32c",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "905b5510-3176-4776-b96e-e57fc961b729",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 938
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a54caee-78f5-4051-a46c-93ac20faa23c",
        "cursor": {
          "ref": "e6134767-3e1e-4668-96a7-874bb12e5ed7",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "694a26df-2aef-4a08-8778-35bbfbdc3d75"
        },
        "item": {
          "id": "3a54caee-78f5-4051-a46c-93ac20faa23c",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "2b5358af-0f0f-479c-bae7-beefbe290a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 940
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63bf202-b0fd-4f5c-a20f-4d3978ad4c16",
        "cursor": {
          "ref": "8cedbd98-97d2-4f4f-9a25-288e41c043d5",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "dbfcd8ae-81ca-4cb3-9a22-aee0986ffc83"
        },
        "item": {
          "id": "e63bf202-b0fd-4f5c-a20f-4d3978ad4c16",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "88226c0d-a37a-4433-b45b-a1fa7efb962a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1343
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b825fc17-9f7d-4b93-9328-7fe6fedbbe0c",
        "cursor": {
          "ref": "52865f3d-c4c1-42cb-94c5-9d7d5de23fc5",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "44a962dd-a036-48eb-9316-93289dc05f52"
        },
        "item": {
          "id": "b825fc17-9f7d-4b93-9328-7fe6fedbbe0c",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "cbc13a6a-f6a6-4ab9-85ef-26c3c522c948",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1484,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "275dc00e-375d-47b6-9754-9dcbeac3f85a",
        "cursor": {
          "ref": "4d65130d-b880-4f24-a2e9-375eb396aab3",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "68d232f0-b9ff-4b3c-bff3-2b46ede6f4d5"
        },
        "item": {
          "id": "275dc00e-375d-47b6-9754-9dcbeac3f85a",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "e4118c2f-be80-46ed-b901-4185a84f2090",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 971
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d675bcf8-1305-4fd7-8c0d-1200acf134aa",
        "cursor": {
          "ref": "ad74bd2c-6ecb-4db8-a459-2133d7efb795",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "0a74ce56-8d75-4657-935a-ffbfb8bd7e1f"
        },
        "item": {
          "id": "d675bcf8-1305-4fd7-8c0d-1200acf134aa",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "393a2c41-f75e-48f7-8ab0-ef3967fc5e9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1351
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd2b9b36-c00e-4da1-984c-78936de18818",
        "cursor": {
          "ref": "6cde904e-fb3a-44a0-bd89-4e880ab3fe1e",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "537e421a-1948-45b9-8114-9746e2da52ad"
        },
        "item": {
          "id": "bd2b9b36-c00e-4da1-984c-78936de18818",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "67e33b31-333f-4d37-b03d-9f6e1d4b37f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "80568dd4-e460-43b9-ab75-651c50e10a90",
        "cursor": {
          "ref": "cd5f8191-925e-4dab-8e8d-b60d6c0557cd",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "b1df8a17-6f9e-419f-bb9e-2ca44d99552f"
        },
        "item": {
          "id": "80568dd4-e460-43b9-ab75-651c50e10a90",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "8eeec93f-35ff-418d-89cb-a669b49ed4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1277
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46e594a9-bfe1-4601-8a0d-79a9ba5ee65e",
        "cursor": {
          "ref": "2f64d89d-bd81-45e8-8333-b8ce2cd47d0e",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "9c0d0c15-81b7-4b1a-8541-93bce2b192bb"
        },
        "item": {
          "id": "46e594a9-bfe1-4601-8a0d-79a9ba5ee65e",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "9feb57c2-2159-416f-8797-1ee352b9a58e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa7bf0d6-10e2-4210-9d2f-95abba8c47fa",
        "cursor": {
          "ref": "0e907bb1-b1fc-4a4e-867f-3005213de88c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "7abf4a52-30df-4598-840b-ac461738e9e7"
        },
        "item": {
          "id": "aa7bf0d6-10e2-4210-9d2f-95abba8c47fa",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "f092569a-bd48-45d4-a60c-f5ae50e9858a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 1682
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a3db952-a2b1-48bc-99a2-86322c5ead21",
        "cursor": {
          "ref": "d544afca-2f9e-410a-9228-872dd6479393",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "9e8b268b-a283-4c99-bf68-57b8548d35b1"
        },
        "item": {
          "id": "9a3db952-a2b1-48bc-99a2-86322c5ead21",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "333dce5b-5b0d-447c-be3d-7224256e90e1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 1488,
          "responseSize": 90
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b32da228-f795-468c-85e1-896596a2a20c",
        "cursor": {
          "ref": "e35e1228-ad65-42bc-9658-a2b3efdd34b5",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "2beb9e58-9a01-40e5-a02f-aa05191f2fac"
        },
        "item": {
          "id": "b32da228-f795-468c-85e1-896596a2a20c",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "e8c8fd5b-0f52-45d4-9463-540043828cc9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 570
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad82673d-fc2c-43be-8e30-494480d925a2",
        "cursor": {
          "ref": "915d5da8-9c8a-44e0-ac34-07acc151e805",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "61cdd920-d5b7-49ec-b4d1-38297871deb9"
        },
        "item": {
          "id": "ad82673d-fc2c-43be-8e30-494480d925a2",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "d9e043ba-d527-4a39-b0c6-4efe54c4dc99",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 604
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed16c48-fc83-4b59-a9c4-3a919ffeed5a",
        "cursor": {
          "ref": "55293d8f-f306-4110-a90d-dedfab38e83a",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "a4c2602d-5ba6-41be-904b-1dc3c46cbc0c"
        },
        "item": {
          "id": "4ed16c48-fc83-4b59-a9c4-3a919ffeed5a",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "7da017bb-106e-4096-bc09-e7e2fd26dfa8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 585
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ad697731-134b-49e9-8687-6d3b389b766f",
        "cursor": {
          "ref": "457c124f-b0e7-473a-a1bd-08c510511c1e",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "21c5b6d8-c05f-43d9-926a-29d30111794b"
        },
        "item": {
          "id": "ad697731-134b-49e9-8687-6d3b389b766f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "7e1ff225-0f66-4367-a452-a37a045be7c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46bdb252-f053-4cda-a842-e3b4bd9204e6",
        "cursor": {
          "ref": "6b819954-e74a-4f7d-b1f9-8c44b61036e3",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "8c5440eb-cae4-485c-9692-2f3c033917b7"
        },
        "item": {
          "id": "46bdb252-f053-4cda-a842-e3b4bd9204e6",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "1b945548-7d69-4ad0-b245-27bd175cb98f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fd94148-da66-45fc-a5f8-b75fbdbcc3f7",
        "cursor": {
          "ref": "1c487668-cedb-47f5-b665-fe69b87087f9",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "6443b8e2-d36b-49a5-b4ee-39aabb97a68d"
        },
        "item": {
          "id": "2fd94148-da66-45fc-a5f8-b75fbdbcc3f7",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "a54f7227-b7d5-485a-84bd-4efc0f2500bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 582
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaf872ac-181e-4c29-b92c-0a52d8e5b10b",
        "cursor": {
          "ref": "cf24272b-7e38-432e-b4a8-b5602352d82b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "de6080b1-4497-462d-8567-61536c3456ce"
        },
        "item": {
          "id": "eaf872ac-181e-4c29-b92c-0a52d8e5b10b",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "f85a6a11-d241-4c0a-ab9a-efb6ac3f03c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 635
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e5eb4e6-0629-4e78-94ff-2a5844bd9e19",
        "cursor": {
          "ref": "d0908bfc-23d8-438a-9f47-627af5936221",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "a5de0e71-414d-41a6-8b2b-f95a67f7219f"
        },
        "item": {
          "id": "8e5eb4e6-0629-4e78-94ff-2a5844bd9e19",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "90109b37-a5b0-4e1d-aa81-1b932a4c8f3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 584
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3719915-b1bf-4e21-b5bf-21da1161fea3",
        "cursor": {
          "ref": "5ece3344-680d-4253-bb3c-dd2c92d93efa",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "a54515a1-cf18-468d-a8ab-b9820039794d"
        },
        "item": {
          "id": "c3719915-b1bf-4e21-b5bf-21da1161fea3",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "62594b3a-bd00-4757-87d3-8282a4fe5ff7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1055
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c1030-be92-45de-a4ed-779aaf5c9423",
        "cursor": {
          "ref": "8e342de5-4eaa-4615-a3ea-d3ddc83b61dc",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "87a1a286-1d7d-4b2c-bd95-415d4125979a"
        },
        "item": {
          "id": "124c1030-be92-45de-a4ed-779aaf5c9423",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c7392209-8b0e-4c35-97d1-f4c819773b96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 864
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d7e216-f043-4031-b0a7-c20bf0f07267",
        "cursor": {
          "ref": "519bfc6d-7065-44ab-aacb-c7e3cd58b41f",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "256eb423-e015-474a-8e99-80488e5d0f5d"
        },
        "item": {
          "id": "c2d7e216-f043-4031-b0a7-c20bf0f07267",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "e8935a1a-83ee-432b-a570-3bae98a19b03",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 861
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2be34455-7672-4a9b-8048-f169c1c132eb",
        "cursor": {
          "ref": "37b84286-6075-4d4f-9061-bbff1ce41074",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "4138a091-239e-4077-9fab-9ae5637b4061"
        },
        "item": {
          "id": "2be34455-7672-4a9b-8048-f169c1c132eb",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "e2028b15-7875-4e2c-a686-1c2717820875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 863
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93a903fc-23af-4a00-915b-b845e391204c",
        "cursor": {
          "ref": "ede2dfa1-1edd-4d4c-bb88-29c2ec0ec912",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "769d85b1-b5d5-4b73-9c8c-fe9aa34766c4"
        },
        "item": {
          "id": "93a903fc-23af-4a00-915b-b845e391204c",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "9b09757c-1f3a-4c3b-865b-7a9ca2b5ac4a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 876
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dde5c4cc-ecd2-4218-b9c2-9a4f19334ce6",
        "cursor": {
          "ref": "11b15183-e7a0-4aac-8661-4fd3cb2fa33b",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "7037a098-b622-47f1-a2b9-61578f69c70c"
        },
        "item": {
          "id": "dde5c4cc-ecd2-4218-b9c2-9a4f19334ce6",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "905e4840-52ef-481d-9768-b9d764872d52",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1370
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b0a846c-0d6c-4ed8-9075-fc6cab6d9899",
        "cursor": {
          "ref": "cbeb35d2-a84e-4db4-8597-531271a49d56",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "aee5b32b-f479-4a88-a32d-6ca541bfea6c"
        },
        "item": {
          "id": "9b0a846c-0d6c-4ed8-9075-fc6cab6d9899",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "4338bf6c-dd62-4fd3-b148-38be12194216",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 1356
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb323bc2-3d86-471b-8a39-77dc1cc9c8eb",
        "cursor": {
          "ref": "d389fc15-a598-497b-aeca-120d592c4c88",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "acdc97d5-4dc3-4441-a703-a88290c54bb9"
        },
        "item": {
          "id": "bb323bc2-3d86-471b-8a39-77dc1cc9c8eb",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a0398afd-ce35-483a-ba91-a1ea6efb31dd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7908c0-8b36-40f7-9d62-671721d9cd15",
        "cursor": {
          "ref": "6cc640a4-203b-4cca-be24-6ff6c60dbdf9",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "cae9db00-791f-4db0-93b4-5bafeaaaa590"
        },
        "item": {
          "id": "5d7908c0-8b36-40f7-9d62-671721d9cd15",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "b02aad7f-b54a-4b6f-b061-c936fb57ff32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 1355
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "659a1d81-f52e-4764-b243-cc46e6357dbe",
        "cursor": {
          "ref": "c51c7d2d-1076-48ea-a19d-fa1c25e6dcfc",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "603c1dcc-6e12-4cfb-a30c-e3f65fb5b310"
        },
        "item": {
          "id": "659a1d81-f52e-4764-b243-cc46e6357dbe",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "66dc8d35-e42b-4b0c-814d-8b76c9b6e9f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 1353
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df364d3d-9287-4d43-8675-eac9509e5835",
        "cursor": {
          "ref": "cb089c64-bd98-44d4-be5b-a9d854a06c1a",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "a19e9164-17d5-49b9-bf61-f6aa0ff8a272"
        },
        "item": {
          "id": "df364d3d-9287-4d43-8675-eac9509e5835",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "dbe1f8ab-8bf0-4d6c-a901-09ab8e59d4c2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 545
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a263fb1c-3391-4a3a-9ff9-f22aa0054839",
        "cursor": {
          "ref": "ca7de643-dda7-4bac-9d04-7134b803a5c8",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "cd713c18-f5fd-4084-a56e-9abb03d1bbec"
        },
        "item": {
          "id": "a263fb1c-3391-4a3a-9ff9-f22aa0054839",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "bea6240d-f178-4635-be18-2e8e3fdb383f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6b8a007-6ab3-4440-b95f-2b822b0fbac9",
        "cursor": {
          "ref": "a8ab19c0-c7d7-4db6-8306-d8579116b2a3",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "5a726099-0282-4928-9fde-fa3008da0baa"
        },
        "item": {
          "id": "c6b8a007-6ab3-4440-b95f-2b822b0fbac9",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "37020d27-2675-4a62-afab-e35ca93cb3a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 526
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bf44552-c0dd-41be-b248-86f73e872897",
        "cursor": {
          "ref": "34c8c4d0-6939-4af3-b1e1-7022f77ef8c8",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "9c7c24f2-adf1-4770-ba99-1cfbde6656d4"
        },
        "item": {
          "id": "2bf44552-c0dd-41be-b248-86f73e872897",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "55d2e0f3-e72d-4871-ae50-78cb3a27680e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f3cc329-f4a0-4c8d-a5a0-9f80ab451215",
        "cursor": {
          "ref": "099dd1ec-405a-4c6e-8d51-8c871e79c144",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "8fc07e6c-d522-42dd-a591-9fb073b099b2"
        },
        "item": {
          "id": "0f3cc329-f4a0-4c8d-a5a0-9f80ab451215",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "80a154b1-a44a-4415-85cd-4097c1ebfa7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 525
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "24728314-f8f2-47f5-86b3-dac45a38f455",
        "cursor": {
          "ref": "1f7c5456-b77c-4027-9f1e-5b043f5d107a",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "d7b7485b-d428-4654-bfd9-915dc065c8bb"
        },
        "item": {
          "id": "24728314-f8f2-47f5-86b3-dac45a38f455",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "aecbf23b-9a19-4f45-b78c-b2a9007c4131",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 523
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "976fe9c5-7ad0-4bf2-8b15-7dc1263f649e",
        "cursor": {
          "ref": "652594dc-f68c-4fd5-95e3-4bebda74a532",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "1f7ac9eb-dba3-43d9-8df3-9015b1ffefc2"
        },
        "item": {
          "id": "976fe9c5-7ad0-4bf2-8b15-7dc1263f649e",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "355e586b-69d1-4aae-921f-19675e39dc57",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 560
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f95eb63f-91e0-4003-ad38-f5acb1a83ff8",
        "cursor": {
          "ref": "f03b437d-a2a5-4d33-ba0f-bc5d2673d3ec",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ef931f55-e6a3-4884-a402-b7dcb5b33ca5"
        },
        "item": {
          "id": "f95eb63f-91e0-4003-ad38-f5acb1a83ff8",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "6c16bf33-3cca-4525-a7e9-a4082e3e7693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 802
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04ba66db-c54a-490b-9a2d-7d64277297d6",
        "cursor": {
          "ref": "e7a06117-4c80-4b16-8567-757047801806",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "3fec0b9d-194e-405d-a5f4-a7acda28471e"
        },
        "item": {
          "id": "04ba66db-c54a-490b-9a2d-7d64277297d6",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4a141287-0ec1-406e-a494-34f27befe610",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 783
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a13ed861-941d-40a3-b0d7-d29900b09ede",
        "cursor": {
          "ref": "3bb742f3-fa64-40ce-ab58-a768a6328506",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "7a855bd8-9838-4ca3-b97c-e4a19f4f424f"
        },
        "item": {
          "id": "a13ed861-941d-40a3-b0d7-d29900b09ede",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "0149346b-ec09-4b9a-8fe0-a01cd76ae0a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a773d3a-281f-4747-b474-fcbd8f8bdbc1",
        "cursor": {
          "ref": "935d1b3e-7c7e-4764-a902-6e8075934a1d",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "4463361e-46ad-4bb2-8f98-769bbf4150c4"
        },
        "item": {
          "id": "6a773d3a-281f-4747-b474-fcbd8f8bdbc1",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "311535bd-197c-44ac-a5b9-de21eed36e3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 782
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "761474f5-6045-4494-b4a3-f5e3e1f8586a",
        "cursor": {
          "ref": "8d622fe5-b34f-46a0-9d34-a85590d38807",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "d341f651-0c71-4a0e-871a-bb2a406e4d31"
        },
        "item": {
          "id": "761474f5-6045-4494-b4a3-f5e3e1f8586a",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "866fb32f-f2bc-4fa8-ac49-ce5dffba977a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 780
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357e9b64-dca0-4477-ad65-b5d629c4701c",
        "cursor": {
          "ref": "56ef25df-42e3-47ba-9b28-8c71e9c316fd",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "f296940a-db8a-4f0a-95ee-9ae5a2e0deaf"
        },
        "item": {
          "id": "357e9b64-dca0-4477-ad65-b5d629c4701c",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "5b34e548-7b45-49f8-862e-b7c240863c81",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 651
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fbe9914-06b2-4e38-8f72-10ebf1df2226",
        "cursor": {
          "ref": "66df5fd1-8706-4fd8-a9f2-6e6bf3bc14db",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "bef793fe-27d5-429e-82db-071356713e1b"
        },
        "item": {
          "id": "8fbe9914-06b2-4e38-8f72-10ebf1df2226",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "f4230e84-d091-473c-93f5-4529939b9fd2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 629
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef3ea781-37dc-42ad-a606-03eb3eabcc77",
        "cursor": {
          "ref": "2a9c52b4-477d-4f5c-b92f-5804ace01e2e",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "d8baca05-17ca-45eb-b24e-c209834f0ea0"
        },
        "item": {
          "id": "ef3ea781-37dc-42ad-a606-03eb3eabcc77",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "68f50cb2-263a-4e24-9696-241a21def24e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 610
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40b9b3ed-33ee-4d09-895c-5e2e6504bcba",
        "cursor": {
          "ref": "03afe123-2101-4fc7-a24d-7e32b5d26a29",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "1c73f8da-61b8-4df9-a394-1afd1c17fe63"
        },
        "item": {
          "id": "40b9b3ed-33ee-4d09-895c-5e2e6504bcba",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "cb775506-716f-49e8-8233-8cf726401772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c5bcdcff-1f7c-4d65-883a-a31f2cee318b",
        "cursor": {
          "ref": "1d268aab-4b54-47c8-855d-7122a4718542",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "97a24549-a892-405b-b33e-4bb067aace7f"
        },
        "item": {
          "id": "c5bcdcff-1f7c-4d65-883a-a31f2cee318b",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "a787ee76-2f28-46bc-aaea-f53279e24ca1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 609
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f6d959-651a-4d05-9aaa-cc69911eda36",
        "cursor": {
          "ref": "3cb8d685-0770-42c4-ab4d-d1324d6d860a",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "abb6dccd-48c5-4125-bb99-2000a0812fe2"
        },
        "item": {
          "id": "c6f6d959-651a-4d05-9aaa-cc69911eda36",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "e82af6a5-d095-484a-8482-c6748d0db9c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 607
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "030d3018-37ae-46f1-a9db-2dd57dc04d20",
        "cursor": {
          "ref": "eee9d399-dc3c-4497-9dad-77c2e189c47c",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "08cc6c12-abb4-4cce-8d64-fd52fc44390b"
        },
        "item": {
          "id": "030d3018-37ae-46f1-a9db-2dd57dc04d20",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "400e4410-2353-48b2-a25e-dddeb03053a3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 660
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c84cd8da-b43d-4aea-a17c-7e8943877d22",
        "cursor": {
          "ref": "5f1e3676-040e-49dd-91f4-7dc02250c8cd",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "47c5c4ba-a385-4757-92f0-48c1197f9413"
        },
        "item": {
          "id": "c84cd8da-b43d-4aea-a17c-7e8943877d22",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "a8c875f3-6899-454c-b8f2-7fbd7b6a8c5a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "08f5d24b-fe17-42f1-8789-37d2c3a334e0",
        "cursor": {
          "ref": "d74b77ca-79da-4d5c-b873-adbf22bbab19",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "36dbfead-3c5c-45d9-a1f4-4e7560b71a7b"
        },
        "item": {
          "id": "08f5d24b-fe17-42f1-8789-37d2c3a334e0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "2cae4b5d-c0fb-4c09-9307-f268d7179524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 622
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db81c2c-30cf-4116-9cdf-8975e2b181fb",
        "cursor": {
          "ref": "aff7e6b6-9c96-402d-a5fd-a2aba4a35b54",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "a443be95-981e-4f42-9317-7919abda686f"
        },
        "item": {
          "id": "2db81c2c-30cf-4116-9cdf-8975e2b181fb",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "f41c5b26-1c18-48f1-9063-6de497fddf9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 619
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87e923ce-71d2-40c3-9733-0fe83591dffb",
        "cursor": {
          "ref": "c4d65580-fb21-4fe6-aa38-5d0810c06f5f",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "63970efe-48c5-4e42-a164-c83ef57c3b98"
        },
        "item": {
          "id": "87e923ce-71d2-40c3-9733-0fe83591dffb",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "5b944696-8a6c-4d1a-a0c6-3e37ac9e16db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 621
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7319550-1528-404a-aae6-6616077d89d6",
        "cursor": {
          "ref": "b172aa17-c6ef-42ed-a6cf-dcbdf61cca05",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "50b44a5d-7dc8-489b-93bc-c1caa619e73c"
        },
        "item": {
          "id": "e7319550-1528-404a-aae6-6616077d89d6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "2546b181-9e95-4b43-a2c9-b6cad1008fb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 638
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10eaba50-81da-4256-b242-f98782037401",
        "cursor": {
          "ref": "24e59992-33f8-4034-b07d-1ae734070122",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "394cb3b4-01fa-4b88-8ed4-c0f2133a802e"
        },
        "item": {
          "id": "10eaba50-81da-4256-b242-f98782037401",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "00098088-94ed-44e0-83cc-db18f3c5382a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 656
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19633983-dc8f-4351-8d7d-1be60263c7a9",
        "cursor": {
          "ref": "552d95bd-0608-4535-bbbe-c3b238e705c8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "dd4c62cf-9b2d-463f-ae38-80a163fc3b20"
        },
        "item": {
          "id": "19633983-dc8f-4351-8d7d-1be60263c7a9",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "5209375a-c172-4c2e-a921-abd0c981c5e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 914
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "719d0087-1b32-40c4-a03d-f04a0a22a3d8",
        "cursor": {
          "ref": "84f37d66-fbfd-4e74-9dbb-caf252ef4cf9",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bf43c659-3e23-46af-969f-e3a4951992a7"
        },
        "item": {
          "id": "719d0087-1b32-40c4-a03d-f04a0a22a3d8",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "fcc3e60b-4d7c-4025-a626-5c303bf8a860",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 896
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c89da48-e04f-445a-ad57-1d2e35e6afaa",
        "cursor": {
          "ref": "308a1c7d-7d7e-42ae-acac-253b118338cd",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "5b3b8b69-d609-4d27-a74f-b4a783d168e1"
        },
        "item": {
          "id": "0c89da48-e04f-445a-ad57-1d2e35e6afaa",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "651feab7-2f17-43fa-832b-f2b1a27946ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f35440a5-f730-470f-ae75-f454be5acea2",
        "cursor": {
          "ref": "76d0d14b-aa54-4367-9ab0-60f63675d7c1",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "5cc806e5-38ff-4a04-9020-d36a2006e5eb"
        },
        "item": {
          "id": "f35440a5-f730-470f-ae75-f454be5acea2",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "6905ba64-78e5-4d72-bf28-06af9ca5d13f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 895
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "02149ea9-336e-4862-9bd9-929d0e0b0087",
        "cursor": {
          "ref": "95331d7d-2cf6-49c7-8fdc-744704cc56fd",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "8548611f-94a0-4271-98c5-efcdbf335f3e"
        },
        "item": {
          "id": "02149ea9-336e-4862-9bd9-929d0e0b0087",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "039dbedb-d444-4969-bebb-6d2a43e260bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 893
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c7488b5-8044-40fb-94f6-8da5672b2b0a",
        "cursor": {
          "ref": "68704608-88b3-4e43-90d8-7bed6a24676c",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "edfbdd28-be05-4b73-ace0-179b4736f41a"
        },
        "item": {
          "id": "0c7488b5-8044-40fb-94f6-8da5672b2b0a",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "4de47651-100b-4879-9b75-23f71bbb56b7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 719
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37964f20-1921-42da-b35c-86ad056f5d2f",
        "cursor": {
          "ref": "6904428d-f366-4ba8-bc34-1d271620413b",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "f2a847c1-bbd8-4121-9bc1-fd01cb671296"
        },
        "item": {
          "id": "37964f20-1921-42da-b35c-86ad056f5d2f",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "cc7dd5db-8573-4f5b-9922-55574d1bb0fe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 33,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7e500f57-0018-4418-8f4d-61655050019d",
        "cursor": {
          "ref": "e5bedcb3-6be0-44c0-bf61-ad0e53c65e19",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "543d14f3-1483-4927-b838-1120b585f323"
        },
        "item": {
          "id": "7e500f57-0018-4418-8f4d-61655050019d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "8ef0486b-831a-4d93-9e53-f5735812aaeb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 842
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "d8dbb385-d03d-427a-a5c0-50ee41702ca0",
        "cursor": {
          "ref": "162f574c-e532-4714-974d-51240858fd6b",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "49903bee-26db-49a7-a7c6-fa9d6d2d67d1"
        },
        "item": {
          "id": "d8dbb385-d03d-427a-a5c0-50ee41702ca0",
          "name": "credentials_issue"
        },
        "response": {
          "id": "6914e84f-d679-4d18-9dac-5f04905e7ece",
          "status": "Created",
          "code": 201,
          "responseTime": 9116,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false
          }
        ]
      },
      {
        "id": "356fb084-acb4-43a3-90ce-a41114fc8d6a",
        "cursor": {
          "ref": "75ce11cf-c1f5-4141-866e-cf6f7099fb1b",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "9758aa8b-c216-4f4e-aeaf-458d35cef7b1"
        },
        "item": {
          "id": "356fb084-acb4-43a3-90ce-a41114fc8d6a",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "20fe08d2-b988-447e-99cd-f1c856172ea7",
          "status": "Created",
          "code": 201,
          "responseTime": 8496,
          "responseSize": 760
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "02bc1dde-6a15-412d-aefe-01294dbe47b8",
        "cursor": {
          "ref": "53dd20ad-219d-46a3-975e-dde71f0c0b5e",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "46ae7b26-263f-4b13-866d-09baa45dccbe"
        },
        "item": {
          "id": "02bc1dde-6a15-412d-aefe-01294dbe47b8",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "5ddcb322-b300-427e-9c42-fc43b33f1338",
          "status": "Created",
          "code": 201,
          "responseTime": 9344,
          "responseSize": 714
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "41b76249-02b9-4544-ad6e-f16cacc1b132",
        "cursor": {
          "ref": "ac44e2ba-2190-4fad-a1a5-1219d6fce2f6",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "67e27944-af90-4568-b153-df482769ce54"
        },
        "item": {
          "id": "41b76249-02b9-4544-ad6e-f16cacc1b132",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "3964e8b8-5a19-4aeb-a9dd-5ac62c8e1c24",
          "status": "Created",
          "code": 201,
          "responseTime": 8176,
          "responseSize": 718
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "bdf59a07-7b73-4a17-9e5b-7aa5fafb482a",
        "cursor": {
          "ref": "19ea38fa-4511-492c-a5c8-0ec5aacaad8d",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "db40c612-c3b9-4e94-a7e8-f21a88dabaa8"
        },
        "item": {
          "id": "bdf59a07-7b73-4a17-9e5b-7aa5fafb482a",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "e7ce94ed-cbef-4567-b1e4-7c424fdf8b67",
          "status": "Created",
          "code": 201,
          "responseTime": 8388,
          "responseSize": 707
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata.verifiableCredential should have required property 'id', data.verifiableCredential should be string, data.verifiableCredential should match exactly one schema in oneOf\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false
          }
        ]
      },
      {
        "id": "b40aac2f-e623-4e5b-81a1-660be5eeaa22",
        "cursor": {
          "ref": "536de858-1907-4a4e-bb4e-d905862a5aa0",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "4d11b279-22c8-4e0f-9c0d-cf040c24e095"
        },
        "item": {
          "id": "b40aac2f-e623-4e5b-81a1-660be5eeaa22",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "dd8aeec1-4183-4952-bbdd-0252354a0baa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 46,
          "responseSize": 725
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "5e0fd33c-dad1-4e13-a561-87ce27f42709",
        "cursor": {
          "ref": "0fd6e836-e8fa-47e8-88fb-925490e69005",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "e3399793-612f-4b1a-b137-db07e55b2b62"
        },
        "item": {
          "id": "5e0fd33c-dad1-4e13-a561-87ce27f42709",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "c3905bcc-e1d1-47ed-9234-1c8f26f1ceb4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a833ad2-1469-4f7e-baac-a45047920ea2",
        "cursor": {
          "ref": "d51c5bfc-e240-439a-ab9c-7ad27e6dc43a",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "3633e8f2-a250-41cb-9c73-0636d57b6bab"
        },
        "item": {
          "id": "0a833ad2-1469-4f7e-baac-a45047920ea2",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "c9f5632c-b74f-481a-a019-519e07a4444c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ba28cea6-877b-430f-a0b1-afce0b090acf",
        "cursor": {
          "ref": "956b7b19-c967-40b8-992b-16ff9ffea29b",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "4d649e9c-7c26-478a-a25a-c3ebae89a9b5"
        },
        "item": {
          "id": "ba28cea6-877b-430f-a0b1-afce0b090acf",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "87e23179-b4eb-4a2f-9ca7-1122a756bf11",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9bcd865a-2a61-43cf-893b-ca9ef5b8d3e1",
        "cursor": {
          "ref": "43499dd5-a6c8-4d58-9df5-21f111181f27",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "f2caa3dc-5436-4ff5-a2e4-78ccace7dc0f"
        },
        "item": {
          "id": "9bcd865a-2a61-43cf-893b-ca9ef5b8d3e1",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "51539d15-c774-40c5-a5d1-77b68917a8a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fbf82e10-a9c8-4f38-bf44-839cda8f7a0d",
        "cursor": {
          "ref": "12117f83-b2dc-4040-a81e-551427dc66e1",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "3150d3f8-380c-467f-8f46-c5d2d2302c88"
        },
        "item": {
          "id": "fbf82e10-a9c8-4f38-bf44-839cda8f7a0d",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "e60ee3d2-28c0-4da2-b80f-d0f74026a88d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4038d887-4b97-49e0-b90e-346c959bd5d2",
        "cursor": {
          "ref": "1d5b4fdb-f1e9-4646-9bc9-39a156fbd53c",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "d07c4d56-980a-45bb-a2e7-05b34d6b9e61"
        },
        "item": {
          "id": "4038d887-4b97-49e0-b90e-346c959bd5d2",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "9278cfa5-a3d6-4e15-838b-530b333f4ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "567a6206-8a71-4faf-a38c-3f26edf75e4a",
        "cursor": {
          "ref": "ff31b17f-4b79-474b-85ce-2027add309bc",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "57f48953-b1ad-419b-996f-8f622af97b00"
        },
        "item": {
          "id": "567a6206-8a71-4faf-a38c-3f26edf75e4a",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "35ec4a91-88f7-401c-83b8-5fc73cc3d23b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca617729-a0ab-4be9-923d-f13f58911da4",
        "cursor": {
          "ref": "72a33348-e5ea-43f1-ab55-a27a40f005ad",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "20d2494e-81b3-4fc2-be86-5ffbeaf81526"
        },
        "item": {
          "id": "ca617729-a0ab-4be9-923d-f13f58911da4",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "2760f54a-6e5b-45e4-aec5-5741a4238835",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ab0ec76-e802-404b-8e11-9199baf3d710",
        "cursor": {
          "ref": "bb2994b1-dcb5-455b-b5bf-7916f10e91c3",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "902d8681-b66f-46cb-b3df-54f32301cb1f"
        },
        "item": {
          "id": "6ab0ec76-e802-404b-8e11-9199baf3d710",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "596d5bd5-9617-49c1-bf4a-45f03f99a293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "760b44e5-fadd-4eb7-9add-c8238e262294",
        "cursor": {
          "ref": "ce87e2b6-3bf3-4e2e-9c06-3d8eefcb8529",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "4f9d86eb-6ac8-42e3-a9aa-0638cbea1124"
        },
        "item": {
          "id": "760b44e5-fadd-4eb7-9add-c8238e262294",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "3cc083d9-b9a4-47cb-ba71-9d9c090c228c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "47ac1fe7-d4aa-4cd2-b6ed-773d1e69def8",
        "cursor": {
          "ref": "9ddce549-ba38-4433-8853-c58b89541804",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "5c92a013-3aee-4f66-bd72-f1cd6808d034"
        },
        "item": {
          "id": "47ac1fe7-d4aa-4cd2-b6ed-773d1e69def8",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "b9d6f445-6525-4b4a-91ea-f0e9a3a25957",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2dcd7f82-83c2-435c-ae3b-b996263c5352",
        "cursor": {
          "ref": "d4a68994-95b9-411b-904b-9c97d08428b6",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "a5f84007-cd90-4aa4-9018-6adfdc943f40"
        },
        "item": {
          "id": "2dcd7f82-83c2-435c-ae3b-b996263c5352",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "309f6715-fe95-4da5-a5fb-9b32e7809630",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a02d56f-fc72-4841-9fd6-c5e298b89281",
        "cursor": {
          "ref": "0ca9722c-e29a-4a7f-ba3f-7ddd56c08267",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "5ca5e4aa-bd9b-4270-adbc-aa1cf9b312c9"
        },
        "item": {
          "id": "5a02d56f-fc72-4841-9fd6-c5e298b89281",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "68a5a1cd-6082-46e2-81df-0656208278e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 531
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4cfa727c-f254-49dd-a616-276f4d2f3e0d",
        "cursor": {
          "ref": "37d4ca3b-8c06-4822-b758-0fcbe6885555",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "0649e03f-0b2e-4b9e-9fb8-2d547d7711e2"
        },
        "item": {
          "id": "4cfa727c-f254-49dd-a616-276f4d2f3e0d",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "658f7379-2f74-4de3-b578-0a945f7ab37c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 50,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "712941aa-32be-4644-9456-bb5b4fea4ad7",
        "cursor": {
          "ref": "078f8faf-b64e-418b-bec3-ae277c0c504c",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "2e54a9a8-0c49-40b9-bec9-6d229135b611"
        },
        "item": {
          "id": "712941aa-32be-4644-9456-bb5b4fea4ad7",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "4fb0bba9-ddc8-4f0f-9014-0c4eda5afa0d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df7badc7-9fb0-4816-a248-5ec7341b2c5e",
        "cursor": {
          "ref": "5b5c1973-720b-4106-9fff-f4763f773c98",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "ad9cd1e2-4b07-48f0-8699-c51280d9572f"
        },
        "item": {
          "id": "df7badc7-9fb0-4816-a248-5ec7341b2c5e",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "91563a1c-c694-4886-9f2f-818eac933937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da1ed487-b294-40f1-a930-9efddc56b1d9",
        "cursor": {
          "ref": "4ca8fd6f-c72a-4f34-b142-43086fe6c7dc",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "e1589c93-a027-40d0-9092-707178be6feb"
        },
        "item": {
          "id": "da1ed487-b294-40f1-a930-9efddc56b1d9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d065f1d1-499c-4914-896e-d633b2f504e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc97a919-e50b-4a22-b9c9-d5fcb2c2209c",
        "cursor": {
          "ref": "b0299fe4-5268-4df9-957c-1263d8c7a016",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "26483ebe-6214-4b27-9bcb-4431a7e58644"
        },
        "item": {
          "id": "bc97a919-e50b-4a22-b9c9-d5fcb2c2209c",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "f0211a07-c211-43a4-8bc5-4bb9197e988e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45416d7f-0875-4ce8-afca-9184549889c6",
        "cursor": {
          "ref": "bae8bebc-1cf3-44ea-863c-f49fca4cc4a8",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "66a75a80-c79f-4597-a896-3379184a3def"
        },
        "item": {
          "id": "45416d7f-0875-4ce8-afca-9184549889c6",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0252f11b-b017-47b2-b363-0cc8e3a99a71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58e4c35c-5731-4bb6-8c83-50fe7991948b",
        "cursor": {
          "ref": "9c13d942-6e75-4a70-8ec1-cd941eae1a43",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "6acf98df-50a1-47bd-a5bf-a46d5f2c09e8"
        },
        "item": {
          "id": "58e4c35c-5731-4bb6-8c83-50fe7991948b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "1190e61e-db1c-4652-b982-1a471537b13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ef8aad2-9a1d-4e58-a623-50e42827ba24",
        "cursor": {
          "ref": "bb2c5105-83bc-44ef-bd4d-d15d425c7120",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "255b281c-c863-4ba9-8c18-b53a0e1322da"
        },
        "item": {
          "id": "8ef8aad2-9a1d-4e58-a623-50e42827ba24",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "ecff3873-0414-4a58-9142-b2bef84053d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c263101-8056-49e9-8d21-5dcade8c68bd",
        "cursor": {
          "ref": "47ba9bf9-8c7d-43e1-be4b-58d14d57bacb",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "d36afe04-8992-4aba-803e-a9547e348537"
        },
        "item": {
          "id": "8c263101-8056-49e9-8d21-5dcade8c68bd",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "d1c7cf14-8a9e-4243-96b6-f81425db4202",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f8de9d-ce79-46ac-8ae8-576b6ed363cf",
        "cursor": {
          "ref": "9f7fc9ab-6de2-4ec9-8238-c1dcb8f148bc",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "8701ce8a-f736-4d3c-bb2c-7a0cb47f7bfd"
        },
        "item": {
          "id": "04f8de9d-ce79-46ac-8ae8-576b6ed363cf",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "bcd01495-f4fa-4961-8abd-198196cffba5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "419af4f7-e105-4f09-afa7-04b84b97570f",
        "cursor": {
          "ref": "7b78abdf-7ce8-46f6-9d97-7d19e9d44928",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "e0b4fa08-741e-44b0-a9ee-9814ae2ab3f7"
        },
        "item": {
          "id": "419af4f7-e105-4f09-afa7-04b84b97570f",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "a62ecc72-23ce-4d20-af3c-987d24d2a707",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42c296f7-4739-4621-b0ae-66568cc3f57f",
        "cursor": {
          "ref": "64fdd344-651a-4ae5-ad4a-23d50914d79f",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "5467e766-1deb-45ff-8627-5d44444be6b2"
        },
        "item": {
          "id": "42c296f7-4739-4621-b0ae-66568cc3f57f",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "cb38ea61-c003-435d-b584-4d7848270818",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 47,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d04a6978-2629-4a1e-a0f3-4c296c6d095c",
        "cursor": {
          "ref": "0c6e70fc-35c8-43ce-8c4d-9246b47d48ef",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "72c17481-f488-4c6b-8f6e-dc23b8eec858"
        },
        "item": {
          "id": "d04a6978-2629-4a1e-a0f3-4c296c6d095c",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "385ab0f9-66b7-4a6d-bda9-b342df989f46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 469
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c398bf8c-5dd2-4277-9756-208b8543998f",
        "cursor": {
          "ref": "047d918c-19d9-4e8a-9bef-1777b9cda5ca",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "91b285ed-a70a-4f2d-8f04-003cadb8da12"
        },
        "item": {
          "id": "c398bf8c-5dd2-4277-9756-208b8543998f",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "363dd27f-c0ce-4437-ad59-932def57b3e8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebfc5195-9142-42cc-9e3a-4f74640ee89f",
        "cursor": {
          "ref": "11800ef6-88bb-4ec3-9a57-a00d32a1f608",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "7a3ebea7-4f8a-4ee9-bb53-303abed9327b"
        },
        "item": {
          "id": "ebfc5195-9142-42cc-9e3a-4f74640ee89f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "d1c95aeb-7642-40c6-9bac-47d4a960f1f8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 484
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93f609b4-2c5c-446b-a719-4cdfde03109b",
        "cursor": {
          "ref": "c6a151ef-5a95-4ad9-9310-b2c69c8a76e6",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "5cf95165-1015-4a94-ba1b-89a97b568229"
        },
        "item": {
          "id": "93f609b4-2c5c-446b-a719-4cdfde03109b",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "a54f5a46-a614-4afe-a535-8071f872829f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 480
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd411b02-1734-49a5-97d8-218462353df0",
        "cursor": {
          "ref": "152f1b9e-da66-4cc8-bf73-d435b8dc933c",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "2be7cf42-3fe6-4a51-acc2-d901459ff33b"
        },
        "item": {
          "id": "fd411b02-1734-49a5-97d8-218462353df0",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "8af268af-1ab0-420e-95a4-2c60fc7a71e4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 483
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd6907aa-6765-4c70-8d2e-b28ae440ce82",
        "cursor": {
          "ref": "dfce4555-1f56-4c06-a4f9-ee80d0ffb7db",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "c0c5c03f-ead5-4747-be8d-052ab3d4c4e1"
        },
        "item": {
          "id": "cd6907aa-6765-4c70-8d2e-b28ae440ce82",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "cdad1908-d752-4898-b29a-4e71ca12bcfb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 481
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7d54a50-e667-44d5-b5a1-e4a3fe38f48e",
        "cursor": {
          "ref": "91b36023-4dfb-46f2-9eba-713759395582",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "990c3810-7f9c-4326-94ea-792a381a28b5"
        },
        "item": {
          "id": "f7d54a50-e667-44d5-b5a1-e4a3fe38f48e",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "dbad7663-ed70-47a0-9ada-aa1c8ca716cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 494
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32c1cbd2-f283-4bb5-87c6-c9566aef812e",
        "cursor": {
          "ref": "51f4cf4a-3274-476d-ae82-ede72c9840bb",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "f7af71f3-c44e-4508-a4db-5e7d7c59bf5b"
        },
        "item": {
          "id": "32c1cbd2-f283-4bb5-87c6-c9566aef812e",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "679ec142-d1f4-440c-9733-2053067e9ea7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 39,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cec5d44e-6923-43d0-9c48-c38ed32cd021",
        "cursor": {
          "ref": "2f527d4d-5228-4170-b265-0eda5cc91075",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "cd74ad3e-12e2-4e7a-9a4e-4e13b62c4429"
        },
        "item": {
          "id": "cec5d44e-6923-43d0-9c48-c38ed32cd021",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e7848ca3-ab21-46c2-bd18-59372780929a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 567
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8177185-ba3d-4b35-8338-294cb3b1f0a3",
        "cursor": {
          "ref": "b70eb3c4-ee8a-450e-b65d-63a1e7a8b241",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "50b11444-23dd-481c-b9ec-28fd7cbd7a35"
        },
        "item": {
          "id": "a8177185-ba3d-4b35-8338-294cb3b1f0a3",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "03d09555-a5e4-4cf7-ae21-1c60e9e8fe3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 616
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bad17536-3172-47b0-b998-9e97e952522c",
        "cursor": {
          "ref": "d2936bc4-c3fb-4f9b-82a4-efd4efe83ef1",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "782dbe16-3638-48d7-9869-2a600cb9ea82"
        },
        "item": {
          "id": "bad17536-3172-47b0-b998-9e97e952522c",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dcb7ab06-3a48-4027-b782-090449b4bd6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 572
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "543363c3-9a23-4d0f-a648-b7dd84249345",
        "cursor": {
          "ref": "a4ef0c70-529a-46af-960f-2a275f3e9b76",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "12a8f5a6-834c-4587-b002-1f3ff0fb2fc1"
        },
        "item": {
          "id": "543363c3-9a23-4d0f-a648-b7dd84249345",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "bf11eaa7-c816-4f37-be47-1ca2d8e7f632",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dce045b7-337a-408e-96dc-187b114877c0",
        "cursor": {
          "ref": "d65786e9-bf44-403d-a325-f4518a213329",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "285cb24b-4c64-4745-9b55-caaf2d3c25bf"
        },
        "item": {
          "id": "dce045b7-337a-408e-96dc-187b114877c0",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "a79ab02e-2e7f-46bb-ba15-7980c064dfa0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 571
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "df718810-e41b-487e-89e6-d744d5e52d69",
        "cursor": {
          "ref": "c6e44fa4-214e-4b29-b071-3e816d179501",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "1d56f8e4-1eac-431b-a6c4-2582d73e7ed9"
        },
        "item": {
          "id": "df718810-e41b-487e-89e6-d744d5e52d69",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "0d5360d4-543c-45bb-a3a6-9846595e9e8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 569
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49b1ed33-e56a-43c8-85b9-cc214c7d5ebe",
        "cursor": {
          "ref": "fcc5d94f-955e-4aee-990b-5ac8bebacd9f",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "f2b62279-d668-4c42-96fd-790e60f9f816"
        },
        "item": {
          "id": "49b1ed33-e56a-43c8-85b9-cc214c7d5ebe",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "4c215122-ff26-40e2-bd46-17f8df19f319",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 386
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eaa6d61d-d321-4611-a1cc-5f41dd112a61",
        "cursor": {
          "ref": "4dcf481d-b252-4581-901d-34d4006a5c4b",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "e39951f3-aab7-42bd-86c1-14d3502cc717"
        },
        "item": {
          "id": "eaa6d61d-d321-4611-a1cc-5f41dd112a61",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "0edcefee-f8d3-4d10-b9c6-14bea736c584",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 437
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "57672cf4-e42d-4cba-aeed-0aaa7b495ff7",
        "cursor": {
          "ref": "56fbccd9-b62d-4522-a0ac-fa726ad60d28",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "fcbe4a91-ef9d-401d-ab38-297b5ab424a8"
        },
        "item": {
          "id": "57672cf4-e42d-4cba-aeed-0aaa7b495ff7",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "7c597e92-a1c2-4c71-81c6-82eb0be17160",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 434
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afb78c2d-85bd-46fb-b7ed-aa47d59d075d",
        "cursor": {
          "ref": "e7f030b9-93d2-43da-b7b4-0a1b2a2a05ad",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "5822f4ff-dd8d-4f02-b3e5-8b55fcae9d24"
        },
        "item": {
          "id": "afb78c2d-85bd-46fb-b7ed-aa47d59d075d",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "49a4908e-d1f4-4e39-a373-8791ebe20426",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "460bea18-d3a5-4869-a58e-2409317ba268",
        "cursor": {
          "ref": "2582e34b-367d-4a16-a0e8-bd253077b9c3",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "ff073a14-f066-45c0-b0c6-9986487ab76a"
        },
        "item": {
          "id": "460bea18-d3a5-4869-a58e-2409317ba268",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d19e7e9b-2aaf-4a5f-a1bd-bc11cc6d0f3a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 504
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2abf79b7-13d3-4335-9e65-70bf9e7e3e36",
        "cursor": {
          "ref": "a9105c83-7f7a-4b74-b3b5-01a89f9bb88a",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "b0240fc3-1c8c-42fb-b5be-46392f964a85"
        },
        "item": {
          "id": "2abf79b7-13d3-4335-9e65-70bf9e7e3e36",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "6fd33edb-f967-4e3c-8a22-a58aebab8038",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 453
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "513c6f3f-1dfa-4f43-87d5-8b1cef441e88",
        "cursor": {
          "ref": "da4b51b6-7d6c-4adb-8e8b-dad91de79f09",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "0326442f-f185-45fa-8d51-d3ac49339cb8"
        },
        "item": {
          "id": "513c6f3f-1dfa-4f43-87d5-8b1cef441e88",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "548fe438-1c20-4310-bace-7cf9990429e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 579
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0d84be02-e449-435b-8af5-a58f8db5e682",
        "cursor": {
          "ref": "cf27c331-1123-4ab0-8180-b24b2f65bef4",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "1e4961e5-986c-47e9-84ba-133efa93adc4"
        },
        "item": {
          "id": "0d84be02-e449-435b-8af5-a58f8db5e682",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "a92a96ce-7719-4b54-82c9-5ad86bc30354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ae19207f-e02f-48f3-8f03-a8260d06fb67",
        "cursor": {
          "ref": "e8f540c6-117e-4d43-8e58-0658e0c87f45",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "b5072813-e96c-42a3-92b8-7e7eea89b524"
        },
        "item": {
          "id": "ae19207f-e02f-48f3-8f03-a8260d06fb67",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "00bd35a2-3156-4255-b398-fcd520a8716a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 439
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e63ab84f-e992-4f05-ac5e-f5d6bb0ef943",
        "cursor": {
          "ref": "41d1cc37-078e-41d5-a75a-4194207e711f",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1f509673-5425-411e-b092-67146e3672f9"
        },
        "item": {
          "id": "e63ab84f-e992-4f05-ac5e-f5d6bb0ef943",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "3b432f44-470a-4b2f-81e2-04eb5cc5d44f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 436
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2b7dad3-be62-4c3e-8c77-20f88ccb7222",
        "cursor": {
          "ref": "bcd42e27-d5aa-47ae-bed3-c08ee7b77b43",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "7f424ac6-07f2-49bf-a9f7-c1f1d759717c"
        },
        "item": {
          "id": "c2b7dad3-be62-4c3e-8c77-20f88ccb7222",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "74216960-2a0f-40be-a1dd-541d883bb86a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 438
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb7ea23f-12de-4464-a0e5-05d00ab1a43a",
        "cursor": {
          "ref": "dbb0b1c0-2582-48cd-9089-9932ee8ee82b",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "c48f3668-9396-4da8-bc85-c0a7a1849e20"
        },
        "item": {
          "id": "bb7ea23f-12de-4464-a0e5-05d00ab1a43a",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "240cc7d9-64d8-4252-b63c-8784c35b83b4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 455
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cbb81f14-b6ae-401b-bdde-d4a2cf0690da",
        "cursor": {
          "ref": "f885bb76-fab9-4807-a4b3-31e1988b5f18",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "f083b690-6cce-4f5b-b5e3-3363c6d21c79"
        },
        "item": {
          "id": "cbb81f14-b6ae-401b-bdde-d4a2cf0690da",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a7daa83a-0ecd-4a6e-8237-743c1f1a7675",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 448
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0fa916e8-7f4b-487c-a113-940762ef2623",
        "cursor": {
          "ref": "07decfbd-167d-4ccd-9f94-a724f1767017",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "5483363b-c996-4dd8-b72e-a40d8a774241"
        },
        "item": {
          "id": "0fa916e8-7f4b-487c-a113-940762ef2623",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "e0300337-4b96-4674-80dd-1e76f4650806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 508
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "20d8220b-e87e-41b2-8db4-2503b70595f5",
        "cursor": {
          "ref": "15690f91-c41d-4976-9dd7-f7ca5baf7ba7",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "16698c17-fb78-407a-9671-6e19710a55db"
        },
        "item": {
          "id": "20d8220b-e87e-41b2-8db4-2503b70595f5",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "c04fa1cd-2bac-47db-bd38-07715c6aa41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 461
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfcb5ae1-f28f-4743-9439-52a0cfb3b756",
        "cursor": {
          "ref": "74e345e0-ce8a-464d-bdd9-bf4f9886f988",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "0e017672-3353-43e4-a92e-0ef6c62297ed"
        },
        "item": {
          "id": "dfcb5ae1-f28f-4743-9439-52a0cfb3b756",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "1c21bf19-0944-4ba6-a57e-3ce606de692e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3a9d6dc3-55ef-46e0-b25e-36e0234f03c6",
        "cursor": {
          "ref": "372eb8b0-aad0-4e44-9c2a-697288c012de",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "4154df6c-629e-4123-bcc9-9bd7acb19eff"
        },
        "item": {
          "id": "3a9d6dc3-55ef-46e0-b25e-36e0234f03c6",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "7ad79a5a-a213-42bb-96b0-508aed22b574",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 52,
          "responseSize": 460
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "238a7b75-9a62-4a4f-a5f4-e1bb968319b0",
        "cursor": {
          "ref": "d121ea28-8353-419d-a440-fb1729a4f0bf",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "7e8a1e20-30ac-447e-9ad9-cab100ce2253"
        },
        "item": {
          "id": "238a7b75-9a62-4a4f-a5f4-e1bb968319b0",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "affb81df-a4ef-46f9-a4b7-4ef3cb990411",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 56,
          "responseSize": 458
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f63b12c-b994-41b7-8ae8-ea4bef157756",
        "cursor": {
          "ref": "d3d7b93e-030c-420f-ac22-0476d7b6fd5f",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "4856cb7a-1529-4627-ac8a-266a7d97d521"
        },
        "item": {
          "id": "2f63b12c-b994-41b7-8ae8-ea4bef157756",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "dc008582-391d-423a-8680-64b4eb5b0656",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 471
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f0e2d675-f711-41ac-aaad-629571cbb76f",
        "cursor": {
          "ref": "60424e38-b7ac-4928-8e35-8ce0266da74a",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "6eb9653c-9fc6-4138-a7ab-68b2652c97ec"
        },
        "item": {
          "id": "f0e2d675-f711-41ac-aaad-629571cbb76f",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "8b40847e-c778-452e-9ce8-9cd7d30ffb96",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f47fef3c-c920-44fa-bc08-1e4b708596d3",
        "cursor": {
          "ref": "c4e5e082-4455-48fb-b1f1-b7f4f2867bba",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "c725dc77-1532-43ba-b30e-fd29ba7dc54a"
        },
        "item": {
          "id": "f47fef3c-c920-44fa-bc08-1e4b708596d3",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "aecfc2d7-3a18-4d97-bad1-87e3e0a32f64",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa9caed3-45e5-4023-a913-ab428f7101de",
        "cursor": {
          "ref": "bba4ceb1-5fe4-412b-a2df-f30d2e37fd88",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "6b936a7a-bb85-4229-af2f-e5e3863ffd9d"
        },
        "item": {
          "id": "aa9caed3-45e5-4023-a913-ab428f7101de",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "e86caea9-22f2-4670-a4fe-1fff87b50b14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "934e04fe-f095-49b6-9845-38885ab685a5",
        "cursor": {
          "ref": "7422ef40-4c9f-428a-89ac-5f28da5c4068",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "f8fa7cde-bca9-4261-af8d-abfc2c41a87c"
        },
        "item": {
          "id": "934e04fe-f095-49b6-9845-38885ab685a5",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "2aa00ba0-8e33-4d89-85ee-cf48dae97040",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 498
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c41050c-b1a4-40b0-8e15-1d2d06fdabe7",
        "cursor": {
          "ref": "f957ea00-ad29-4a84-b341-f0b701bb86f0",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "7925a1b5-ea59-4c81-bdab-a515a42b6cc5"
        },
        "item": {
          "id": "0c41050c-b1a4-40b0-8e15-1d2d06fdabe7",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "a4c3e6a3-a40a-437a-a809-cad31bb8164d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 501
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b40933e-e994-4f9d-9588-9216c56cb323",
        "cursor": {
          "ref": "07b839e9-0bae-44a7-b0fd-c558c9c2bdce",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "f1494ce3-c85a-4f41-9b46-0b4f974bc3a0"
        },
        "item": {
          "id": "5b40933e-e994-4f9d-9588-9216c56cb323",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "c61e34a3-e422-4c19-b55a-053559324e49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 499
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "59f3c375-67b4-4b1a-81b6-dbf0fd4fdd4e",
        "cursor": {
          "ref": "863ac649-f120-45b3-b9ad-1a4234c50e29",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "4824087c-3777-4331-8406-e6c86a2d568a"
        },
        "item": {
          "id": "59f3c375-67b4-4b1a-81b6-dbf0fd4fdd4e",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "3a817635-a93c-4944-bccb-3bdb09278fe6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ffcffac-2e42-441e-a992-97f55c1af64b",
        "cursor": {
          "ref": "a4fefe16-3caf-4d40-91c4-24ef8cca46ea",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "21cbae7e-b347-442b-96ba-088129ac80b4"
        },
        "item": {
          "id": "3ffcffac-2e42-441e-a992-97f55c1af64b",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "ab8194f9-2c5b-40fc-b0aa-66d6f447c7ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 502
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e98f937-3e49-4f44-9f00-30fc9dbecf63",
        "cursor": {
          "ref": "2b837de0-a9ec-45ac-b2a8-7fc081300944",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "251f4a95-b1c9-4759-964a-42b8f189feb3"
        },
        "item": {
          "id": "5e98f937-3e49-4f44-9f00-30fc9dbecf63",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "cc2943f2-ba96-4a7f-b591-ee9a1fd16538",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 493
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cfb6b06b-e181-4ea2-9497-e7723e539dec",
        "cursor": {
          "ref": "9046cce6-13af-4ae9-93bb-ac4800ca6841",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "706e76b0-d0e6-4489-94c9-8402a15a1ffb"
        },
        "item": {
          "id": "cfb6b06b-e181-4ea2-9497-e7723e539dec",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "41b28533-81c3-44c0-9278-8b3c7d8d56e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a4669e6-d964-4a3f-999f-d99c3c48b7e2",
        "cursor": {
          "ref": "0f09a4d6-cd78-4f4b-b4ea-f5fce61706fe",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "25f63ade-4a8e-4677-a8f9-745e59a5c599"
        },
        "item": {
          "id": "5a4669e6-d964-4a3f-999f-d99c3c48b7e2",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "5ea91382-bac3-4178-ac3a-88eabdcbf3c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 42,
          "responseSize": 492
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f154ffb-2aba-4ed1-a2b5-985b5564576d",
        "cursor": {
          "ref": "fdd2829f-7cfb-4739-9fc9-2089722c3bd3",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "7b43d76f-ed5b-4328-9262-37d74830d786"
        },
        "item": {
          "id": "7f154ffb-2aba-4ed1-a2b5-985b5564576d",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "53bef550-81b7-4a5f-b995-b8050e35a27e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 490
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c818ce4e-f519-4a30-b634-b6bde30b80a7",
        "cursor": {
          "ref": "c65a0bc8-6d07-40e7-934c-628fbefd93ff",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "e4eb6cf1-0557-4935-82a6-0e132c9b61f7"
        },
        "item": {
          "id": "c818ce4e-f519-4a30-b634-b6bde30b80a7",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "4fc4f725-7d66-4d98-9687-c3fa71ed99fd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6af1b2aa-8bce-4086-adb9-c3759ce6cde4",
        "cursor": {
          "ref": "fcd91e41-60b1-4f81-be7c-dbf3b5faa8b6",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "7d5d4af2-e527-4046-828f-5598296627b2"
        },
        "item": {
          "id": "6af1b2aa-8bce-4086-adb9-c3759ce6cde4",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "07cb920c-ea7d-4d38-a4d9-da8cb9d32527",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 280
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "948871f0-17db-480b-8de1-84a9cf3ea5ba",
        "cursor": {
          "ref": "abeb7497-7cb9-42c6-9b15-7b04255d384e",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4abd3d08-b962-46ea-9406-8ac144b79f38"
        },
        "item": {
          "id": "948871f0-17db-480b-8de1-84a9cf3ea5ba",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "ad3f91be-3cc3-4beb-8311-3d274396a945",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 96
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "357b59f8-9360-47c6-a1b8-85e59784c366",
        "cursor": {
          "ref": "acb4d633-fcb4-44cf-88cc-4ab19d278d2e",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e4cee27a-4a46-4090-8206-817377cd149d"
        },
        "item": {
          "id": "357b59f8-9360-47c6-a1b8-85e59784c366",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "e866023f-6b4e-45f5-9b07-ad0c9a7fa9ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d8870cdb-f8df-4811-a0ed-55b177ac05cb",
        "cursor": {
          "ref": "f9988702-e5de-4d9c-98dc-6f85461c8896",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "cf9e753c-0b1d-43d0-87a8-3a9f94e7b75e"
        },
        "item": {
          "id": "d8870cdb-f8df-4811-a0ed-55b177ac05cb",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "1bf88487-5c48-43cf-8a8a-c11f9d77c341",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 599
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "33df3f53-42fa-46f0-9ba4-2dc5f52e9299",
        "cursor": {
          "ref": "8650f465-a7b3-4326-85c6-c2fdefc232ab",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "9fb5c13c-2d1a-4e51-970e-31a617f297b1"
        },
        "item": {
          "id": "33df3f53-42fa-46f0-9ba4-2dc5f52e9299",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "507bebf0-b037-442e-b74f-fc735193ae17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 600
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "45164d1e-15c8-419d-a6aa-595d6388f709",
        "cursor": {
          "ref": "efbc1aeb-a298-4894-beba-2b263100c626",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "a9c3a412-e96e-4476-9867-bef3fdf83fe1"
        },
        "item": {
          "id": "45164d1e-15c8-419d-a6aa-595d6388f709",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "eecd8c6c-f0f2-472b-85cd-e14e895b4400",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 598
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc8e76ad-2c69-44ba-a00f-62d03c6bc8be",
        "cursor": {
          "ref": "fba6ce95-fe25-42fb-bed8-e1e81fe3e6d7",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "51738003-2b5f-48be-be2a-7a570bfa8948"
        },
        "item": {
          "id": "bc8e76ad-2c69-44ba-a00f-62d03c6bc8be",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "3c5063d0-ca13-419d-ad3b-6b4391a85628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1266
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48a1be96-1ee5-4df0-8e70-99337218d2c5",
        "cursor": {
          "ref": "90dd6954-d150-4f72-92be-9cbe005cdd82",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "0cbc3d9a-bfa7-4f98-ae10-b1639e1a6625"
        },
        "item": {
          "id": "48a1be96-1ee5-4df0-8e70-99337218d2c5",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "d3ee4d1f-a438-4f40-8be5-3d0e6a80b6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8abf67fb-ca36-46ad-8bae-2c01991c1d1d",
        "cursor": {
          "ref": "5175f002-d439-459d-892d-236772336544",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "f86682a6-6b89-4ffe-a556-19b27b36333c"
        },
        "item": {
          "id": "8abf67fb-ca36-46ad-8bae-2c01991c1d1d",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "cc36c614-051e-48b1-bd9e-113d8f7dc4e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1423
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63c13e47-da1c-41cf-b161-83a78d0516b5",
        "cursor": {
          "ref": "aca1da4e-bac7-4e74-991e-806193d81307",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "50305c01-dce9-4a41-8caf-d8e2df49a7ac"
        },
        "item": {
          "id": "63c13e47-da1c-41cf-b161-83a78d0516b5",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "8f766b85-7f2a-467c-afc8-2baa7c0a38c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1424
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "273203b7-97c5-4517-b547-49eaba2739f7",
        "cursor": {
          "ref": "86f88ab3-cbfa-4096-bf6f-d4fda0b8ecf1",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "e14f7971-24a6-4059-9593-78baa7de6fd4"
        },
        "item": {
          "id": "273203b7-97c5-4517-b547-49eaba2739f7",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "54cb569e-cecc-40de-98a9-14783a15deec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1322
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0247a0fd-071a-4224-ad86-10eb59c3b8ff",
        "cursor": {
          "ref": "a91d03a2-d4d1-457a-81cb-369ef29cd9c3",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e5b715bb-6498-450c-adff-c513e9205438"
        },
        "item": {
          "id": "0247a0fd-071a-4224-ad86-10eb59c3b8ff",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "a9605ca0-7c47-4914-bb5d-6e405d0be434",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "437b3033-eb9b-4bd1-afc0-7edebd9fbfb8",
        "cursor": {
          "ref": "9d3b38ff-c48f-4834-9a5e-033faf90f00d",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "ad34615e-4230-469a-a732-1e6dde45bbb3"
        },
        "item": {
          "id": "437b3033-eb9b-4bd1-afc0-7edebd9fbfb8",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "d80b3d60-2895-45e4-b5b9-e1ec95a1a239",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1487
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7bbaf103-dfc9-4a65-8d20-f0f6c5dca683",
        "cursor": {
          "ref": "9235134f-faea-4bf4-a62b-0411ffb97fc3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "2a8b2862-51fb-486b-b7e2-08d10a1023e9"
        },
        "item": {
          "id": "7bbaf103-dfc9-4a65-8d20-f0f6c5dca683",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "1b273c32-10eb-48f8-9f42-92c352b50a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53a881f0-7ada-46ba-b2a7-e0f6a3314c0d",
        "cursor": {
          "ref": "f71b3026-9e69-49ea-9aff-6df87de8db44",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "12da34d2-500d-47d3-a5e6-bf8c34443d7a"
        },
        "item": {
          "id": "53a881f0-7ada-46ba-b2a7-e0f6a3314c0d",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "49e3804a-d31b-47d8-8063-ef5a88cf6b51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1476
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5ed3f7a-23b7-40d2-a672-3ec3f449aa34",
        "cursor": {
          "ref": "7d9d94f0-66b6-4c64-b5f8-9da583ad0a81",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "8999ab0c-3f1f-4bc7-95af-716f5eb3e7fb"
        },
        "item": {
          "id": "e5ed3f7a-23b7-40d2-a672-3ec3f449aa34",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "dde9f88d-0f66-4be6-9f17-767ebfcaf13a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1477
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e355d043-20ff-4915-899c-65ef723f2cf1",
        "cursor": {
          "ref": "f784634d-9625-4b30-a85c-d33bbb836066",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "3654f1f0-9f40-44e0-bf0e-11787efda6f0"
        },
        "item": {
          "id": "e355d043-20ff-4915-899c-65ef723f2cf1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "70e88c27-be79-44d1-94c3-e543923093c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1375
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0a8733de-2dac-4f7b-a2f9-04c4f38f209f",
        "cursor": {
          "ref": "0158c81e-690d-4d3e-af66-679ae28536ef",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "40ded6bd-b3e8-4665-a320-f78703300f7f"
        },
        "item": {
          "id": "0a8733de-2dac-4f7b-a2f9-04c4f38f209f",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "6cf5730b-cbc1-4a76-aa01-1eff242feb62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1329
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b0345941-d0d3-41cf-9bc5-c215de3efe6a",
        "cursor": {
          "ref": "502a7e9c-c7a4-4133-9d05-253dd1ed6d0d",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "949b30b5-1996-48f8-aced-2d4732963223"
        },
        "item": {
          "id": "b0345941-d0d3-41cf-9bc5-c215de3efe6a",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "3d85f549-1376-45b4-b76a-301205aad371",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1285
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "37e8ca3d-4cdc-4e58-a346-384ab015dca1",
        "cursor": {
          "ref": "a23cd979-f450-4ff8-8fa5-ef3f7af39ccd",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "10348b67-fbfa-4c8f-b8d2-1851b7be2a95"
        },
        "item": {
          "id": "37e8ca3d-4cdc-4e58-a346-384ab015dca1",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "34fa6e2c-8625-4a6e-8cc0-017170665b33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8adca6d2-f353-4a71-a5a6-df6d57e69ba7",
        "cursor": {
          "ref": "cf7da5c1-3268-4cb2-99be-516b15b63b67",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "fc1eb4d5-f79f-4154-9fff-6804940c4e9d"
        },
        "item": {
          "id": "8adca6d2-f353-4a71-a5a6-df6d57e69ba7",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "87cb5efa-11b8-4596-b67a-95d89be3c5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1284
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31411355-2382-4697-a80c-71185a76175c",
        "cursor": {
          "ref": "801d4611-3624-4b46-a9bc-3d2b5f166528",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "0ff1f2ed-94f7-4f0d-9dbf-989f325b7f69"
        },
        "item": {
          "id": "31411355-2382-4697-a80c-71185a76175c",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "255611a7-ffa3-4f8d-a24c-aacfaad17e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 44,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea6da1f-4cc0-47d6-9817-601ae0f0b50b",
        "cursor": {
          "ref": "9e30ffd1-b2ef-4cfa-8a21-061df6e28a1e",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "d06ce2d2-7f83-43e5-bc30-0e1c20e43818"
        },
        "item": {
          "id": "aea6da1f-4cc0-47d6-9817-601ae0f0b50b",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "0f0649c1-c48b-4113-8f33-400e138d72b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1315
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "93144a0a-3f1d-47b9-94f1-51404ea913c0",
        "cursor": {
          "ref": "6bc6d2b2-93b6-4a8f-aec4-69008256157b",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "83421074-d894-464f-8f36-4611c567dc45"
        },
        "item": {
          "id": "93144a0a-3f1d-47b9-94f1-51404ea913c0",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "71f48dc2-ebf3-4daa-a7d8-85e4d959a78e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3cf5c986-f6a8-4c3f-8ad9-67e630835428",
        "cursor": {
          "ref": "c41de3f4-9cea-4418-a7c5-8e7b61a57105",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "533b4868-5e70-4243-923c-6b92fd93d155"
        },
        "item": {
          "id": "3cf5c986-f6a8-4c3f-8ad9-67e630835428",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "9464b95c-81b5-43fd-b238-1756e8962a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94c42a2d-a7e2-4360-ba50-29f929fe02e6",
        "cursor": {
          "ref": "34d70972-b6fb-4bd8-a56b-0930972b6567",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "393a67d1-889b-40d7-bbf4-a74d07e2f59e"
        },
        "item": {
          "id": "94c42a2d-a7e2-4360-ba50-29f929fe02e6",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "c88a5656-dbf0-4f0d-bacc-c13da1f051d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a95c69c8-9231-45bb-bd12-deb0bf6e3be8",
        "cursor": {
          "ref": "d8caba67-66db-4771-aa04-03d7809bf91b",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "4b51569f-c1f2-4b68-93c3-a1abed5eca2e"
        },
        "item": {
          "id": "a95c69c8-9231-45bb-bd12-deb0bf6e3be8",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "9b170be7-591a-45f7-9858-c575eabbcd4b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1372efb1-4520-48eb-8f65-76f48e5e5c1e",
        "cursor": {
          "ref": "de173066-20eb-45df-9b08-c178e59f49c6",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "974545b4-1f96-4b02-be60-5ccfe0369cce"
        },
        "item": {
          "id": "1372efb1-4520-48eb-8f65-76f48e5e5c1e",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "cd290ffe-98a4-4a26-831b-11fb7ec1fa20",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1327
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a8c64f3d-ed92-4048-9be1-b090c060972c",
        "cursor": {
          "ref": "e3f81cb3-8856-49d1-81a6-8508cc18318b",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "5bd4bcfb-6d2c-4b2c-9a67-69b84b97613e"
        },
        "item": {
          "id": "a8c64f3d-ed92-4048-9be1-b090c060972c",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "8ab06ee8-ff1d-47de-8ef6-bcd1b3b4a896",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b4aebb53-b5ac-4023-b97f-8f7d03f0af6c",
        "cursor": {
          "ref": "a8219827-dcd6-4cd9-ade5-4674d28eaa24",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "83d0b616-ede6-43c0-8133-e546e6982e81"
        },
        "item": {
          "id": "b4aebb53-b5ac-4023-b97f-8f7d03f0af6c",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "958f41e8-930c-4d50-923b-16012699a875",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1319
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a722578-bdb3-4547-a230-c338e1ea3e03",
        "cursor": {
          "ref": "6b97fcaa-53ff-4645-914e-45bf6b9cbeae",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "3f229643-77ec-4a9d-bcd0-62b43630a57b"
        },
        "item": {
          "id": "7a722578-bdb3-4547-a230-c338e1ea3e03",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "1e090a53-f90e-4424-bf4d-97394f00c679",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52fd1ba6-70fe-4e49-b8b0-f3e5133416b5",
        "cursor": {
          "ref": "0432ef2d-5099-4f86-9032-652f42198f91",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "931e9426-0c0b-4f19-8b0f-90b20bc23a23"
        },
        "item": {
          "id": "52fd1ba6-70fe-4e49-b8b0-f3e5133416b5",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "115de66b-c2e8-4cb0-b1b4-bbaa38e0fedd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1308
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc7381c2-a64b-49d9-a05a-d8080b231c0e",
        "cursor": {
          "ref": "ca175f3b-d48d-4a2c-ac78-76eaba323127",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "a18e1ed6-614b-4701-a47d-fa2ee517be5c"
        },
        "item": {
          "id": "fc7381c2-a64b-49d9-a05a-d8080b231c0e",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f37dcdbf-c28e-4d06-9daf-b06e8a392e16",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1309
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64747e57-de70-41df-87d3-9454e0e724f3",
        "cursor": {
          "ref": "70969384-f881-439e-b92e-860152be0e2d",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "a6cf7413-ac41-412e-bc1c-4668546e4bd0"
        },
        "item": {
          "id": "64747e57-de70-41df-87d3-9454e0e724f3",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "84ffcba5-276d-423e-8578-b6b72daeb90a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1335
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ebc7f710-ccf9-4bba-8aff-02d6e53ce622",
        "cursor": {
          "ref": "61bae655-06b3-42e7-9b27-4771a7cf7060",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "a34576cd-2846-45a2-a1d2-44b1ef5ae1c0"
        },
        "item": {
          "id": "ebc7f710-ccf9-4bba-8aff-02d6e53ce622",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "3e665d7f-5993-437e-9bcb-90bd41078f98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1283
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9ac91-4993-4e57-89ca-66025e3f600f",
        "cursor": {
          "ref": "95d4ae8c-9493-410a-97ac-9922e82addac",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "6b051968-cb4c-4017-9b1c-04dd240db66a"
        },
        "item": {
          "id": "46f9ac91-4993-4e57-89ca-66025e3f600f",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "81e39a3d-cb28-4a10-9841-cf37ab10b08f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 1756
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "483a67f5-84fd-4576-8801-959ea5842584",
        "cursor": {
          "ref": "85814683-7aea-4d48-a9ca-17a4b98313e9",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "3404fbe8-398a-4541-be92-abcf874b0683"
        },
        "item": {
          "id": "483a67f5-84fd-4576-8801-959ea5842584",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "2f9975c4-1309-41c2-89a4-e2b7ca6a140b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1742
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b9bc943-5270-4215-883c-ca77d962965a",
        "cursor": {
          "ref": "aa9fd602-c398-4e06-8389-d44dc34ec67b",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "55e794ca-4f0e-4e44-bb54-548c7f29ea10"
        },
        "item": {
          "id": "6b9bc943-5270-4215-883c-ca77d962965a",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4984d2c6-6d66-480f-bfd0-4876221f3bf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1740
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c649497-41ce-4ed7-9dbc-435343b21003",
        "cursor": {
          "ref": "a84944af-d171-4760-a06b-cf41f521c2a4",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "e64c14b2-a0b9-4b28-aad2-033df124c4e4"
        },
        "item": {
          "id": "8c649497-41ce-4ed7-9dbc-435343b21003",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "57e706ea-88aa-4345-83ed-480607b13285",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1741
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d7d992a-1f9b-48b1-b8c8-77fe81d778b1",
        "cursor": {
          "ref": "b56a2ef3-5a71-4513-931c-33f7c8dc3ffc",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "edaf711a-0bc0-4c8c-829c-a3a682568914"
        },
        "item": {
          "id": "7d7d992a-1f9b-48b1-b8c8-77fe81d778b1",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "1b3bc0d6-7023-49f5-a9bc-d09b97f60b61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1772
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "be68c319-7ca7-41d7-a296-1681bc4d53f1",
        "cursor": {
          "ref": "b73c3364-55b5-4798-a47b-d26212f29caa",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "4e094d32-6542-463a-999d-d0e5746e3ddb"
        },
        "item": {
          "id": "be68c319-7ca7-41d7-a296-1681bc4d53f1",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "3300efd2-30f5-426c-983f-caff583cc4bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 2115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "16d14d87-2324-470e-ad4b-0eba7d01191f",
        "cursor": {
          "ref": "b8c6e461-cfed-47c0-b928-18e84d4b53c0",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "3e37bf9b-1a81-450b-b081-66f96c315851"
        },
        "item": {
          "id": "16d14d87-2324-470e-ad4b-0eba7d01191f",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "0024f034-a13f-4683-aa16-a092ad1de4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 2101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f7527e8-079b-41c8-9041-4db586aead7f",
        "cursor": {
          "ref": "072abd87-92e2-49eb-8e30-93cbfe4d311a",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "c2c63d83-612e-47d9-b052-c6c72ca7c0ae"
        },
        "item": {
          "id": "4f7527e8-079b-41c8-9041-4db586aead7f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "73481eae-2103-473c-963e-5a0a6c9724bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 2099
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f20dbe58-8e16-4036-ab5b-6471763892ac",
        "cursor": {
          "ref": "1d3cd998-b826-4333-87c1-4e89df303a54",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "56557736-c813-40b8-9f2d-45f61cf87c0b"
        },
        "item": {
          "id": "f20dbe58-8e16-4036-ab5b-6471763892ac",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "ec1e1f12-8a97-4710-b43f-3fb5ba9dc944",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b643ea99-3120-4e12-b3c4-d539eef0bea4",
        "cursor": {
          "ref": "477e80f4-5218-4935-8b43-bba72476e022",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "0bcbb6ce-d6fd-48d0-9b17-0f8cab70f89d"
        },
        "item": {
          "id": "b643ea99-3120-4e12-b3c4-d539eef0bea4",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "601b42f9-2ea5-43b7-bfd7-e7ee4aeda7c8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "42b4e9c7-628b-4bfc-812c-ce42ed328987",
        "cursor": {
          "ref": "e752014e-91c1-41a6-958d-38e7f90ac166",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "d7891e85-73f3-42a0-ada8-840b8d9ecf2c"
        },
        "item": {
          "id": "42b4e9c7-628b-4bfc-812c-ce42ed328987",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "7f4ebc06-8b0d-4974-b99a-a302dd039f8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1325
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5b537b6-8301-4144-87fe-6e75cbb8e3c4",
        "cursor": {
          "ref": "cc705fb5-30a3-4a07-b0f5-760fc8e5557a",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "1c2aa125-ac99-4a5d-b833-2967cad13bfe"
        },
        "item": {
          "id": "b5b537b6-8301-4144-87fe-6e75cbb8e3c4",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "25e645c8-5873-4daf-adff-531d63800b55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1359
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f01a8ebf-c832-4519-a3d1-9c7932b2809b",
        "cursor": {
          "ref": "f685b6a2-4846-47ea-b7b3-3d49a9791d45",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "907f0a5a-f8dc-4171-a3da-b0e5effd9a28"
        },
        "item": {
          "id": "f01a8ebf-c832-4519-a3d1-9c7932b2809b",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "ed244867-f9cb-4600-8eb7-9a919cb32a63",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1340
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f9bb1ce1-e76e-4e90-bc6b-6926cc767342",
        "cursor": {
          "ref": "5f7828bf-e4a2-439d-ae83-4b38e73e1bb8",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "30bd96cf-3bb9-4a79-86fa-0001f282d0d7"
        },
        "item": {
          "id": "f9bb1ce1-e76e-4e90-bc6b-6926cc767342",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "2c6e3fa9-fed2-4a5d-b345-4e1198151d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1338
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e7931175-fa2f-45ad-983a-417a3f042043",
        "cursor": {
          "ref": "9e897698-7531-4196-943b-bbb0e1429898",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "106a971b-d4e4-431f-9ac1-e3d8861f6e26"
        },
        "item": {
          "id": "e7931175-fa2f-45ad-983a-417a3f042043",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "b560ef24-9d17-4365-ae63-47588a6dde3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 1339
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4abf069-292a-43f7-b422-4acc73e7fdd8",
        "cursor": {
          "ref": "3be61597-eb0d-4796-8358-ef28e398f86d",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "e0e329e4-2535-4662-a3b8-e40a5311fc31"
        },
        "item": {
          "id": "a4abf069-292a-43f7-b422-4acc73e7fdd8",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "9b3d537f-0665-42b0-bdea-e5b525c17a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1365
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a755e6f8-26f1-43c6-9d8a-5e28dd5c6203",
        "cursor": {
          "ref": "3e4402bd-e2a9-4c14-a4ee-045d1b681b86",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "5ceec363-2b86-4a34-8bb2-9a9cb217407c"
        },
        "item": {
          "id": "a755e6f8-26f1-43c6-9d8a-5e28dd5c6203",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "fad72e5f-7805-4f3b-977f-ff9699bffd8a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1395
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ed008b0-e9ac-4443-ba71-8beaac14890e",
        "cursor": {
          "ref": "3e23dde2-4485-4042-8e2b-f0c6d7b93666",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "2bf16eb6-62ea-4c88-a27c-0f743c691342"
        },
        "item": {
          "id": "4ed008b0-e9ac-4443-ba71-8beaac14890e",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "e6e23df7-611b-4596-a1c0-a4a44df25722",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1328
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccf421b-61b1-4ec9-9b7f-dfbd78909722",
        "cursor": {
          "ref": "4dddbd22-a5ed-423f-acb9-56a0aee157b1",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "5918c0d1-a63c-43b4-a543-653c0c97324d"
        },
        "item": {
          "id": "9ccf421b-61b1-4ec9-9b7f-dfbd78909722",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "2e1840a0-f537-4004-9f9e-3879a1e9f686",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 48,
          "responseSize": 1829
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcb4b8c5-79f4-48bc-b067-a3502c049f19",
        "cursor": {
          "ref": "98946951-5252-449e-bf8f-aa675fd4a0eb",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "91d8b43d-8219-4020-9e1d-fa197cf6d64b"
        },
        "item": {
          "id": "dcb4b8c5-79f4-48bc-b067-a3502c049f19",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "06ec7a93-a78c-4946-b0c5-00f4203a276d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1628
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c41d0db-f4e8-44c5-9bd1-28241dc4256e",
        "cursor": {
          "ref": "7742a8a5-39aa-4dab-aeb9-04c6cd2c7367",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "3fb5c0fb-6a3b-4648-a2d3-07a6f1b3242a"
        },
        "item": {
          "id": "8c41d0db-f4e8-44c5-9bd1-28241dc4256e",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "2145fe85-701f-4018-bdc4-55501586c6e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1626
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a3ebad99-51af-4009-8322-f4e8d0d38b14",
        "cursor": {
          "ref": "a91d5764-6cc4-4b19-8bde-8556fba5621e",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "e2404230-6d88-4f69-810a-69b2c7bde9e1"
        },
        "item": {
          "id": "a3ebad99-51af-4009-8322-f4e8d0d38b14",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "73706a53-ac60-4571-8bb5-bca6fe4c5ecf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1627
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49164a8d-30dc-413e-979d-cda3e046aad8",
        "cursor": {
          "ref": "3779f17c-2a65-4388-8180-26b18a8f3885",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "d743d68f-cac1-47b1-bcb7-3fa67c54485b"
        },
        "item": {
          "id": "49164a8d-30dc-413e-979d-cda3e046aad8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "ada6aaa2-3bd0-45b5-a5bb-ca0f5cb3fe98",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1640
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "29f35050-bb1a-423e-9d40-3731e3c09a76",
        "cursor": {
          "ref": "4ffd2b99-15b4-4837-a6b0-0b467dc09d10",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "75a70db6-1af1-4e99-81ca-0eaef069a045"
        },
        "item": {
          "id": "29f35050-bb1a-423e-9d40-3731e3c09a76",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "329d2c16-fa72-4f9d-a6a9-e441729f3ca5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 2164
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8cb66f43-e698-4677-b564-7f7a0523f89d",
        "cursor": {
          "ref": "12b63c92-733f-4da6-a299-5a4b03b19357",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "fafc0be3-5d65-495b-91bb-c420bb88f433"
        },
        "item": {
          "id": "8cb66f43-e698-4677-b564-7f7a0523f89d",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "15b43b2e-6b8c-4b3a-9c43-b1c739372493",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 2150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb722434-e4a1-4907-9640-ee27dc8b1af1",
        "cursor": {
          "ref": "4c06bffa-8b43-4206-b48b-2df9ccdf71e4",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "d821ac25-3a2d-454e-a511-1b21465c9d3a"
        },
        "item": {
          "id": "fb722434-e4a1-4907-9640-ee27dc8b1af1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "57fe9493-9fc5-465c-ba88-b2e29c08cf4d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 2148
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1310788-e409-4b18-a057-f710e0098c26",
        "cursor": {
          "ref": "2e1583a9-dbd8-4e57-803c-41e8f1382ded",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "f9e28384-1afb-4366-82e3-25e0c9bca486"
        },
        "item": {
          "id": "e1310788-e409-4b18-a057-f710e0098c26",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "beb28646-68d1-4b57-a029-14fc3ce33a55",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 2149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a085d28c-309f-451e-9148-023d05a0e172",
        "cursor": {
          "ref": "26264b09-c5db-4abc-993e-a06bc81dc096",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "52250db2-ee43-433d-ac2e-d4a317e684fb"
        },
        "item": {
          "id": "a085d28c-309f-451e-9148-023d05a0e172",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "f7233a35-7734-4eda-8eb4-c78a1dcb0a35",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 2170
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f680af93-e0e6-495c-b8bf-3afdf1cda0b1",
        "cursor": {
          "ref": "ea9b70e4-29e3-455f-b70d-563ca55d4934",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "2ecc4e32-873b-40bb-adf6-eb0d83efa817"
        },
        "item": {
          "id": "f680af93-e0e6-495c-b8bf-3afdf1cda0b1",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "2d6d10fc-9e4e-46b0-a71c-1c1355444e27",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 904
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "610cae91-e635-4202-a47c-987f8eef621a",
        "cursor": {
          "ref": "ab3a682e-68fd-480d-9156-be0bfc296f31",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "25fcfa13-24a3-490a-8c94-811b75379103"
        },
        "item": {
          "id": "610cae91-e635-4202-a47c-987f8eef621a",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "5feb2edd-230e-4c72-87c0-26f122a71ede",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d33ef741-9d8c-4458-8652-30f97acc6a1e",
        "cursor": {
          "ref": "3b6ebb4e-7dd4-4b56-b14d-6f5cc2a971ea",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "7d7e0541-2ca8-4f92-92a4-52b63f4eae7f"
        },
        "item": {
          "id": "d33ef741-9d8c-4458-8652-30f97acc6a1e",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "a464323e-43a1-4913-adf6-292dfb092c45",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0ca3a14-e88a-4166-ab05-fbc70fe04791",
        "cursor": {
          "ref": "8b8a33a4-b6dd-4388-ae07-b8fbbce923fb",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "df230c56-2b2b-4c3f-878c-a8351be4846f"
        },
        "item": {
          "id": "d0ca3a14-e88a-4166-ab05-fbc70fe04791",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "b8d00d58-ca77-4ae5-9a0b-8704725729ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 915
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b538f930-fb0b-40c7-8631-cf7908edf9cd",
        "cursor": {
          "ref": "329770a7-52f5-47bc-8eb6-9df2fc7860cd",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "21573a12-6b75-439a-a928-43aad3d11a6f"
        },
        "item": {
          "id": "b538f930-fb0b-40c7-8631-cf7908edf9cd",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "1d71557c-5f3f-4784-8b65-af61ad0de0eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 38,
          "responseSize": 917
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f76c44-6f9e-4a53-b1e0-14562ffe5207",
        "cursor": {
          "ref": "140ee114-ffea-4e58-9473-d453a5cbcaa7",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "b6ffe8ad-1796-4d09-8b6a-58ae02aba0ed"
        },
        "item": {
          "id": "05f76c44-6f9e-4a53-b1e0-14562ffe5207",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "e8b1f1ba-742d-4450-a4df-71291b07f928",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 921
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83e26a4b-40f1-40f7-8f8e-879a282687a1",
        "cursor": {
          "ref": "d7bc3752-8e3b-49fa-9857-4e6d4fc7ae1d",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "04d9cba2-3c8e-4e4c-9bb3-38e6d67876a2"
        },
        "item": {
          "id": "83e26a4b-40f1-40f7-8f8e-879a282687a1",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "831ae2f9-5116-4870-89fe-486e88f420fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1262
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ac648a-3ca9-493a-a631-ff0a9cdbc978",
        "cursor": {
          "ref": "38c16f13-0cf1-4b5d-9627-d4590321e8d9",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "e669e4a7-2dae-46fc-b9d4-ae6a506f1c12"
        },
        "item": {
          "id": "c7ac648a-3ca9-493a-a631-ff0a9cdbc978",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "8e4818f4-8aa8-44e4-a42d-fea479455730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1740afef-205c-4987-bea0-78a96b81f7d6",
        "cursor": {
          "ref": "714ce585-8c5d-493d-a44f-ddb8a22ee2cb",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "04b8e13b-427d-4d45-80de-b8d4e9afb760"
        },
        "item": {
          "id": "1740afef-205c-4987-bea0-78a96b81f7d6",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "bf2067c2-2c67-47f7-b823-c737b868a449",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 33,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9213ced5-6682-4289-958b-a2ff203adb12",
        "cursor": {
          "ref": "7abba7a2-287b-4d2b-a39f-6787e6501c02",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "64c6ece8-4ad0-4175-b60f-1cf70e85ea8b"
        },
        "item": {
          "id": "9213ced5-6682-4289-958b-a2ff203adb12",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "99b036b5-98eb-4efc-9a2c-9fed04bd893e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d11927b-0645-4d0c-906d-fee3e663cd57",
        "cursor": {
          "ref": "dfb49e93-8edf-487b-a76e-a48d9f97d7ad",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b70ede2c-2ac0-4b18-8be4-a6a7eab3d028"
        },
        "item": {
          "id": "8d11927b-0645-4d0c-906d-fee3e663cd57",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "d3d3efe4-5289-4895-a5a0-e7bf698c9951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dead0848-74fa-4e9f-9389-a160eb9e709e",
        "cursor": {
          "ref": "cc5b442a-5614-46e4-9c3e-916cd71cd0fb",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "f18d3ce1-56b4-4990-913e-42db88e77c63"
        },
        "item": {
          "id": "dead0848-74fa-4e9f-9389-a160eb9e709e",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "b41cad7c-16a1-41d0-8dbf-578565c31b0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c6f4cba4-b3c6-44d0-ae86-af637509ebea",
        "cursor": {
          "ref": "8682c8ec-07f1-4120-9fe2-59489bd5a27e",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "2bc69297-0744-4942-9591-2984bae214b0"
        },
        "item": {
          "id": "c6f4cba4-b3c6-44d0-ae86-af637509ebea",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "e8a3f807-ee80-4ff6-9f0a-05463384e807",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1299
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac47f37d-c5ea-41bc-baf6-092f340adbd4",
        "cursor": {
          "ref": "192823fe-ba88-4d47-98ad-240bd6161a4a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "7a37e8c5-d447-4d99-8a90-ac922dc8b1db"
        },
        "item": {
          "id": "ac47f37d-c5ea-41bc-baf6-092f340adbd4",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "f6841087-7747-48b0-95e3-b927bb366244",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6be83747-55f2-4b77-ab7e-5e8770feecfa",
        "cursor": {
          "ref": "49e380ea-42e2-4c39-864e-28db8c39fdc9",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "25103119-9c8f-4c2f-a123-c3a12e142f94"
        },
        "item": {
          "id": "6be83747-55f2-4b77-ab7e-5e8770feecfa",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "28e08110-b9cb-44e7-8863-1814ab1850bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 58,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1db747aa-f8a3-4744-ab4a-41875e00e57e",
        "cursor": {
          "ref": "a03f977a-3230-4616-a4d4-9e91d107abb7",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "29cc467c-8f12-42b3-9e18-793c78641231"
        },
        "item": {
          "id": "1db747aa-f8a3-4744-ab4a-41875e00e57e",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "9641bfd7-3c44-4fbd-ad2c-35e6ad3ac1db",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1273
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17afb8b8-cc9b-4ec8-b24e-019a41e19d1d",
        "cursor": {
          "ref": "2c36aff8-7433-4d57-b1fd-c52e1f656c4d",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "89409fbd-9180-4837-93c6-7073e626cc75"
        },
        "item": {
          "id": "17afb8b8-cc9b-4ec8-b24e-019a41e19d1d",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "1ddf56ab-3040-43c3-a02a-f7c7c58ce1a7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1274
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f5c9187-0489-4d51-ba8c-2ddad443e9d6",
        "cursor": {
          "ref": "dc458db2-26e9-4b1e-ae52-894e5c319113",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "68fa30d8-62d4-4e74-baf4-60a3e32742bd"
        },
        "item": {
          "id": "1f5c9187-0489-4d51-ba8c-2ddad443e9d6",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "c60c7535-9142-4abc-a0ad-4067d6cfef7d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 54,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d09e54f-8719-4f6e-b7cc-2967ea3e1bff",
        "cursor": {
          "ref": "66f9a3d0-8591-41bd-9442-41934574ea30",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "1874daa7-0139-41b5-962d-2c09c64e60d0"
        },
        "item": {
          "id": "1d09e54f-8719-4f6e-b7cc-2967ea3e1bff",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "750b111e-bd71-4c26-839a-b2ba72ba3d56",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1253
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bd63c791-c6f4-4052-8819-3d38bc81bb5a",
        "cursor": {
          "ref": "59eabe9a-c2c6-47a2-8f09-b6f8363dd77e",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "495222bc-d60a-424d-9292-6a2621d446e6"
        },
        "item": {
          "id": "bd63c791-c6f4-4052-8819-3d38bc81bb5a",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "e90d1514-cf3b-4dc7-a926-3044d3012d9e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 39,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de9b96fd-2d3c-4f5c-9801-029708773b05",
        "cursor": {
          "ref": "77caa48c-2b7f-47e6-9af6-725d35a25a25",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "deccebda-0778-40aa-ab10-9840436f4e25"
        },
        "item": {
          "id": "de9b96fd-2d3c-4f5c-9801-029708773b05",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "cf619fdf-e7e4-4df4-9427-7e9bafd3b88e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1188
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67697ec2-a870-4e66-95af-7ec524622d4a",
        "cursor": {
          "ref": "452309de-8217-41b5-9f0a-1b1502b88f0f",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "db1d0d3f-779f-48e1-a5bc-af780f1d3d3c"
        },
        "item": {
          "id": "67697ec2-a870-4e66-95af-7ec524622d4a",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "2892324a-c4fe-4ba2-ade8-39d6a230a00b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1189
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ecf50fa5-b18c-4192-97a8-85b78d26a177",
        "cursor": {
          "ref": "d9bbe363-a6e8-4e8d-8d07-f15c78b826d5",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "5b599366-288a-43ca-8c5c-7a83dee71cb9"
        },
        "item": {
          "id": "ecf50fa5-b18c-4192-97a8-85b78d26a177",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "1f83ea62-7612-4802-ada1-f127f0f6fc0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1259
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5c65dc-5bb1-4c83-9495-098b09543fc3",
        "cursor": {
          "ref": "142a863a-b981-44c5-92de-14a132eecc63",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "18eb03ad-84b3-46ee-8985-f9000e7c34da"
        },
        "item": {
          "id": "fe5c65dc-5bb1-4c83-9495-098b09543fc3",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "47f65934-0ab6-4ebf-afd9-069c967b351f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 40,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "681fc0f5-e9e6-47e2-8e71-2f7b1726f605",
        "cursor": {
          "ref": "11605b62-88e3-4a58-acb2-de7287d103a7",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "9f7b1265-4602-4fce-8aa4-bccf87eb5520"
        },
        "item": {
          "id": "681fc0f5-e9e6-47e2-8e71-2f7b1726f605",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "55bce30e-eea4-4d37-bfc4-976240caa951",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "914207f4-5cea-49a6-bd6f-ed42473e7c9d",
        "cursor": {
          "ref": "6c8d0e36-14d8-4bef-b705-a2ac5544d2c3",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "8c5aa86f-7b68-43a7-8a14-a0f7a0b9ecfc"
        },
        "item": {
          "id": "914207f4-5cea-49a6-bd6f-ed42473e7c9d",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "a59f3a0a-3919-4998-a762-a482f5d7e7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1149
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "81b33e2d-12bf-4550-90e3-ab1b7539c7bb",
        "cursor": {
          "ref": "fe38f53f-a950-4955-98ee-816753a57db5",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "532dbd5e-652e-4a08-8c03-0744c68047e7"
        },
        "item": {
          "id": "81b33e2d-12bf-4550-90e3-ab1b7539c7bb",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "974c608d-b91c-4dc4-9188-2ec1f361a4e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 41,
          "responseSize": 1150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "56354030-8a94-49c0-bf93-b4e8b2a8e96a",
        "cursor": {
          "ref": "c7c9eb6b-90a7-4b09-a6a9-5435ec0c30f0",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "bf5651c3-4551-4fe5-bf4c-973f2120a882"
        },
        "item": {
          "id": "56354030-8a94-49c0-bf93-b4e8b2a8e96a",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "89e4c8d6-413e-4a3d-b906-be8ea364024c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 45,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff04a17f-61b4-4479-85ea-2706dcdad5da",
        "cursor": {
          "ref": "bd7ec6f8-ffc0-4b99-b4fc-e6c9351fe5ec",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "128531d7-1311-4e04-9af0-3b15f866b3e1"
        },
        "item": {
          "id": "ff04a17f-61b4-4479-85ea-2706dcdad5da",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "b7a494ad-54e5-4fa7-8e1e-0d60013d1e12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 43,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f38a7f57-18b6-4b66-bf35-677f1cfe68cd",
        "cursor": {
          "ref": "6976b205-e5b4-4b13-bc16-90e7b58a4407",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "4392f710-1186-4b39-b996-0a78b6b89c83"
        },
        "item": {
          "id": "f38a7f57-18b6-4b66-bf35-677f1cfe68cd",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "07995ebd-1df9-4afc-8d01-ce2b839e56fd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f419a58-3a5f-4cbf-b2ae-3a42478722ef",
        "cursor": {
          "ref": "ed941b92-b2b4-4e44-8a39-e7c00f24417d",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "c8cd041c-6a08-4a27-8d9f-73aa1f344d1e"
        },
        "item": {
          "id": "7f419a58-3a5f-4cbf-b2ae-3a42478722ef",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "cc5ed7e4-3ca9-42bc-be74-aaaabd1403a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 37,
          "responseSize": 1278
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6b10c8b-9953-4fdd-88b5-6727d96c33ad",
        "cursor": {
          "ref": "5693de5d-2c7b-4774-b6cd-0caa06c5de34",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "a88aadee-90d3-4f61-886a-82ef0a7a8e3c"
        },
        "item": {
          "id": "d6b10c8b-9953-4fdd-88b5-6727d96c33ad",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "48fa68bf-3664-452d-9c6b-7c712cacabd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 35,
          "responseSize": 1279
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fac11a42-329b-48ed-8e05-16eae9371b6c",
        "cursor": {
          "ref": "65aace26-ce2a-462d-af16-744a70d37564",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "530a8984-7022-49cb-b057-415e1c91273a"
        },
        "item": {
          "id": "fac11a42-329b-48ed-8e05-16eae9371b6c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "8e88cfaa-e132-4ce7-9612-91edaae589a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 36,
          "responseSize": 1300
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21b3ea9f-2afb-4322-8fa4-0191d5761cfe",
        "cursor": {
          "ref": "b1d52d97-2dc4-4e78-beda-767ba106b114",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "cc266264-39ec-49bc-af2d-b14faa02e734"
        },
        "item": {
          "id": "21b3ea9f-2afb-4322-8fa4-0191d5761cfe",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "7be2742b-0bdb-4857-9fee-77dfacedaccf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 34,
          "responseSize": 1294
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccd22d0d-d6ec-4eae-a358-95f040ca0655",
        "cursor": {
          "ref": "26bd4240-6f08-4f0b-a300-1ce63603a66c",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "a0942922-443d-440f-8912-3d8fd0a01d66"
        },
        "item": {
          "id": "ccd22d0d-d6ec-4eae-a358-95f040ca0655",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "a58a41d1-e8a7-47cd-920a-accb12c206c7",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 40,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "397d84b1-586e-4c77-9895-f971ee2b1d05",
        "cursor": {
          "ref": "01fb64c3-485c-48a7-8410-1ecca8d19363",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "8f2e5a91-55c3-4482-9ae9-95de16a3617f"
        },
        "item": {
          "id": "397d84b1-586e-4c77-9895-f971ee2b1d05",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "82b00de5-62b6-496d-afe1-81029f307b22",
          "status": "OK",
          "code": 200,
          "responseTime": 87,
          "responseSize": 338
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b169b3f-5219-4639-82d5-284259f9febb",
        "cursor": {
          "ref": "72d2378a-a360-40ce-a1e4-3f4be4ca6ebd",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "fbdda5a6-b19a-418a-9611-e4a24b75e8bf"
        },
        "item": {
          "id": "7b169b3f-5219-4639-82d5-284259f9febb",
          "name": "credentials_verify"
        },
        "response": {
          "id": "862d0567-8a63-47cf-8f7b-9743c64599f6",
          "status": "OK",
          "code": 200,
          "responseTime": 1670,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "97cc5ecf-6431-4fe5-9404-819cad2089f7",
        "cursor": {
          "ref": "2660eef2-8087-498d-9aa3-639daad9367f",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "66c4dc5f-fb1b-44e3-8a4f-92d81cb75035"
        },
        "item": {
          "id": "97cc5ecf-6431-4fe5-9404-819cad2089f7",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "2fd2fe24-a6da-4fa7-a184-715b5504a63c",
          "status": "OK",
          "code": 200,
          "responseTime": 1355,
          "responseSize": 330
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "b870e21e-5ff5-4533-82c6-df20092dbaa9",
        "cursor": {
          "ref": "e62a2232-e0d9-4241-a884-e32e57d3ffef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a0714c0c-7278-45d7-ab35-d04717323e59"
        },
        "item": {
          "id": "b870e21e-5ff5-4533-82c6-df20092dbaa9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7123e9de-ec9e-4ce3-9d2f-6413e341c654",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b870e21e-5ff5-4533-82c6-df20092dbaa9",
        "cursor": {
          "ref": "e62a2232-e0d9-4241-a884-e32e57d3ffef",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "a0714c0c-7278-45d7-ab35-d04717323e59"
        },
        "item": {
          "id": "b870e21e-5ff5-4533-82c6-df20092dbaa9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "7123e9de-ec9e-4ce3-9d2f-6413e341c654",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 36,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87cf6654-57cc-45b5-b943-e0df6781f664",
        "cursor": {
          "ref": "368f4748-2024-499a-9819-57a666899ce3",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "aa381136-0832-42bd-9466-7edbd85e8d5d"
        },
        "item": {
          "id": "87cf6654-57cc-45b5-b943-e0df6781f664",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "f921389d-6f7b-4b7e-bf50-ee40d8bf912a",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 34,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2e26732-bc12-468a-94a6-252862a89f53",
        "cursor": {
          "ref": "d3266830-6b08-4edf-9d28-38008fcb88bd",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "d628d1af-5515-4871-afaa-77e9a03cf0d2"
        },
        "item": {
          "id": "a2e26732-bc12-468a-94a6-252862a89f53",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "c6649a6a-0502-4cbc-a411-a4acb0707015",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 38,
          "responseSize": 73
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}