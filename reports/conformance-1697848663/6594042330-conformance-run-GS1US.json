{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "8d8d53ff-c31e-4adb-a4b6-bfa2972d2d30",
        "name": "Clear Cache",
        "item": [
          {
            "id": "dbccb286-25cd-4442-b7b4-30c47822cfe5",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f20abd26-3725-4df7-a952-3456aeba751a",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "9385869d-505f-41cb-b913-fc3d64a574d7"
                }
              }
            ]
          },
          {
            "id": "e3fd1a8a-68f7-4159-a395-d8fba65470a0",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "857ea06b-6c78-4c0b-b9fc-d0643ae11435",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "348f7272-90e0-49d7-81f6-f7a905f19f74"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "462038de-5349-4a7d-9b20-08a3389a6958",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "7aa085c0-6afc-4253-b51e-ea06220525f6",
            "name": "Positive Testing",
            "item": [
              {
                "id": "c61d9cb5-9386-4313-82c1-822c239730e9",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "0977e71a-912a-491c-9a41-61c6a7491e8e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "328d64f5-34c2-40db-8208-2e891cd0d3e1"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "ac01632d-3203-40a7-b4bf-b2bab420b8a1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9bd43b7b-130a-40fa-b7d4-aa397c69dbb6"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "69474292-f50e-4abf-8f4b-420b9ad6a195",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "8b91660e-bc30-432b-85a8-bd11fc40d019"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ead297f1-24f8-4e7a-97ca-76744e8e2454",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "dbd11cec-1412-4b38-b97f-d52e54fbbf1b"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6331d845-3bdd-4c1f-ae70-151121eaa53d",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "02c967ac-ac87-4ad8-a3cb-704c9ef8f1f5"
            }
          }
        ]
      },
      {
        "id": "f855ae1a-5bbc-4a5f-bcdb-8bfc107ae57a",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "2389563e-f0be-420f-8abf-12cbe7c55088",
            "name": "Negative Testing",
            "item": [
              {
                "id": "605dbb72-3d82-4313-8530-83cdc8e77144",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "64c2907e-34d7-415e-8129-ba7107034d3b",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed381ee9-f1ab-4ade-a617-fd9c1272c381",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "3ada2687-cf1c-417b-b44d-f270c132b56e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b734d06-00b8-40f1-a34a-ba8bf4e98bfe",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d3632869-7baa-45c0-8ba8-32873e687423",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "ef01f71b-7834-4010-84e1-61b92e26583d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6989917d-3d06-490a-beef-03524fcda28b",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "44e44901-688a-4537-8c0f-3589293ce7b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "9763129e-ac89-415d-9b15-ed4605f8dd45"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "742e6399-4db0-4fb7-8a1f-ce184359d832",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "0eb0cfd4-dd33-418c-9577-2c67531c14b3",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66869835-30ea-4be0-8511-4d3064948f87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f8d998ca-8e73-49e9-8a64-71a3cbb748d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c08b34f5-34be-4650-8cab-335ce2fdcdc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47989bd4-fcc3-4644-9038-391f791153b3"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "c9141d33-bc5c-42a2-ad7d-53e3dc608e54",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b282a928-82f7-4a0e-b887-3d7151408832",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "fbae3e2f-752a-4de8-a344-ce9e44d2546c",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "a3d5e782-1fa3-47e4-8255-38046de5e01f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "01967a1a-82f3-4439-9624-39e9ea1a4a3f",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "e62d2cbe-3903-421a-85d0-2365cc430f11"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "d418b844-e11d-4ed3-9bcf-34ebc64b90d5",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "8b1a7c76-cffd-4118-aa91-f4544b997f67"
            }
          }
        ]
      },
      {
        "id": "7845dc87-5e46-40f6-8cf1-238fbdb3e0e6",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "95ca0514-55c3-4031-8b4b-be8a47c4c032",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3f67f654-8d6f-4453-814e-ba48700681ae",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "fc9704b0-0070-4a4d-8fdb-6a15d161c909",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a17d5a6e-df28-4b60-9629-df15c59b2b63",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "273bb652-a0b6-4f93-af55-7d9552be869c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d63e3e73-826f-4d3f-8dcf-75e302bbd948",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "18ad8eb1-e45b-44ec-8bae-9c023c320add"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78443268-f77a-4fec-9eb7-14841d96f79a",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f4d8db8-3257-46dc-8bee-4a5b5a16fe99",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "359e9e55-cae8-4060-a63f-295371b44211"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1fcfcb62-8645-45d8-8998-08a24b1942be",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b8101833-7272-499d-868c-1d1dded86c11"
                        }
                      }
                    ]
                  },
                  {
                    "id": "536f36c7-f5d5-4423-986e-8c9927b9d0b0",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "863946bb-b616-4527-87cc-d370dd0b9c41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "536612b2-e047-4519-9255-3cfa8bc6d59a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2876a6d2-3357-4b3a-9ce3-ef91aeb0f2f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b622e09-74ec-4dd9-8a6d-ef8ebb7c7e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2449e5a7-5ad1-4253-98ab-a2872854ac6e",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb2f9069-f7f2-40f0-817b-35e82aaa2a24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f00bf51b-4400-4a80-94cc-a0c9d4aca281"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22c829c8-e4b0-4284-9387-09951fe3e78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "270af42a-af3f-44a3-a22d-0cf21f2ccf08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0503864c-d6a5-4ddb-a978-701a5316072c",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c3ec0c7-9ab0-4246-bb95-fa2d5f21df59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e3946b4d-dfa6-4def-bb36-0d0b43e51430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9beb4d4e-d0c6-4503-8ebf-2b38ac9a9bef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d866995-f5e4-4873-9910-4b44e234f520"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d400506-7430-47de-863b-85a22a7e4e32",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b16e3fbb-5c9b-4960-b644-168f06391e58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "01f8322a-fa91-4879-adf0-b5d55883d9d7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5aa624aa-3096-466c-9392-cbd36e227d1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0d3c0ade-e8ff-4e33-90e9-b37148d847a0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "804dad46-30e9-4efb-b73b-0f8295914048",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe0e346f-4544-47e8-a926-8c2177048429",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3daeb2f2-87b7-4462-b98d-384f7969ea26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0e48b24-794b-422c-9a98-710ffccf4863",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1820325f-6c7b-4ef9-a4b8-6dea77925c67"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7f3a27b6-091a-4b23-8768-b73159d06472",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "57163089-f3ba-4e11-bead-e809c9dde834",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c809769-98a8-43a0-ad6c-125979b145f0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df32c27b-4833-49c1-ade1-51d89b1039d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "ab86a357-360d-4726-a134-fb28318e0ba5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c4b980e-bc8d-4a7e-82c7-bdf783371359",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a6b542d-8561-427b-88b3-f0b3eb9311c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb4e95c4-5901-400f-bf40-db7e94e71a6c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c5835201-2aee-416f-b8f0-389cb309871e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a83a4829-035f-4f75-bf95-bb7f87f04339"
                        }
                      }
                    ]
                  },
                  {
                    "id": "628575ca-146b-49b1-8a4d-e6d41e673011",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9faac995-22ba-4a9d-bfff-5e6e9a796d6d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fb8242a4-50f6-4374-b090-1107c2c580f9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79166c71-8330-44cf-9fed-691b99fbe1b9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "14df8c94-1de5-455a-80cd-161695efe6af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "44869bc2-0be6-42ac-bd0e-0fb823479f4d",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "89e1c3d6-5154-4bf8-8a30-bc36c77c7a61",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "559dd30d-aef8-4c64-a94c-75c42c37b934"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "92b7920c-7bb7-439b-baa6-ce0639b347e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0e746575-e578-438c-82a2-5973335f354e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ca3e095-6c4a-496c-bc8d-ea8e5a99901b",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0b99ab16-4d72-4986-b0f4-87b86d3ca35c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "07dc8b42-ca4e-4870-986d-3dc30d3069b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff077a09-d31c-4c29-8da3-3d20cfaaa432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3a1e2338-5885-4723-802c-5c0fc907f0c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9cae8782-8b05-473b-8545-444e4ba19f95",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "61feca9b-5c7e-4139-8e8c-a7a96dfae0ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f79039db-3f47-4f2e-89f1-1bfd2632150d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c44efef1-1bbc-4711-920a-f53f3ec5f011",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "96ca2722-39f9-4232-ba42-0140a7ed290d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "40c2e73d-9f23-43c6-ac24-a26276731bf5",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a94c6c2-b002-4d31-9111-1ecc606c09ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0c76c120-361a-4192-831d-9efc27d649b2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be6a7b89-f90e-4ea5-950f-bceffddc0110",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b35cb45a-21fd-46f3-a71f-b264203fda32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "76f842d0-63d6-42bd-8890-9fbbfdd3fee7",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cee1f46e-6054-40eb-8e5f-506ae3790295",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d5d4912f-8320-451e-9498-327dccea06ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "587d8557-d351-43be-91c6-1fa5896d6df0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "f001b66a-be57-44fb-8a35-f801c3c7af7c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aaff3151-4e44-4906-a655-618684dc3744",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8301bb4d-6c11-400a-acb8-8d503a44ccf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e031ebe5-3bfe-4be1-b338-d6f8532f6989"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ec558bd-fca3-42b9-8b32-d6dee75a77ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2261e1e9-01ea-4bf9-898c-2cf681af5f4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bafc4fc-5275-4ca6-8ea1-92f6c2af6114",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "bae841eb-c410-4a74-9b30-4d01f6a86f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f18e3597-74c6-4991-89cc-b5bd755415f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7f665893-0c47-46d0-b952-4368aee8b753",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "6d378b79-4832-4810-94b3-af955586c531"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dd58da46-34f3-4687-92f6-8af5b5e0d44f",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1586c517-154d-4e9f-9202-d9a5d061a3cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2f91bf30-d388-4cb4-8652-86ab03628bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0709522f-314d-4c98-886d-e243bf253439",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "8a1303ad-25cb-4d8a-ac14-b9fcf4fa121b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0496dd76-7ec9-45fa-bdb9-c64ac3488b8a",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "521aa604-d19e-434d-bac5-9cc2b71f8f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b4ea28be-40d8-4a92-86cc-9e52c1f7b9be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "707fe340-1506-49e9-a8b6-2da52950c8b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0c32d7c1-47ab-4826-a50b-71dbaadcac2d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "26905d6f-4ead-4b87-a071-047d1ce8fda6",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "93dcbade-1afd-4259-80af-d4e40c91d515",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f4d6ce0b-9d96-46bd-a41d-17973cfb9aa8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "907f2df2-5f39-4d0e-ae15-9421b4d82376",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "9bebe898-71b2-4fa8-ae85-73ada87f5902"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b1915c63-b4cb-415e-b660-78b179e4c745",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6d74c98b-a75a-46af-8e3b-95f44dab63d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6b212124-17d5-444c-abff-15f4d6259a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a9a4cf64-a734-4e2e-a09c-734d9d7427f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7f66fa3-a251-448c-8b48-479b1ac7244e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2af16653-600c-4e78-ad00-025d74136001",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d214793e-f51d-4fa4-90fe-ac8c37602c83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4d9cd0ae-fc94-479a-ad67-5048a0051131"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4abe3cde-b73d-4bb6-967b-afbceed6f97e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "60f1f342-70f0-4fd0-b7e4-92d83867c15b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a11bb4c0-2cdd-4797-92eb-c565d67bd5b2",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ac0546a-2faf-4995-81aa-f4e0c790745d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ad3997bd-a3ac-428b-9633-e026e33a1933"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "14513e47-1efb-4bf2-b944-30b65268b454",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "d36ed235-d7d5-4f7d-9ec7-773da62fb5bf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6b344075-e494-4e57-9edd-f1763bc267d6",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a24737-022c-4e21-8d78-e52c11f7d62e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6be76630-0200-4dfc-be56-dfcbc875395e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d60e7aa2-17e3-481f-9862-d1894c255326",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "d2a19b1d-a483-4134-97c6-32004f425b8e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8e8f33ca-1120-49fe-96e5-f3c7adb20d0d",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f4fb5d4e-74e6-41d0-97ed-e83b6036b600",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4ab5c514-a4e9-4010-9452-9982d62c5b04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d348224a-ec59-4fdd-aa46-43cb84ed4464",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ffdd65e0-183f-4e8d-aa20-3b826d8b6098"
                        }
                      }
                    ]
                  },
                  {
                    "id": "46f9ba8f-f580-4bc1-82f5-1a7b39751061",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40a35e24-d7c0-49a5-bf2e-90ea9e2352a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2fcb0664-9145-4c95-a886-588ba278d859"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b59a8a71-b9ee-488d-99f8-9cdabcb6434b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8ded9619-e480-4fd0-8bf4-b9cdc4d04d4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17dfba0f-6b3d-4a7a-868a-af82df0fe149",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5ee8e79d-6e4e-471d-92be-26a4f071722c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37f76fdb-9d6c-459a-a1d2-2c895f4e835c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2ce08824-5c50-4c81-8acf-a90d600ad732",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a463c593-b8e7-4c51-8503-720a7326c6de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53d99fda-a115-4ed1-acdb-6b41a7df125f",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3814736-75f0-45aa-b2d7-e8cb4a431ab1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04256bd-ffea-446f-b1ea-5d691991df40"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "db850f6f-c953-4f41-9680-91b360caf98b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "bc24f6d0-f899-4d63-9e48-95aa73458f56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ab5870f2-3018-48fa-9548-3d7f673320a5",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "50d11d99-1acd-4f49-a1ed-b7533d7dccdf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d3e4f087-7e9d-4208-ad67-49ed8f9200b6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "72bc7c3a-588e-4b4a-b326-584994f452eb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "a7ff7196-6bbf-40b8-8974-ad57cd2754de"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e99fdbaa-d064-475f-bfbf-3952d9e79fa2",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c1dbbc96-5b1a-4dc8-87d4-1d1e65216b3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9da3c479-d601-4c6b-ab80-cbeaa15d3657"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1739b02f-86b8-41ff-805c-ec9f31fd9786",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "ade900f6-d9ce-431f-9f48-ccb109d8583d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "71ad4f52-27ad-46d5-8082-4a6969ba8ec3",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "76e72b00-cc58-47af-8e27-f0d15715aaf4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a4b701e5-4f7f-4192-a9e8-509eb9c3a796"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a833f98-344b-43f9-9928-2db336507eee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "05fc691d-46e8-4051-bcaa-292e3b4fe347"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0738287f-9e60-4d72-be7a-5799ac546157",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9786a99e-5e16-406e-b27e-3bb8e4f296d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12b6a7b5-9704-441e-843c-090c8946e9e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b2c7542f-de85-4693-b9f6-6f1030fdf4d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7dfe5a7-3b22-48b9-a322-b70d5dbff7fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af2a275f-ca72-46ba-8843-2d158d3d6480",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1249e0cf-161f-4757-b92c-a1628502974b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f6e68e2-e38a-4539-a96b-a2783ed221be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "985136ce-a236-4422-b023-a29fcde7d76f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "513631c0-b131-443a-9389-f4a38eab1211"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a85c1a92-22dd-460e-9289-45e8a30adbe2",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "94349056-4566-473e-bc7b-14d29b48eab4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8353142f-3e39-403e-9ace-bf9a2e6de227"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8a2a340c-b365-43cf-8dcb-56b31d528a2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6ce992e7-1de9-4f5e-9ca8-393cea59ced9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a2110db5-b158-4c48-858c-05c0123f47d2",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a66468d6-c29b-4b23-baf1-259e1262ff5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4505529-19d9-47dd-9b3e-16d616e17ae7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a3f28a5-0e99-441d-99af-6b4e920627d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "47cf666e-8ff2-44f1-8ff6-6d8bd42e2464"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ad98a76-52af-4ec1-bd42-f8f73dde7edd",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4bf52d1b-68ed-4dda-8a3e-5ade01b20dae",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "31a1f515-9cb7-4570-805d-dbacae6eb742"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69e85d1d-fb2d-4471-93e0-5a6bf8bda5cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "41c5a132-e62f-4488-9ab1-b6507d193c8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dad2a2a-f3c7-4473-a082-4507c4a0d340",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f3bf826-5467-464e-8e05-4251c5c4853d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f04189e0-f141-43f4-a090-5157914e90b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9138da07-a02a-414d-8623-b17f7417ba16",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f591ad5b-092f-4ef2-8e71-a880d70ea710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afceeff4-5aab-4baa-907d-51a649d2b280",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85e84a70-fa2a-426d-81e4-5a8ee814ccec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fa050bee-cd8d-41bb-868b-7b8107dca38a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b10aae27-006a-46e1-b631-9fc86a4c726c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "597e587c-87e1-474f-860f-8d7c195cfceb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "96fc0ee1-0d1e-498b-a8dc-08c750877f23",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5214c6c3-d5c0-4ba6-9950-25027f05907f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d19ca7d0-0fcd-4615-affa-7837ed895c79"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9e278ba-8bf1-4ef8-8328-9cd5761b5bd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "42ad9019-d162-440b-be34-4b36f6e4e1a7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "da84e12d-cd7c-458f-b4ab-0e7d2efa04e9",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe5b74d3-0c2f-489e-a347-b85708fb4b94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bc3442ec-0362-4d80-8e93-e36e5c3a5f6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d455d42d-a3c6-4086-9438-e58833a9dcb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0086279c-5f47-4b8f-aa6d-9c3d1b34d298"
                        }
                      }
                    ]
                  },
                  {
                    "id": "155ec834-3ff8-417a-a709-1e3e0d75a4ff",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afff41ba-02cd-4801-9529-90d8313de384",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "06d15c3a-6931-4022-8407-49ecbc52165d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8e81d03b-c2f3-4f76-9493-7554709b8c65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "df135cbf-e2ea-4662-9fce-513d6e3bab87"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9606366-c485-4f81-86ef-9c12c9238549",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7c16c26a-bbf6-4bfc-a466-378a9f1766da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de3ff177-f9f8-4149-84d1-0e4d204f1397"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "39ea0db7-99cb-45c9-9dd8-d203deafa4e3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "08e5f1c1-d2db-4991-b630-d938aad8a80c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69e25213-6355-4c6c-86d0-eb24776c7d55",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64b485a8-3c5a-41f0-b575-1ee8cf75083f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5f37ca08-7f02-4b61-8801-05fa5fc32c7f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c11a0131-646e-470d-8f1e-6e6e158f572b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "9f78c797-354c-4fd2-9926-b2d309f0505e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ec2b9c-d61b-44f7-a5a0-96ca9f99dd34",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a3e6e4c5-6a95-4b5c-86e8-24b0d88b2e1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f604dbf1-1e6b-4dc2-bc47-1c07edfc845e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1da8a594-0130-4fb6-aa90-4bed3ad73b64",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "48bd9933-c97c-4b1e-ace1-feaa8479e221"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b9505216-7c08-4d72-b545-a72654207076",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6111ed6a-6948-4ef5-8ea5-c4888c49dac3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02a2f932-c674-4651-b8ee-f6edbdfe3822"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c595cdaa-6dce-44c2-bcc8-511b3bcffda2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "842b7e96-8bd2-4e0a-8a10-f19400aaa1d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4203c40d-2dc6-4326-8331-6331963a9b45",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "502db811-1a7a-4cc8-9cd8-486457182437",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "614a800c-79be-474a-9aff-3122b7062e2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "489a88af-d22e-4646-ba39-8597c5b3cf3f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "d492d898-e077-4ecd-93ac-e0271d0fff0f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78939ffb-aac9-4c40-902e-62cb81695885",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "494b1701-a2e6-4505-a85e-e796db29eee5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "250aa62b-d488-4ac7-81f2-7009881ae8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7dc0fe47-8231-4e63-98f1-2de13267e259",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d9a5bedb-e4d2-4071-bf1a-fbab695d0ced"
                        }
                      }
                    ]
                  },
                  {
                    "id": "91e104fa-4fcd-4002-972f-80f7010a62b1",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ad33b2e-9a75-49af-a901-ca1b92eb1c00",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5735efcb-c82a-49ad-83de-247ac304c14a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74c87313-e425-4d10-915c-75747dc850d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb619bfb-064e-4720-b734-315d478328e5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cbae90f-ffa7-4b89-aed1-ae336f32b5c6",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "039dd65b-95f5-4f53-bee8-46f454c5bfa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "de9fa082-c5ad-440b-8cb6-73625240c931"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c4228130-523d-43a1-8735-8f3982987091",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "e37aec88-c9db-4428-8786-17a70a211d80"
                        }
                      }
                    ]
                  },
                  {
                    "id": "05f57c2f-b7d2-4bfd-9090-b543d088ce84",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "91b9ec41-d01f-458a-87ea-2e23440fb73d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0e6ea15b-cbc5-43e2-b61a-04807c76c189"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efc1b887-8b32-4d56-93e5-b8326b7c05ba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "e3967287-57ed-4967-9a04-06bb43460f93"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ccc80700-4a19-48b8-bea9-d5905a7838da",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22538a2b-93fc-48da-8e77-bf6e93a16d31",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b960d2a1-7150-4fc2-af7b-82faf95d624a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "856596f4-7a5b-4d8f-9445-7ab410c95213",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "29dde71f-35ed-41e0-b0f4-da41ddb4cfd9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7ac661d-7bf8-4069-980c-570a477fc29c",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a260748a-f57a-4d05-82a5-111c1558ebe8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3c3ba82a-c011-4878-a3a0-8ff9d2408eaf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f143907-98b0-4f31-a4ea-764e2731bbbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "23f449fe-0ef6-4e53-a046-75ab94f7f237"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8c5edbec-0a38-4838-a7ea-bd702904183e",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "15efb5a6-ea8f-488e-83f5-f276f034befc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74527cfd-8f99-417c-95a6-981779468104"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e7ee732e-4282-4d61-85e6-aab35a150a04",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e5efe15-4d7f-408c-a517-58b155c79bb1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f66ca583-ff0a-4dd2-adef-0fabd6b2c9a9",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e4a1a19-d6f0-405c-bf36-fc07bb6e32f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "88115ec4-3c54-4d15-ac78-f02997ac7a1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa13c23b-10e1-4c64-ad78-e6d5835bcef8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "2a41b00f-e086-404b-b9de-112b7d04b837"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1972651-cf4a-4c34-873f-696b44bd18e5",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "737329b1-7930-43e9-8111-1aa09a2877a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "26368a1c-dab4-42ac-b6e4-468e3c08f832"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82f9a56d-d6e3-41ee-bb4f-1a57f8b3a0cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f4baad9b-43a8-4aa8-a13a-5af4deeb98ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a347e97-8493-42de-a0ea-1ff885c8a7ed",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e8717d52-451b-4661-a14e-fb691ec41266",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "df14f690-ce25-4583-a1e2-3c5394786059"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b528fe18-6cf3-4d69-be2c-1fbf5b0654b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "86b201a2-a930-4dcd-93c7-095e2d891062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "186c659b-41e8-42ed-8f17-3c80ef8390f1",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "04589ef8-2034-48e9-90f1-a6679c892a1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68491d53-f7d3-4fc5-8a1d-049de414af49"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b7b015-4a95-4167-a4ad-279376fbeecd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "10a4961e-ff33-4437-bf7e-a64654283f1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c99a02d6-de0c-4833-b3ea-3b7dcbe8537c",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a10b76b-e4c2-48ae-bfe0-7747dbbff9ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ce594a24-80ce-44a4-919a-a84d99bf5704"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79476dfc-9a2b-4195-8c89-77465b895260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "77ee5ccc-19ac-4475-9e54-165fc824b5ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a5339f68-d031-4ca3-aad5-4def4016406e",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a37fbfd-66cc-49af-9298-d800daf2cec4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e018923f-0805-47f6-9254-217aee1bf246"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c755b31b-f658-461b-a51e-84f3026601a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "0ad4c1e2-5227-4666-a342-8bdab4eeb60f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b77bb0e1-70d0-434d-b344-07e4f44b4efa",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc2c9cb1-999c-4d74-b690-52162a831e11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "704a362d-6d66-460a-8575-32816fcb166b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6540f7d1-991d-49ff-9a9e-6cd8aecf930b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "3a8541ca-e259-440f-88cb-31512684bee2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ff5a0a4-51f3-4150-822e-17598806eebd",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0732f99-d8ba-4805-ace1-ce1a4985176c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "656fc0f8-d539-4d71-9c04-055976c07ba6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af06bfef-5f14-442d-98be-69876f4e2487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "b48fc9e8-539c-4e1e-83c3-07d1943679ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d824f57-9f63-43cb-86ba-4d28a983309a",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e3e1f11c-1cb1-458a-95b1-dd2b009e9847",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e258b226-2b55-4331-aa52-cd4d62469bef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9f4419e8-45cf-4aef-bc83-20f97bbefd1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "148dd80b-43b4-4894-bd73-37a844fb079b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58ed9cf7-e579-466c-8525-83a5f4eed34b",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e916e7d4-636a-4db4-9384-19efb3d5e4d4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ab8b417-af4d-4770-b4ff-33343d6cc5fd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19ecbffa-21af-4217-a791-70ec6aea7f5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "72df7ae6-0ad8-43ec-bb2b-56dc4f249c95"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8a8f97ea-d927-4dd8-a3b5-3a1c560f389b",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "19531c62-623e-4c24-8ab1-b0d689e86f82",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db553a1d-811c-453f-aa47-d5ab68655f0f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1e5243e7-febc-4adb-aa86-1c0a4603e379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "dfdcffe1-0245-411f-9787-98a088c5e22d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb7f1755-4a15-4246-a9fc-a75a3e086b48",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d1756bb-b06f-4fb8-8e35-7e6862b79379",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4016b761-5f5e-45f1-a178-23497de807ab"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fd5413b-afe3-4e3b-b2ea-541e35b73aad",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "dea9ac3c-acc5-463e-abdb-f254e11eb84a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e345fb5c-cdbe-4fed-a018-22b4455a65f2",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48b8795a-6d15-442f-ac9d-e1e045893107",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d08d2157-038b-4351-ac03-3131c0339649"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0c557f2a-460d-44a0-9e08-25ab70ce5445",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ffadeb19-9c4b-4174-b3b2-47d9c4845d26"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bd190c6-bbc0-44ca-8b10-ef91488b724f",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa6a7153-119a-4753-b61d-2e0befc7d6c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f92ddac-e7a5-42da-9caf-76c09762cad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10ece3df-1cba-4130-a896-75df261f85b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7f427e98-1b0b-4e71-955c-c244dfc7853f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b94a3c3-4913-4b94-9817-4495500aeeae",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2403a4b5-81da-4944-90ba-84be49e7da59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5faa29fd-4579-41f5-b198-8704f2b94877"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "29ccc6ab-f0f9-4259-87da-ac22394f64cd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "ebd25f5a-88c9-4488-8f16-56fb25e59720"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66e8602c-dcf2-4995-8651-c7bc56a90a91",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84921686-867e-46cb-b298-e169729b0c6a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "11a86077-7ff1-48fd-b1b0-e4abfbbd4c0b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "135ee44f-127f-4721-8c5a-6c6440b85f5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "9c78bdfd-5cb8-481e-9293-7234439ff30c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94f39764-90e2-4b36-8886-56303a78841f",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7ef47b3b-51f2-45d0-9753-e5993af7e0e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "29932dfe-43b3-456a-ac47-ebbd66159ca8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38617dc3-6535-4891-a29c-901bcd10adfa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "af81cbcf-d625-4487-9a5b-4ed9a516b620"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dfc2a21-a024-4632-bfb6-57e3b46ee6d9",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a2884dd9-9c76-4f9f-8f47-18f43904266e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ded89fa3-ba97-4bd8-a8b2-b0f293a022d8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1d8f7db6-d14a-425a-8a21-3b11ee46c5f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "76366493-009b-462f-b35e-35a95f674fae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dedb798b-5a22-40ed-9f60-50c21da4a21e",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b0c30e73-f1e7-4d18-a974-d8b1b5b119b7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8eee41e7-d057-4d53-a3be-e697945e44d6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0593e84-b17b-4503-bd5e-422f3acf02ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "3e6a8809-8850-4af8-a70a-425fcb4b1429"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4ebcf4c-82ee-49ff-a17b-09fc32141721",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "34920559-6025-4237-b7ab-b8c5559cab21",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c11fe610-0f54-47ab-b3ee-fa794f2a9e43"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3526c442-47db-4a54-ad93-75c358df3986",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "37e1e0ab-c21b-4e5b-b3f0-904e3eac0266"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77079a91-5ad7-42d0-83d4-518025d1bccd",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce181eb8-32f3-4592-9d6b-a0d788708ad5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2ab1497-eb9d-4aab-9a4b-35ae332a4ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df72f8f8-d7d9-4a54-af00-aeb38e2ca1a8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "4ef3effc-be25-4b25-ae42-18c0f3abaebf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35ada37a-787f-4d19-b0e0-0328a9f4f33f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e96f8eea-385b-41d3-bdc9-816f93249169",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8e4deb8-855b-41b5-a83a-484c0b4ec6b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4753c355-4181-46ae-8cb2-c26b92309ab8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "438848ca-1b94-4eca-b641-2e556ea06e8d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ddf0d95d-74fb-4c1d-840a-1b15f19de84e",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f5f47f7-6425-4758-b6f2-1cf5ce63cc9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "052bc17b-70bc-4fd1-8823-879357d98722"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce701960-1dd7-4351-b836-661af8484920",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "bf9d1cc5-f33a-42f2-97a3-76e78e42e09f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2e92f254-0242-4d8f-b177-458f59fa5c9f",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7148bec-d8e9-4cad-befd-0f11e1991371",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "845fd6f0-f6a9-401e-9154-b2c90bf8462a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fe93312c-341f-4dd5-8d9c-75cb4a8f033b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "98a7366f-d68f-48db-8189-18048ab13a94"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a9aaf6a3-a479-41dc-8460-c4a955fc30b4",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f381fa33-8ebd-4744-86ef-c8ac5954ebfe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0de06ec8-ddb6-42ee-8b59-84ed0f9ff19a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99696d0f-7790-47f2-8fa1-de3abc3dbe41",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e7744c30-1caa-4c76-bb2d-7bcc545d787c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe5be0dc-7a13-4c91-88ef-996f1459fd70",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f844c281-f7ef-46c7-aa4c-a8dc935fe8bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "afbf61db-32d9-41e3-a255-c0cb2ed667b0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ee2a5bc-43e4-45ea-bd21-d0ba1bcb6c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "478fbe3c-a625-4ffc-a430-f60f4c3f80d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "731d3153-591b-4a77-aa62-7443b5e84a5b",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6922e95b-cb02-4f4e-b5a2-3e3efb6054c0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "076b527e-ddf4-44ce-b820-b91d579e129a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "09accee8-b50d-4a3e-afd2-30ee76640596",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "faf581f3-837a-4b06-8688-be1aa50faf44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0093b520-6d2e-4d64-a828-004f56ce24c2",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ccc18693-32ca-4238-8fbb-f68d82c733b8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1953b15f-8f9b-48ac-9f34-73ba2d84f20a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de964b3e-04b8-4bbf-a33b-ac8ae3c4a83b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "7cc8efe0-1e09-49c0-9649-e0a8e4785e44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d824ed4a-814e-4023-b984-d4b7db047f76",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "96e857df-4557-4fda-ae8e-2bcfd1c889a2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4c3f7484-51e5-4bbd-a916-8394dd8a056b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecaee2b-baf4-4d00-9711-07dee4bab24e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "47282afc-486e-432b-8ff3-a7012295fa7a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92ab925d-a7ba-438d-9e25-1b3f91d49469",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6c7e2d7-3e08-4cb6-9e2e-536e307f2c9d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52dd5029-3dee-4815-a933-15ed089c6983"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d61ced2f-c07f-4655-8d0e-0c54b33010c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "27b0300d-dcdb-47c0-8819-b4294ac8baab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "137abd64-5968-4215-87b7-44827550be1c",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b467b090-1a41-4af0-bc2e-bb485ae948ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9e6b3126-c6fc-4d1e-86c4-3d7c32154629"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dac45242-954b-4f82-a874-5e8d56d79c0d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "9d927ecc-1f9b-4e7e-932a-ea43f796c420"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e6d8e125-d4a5-482d-ac35-998e24ce39dc",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb71398-0286-48eb-9989-9ee271c30fef",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b6618a87-4003-4832-a58c-31da4a4c910b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "17aec179-6473-43e1-abbf-bdd948e5d0ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "28c39b7b-6719-47a4-ad48-a1bcb9c44472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfd4544c-18ed-4777-9321-dd3e12e64ab7",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "974cc107-8b97-430d-bd35-7c3356781924",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bd2e69ec-30f4-4008-b81e-425754b46e3c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a85a0f43-965d-417f-8314-cb84aab69a03",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ff0ec53e-dc79-4020-9c8c-06da5a8e1858"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9e107bcd-d226-4083-afff-68bbcd56cc43",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe97fd1a-2a9c-422d-9bc6-95c46b8f7b2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eedecf27-42b9-4745-a0e8-9e7e1e68a106"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca805900-875a-41d6-a359-de40e92f8814",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "f51a3f3a-bb29-4ca6-8b8a-367a29aed3a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fcfed21b-f82a-4c7f-939c-f93238bd75fa",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "54fe323d-29f8-43b6-bc90-846bb5ef7193",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "27e2ba5b-ae96-494d-9a01-968c9e4ef4df"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36c399a3-3529-41cb-8e58-e5e9f9a1579f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "6a365f7f-b4ff-4503-b1d9-8dcdfb6cb6c0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ae6c216-eb7a-4302-8ba8-24e54744e50c",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d09a86f0-7df5-4433-8d84-5b6205cd6ddc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e38cbb6e-6eb3-4f81-a10e-c7f811bf0836"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01a9aa48-1b3b-4eef-be89-58eb5df5e2cf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "d9791917-4237-42fe-b51e-52c27c6d8bc5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aafca1c8-4bf7-434e-8d43-c9e43d4f8830",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f28f4b6-678e-4625-9eba-bf321b439556",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f8844b4c-a0fb-4910-8b42-ea0dfdb1b272"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89a9937d-412d-4052-a043-7d8d40591597",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "4dc089bd-dd96-47f6-9e14-874d4d0a2b3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6ac42303-a0a2-4acc-a6cb-bee1ee2e419e",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cb6f7f2-2037-4b4b-b274-7abf94e3f80a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2af98f4a-506b-4fce-ba49-5eaddd629fe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57c07e4d-6133-4104-8972-5b203007b218",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "8540e0c7-5132-4184-9269-2ca4353073ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68541b72-257f-449a-b6b5-aa99cbed1ae8",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b075200-2d0a-4b67-a0f2-241bc93a7049",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "faf4a584-93f9-4801-b0b2-02de330acab6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9de38a68-7edd-46d3-b00c-af42271ad80f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "7a8db031-fc3f-4762-b6cf-b3222c769c84"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "a46e88f7-2b0e-47ea-9061-c5e2e8b91693",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "073c1d32-eb6e-4516-b027-8bbc868dbab5",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d34bf31-9b3f-4c15-be72-a598c9ee5776",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2fb99529-2908-4dbb-91d5-a319b7633d46"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1a35f88f-e5f8-4d0c-9804-e6ade5d1e048",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e61334ab-cce7-4027-acf5-cd8bcfcf05da"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "badd5acd-d36f-452a-b701-5394fb64cad8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a70579b9-3198-4e29-af84-45a22816ec18"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d438d2c-56bc-41c4-8964-c0c6481a8f88",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8db2c311-f0aa-42f9-9123-7e4c2985c9c3"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "8848f705-96eb-4bba-9e31-e44012ed00a0",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "5564d6c9-7824-4954-a792-876e91915a52"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "79d5d063-ab5f-4d08-8b79-d5c9f6f08555",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "2ce4992e-cf92-48a6-9200-163abda7ef4f"
                }
              }
            ]
          },
          {
            "id": "9016c98b-27a4-4a7e-818c-70eca3f5ece9",
            "name": "Positive Testing",
            "item": [
              {
                "id": "40920069-7782-4bbf-b45c-f101feaca92c",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "4c952ce4-f98b-43b9-bcd0-0a37aa9b258b",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca8b00cd-a066-4717-a1d9-deb1bccba1ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "9c44b890-e3b1-4942-9bc6-1945c888a41f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f8e5526-db80-4d5c-8560-6cc7a1b0de10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cebf8d5d-84f0-4665-9cc8-2f7751c6f37f"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "703f8a1c-e0ac-465a-b9c9-874e92536624",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d087f2e9-5899-482a-ba47-d67b20071833",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "ff65ecdb-3527-460c-a20b-9655b1a078e2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9ce556ed-2daf-435f-a8d2-4efe9f744f9f",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "dafc22e5-4a92-4c3b-9518-986fb9da50d2"
                    }
                  }
                ]
              },
              {
                "id": "c045d15a-e894-428b-be7d-e441ff54a2ef",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "081a1bbb-dc56-45a6-8633-6a46cd77239e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4d4c495e-7b45-4707-9fb7-b8e6723ffede"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "1f86c5f2-a25f-4a21-8bd9-1c1f7ef62de5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "65f897ac-1677-45ec-bf31-331fd73e0450"
                    }
                  }
                ]
              },
              {
                "id": "95136216-d6b9-41cc-b111-836d7e00a9ea",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "55bfdd34-481a-43b7-8073-ab8ee4c74485",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "8ca9dd36-6076-4acb-9633-2ff814bce5f3"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "f7659d81-3c7f-469c-a379-a18af987a8a0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "833fe95b-d218-4cf8-8ec4-742fbebbe87b"
                    }
                  }
                ]
              },
              {
                "id": "8837b415-237e-4470-9510-9b8d505deab8",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "1a2219ce-0b43-42ee-b906-1e1555708543",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "0f82c754-b1c9-4bce-a14e-c5a77810403f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "99c8f851-f57a-4409-99b6-3a508ff45fc5",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "77e6cc67-3f95-4ad8-9025-b10a8d13d7b9"
                    }
                  }
                ]
              },
              {
                "id": "17d7bed1-cf04-40e4-88bb-918d23b02c89",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "eea1e236-20ed-467b-a46b-dffe000d1220",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "84837087-5b09-4f29-9e98-ef7c671a3377"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "06ecd1bf-53ea-4db4-8cc4-ee7a2aa28d0a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "1f2bfec4-365c-44b3-a885-3ec736c33624"
                    }
                  }
                ]
              },
              {
                "id": "e6a6b6fb-6256-4cc2-936b-a9047a7337d8",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "135b385f-406f-4071-8515-0231878f35cb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "464a180e-3a5c-4003-b9bd-3745aa28250c"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eefe8061-87bf-42e0-b7fd-52402dd79cdb",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "7baf6792-33d8-400c-90a6-87a7557d0922"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "c83a3487-99bf-441b-b06c-cb66d7072f9f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "17b4205e-4dfc-4f88-ba3d-814ad0177805"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "d0eddf1c-613a-42f2-96f4-e54ad7b528f1",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "f8c6c9d0-6d8c-45f4-9fba-b13fa2db9461"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "bf51df06-78ff-45fc-9366-d8480791ed77",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "e0a112df-3aa5-4c5f-a76f-c1c089f8d671"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "13f09094-48bd-4b52-bbfe-ace5cdef1bc0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "c2863f0c-d3ce-4dbe-9170-40c00d5fe05f"
            }
          }
        ]
      },
      {
        "id": "c0abf903-3484-4a3d-84ae-d2fe1287292e",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7d187655-aff1-4ac5-8bc3-b5950523e18f",
            "name": "Negative Testing",
            "item": [
              {
                "id": "e0235aeb-dba3-4dd7-914d-770705c5f24f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "65d4cd4e-8e87-4502-91b9-226978db5b0d",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48160b1f-c103-4df3-8fd3-5ac3d3fab001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f0c3b8bf-d5fe-4fa4-9574-2abf53c7f185"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "961cd3e4-93e4-4927-bcc1-0a9d2fdd725d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "7c5d087d-eb67-4fb9-87c0-849b9784bc4f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a7f369c-98b2-44d9-8058-f7b607cb28b7",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f711ef9f-739b-4c07-839e-0ce5b99745db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b714ea45-784b-405d-a865-1d30562f4d1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7537984-9363-4b60-8b0d-96756c858ae0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "7d05203a-9ba7-4564-842b-a3bb632e7b34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8d269df-d37e-4eb8-bb34-fed9bfac2c88",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dbb773e8-49bf-42c2-890e-a5e0cfa8e5ed",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d1ff35c-67ec-4474-ae3e-db5ad581438f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08dd70db-c75f-496e-9c60-057222ef7f85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3afb4217-498d-469c-bbd0-722679dc37d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa39f5ea-33aa-468e-ae41-3c571e2d9962",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6057d05-0e03-47b1-959f-6f4a25a5c1e9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b335e2-c4aa-4fcd-8a58-4f18260d9f9a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "36450dfd-8aa9-4727-9a9d-347c102136e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6989cea8-cf58-41dd-8735-b0ff76371304"
                        }
                      }
                    ]
                  },
                  {
                    "id": "17897c85-141b-408f-a19f-dcd437a3b0f6",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba28fa21-5aab-4cba-aedf-56c735da294d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fce7b30-2e72-4cf4-b918-51b61f611402"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "297bda1c-2850-48ec-ac8c-28f80484915b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "cc9289d1-6b88-4d28-9ea4-b70e4f4de65b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "995e50b7-9aba-4f53-9392-8c4152e65186",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66ca907f-9d59-413c-beef-3f0eb21b181a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d196224e-8757-40ff-91b8-f3c89375111d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "46642c38-c0e3-4b54-940f-6678ebb94f4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "4849fe47-6148-4e7a-878c-9c943ef3eba9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "38cb9cf3-40fb-4679-b4e8-1169573d5f08",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f2182b2d-2d09-43e4-baa8-63d7d346ed24",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8542c854-32a9-4db5-8ac2-9cc7102c81c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0364e2bc-0dea-4096-936c-8c4d1fdb427c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "67d8ac6f-d0f9-4fae-a79b-0e4700db8c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8d09954c-b886-4168-a4d9-50ef5af53cc6",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52d35c35-b08a-4258-bd67-1388d3b1517f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "476eae9b-3ad2-4153-b722-8ea6d7f36fa2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3a7b933-8586-42a9-9e78-7ac6adbf498d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "659e5aa7-4ef2-4d7d-a754-d40e08dba7c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "92c96e05-38a0-4cac-91a8-dc0f802c55f3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b96e707d-d78f-46c7-9d61-c9e34c82b978",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8bfd7c4f-1adb-4d6b-af55-5ecdd4c40ba2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "088b7064-8b32-401e-9726-eed74ef0fb1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6568064-256b-45bf-b5ab-331c4b57be18"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dfe892a9-60d4-41c0-8935-fbbf467b05a2",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7a421e-8da5-42ec-a94e-96193db3c1ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "93d89620-b9c5-4067-b12e-8d1fcea3ef78"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5b05950a-13f4-49af-870c-21468df10eea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "6f4c3309-6564-4fcb-9e85-e030aef4c192"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4ca448e2-1d5b-4597-a7d8-980e3931fa0f",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "180a3b5b-832c-4ffb-a87d-6ba60549e6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c808939c-198d-4050-8b8b-613419673a31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5e3bfa1f-0851-42bb-a5dd-cec606026d35",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "81742140-3dae-475c-9f92-af17914927e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4986089b-164c-421e-be33-7e32a6175948",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9b49784e-1a25-4ae3-8311-78007c267ac9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "77b09b03-edd8-488b-b825-9528cd35a6a5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "43c471e9-6f46-4550-9f4c-f26c7d4dddb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"RevocationList2020Status\";",
                            "}));"
                          ],
                          "_lastExecutionId": "bfc69a62-ab44-4399-9658-bd491638e074"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ddb4ea-ab62-4d10-8060-09094f10983d",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4ca11519-c517-4cb5-8506-2b1a6b23dd7f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48a87cf3-15d6-41c1-b93e-d7e063f1c889"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "74b6758f-70e9-4b1d-8d19-490d6e07f897",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"RevocationList2020Status\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "0aa0d66a-ae09-4008-9ce5-9b9edbf968ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "19e626d5-6370-4842-9317-5bd7a527c5fa",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "40c2035c-c990-4aca-94e2-7793547dbeb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18fc99f4-f86b-40be-aa5e-e986794f8155"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38e6da1b-4a95-48d1-8ce7-c3b1cfa084f3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "0adbba42-c624-4792-a290-c58de437e9d5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1341bd3e-c6c0-4f60-b37c-8e9106a6c8ed",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d66c9338-15ff-4360-8daa-6e21af72dec3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b1cd6d18-709d-4abe-8d8f-fa575265652b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "25ab62ce-bbb4-439c-95f6-1a36937fce87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "4fd8e2ec-f36b-4ee8-97a7-f8e7f1e93a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "124c2b9c-7726-428e-9675-9797f94faf1b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "551b1fc7-6a58-4f9c-b729-27688a87cc84",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e94f99f6-5a3e-4537-8e56-7c66edb33b1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "959b419e-2850-4dcd-8fcb-b85d655befa7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "d451fab6-b948-4f12-87e9-6a86a61513cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f6f9b7c-4892-498a-b015-8cc2b3e70abd",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d457958b-5af9-488b-bedb-62fd7b73e586",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d0755938-fa49-422f-963f-e4f4c52076ef"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8086fe79-0eb3-40e4-acfe-aec9d83746bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "24279db5-6d66-4c04-952f-484d8135301f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1c946d44-62d5-4da4-a7b0-03fdcfaf3cfa",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8759425b-d94e-4f36-8323-634245a3a53a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e2b15b51-c87b-4a50-81ae-1a1a5589850f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02ed3b75-a5f6-41b3-bfa4-6fcc6926f46e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"RevocationList2020Status\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "db0c1d81-27fc-4b5d-9b51-fdad55a56140"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8126eeb9-8246-4ebc-a5ae-2117a97d363c",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8d01430f-71a4-4c98-afa0-54156272cab2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec388507-49d5-4478-85ca-43f598900837"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "872960d6-03b4-49ba-9eab-73e1a13e4d1b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a5d88601-16f8-40a7-b17b-238440d14056"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bcea8722-1ca5-42e9-971e-b8220502acfa",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16d60bba-c6fe-44d2-8c7e-1ff6a2bd246c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "09af75eb-af37-46e1-a203-18f4d3d3d1db"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "938d58c0-81c7-4c55-974e-ded2e572ff4d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"RevocationList2020Status\"],",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "da64c9d0-e5d4-4db9-a634-47fb5a94a0a8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e976a4b0-fbf6-416a-bdfc-58d8395a3d8b",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "47fc6e73-4be6-4bf2-970a-ffb9f9f8d480",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "61024a29-173c-4161-8fbb-293a27f00078"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0da304e3-42aa-4086-8155-8c9f22cd8612",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1b517a56-d0c7-4e51-a1d1-3427bcbe6fe5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a049233-68d3-4c5f-b194-185e67234d97",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eae3772c-5ed3-410a-b5c0-846cb690baac",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "12eb986d-6483-4eda-9110-567dbc377daa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6a454407-222c-4335-a08b-e87b14eabc5f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "79d4c76a-e854-46ec-a307-f1708ecc8768"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c0d769e-040e-4ee5-9426-de86b3796ed4",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "00d2f9cd-b7ec-48ad-b092-5a4b7920e995",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "50648d24-9eaf-415b-aac8-16b27ac5fc06"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d863112f-82fa-45f2-8a03-934179ce3425",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "eee9cc4c-e086-47d4-9e58-2a6edbab978c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c7dfda7-9ee1-4762-9ddb-f765c9fbd7dc",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6ea8c4d-e013-41cc-a67f-4914a3479a50",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f45eb2ef-9cd3-4542-a53a-a56a73ce4d87"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2934f4a0-7f5c-4db1-8807-41f47753fbeb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0ef599c4-4041-4961-8b29-8e7fbae6b1c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e090b996-c8d6-464f-b5bc-df93cd294927",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ac8e2a1b-4950-436f-8a98-4d3ad9949eb8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e4e4422e-639d-4a04-9878-08d6af34cb1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0e43f720-3763-4139-b7b6-0ad438a163b3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "11d34b56-bd3b-43a6-947a-fd0f175b2f57"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b1d4a62-0051-4b4b-a370-b3276e58a9bb",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "64ebf849-8154-4db3-91b0-606350c60f54",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c99937cc-a0bf-423a-a609-2bd8e5f18b9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7128a1c-a940-4136-8cdf-687b2e020cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cb160dd4-01b6-4ff9-a805-00fa5bf84e30"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04a0fe7a-cee9-43f1-a60d-80fc5380ca41",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "febd3765-9411-48d9-b382-2b3b57fe39d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dede650e-deb7-4dc9-ac1e-8cceb42e68c3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97d0f9c7-0478-40dc-97c8-5c18be538d58",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3d4b1c3b-906b-489f-9a6c-5e4b47859804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dcf1cc0e-4741-4590-81af-95d8160d0156",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fbd1ded2-efbc-4634-a514-8ef4a7444984",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "74fbf798-bfa9-4d6b-b4f6-741857f7919d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b393d57-7e9c-48c9-9188-679a643855ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dba948c-85c2-43fa-845e-65739e01b645"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00827568-780d-403e-b533-794b53a621ae",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "413b811e-fb2a-4730-90cf-bdce459289b4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f40a4005-34f3-4345-a167-4c0e0f3d1c68"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1197d379-e633-45a7-b7f2-9e1163fe5cc6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "e167bef6-e599-4d03-8d1f-2b6de0e97acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bbe4efd7-b936-4b17-bcf5-e5cca42fb03b",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5cd9dc58-7cb3-48c9-8003-eb153d66844e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4df1b9ec-9f6f-453a-bdab-e59dbc5f751f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b6a6d977-7ea6-4c80-8705-6ba102153666",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "34d5d4ac-d2d6-4364-a9dd-5c17f7c7b248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52e3501a-a2ed-4efe-aae1-2071faa5d64f",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5cf9407-c948-47cc-91d1-5f418ed38b25",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f36bd580-4e16-477b-a47f-ee99751cd6d4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6adc200-d34d-4a51-a4fb-6cdcca1a51d3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c6ec4ff5-ec8b-416a-a918-f368d7b9c36f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d4e22f4-bb37-4539-92bb-d636c498fa54",
                    "name": "credentials_status:credentialStatus:item:status:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "571218c1-25bd-41a0-918c-f3ce158e150a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bb8398b2-233e-4420-8817-ec11d38f3862"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "950ef163-936b-4469-8d8a-e84cfce6528d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"RevocationList2020Status\",",
                            "        \"status\": \"invalid value\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "75a81926-3e89-4bfd-80c6-d2eeb58513df"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "d872e86d-3213-4cbe-8848-6b7a78abf5c3",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "aa1c3d2a-76c1-4d7b-a3af-e5b16a479a1f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ed6b8e7-897e-42a0-8b03-6b48a8c6ce14",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "9536852a-050f-46e9-b02b-9ce2e0cef887"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f9f0dcf9-3fa4-4420-bb7a-a6c479eb68f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "1bd7f506-ec68-4635-b337-e15f9aa87d2c"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "eccf6b5f-86d6-4c8a-a29b-3854c7c19d38",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "aa80c609-cba8-4285-a7cb-0b666d40600e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "3cebd6e5-839d-4461-a531-ec60f9863cad",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3d07c75b-5676-499f-a2aa-57803a09fbc3"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8ee00a49-7f30-4a04-b032-5d74258430cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "c3193077-f6b5-408c-bbc0-c1cdcfa02de0"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59a5df98-3fbb-43f0-85af-bbe661ecc482",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "ffe281fa-2d77-4f06-842d-7b9b9af77133"
            }
          }
        ]
      },
      {
        "id": "38f9c491-8112-4eec-bbed-33c5d60d201d",
        "name": "Credentials - Update Status (StatusList2021)",
        "item": [
          {
            "id": "02e551db-93f0-4d83-a4bb-0f0a07494e1d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3019b922-877e-4bec-863f-b14621ae3d95",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "ef44bd68-cf8b-42c9-b4d8-677904fef558",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "301b1d41-9883-4d82-906f-9e289875929a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7bf0cd57-e02f-48c7-b326-5556e25005be"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89c46440-1fd6-412d-9252-df5fd92665a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "11234641-2996-4d65-b9a9-259d701a8a16"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e1e79477-6fc6-433c-bfa7-7d5920bc7e25",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c6b6e33-d617-4e28-bbc5-735df75ae3b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "eda246a6-c30d-43dc-b6a8-9c9869c9179f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5ae09fcd-78b2-4adf-878f-057afe539968",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "c1206d98-18e7-4a16-96cf-3774a1ded028"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f83ab8a2-ea18-4b90-a1d6-55acc897a8c6",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06af8c2-281d-468e-af29-034a2f937487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45e222dd-bdfd-48e9-8cd1-435ce2a26610"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "19a433d3-dc59-435f-9767-b074395a6f80",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3f8d344d-5b4a-46c0-87c5-65eb89636ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc7a961e-6ae6-492f-8b0f-46b741c1e1b7",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "393311a9-0de5-49d7-b983-4404fc0df89a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "02f4a91a-7d0c-42cc-a311-f2a4d8455414"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57a07669-ee01-4f8d-bcbc-37f6ef0af892",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "51647bdf-974c-40e9-b84b-67807383e8e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "801aab05-2a15-435d-b9d8-8b1209b78345",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d96bf96a-5ea9-49e4-ad75-3ce486c9fcda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c185ab63-6bb7-4950-a5eb-b40747c32392"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "77c75eea-46ed-4a8a-852a-41d82b8dcc6c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "ead5f585-4d40-434c-8388-6c72a760121d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "69b2d336-baef-415f-ab6d-bcdf3a9d66f5",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "252bbf2d-9b82-451d-8b09-761fcf6c9daf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "816ebd85-20e6-4aea-8b4b-0189a5060698"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4a500bbf-f598-4c5b-be38-5f5c451db78a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "8e322749-8015-4cb0-b434-88e995bf2f47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e233d210-b87b-4bee-ad21-96c746958f35",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cce1bccc-01ed-4d31-9992-1e84474fc7d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e27058ea-e828-4ebf-9483-8899baafa8e8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bb095827-3717-4cf2-94c6-3ea841981db3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "900b0faf-9e60-4d33-9dc1-15488302f4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ec553d3-1d55-425b-af66-739fd481201d",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f3558405-cc06-4082-bcce-a7a784b35260",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ecbe1569-a4df-45fa-88c4-eef66bb3c228"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efd4bb55-0940-4f64-abf9-d0b4c0c6bb57",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialstatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "60297e3f-04fc-4b95-8e19-ea1b08246c89"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7d78a985-1847-4526-88b7-5583e52d9350",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9757cda8-200c-44b6-83ec-075c7bb9dec0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2445aabf-e547-4a31-863c-27e0b3618de7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38d79e17-e054-4d8b-9b56-52843c5c41e7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialstatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "65244903-4b85-4be0-a567-f83ad921e68f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5e134b50-d38f-49e5-a81b-774a02d2afdd",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe205a4b-3342-4386-bf5d-f0adde04faa3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "072b9065-ef36-4cc5-9030-f086e6ce1e41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b6dea65-083f-4b56-b44b-d571997936e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialstatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "d6fc836e-5e98-4c89-9880-21b360dac992"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bc7561cf-58c8-4817-a9e6-eb9ed793adf1",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "49aa9f8c-03b2-4be6-a157-00c3930f78f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78b4d79d-e3c2-4eed-9648-d0999d764955"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ab62fd9b-a002-4658-b3e5-0c4502b179f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialstatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "d4bbd5c0-8e98-4992-9c65-1f1a3616d826"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c511da-daca-4d07-bdc7-ad10c7e9543a",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "da0e97e9-7f15-46e0-b765-8433a9053016",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b6e118c-55bd-42c2-a29e-df8b57ba6b1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "846848c8-9f83-4536-bf06-d75b56c1e567",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialstatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "69f06dc5-3cbb-4ed1-8f3a-2ddd2ed13dd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b6bb5b0f-c43b-4f3c-869d-0c4d20b5c35c",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9f670c2d-ff9a-46b1-8ab7-0684b90c74e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7e4d8ac2-3145-472e-8c16-91a8849fb049"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7041305b-4157-4f3f-b76e-1decf7e3487c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialstatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "ada7f009-07dd-4e62-8b5f-8239d30ee79a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c7407e2b-b403-462f-8d1f-88e9eb2e71ef",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "653961dd-bdfc-4746-8497-b376bfe4b1bf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c4f4f5e9-f4ab-4155-87b3-5186c797c603"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c6c83e7c-c41a-4729-b04b-65e6feb2ab20",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialstatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "b364cf17-1848-4931-be29-904c1c11538b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73a06b29-49c7-4441-8a64-138721dd6c2c",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a1a57f3-ed98-493e-a2e6-398eba957e4a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2e19aab3-c5f3-4188-802a-b867de9375b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f18ba78-7efe-4779-bacc-532c82d675f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialstatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebb99733-7ef7-44b4-8817-baabc042e1c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5b7cadb9-98d2-4872-97f7-2feda5f26b7c",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6b04a77b-f94d-44ef-b61f-a1eaa5ab4f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c2618244-8d10-460b-a1f9-de9ffe1419f1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4203c82c-58c5-4b5a-bceb-f3ddf596e988",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialstatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "12c010ef-8c31-4c3c-a799-9630671ecdb0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2ed38cd3-f39c-4d7f-a24a-3acea37e02d3",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e6acdd19-5635-4b70-859f-0edd7c3af4ab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "fc3fbe0f-961e-43c1-8d2c-cec60ea2d24f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "585b63da-e2ec-49a2-9690-618e80e4bb09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialstatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "b4b8c5a0-33be-4e7e-9f9f-d37826846b6f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d480e918-5767-4c0f-a58d-686cff075126",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7436fda-5c28-45ee-b3b1-b0980c9334fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7fedd173-c78f-4fbf-affa-658ec2f976b8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cf2f2346-b472-475c-8872-7ea05a744c3c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialstatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d7fbec9e-c48f-4f7f-9659-3030f1a79038"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f4efb77-adb1-4917-907b-ed81c7ff0e43",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb0578e-29a1-422e-840e-3e76c8781a85",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dfb142c6-29aa-4030-b81c-805b38d0dce0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7cceadcb-be16-4ba6-8453-c709ef06b8a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialstatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "29ed8ec2-03dc-4069-afc1-bdc3949dfaf3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5be8d22c-b0c6-4785-98f9-4e96582d327b",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3095f98e-b821-4622-aab3-d87c29b0e4a0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3f8e64f3-0779-455e-a198-0fef9f60b8fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7da6d96-8de0-4663-ad78-77accb9b2225",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "17ba825d-eb54-4f69-8bdd-e7cb271be5d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "837a40cb-f06b-401f-a70d-751c18fe6480",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "225256b7-4fc5-4158-a23e-cbab9ff806e0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "19f4720c-febb-4fab-ac33-979a6e5a140f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be419e38-097e-4cc8-9a5a-91efb6dea839",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9aa5d570-458d-4ec9-bdfc-def62ccfddc4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd57ce10-1695-4f9d-a777-064d880499ee",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9948cba-f889-4d06-bea7-e7185deddace",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af3c9bcc-7423-4dab-91ff-2e223680f0f5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da740834-d4c4-43fa-b2c9-5a8baf5435cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ac281add-d571-4ee2-adc2-a24bd7e1f9d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bc53824-878e-4949-80bb-3476eed98b87",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd313592-e853-448b-ab33-ac44e26beccc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d492600-2025-4cc9-9909-19a7d66a8406"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "37316567-32c1-4a56-a706-2ce2299635c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "4ec817c0-5afa-4d62-a540-65bbbdc6be38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e324ce1-8e04-4983-8926-69cd1ced175a",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "08f0e184-6b62-4235-9c07-3e825b894374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51b0ed61-180e-477e-9fb4-2449e35506d0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da422b29-a4ec-49b8-bf2d-7fcd86b803d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3b45fb78-f544-46c9-a67c-6f81db01a9cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f2bc5bb5-fe06-4030-a11c-dd48c6f476f3",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6888a08a-d773-40db-9bb8-8e0046b6386c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0fd4c1f9-397f-4405-a0fd-c68440983b26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "78963614-62ed-473b-8256-736621a87001",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "126e14f4-75fd-465e-97a2-389b3b7e4bff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5645472-cb7e-4b0f-91aa-aed0481f7d96",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "35817afc-0ab2-468a-b152-31ce7ee0de6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "424e1d21-ca61-4f9c-9210-3ec99f2eab2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c8239e5-36a8-4ba9-8884-3f91cf04c36f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2e742db2-da2d-4596-b91d-a826bdff94a2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "10396fce-af73-4f1c-a3d0-e959b69b0a80",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9a210ade-03b8-46f5-b198-b3912853c672",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "538d3f10-96b7-4328-bce7-e1220146a987"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71f9f4f-e6d1-47b9-b050-fb13163cb78c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bc97955-1506-438f-ac4f-98d9755a2eb7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a299e66c-2912-4d01-b91e-f4ae20f02b90",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "031b83fe-3706-4c17-b17f-80971b77eb95",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1ac2b51-d69b-4b64-89f4-ff92a8359c08"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5f761263-7199-48b5-a626-495a68f121c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "fae1f44e-47e9-40fd-b020-1bbc1bcf7289"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d6bdcf9b-391f-4b4d-bc5f-4d19443cf28a",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37e46772-35c2-4b9b-9731-723b68baae3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3bb6c10-9858-4055-9531-21b3e58f58c8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ba78662a-e389-410a-91a1-898c1cd264e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "8b991f95-185d-4869-953f-69d5e0f2319d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cf41c0b-d4e0-453f-a5bf-7261027de0ec",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39a8df19-ee6a-4ddd-b594-6a124e47bb2b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6ed3fd98-4aa8-44b3-8d77-950805e1c300"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "99c8fd61-6a96-4568-8d5b-af5b566fc89b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5ec3bc84-2797-4d7e-9a24-de01ab207d83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b889fae-f4f4-426c-9198-291bbbb54504",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1a870009-56e0-4560-b73f-46c2a3ec6043",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a36d4df-ac41-4432-b5aa-738a7fb0f32e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6af33f37-07e4-4c32-b5ff-1134e7f1649e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "32f83739-113b-4888-bf34-ae8689c5a797"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7b300a7c-6b89-4a8d-a206-1078079812ef",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2759b46f-5b9f-4e9a-9d3a-f7fae60e905f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "54107782-6836-4cef-831e-cfe968d870c0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "35efbe2d-a31c-4cfd-8abb-3b968af634ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2cf972a1-4ea1-414f-8261-080a1d6c45b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f0e0953-d831-4f70-8797-36343ed5bd46",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "42470add-0e6d-47b2-ba4f-7818e03a3534",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4b08da9e-9a52-482f-bee0-e0347a4cbfa4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7759958c-2c03-4b60-a949-ebcd93b0f877",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f2fb362e-6016-4cb9-a465-4a3c7a086b32"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cd3f116-2fa7-4bce-911b-d756fdca03cf",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "22ff9e7f-cb25-4f10-981e-f3e44ab8398b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b0e6767d-c243-4b63-9b54-fa3bc3a9fb9d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "79e91b41-6faa-4dd4-a821-f81b76c6eccd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c55019f9-57ae-4e19-860a-fce9aa197330"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b20cd772-3f1a-4c8a-a11d-4df63f28695b",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4c7a2c4b-e8c8-4224-be2a-721c1f56bfa1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "110554dd-fb49-4391-b174-dc7fd84cf2ce"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f9b2498d-9385-4551-8e67-9c7cecd2f143",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "a2e0e3fb-30c6-49fa-9d2f-0d3872d94f44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f453ff03-6371-4d0d-a26d-9e09aabfc315",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "12fc0527-cd89-4902-a45e-4c5fe1e141f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c6eb69ae-f5ab-43b3-add4-1194d19ade80"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0612f2ae-3ed5-464c-8085-9cd4bda7b200",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "59cbf59c-1afd-44c8-aa7f-f57eafbb5f19"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3033c09e-f69d-4222-b1b8-f0492e9d1fec",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "55ee8e22-49d4-409f-b36a-6cb199c0d6e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "919a11d3-ec16-43f9-920f-36f4bc5ce512"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0987c2e0-9697-4bcf-bdc4-24b9d9ea8fc0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialstatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "f222f399-0cef-4f9e-a5e8-f18815363cb6"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "3126dcc8-fd3d-422c-95d7-e3d3aacfa877",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "65399758-bb9e-4b2d-a18c-d934831ffc4f",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "694f91d6-8ed4-4db7-a8f2-138b0db7e410",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "935f5808-cac2-414c-8e47-ea5e6f923c2f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cfbcc141-0123-4dbe-9842-488e6fefa2f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "75139a16-73d8-4b7e-8b7c-d7d3834906eb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "9f7b6b15-f642-4a19-8489-a3c875c948e2",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "b756a51c-12a6-4505-bdd7-ce635484f06f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "5c12c316-cd8c-4d28-a63d-2b8c7cc11890",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ca1a6b45-b3db-47a4-9c7f-73a83228f87b"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "a4557b71-48d2-4c66-a345-a942ca8dac81",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "202d129e-ee01-4404-a1db-9c27043b7a0e"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "fd237fc9-54fc-4fe7-a4d7-5b6ab96611ce",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "765c8314-9159-496b-9847-7dcb87603c55"
            }
          }
        ]
      },
      {
        "id": "23b45ad2-ca7c-462d-a6ee-d24695d5b366",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "c5606db3-e491-457b-b7ea-f8ca192547f3",
            "name": "Negative Testing",
            "item": [
              {
                "id": "4b501a42-ca36-42ac-823e-c7162bd73735",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "7d96f5b2-98d8-4ba9-8293-b16125715dd8",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d26c78f4-e1de-46d5-ae61-27ae27ef9e0e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "feca11ab-9b56-4b40-af9e-1138297bed6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fc630a07-9bb7-414b-9f49-94169fb313d9",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "02678225-5b10-47aa-9df5-d1881f96ea0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbe919ab-d4f7-4108-ba9c-531dac64f6f8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0e8751e9-7dec-4458-a09c-1e663e409ef5",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cb40cd54-4710-4d36-b763-1782e5571e5b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "06a03b8d-cf6b-4f0c-a39b-1ae3b70b471e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f7919c8-db20-442e-8d92-eb888a18ddd9",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad881a7c-daef-4753-bae3-df3bb1b27b06",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2bc376db-6026-4886-9002-4924333eb228"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b7dfa9f7-4c48-48e6-91dc-a53ac3301a69",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b34ff0ef-aa61-4498-ab82-e59a29d051a3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23eec70c-a4e5-4f59-8dfc-92d311e6bcca"
                        }
                      }
                    ]
                  },
                  {
                    "id": "546d1a19-26fa-48a3-a117-084b744d4625",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "174b5fd9-51ca-4290-91dc-a3f1553d2333",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a0e5af35-aa3c-46f2-805a-40c84756ee35"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ae3def2-0871-4cdb-9c6c-ca035f2433d8",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e00c5757-f530-45a5-96f1-59ed4dedf5d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5d3a365c-218d-4dd9-bc2e-6de8478dbbf6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e42d6f44-467e-4ad3-8e7d-2bcfe0a32736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "65eb84c4-fed2-469c-8206-ce36a04760b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fca122da-52d2-4da3-b5db-c0b6d8a5037b",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0ff429bd-d954-404a-af40-f9ed20ef8848",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "13be51a7-eeec-4676-8cd1-c1e1ed58c836"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "18c5765e-8461-4eea-8fef-6bd879ebd31b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40561561-9507-434d-aea7-aec506eac050"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b1bf5bf-daa9-4fcb-a0e0-c35b5ef01583",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc4d09db-f0ea-400d-b399-88a28b9c0668",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f01beeb5-4e99-443d-a059-817025b4e2b3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc066db7-093c-461b-b48a-934c922a4cf3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "098e524c-d0ed-405a-9682-a1aafcf36381"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5309612c-3f8a-49a8-a5d6-e8f89b3a4f72",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "803053cc-5637-48ea-bb6f-3cb7d9dfed93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1783ed46-ed35-4dc2-8b58-855d91c086df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12b6591-1e9e-4a61-8f79-fd265d2c2a2d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bab33b12-a2eb-4a1b-b697-1b5c5c0cb72a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "369fb233-4c96-4d17-a00c-49261e61ecde",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddb9b87c-ee7b-43a0-90dd-848a7a2faae2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "735c81a0-fdc9-43b7-9f98-9d08e924d216"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "624ce527-847d-4165-890d-cee81c8b4511",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6433d4a-f63b-445e-8c71-3f63db93c585"
                        }
                      }
                    ]
                  },
                  {
                    "id": "66502d32-46b6-440e-921e-609ebbdad875",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335557e5-1f96-4ba2-a6b5-7f1187810fdc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7d2ac68b-b3dc-4d18-bf15-787379fb925d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a60f890-cb73-41a1-8a9b-56d5bf20d867",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8742b5c9-5e61-466f-9627-54062e83e8f9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f50cbc6-9dc5-482d-9270-de037674386d",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "34df795b-4831-4af3-86b5-9e3806650998",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9f603009-4b9c-4c7e-b03a-88da0ad15f6a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d68129db-0453-49a5-9075-c80cd1eea88c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a45eee34-5eb9-455d-80aa-2760123e55cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f2f9410-6117-42d1-8c80-d847f3e24727",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69d6a416-e993-40c5-8c9c-a8867eaf0130",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4aae7a0-bcaf-483e-a616-7754c288ddf7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55f02119-6169-4b7f-b651-39faa0e66f0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44be90c7-4349-47f2-a0ca-baf61297ad59"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9952f1d2-a207-422f-8765-34af2aa2163e",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "793b55fd-7e4c-4b4f-89e1-5312664536c8",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "347f21f1-bf15-4fd3-bb2a-1643ea17a99b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "eaaea771-9321-4625-8ba1-c4223f66f3d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8773c28e-bfba-4b32-bca9-c6ad3ba2b155"
                        }
                      }
                    ]
                  },
                  {
                    "id": "abc7d5a6-cd9b-4592-ae70-e812261cec00",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3eaaaed2-1088-44a5-9e62-3e7c7c81e3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "286bb4f6-b8ec-4345-b09a-8deac36370cd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a48e7eb6-84d1-4c38-bcb9-29b0f49c173a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7999f38d-0870-4fc2-999d-3481e559af6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1a3af0cc-8544-40b8-bdc7-e04767c19dd6",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26a6f135-b4b6-456e-aa1f-f0a32e42d7d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1d9722b4-d46f-4e9b-aa41-b2affdce742c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "944a3f86-6830-47fa-a9e8-5b4203c5b1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "150d39f5-5b67-4c7c-ac2e-a61ac1df47f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6e4f2ac4-f893-4b26-914c-3d0f26528c19",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3f7e502-6490-4464-b4cc-8ea7bf97db67",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "90e65bd5-0b38-4ef5-829a-35033a0ab167"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7426f4cc-25e6-4091-8609-3336f82cc02f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d78c126-4715-4cc6-a67c-5d48fb948ab7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2fc52c94-9cc6-4c6f-bfed-74c3de9d6d9e",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b4dfd7d-b19b-4699-b141-2519bea5fa58",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9438421f-fbdd-4114-bd3a-e16e5aeb679a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c88c586a-be51-462d-a1e1-a477296f3f26",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32c73653-47dc-4af1-b3c5-3e7df5986d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d0d0a875-60d4-4c3f-b98d-2083136e0759",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "943be6ad-5ea4-4999-b768-a8de0ab4839d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c1d73abd-f941-43a2-bf14-d105cedcd596"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0a006b2e-a239-4baf-87ba-1b1025e8e0cb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5b16d26d-6907-4be1-a32a-abe270332115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9db1c04a-75ed-4806-8bed-14cb93194031",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7fa6563-8b80-4d3f-b370-92f73adab977",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da56d5f2-6fc9-48f3-a9fc-4d79e369d161"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e13bfe4-32a0-48cd-8335-6656e3b296c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a2406852-9809-4b96-bf60-3b5469f65daa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0aade20-2c43-4c7d-8e26-9f17fe049914",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "775f0eaa-213f-4a96-bd84-8581bf68f193",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bd45d785-0885-4c4d-9875-060e578a1767"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0dfc6f7b-3739-4b34-b6ab-6963374156ca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d28a7836-727b-4db0-84d0-b3ce9f111b5d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e356740e-c795-4854-b606-3a486553e3c6",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "150d0d44-f180-48d4-8b1b-ceaa17a9c5d7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "294f5b18-d2ce-4e81-9fc9-334ea3f76136"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4a28e9bc-5344-4587-9d35-6d3128b5e836",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e79bb2cb-9d7f-44db-897a-24933f0b970d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53fe3cf2-2150-4fa5-9c94-ee47d853ee7f",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aea54f79-fee6-4a43-b08b-62bb1aa59892",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f91f6789-2b38-48c2-8681-ce8e7da7a92a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a115283d-413f-47ba-89e9-e66cdcea7470",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c77a0f63-6836-48c7-bff2-04cf3fc571b8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dbbecc60-cca6-4477-98db-2a5abaedc997",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ddc496b7-8205-4acb-897a-01bf7304ca48",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48ac0c29-728a-4c40-bf3e-5f1bef88a705"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "48c74ef2-8804-4012-bac2-e2dc204977d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b368f983-5db9-4fb8-bdf2-2658c54bf693"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5d7208f5-1c83-409d-8c0e-c0af32d64985",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef99cef-a703-4ac3-98be-11c2032c62df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "d8cf5c5c-0097-4d9e-a5ba-d76a450e5c7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3197d4f1-a225-4afd-a296-e17ff8a2a49e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "441156b7-5e07-42fb-90de-639ace5cee13"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b23b3a09-37ce-4200-9baf-222cb7f979f2",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a51db9e6-22c9-4a7c-9b02-fd2b19c7b2a3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0dc336af-7119-4af1-b17b-5822c564b960"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bcf404b-6d0b-4883-8fd1-28d6b70d7dae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4ea4de06-e90b-4e00-8e01-cdfc1262a1b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a274176b-aefa-4bfb-bc1a-a04f3f311729",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d4d90bd8-dff4-43ae-9892-e3befae12f12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3b351611-5c70-40ee-a6ee-2a1056513f76"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7df444ed-94d8-43e3-83e7-fc0b5decbbb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e3d6a65-d8c8-4797-a332-73f77f0a270f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f123711-eb57-4ffd-86b9-99b37155130a",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "98325090-c56e-4ba6-92a8-4e1d76ea7094",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f50ce7e8-08f8-4c2c-b26f-190323a2bf7e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e24e5e3d-e688-47ad-bcb3-b24bc1421a20",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0256f8b2-847d-4067-9915-892ea10caeb5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4b21c210-f8ef-4362-95fa-8b9581c1ff28",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "48950de1-2308-4a96-ae2d-9011545a27b1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "17328e92-8d0d-47d1-b5a0-d647ac50b60e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "214d7c88-edef-414e-af5c-968c77b9ebb9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00774a0c-fd61-42c6-b407-5d117df34033"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11bfde93-cf33-4d49-bfa3-4c86e5cba4ea",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "11258bbc-312a-4ec6-84c0-fcba2d7d457c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bccbf5dc-c758-42bc-9c6d-ba7177cb5ffe"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75860b8-6e58-478f-9a6e-d517a78dc18c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "961b56c9-22cf-4a65-9f13-fa636af5b02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "de7eaa43-9f22-4bf3-89e2-42319b7af667",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22f21044-e0dd-430d-8aa0-73282b7143a6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c8747591-ba7d-45d7-816c-a543d713075c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b55082f8-21a8-4e27-9ccc-cc8009188f6c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d9cc2fb-f317-4644-bc2c-3899f5d0be51"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc1aca20-d115-4279-af08-f1b6a9db52b3",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c3fedcb-418f-4b86-8a4b-cca233f168c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3afbad5d-83ac-4c7f-a1b3-a175567c1d48"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "58d54476-e00c-49df-9fd3-b1e6844068eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af282181-113e-48b6-acd5-657636671280"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e5398a05-a5fd-4252-9f4e-4927dcb9d03e",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c00a8a8-e56f-49be-b33c-274fd60e770c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a201596d-a22e-46ed-a04e-b1abe9c3c229"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "79d4fa28-775b-4f52-823c-84941a7f273c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32af18f6-0366-4af4-b87e-c98fd9f1b5ad"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3eec414-a5bc-4b7d-8927-f2789fc01e68",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18f0c97e-4009-4398-837b-b8c776317768",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfaf245e-7a5a-41c4-b053-ed337270dee4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7ec1380-9a8d-4d84-b155-a32c17c82c2a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "49041c76-42eb-4582-b8cc-a20f97b8c5e6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fec1407-064b-4552-af1d-a0ea658e5311",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9bcd82fb-901d-46e8-944e-45cc9f3ff764",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5becdaeb-362e-4d4d-ad7f-150d94cb1524"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ab56b89-02ad-4456-b98a-4f99d11df156",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fcea4556-b9f6-4b1c-875d-ef4e8a7f4a5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf0b9c71-a68a-4795-85ae-e1050867ca5a",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1bbd522c-4490-42aa-89cd-bdc62f8b0b37",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b6c18900-1068-4794-8144-a7d3d2f78ccf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "31595353-c67d-44aa-8277-e82bf60a0e14",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e3183d60-7545-4d95-b009-4e7195162413"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697e7e0d-b903-4c62-ac01-929e8ddf761d",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "104eec19-9a01-4fdf-ab1d-85dccc2e38e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "afe9afab-58ea-4d66-a23d-580d7dc0a12b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6e87f7c-f7e1-4cdf-b2bc-8ce0ce89856c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e5e6f11d-c919-4d4d-8f6b-be7a9eb3737d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2db67139-16bc-4f08-8a80-c603a5c60f82",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93e95de9-daaf-47d0-8e8e-c3c7aeb4da71",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6869f2c0-cd21-4b3f-b3ea-85e15c688ed3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92ef9d94-b094-42cc-b191-ad6e8763b7e4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddd75718-0376-40a7-879f-d9e19e26f5f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "277c8817-45c3-49cf-96a5-e8509347cd34",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "54e730cb-5023-4be4-b47b-0ae77cafb1f6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c2fd0f78-40ca-4ff2-af9b-b5d900b982d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "17927336-f0a0-4176-99b8-7f33851376f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a7d63c18-1d68-43ec-80a3-21277c496b76"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0843c6-82c1-4d20-88b1-cb038163f226",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a5c24b68-9c0d-4d63-8797-140eefec780e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d6f7276e-cdaa-4dd9-871a-f8e462a6d104"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "78c3de1c-e066-41cf-9812-bb7e3bb56b61",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ddb343e7-fae4-4bfe-997d-a58b14f20974"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04fda819-1225-4d7c-a168-591fe00d3d50",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a6e4d7f-cb51-40ad-9996-615d92d6f7bf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba2b50bc-d83d-4fae-982d-d3fe14c9dae6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "65aa4fb6-a557-4f64-966b-b0402ad75a0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5ee4fa68-5b76-4fd7-97bf-3b2e696eae8a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3ae09b8-3744-4b2d-a65a-067a65c03cf4",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9c027dc4-fc64-4cd3-bed8-c4d830af5dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9006bcca-5720-43b5-a3a5-446b1e2712a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "573c6b71-c3e8-4dbc-8078-27fe7797526e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "319f07b0-c238-40cc-9d53-8ef8300c964f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0f9036ae-1999-4a53-9134-c471f319f284",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f24c3ae-0021-4445-a62e-1fb463fe2ccd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a5964df-4a4c-410d-bd10-1e561173da94"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7638d9d2-6560-444c-838a-9978862bcc9f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b560e3fd-8870-4dfd-9ff9-6afc4a112781"
                        }
                      }
                    ]
                  },
                  {
                    "id": "39bd3478-0988-4a24-81af-6cf8395b0a9a",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "95022adf-2c26-4041-970d-72d1dc4d0e23",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8569d205-9426-4a43-a56e-70ff9264b842"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fd7abd93-fdd6-4a36-9a88-47f27e61b685",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c22ba0b2-9d08-4447-b800-5acf5495d947"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d59c2b45-00f1-427b-b55f-5d479029997e",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4ad65df4-2f7b-483c-824c-89f8ac573699",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "00260978-a326-4dc5-9ae1-4ca07233f9d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0326a9f7-b29b-4f62-aac0-fcf17e824cbd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fe825c58-7051-49b6-80e9-cacf63a33901"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bfb69915-9a09-4bf3-9edf-12393f736b64",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "32a3a8ff-2e80-4d12-98ad-e4781ed5d33b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99b24890-8de9-4ad8-9547-0cc9d7ea796b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be3f556d-b98e-40ae-8007-db80a0f40e13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "89283f5d-c732-4cab-8465-5c2e4075f02b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc4d8fcf-c4aa-400e-9517-af23b3d52611",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd57e04e-59f9-4eaa-81b8-4541e9cb4b4f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6b285a96-8648-4200-a271-0ce802fa2bcc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bda9f198-4414-467a-859a-17993c3280f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "55d597e5-2012-4dfd-9ffe-aff2f4fe0554"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4291dc32-e82a-428e-891d-4cc8d0f95599",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5149b985-6dab-480a-aa29-65e92277bf24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "02e2fdcd-4d54-4f44-945b-b9b7a2071989"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "90037d6a-9939-4558-9db5-c751284ff5dd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "521e4168-a146-4bef-94fa-b8b5b1583b82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85f72b1c-aba9-44b7-ba3b-72cd84d7e231",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d6c8140c-b1cf-435c-b8ff-f6e9489b972b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b823b8a-791d-4c33-8a42-5e530e0e8166"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388befa9-605a-48f8-aca7-c50f49f01869",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "174bb466-1746-45e1-b7e8-dbd31b40f963"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2311a4-6c02-4c82-89b4-ad466c236f17",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f444d3a7-72a5-45c2-a807-5698671f7171",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "47a501c7-c826-4d6c-985b-166811831825"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "119063ee-8c83-45b4-a583-f78ec0c0ed25",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "235cc14e-ec17-4ecd-9cfc-674cfda5925d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5f80fae2-2b2f-418e-8e3a-8ab722e404cd",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6cddc130-418c-4366-b97f-4b77c79ea6ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "330559b9-75c7-447b-a8a5-d6d9ddaea6d6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "390046b5-5649-4aa3-9742-87694cd0dd75",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "74242881-57f7-4d85-8a96-4c38ebea41a3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c097c5a-cfba-4fc2-8e13-6f2f665a8d42",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "96cd90f6-e121-4e54-81dd-65b42cf5b7d6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ba085e2a-039f-4e7f-b2f9-3bcb6f2f3f63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "23a21ae0-0634-4337-8f2a-01f7ed379672",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86d1badf-109f-49a5-8f4e-64414cfcd5aa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e413ce72-7796-4618-85ba-de0b1779b7b5",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c7eed49c-fe17-4551-95bf-2e6cc8f4ebae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "78abd78c-55d8-4cc8-8525-8b35086acf68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42cc8b28-4add-405b-bf3b-18578e5e81c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ee3e1e13-9971-4477-a622-e957b6c8e19e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f7e81f32-bbac-4e65-a6e6-5b748e6765b4",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ed8de7-d211-4c24-acba-3e5def42a6bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "da71beae-bd3f-48af-bda5-0703241973da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "abe38d7c-20f1-4751-b5f2-a864e94c2ee8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3af398e7-e1e5-467b-b161-bfbb4c45c8f7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b00f3281-9691-4f69-beb9-356d396b77fa",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "75fac3a3-b648-47ec-abbb-3ff832b71155",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "054ff1a5-39df-4c8b-b3aa-863d3e96cb9e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a75cd602-5eba-4617-bec8-d2dcb2fe6759",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9cd2c1ec-88a0-4696-b145-5be996e1a8cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db4f2691-972a-4b1b-b9f2-ad887f0177a9",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9056d4ad-4374-4f51-9fd4-8d1cea817dc9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45ea2967-268b-402a-bc56-cf332a44df7c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ab70946e-cf3a-4c06-b5b4-40f17413552f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b559f96e-bfe3-4383-888a-ae2c2b250331"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e0b8d3f9-6029-4df6-a3c7-e0adf291c3ff",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3a847382-8461-40ec-8c63-d8498ba4ba8f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ab7a088d-00c0-4975-9809-0de870b5a20b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d735a197-6b5c-4cae-bb5b-840b4aaa425f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "831ace55-b02d-444f-b34e-65caa65314ac"
                        }
                      }
                    ]
                  },
                  {
                    "id": "908ad303-9a23-459e-b5c8-34fe8d602892",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e744443-aea0-41ef-a048-af8bedcfd4d3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "63edbcca-5e6a-4dff-8417-819ad31291f1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "343a5599-0088-4fab-9486-cf778c2e90b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0989468b-a505-45d5-8953-d7f6baea1526"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7bd2252-aa2c-4276-b853-47c6c8b390cd",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c0c8a8e-88d2-4b77-967a-3a48255c7c54",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1aecb5f6-0caf-473e-ac41-cdf6f2bed26e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "388e05ec-d625-40e8-a4d0-4212a9e7811f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03075c8b-f70c-4932-a30a-a7badff17592"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7c151cc9-e714-49ed-aea4-05a90937eaf6",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a46a9962-d931-4fa0-850e-95f7ad26034a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a14d90e2-b0bb-47d2-b8d2-a48f98937946"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "49c2ddba-1de6-48c6-828e-bd6164e596e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86f468db-54b6-4ed7-84bd-bd5146333957"
                        }
                      }
                    ]
                  },
                  {
                    "id": "091418eb-c3eb-44aa-a0c3-aebbc5d1a484",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1206c4a-c8ed-409a-825a-2e2c9fb0d72c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b1e10067-bd86-4ad3-8b7a-13b85dbd6589"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86280998-8a1a-4bc1-9d9f-aad3b48f648d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "add8e727-aec4-467a-9f06-61a363e90868"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3178c74e-717c-4670-9559-5d8d67a1d4ff",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "23db14f6-162a-4466-a9ee-be3aa45dc637",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45fb5c8e-6076-4536-bfe3-281e88e0d64f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66f13df6-2a7d-43e1-8b3a-1b6a1261e8db",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7213dc6b-50c6-4fd5-8974-3c8e4291ceb8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f201e056-2fdd-4069-a87d-5d8a7c2b7583",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a70af1d-470a-4f80-a090-86337ac94888",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "42360290-4b9e-47fe-9607-577c0d9a0f33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c7e68e-0cac-4b4c-bc2b-3cfd22c13712",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3a104fe8-ff61-4bc7-9965-c2a74f897b1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1e7f5fd6-4229-4757-9849-99569e02225b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce28cf24-f61f-48f9-9e30-4b7ec5a0c6ed",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "0eb1f608-9459-4fad-8863-7889a624feb9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa803268-b08f-480b-912f-f83df1e67a1c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b88cdb8c-2aa8-4132-bceb-9c9f6ae375da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "192925c5-4a8e-485c-a9d5-116e1cfb8a2b",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa8f9ad4-7c10-4076-a0bb-d59cf2422dd3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "facb85ba-b786-4730-8ea1-7ea3b3a6ca27"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "50cd9b8b-5688-4e29-801c-ba877f494882",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9ced9ec-9262-4b36-b2fd-3c7b59239259"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c907941-0934-4b5c-84b2-f00b79208305",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7df6b55f-3b05-4390-87ca-6f37f2fa1f32",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5d3d7f5-1834-4714-b80e-818e0eaed8b8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d87cc955-0151-4d20-a3b1-ff3dbc301312",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caf12d5e-be06-4d12-8bf6-c033d75eadb2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e2d933be-8d38-4478-acbe-6375c0b67a95",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52bbc304-23cb-453f-a25b-153c6fe6f601",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b91c7781-cd02-438c-a55c-00bf239d1162"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12735e3a-8a07-48cd-b4c3-bd94e2f432f4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "7afbfd9e-cad8-4e6e-9ac7-ddb4348d0219"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa9f16f4-dc07-4034-a865-c7d0ac3f3c9a",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3d8da17-c631-41f2-bc61-49bea744dd87",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5841b765-82e8-40b5-855d-0a95ad12c387"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19ec3328-86d3-419b-9be6-31e217c58402",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "14c358a4-09b9-4c20-8ba2-76cf8e05479f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b44f687e-df3a-49c7-838e-adda04be4bf6",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be809ba1-c0c3-4769-b6b0-2535f3b05ce4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5c517f59-5f0a-420c-98a8-3a2cf493db33"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a15901d0-4643-4c60-933e-26e6ade4e06c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "32bd93fa-f112-4c1d-95a7-364f45473df4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3bce167c-81b2-4049-8a6a-a893b1784a85",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ee287221-7583-430c-8fdb-0777d54054df",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ff67e2b3-1b8f-4fe4-8f00-63098da1b461"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "14a098ab-b8ba-412e-b1e0-e363c8a8acb5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e86262eb-67df-4911-80bc-be64d2e8dbfa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "06e654f5-04fe-486e-927c-81242c9dfad8",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "85306cee-c931-419c-a3cd-1ec0e7390099",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04052288-4e94-4cb1-bc17-716a3b72b356"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be0a8dc9-b94d-4c32-b2cd-97d2c997fe5d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a770dc35-27df-4c50-9219-3609dc326bae"
                        }
                      }
                    ]
                  },
                  {
                    "id": "682d4274-205e-4309-863a-1868a8e0fb50",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51fddbf7-0ae8-4d8f-b916-98598c0d2f28",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a3d24914-26a9-45bf-bb63-91f5c211dcea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "312d51d9-1c1c-4595-83fa-a0d2b272642e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a73bf371-80c8-4438-83bf-504bca2195cc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "080c9ce6-7465-40d6-a6fe-2103420bd347",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ebafbb78-7abd-4e1f-a20f-8868c86b7727",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "53ec293d-07d1-491f-8b4d-1bd77785d9e1"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9453bdd-fdcf-4f58-9b1a-c7092ac5635e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "467ce53b-227b-419b-ae4a-200882e43acb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e56d25fe-ab41-4208-a2c7-ccd8c1053457",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc0d79d-1b55-400a-b505-4078c7fd5905",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "c638842c-e9df-450f-9e77-dfdcc05374a3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d442a809-8973-406d-8579-388f49d4272a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9f1bbe5d-9938-4b3d-b579-aa939e89bba6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4aae6d8-3592-469b-8ab3-03c3f49cc5bd",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1b046da-fe04-4f41-baf7-de866d220cbb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "79597b52-523f-485f-8fd8-8b56e52c0fe9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9331c165-52af-496b-9320-0a1283b8f18d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "22006d40-0f90-4577-84aa-5ef48e45e371"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9fe40c57-e4fb-4a3c-80c2-cdec92ad061c",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "93950ec6-9c3e-479b-945e-387c2595d672",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "44d68d13-6bad-47be-8348-820d66b0cadd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8f23cdfb-e817-4101-a6a1-9a7aa092513a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4d758913-4e94-47e6-af5d-7afc93143f42"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b576dfc8-4d4d-4b5f-9f95-596da2297cde",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b4ef9a6-9973-4b16-a3b5-2c83b3f6f8e4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bb6dc153-0dcd-4368-8431-68fc791b9dcd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3bf90de1-2977-4345-8ff5-a96cacbdf203",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8df38858-d090-4e6d-bed3-e272d5404a55"
                        }
                      }
                    ]
                  },
                  {
                    "id": "85031333-5181-4970-b555-85fe39331069",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "20240b1d-bdd0-48c2-b01f-68940d55750e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "da453ec7-22d1-4b75-84fb-b5c90d4133d2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "96922186-4736-42aa-bde2-e3bfa76f47ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "85dc9e28-cc20-47a9-b7d1-fb32ff074dcf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3b67117-1fff-4324-8e06-8efa191046e3",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b776cadc-1eae-422b-afa6-bfa28f01f199",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4dc4b7fb-1455-4219-8748-323571202de5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "95710ad8-7fab-4971-8903-308675ab1b09",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4e43125b-a51f-4c74-a26c-b950161b9ce7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "403fa0c3-7568-4341-b0bc-26712cfc8bd1",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf04a443-59a6-4d3b-9fae-3cba21b8d833",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "48775628-1415-40f7-86f4-61707596bf25"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "950e67d6-d1c7-4f3e-8c3e-4467196ce8a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a08b2821-665f-4c5f-a6de-21c1a91c3863"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1f82946b-6960-4a40-add6-a854b4abdbc6",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fefd1f6-8c0a-47a0-b94f-f02558d5b0a1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ef5fcb64-e5b5-42c9-8093-418dab9e80d7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe1041bc-fbce-447b-bd73-0559061a6b9d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "213eb537-64e1-498f-9602-6efe293a802c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48e034b9-fbe6-47af-9188-42d3ef5d7a74",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "30f4074f-998e-4aee-b10e-fdda54599441",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "494c7f62-16e9-494a-9f90-b448de6fad96"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "19f10c0b-b7f8-4c61-aea0-f0dc0863487f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e489a095-afa5-4cc3-bb5b-502d208ed908"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43bd1f7e-23a1-46ad-9342-f08e2e45f921",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "144c1164-600d-40df-89f8-e80ea4641ce7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1e5a6fe8-63af-47c9-9c46-24c327bd99f6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "206b0368-c49d-44d6-b089-3d16d0f7d85d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "76b3ad80-e6d4-43b8-b922-fae72d26a0cd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e4ed2c89-4d6e-4329-b752-cd6955872e06",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a128a8b-ef0d-4578-b0ee-54573b859b1c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "06d5b503-4dcf-48cd-a227-50a8320f0433"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a45e894f-eaa6-4957-951b-1a5a5726d9bb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "331bcfce-c1d3-4e91-bb60-a54b151b3169"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49ca83f1-0941-4a81-ac38-250518f6ca56",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c122cf2f-4f63-401f-810d-bf682890cd5d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "04e83b12-2c4f-40c1-846f-b0f81f17f556"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0c483d6f-a880-4fa5-b443-83a5c5d57a57",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8941caeb-c6cd-4fa8-aa57-2b29cb6346f5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a7eaf7f9-d727-4a94-b0c9-72c2ab6099b1",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "182ed0e5-2996-4983-98f1-24dd5fa40b23",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2ca0e6e7-598b-40a1-809d-a63a218aaf8d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e78dd50b-ed7a-47cc-b364-c141e4afb328",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6ed67804-b5ca-4f57-8a7d-81965bbd4657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a75a87e3-86c6-40d1-a4fe-0e29a255b49c",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4952d0b3-9202-4424-a99c-6f1e11d01f8a",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "e80a8933-a883-45cb-be62-948d0834162c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c050fe80-75f6-4134-83e3-cd96ace013bd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1b3aaf87-2330-413f-b93b-d86d0cddd249"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d1607b4b-7589-4499-aa9e-79301a726e64",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "13ffdc63-f3f6-4118-b876-6896fa13de5b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad73b850-e6c3-43ed-8911-bf6e78da3772"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "47bc4823-6454-4873-bbca-5f4a3f71dc41",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "520b7a31-2d2e-46fc-acec-861e6814e325"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9935a908-9db7-494f-9ea9-801f7eacf296",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50473477-e4b8-47b8-b314-bf830db5ebb5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6877d2bf-6946-4c35-a755-ed06aec2a082"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b030ddcc-b1f9-47b1-80cb-002312725871",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c61b4354-8a07-455d-a3c5-c673dcbaf129"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fd62571d-04cb-4149-bd79-759c7ad41629",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "97daca3a-393e-465e-9051-231ea3709927",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8d0fa490-75e8-4980-8132-7857d7fa0251"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7e91e375-7b50-4d8a-b397-7b0b81d00786",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c063fa3-58c9-424a-af1f-4a6ffbdc596c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8e2b560-2f87-42f8-9421-803205e1147a",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3be97c1-8cc5-47b8-a785-8fbf5d99baff",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2fb3205d-b3eb-464c-a0fb-3d7ebebb217a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "63c356d1-5a25-4b1a-8cb8-724cf1a181a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f10d4680-17cd-4b5f-a9ad-3e71181c0a29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "943e6421-7a74-4296-982f-e5d43d48cc94",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a3614d92-6475-4538-a9d7-f376916e22c5",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26f1d487-b0c1-417e-8a21-4e8e91938f57"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c8d804a1-4b44-418c-b343-29d7e027e364",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "87987e0e-65bf-4b8b-b865-9f9f521f0fc6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cb445559-0914-470d-ad56-5ffdf352698f",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c86682e2-e201-4d07-9ace-4b7aaf8711c6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d9369eb-ab67-47c7-b217-69138ee2e6c3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5bafa041-a1e7-4dc8-ab0f-716cdd9eb774",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5457f83-c724-4f38-9998-f8203733455c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9461f3bf-8edc-45d6-be09-096e7a5c85a4",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "df277611-4edd-4f20-a6f4-6e579a0191f0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "b932ffc6-54f1-411b-99a8-afa7491af2ce"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0e62371c-4a19-4993-89d0-10e397d7c2f3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "955df44c-9c0b-449b-87aa-afc8ace32fb9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1b467565-f746-4b41-aa0f-764fabae213c",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ea7641a-0045-43f6-aefd-dfaf1b8f23a2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "81b11ea6-ecb4-46e2-891f-4ad2225851ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cec1a1d5-5805-4cfa-9095-b57e3495c66d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a1218e51-359c-40fe-a056-0ace5fb83a52"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8bae2e14-4baf-4d77-822a-fa0d70c8fd13",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "922ab865-6581-4485-bb5b-7bd6a91e01cd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8369ba20-2f2e-4478-b55c-6ccab50cc306"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f5baf2d9-f5a4-4407-9b82-d8c79287bba3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8d08c3f9-4c72-474b-add2-24177ad550fc"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "18a654df-b746-43fa-b725-4eef78fef38b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "431ab1d1-1f98-40e0-85cd-904bfc2d06ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "9cd3abc2-326e-4fcc-bd81-202842eee233",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6495f151-ce7a-4eff-9d33-1442406db2cf"
                    }
                  }
                ]
              },
              {
                "id": "a36aa4d3-ce68-405e-a72b-8543422cb41c",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "ac098bd0-d093-4c23-9528-970872289a20",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4c0670e4-6d1a-4edf-85fe-f7f939e1ec18",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "97326fbd-bc85-41f1-8336-21d7489792ba"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "0809b13f-84ac-4252-935c-d7642b68bc87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6d518a0e-fd3c-4818-b941-1c3fad5acdbb"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "7b305c37-a814-4211-ac68-e1ba295d2ef1",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "29caed71-9a2a-4d1c-8a0d-c8e1d58ae033"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "a5bb9c63-38a5-43ec-aa38-3372d62875bd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3aa53f1f-7a3f-404e-873f-afb100629f87"
                    }
                  }
                ]
              },
              {
                "id": "9eda7ecb-be05-4cea-bb1c-38f3a23f8002",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "44faca2f-2104-4824-9efa-ab4ef994a12b",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c7999b2-0efd-458f-98c6-18b9df584309",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "e6b795c3-80cc-4639-ac2e-b7803299bad0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "44aee03a-c152-4681-a5e9-63a5cb470dce",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "99a9f61f-3984-4195-bb88-9e6b055a52c9"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "506d639a-4399-4a19-911f-372b439a1593",
            "name": "Positive Testing",
            "item": [
              {
                "id": "22df0c95-a8b4-4c84-90c9-b71fb5d0678e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d190fb3-5f30-404f-9935-dfb87af029e1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "329da496-e763-4442-b4cc-831d707943bf"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a2c76558-f6ce-498a-8d09-1d5423cc5dfd",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "798f7fbe-8c61-4cbe-9f48-ff33a7b3798d"
                    }
                  }
                ]
              },
              {
                "id": "a32c646b-b418-4c2b-a57d-30ed6117d291",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b047a94b-4e25-4d6c-af00-92e8e68a0cbc",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "4e2599f5-fdc6-47bb-9589-e5b79e53f60f"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "199b50da-f8ec-49bd-a228-d1036a48ddf3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "48b8f14e-6acc-4ff2-aa84-fe960a43b0a7"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "303533c8-86da-434b-8268-c56d585df9e8",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "ca3c1415-859d-4bfa-a3d3-16e826c42baf"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "4299c527-313c-4d02-aa16-13d2f3406f68",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cbf84b9e-8ffc-4c01-a948-bb996ed96167"
            }
          }
        ]
      },
      {
        "id": "e15f9acb-c3a7-4430-ae9f-c4d799e1d9d3",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "f17fad2f-43cc-4fc7-a138-00764d109158",
            "name": "Negative Testing",
            "item": [
              {
                "id": "c5c1bc7b-466c-4cd5-88f8-f583c3fc1732",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d0049ff-6d0f-46eb-9f0b-9abb1a1f0e20",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "be8baef7-3cf8-498c-a24f-376810d287b9",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "4fb91bee-aa50-4042-bd21-239ac1248762"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fcdc50e-6aef-4638-9699-9194b9032762",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c76dd809-0f6e-49cc-a604-1af51307e3fc"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "4d4c83ba-26db-4994-92b1-43f583b5caae",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dd72c4ff-6ede-4135-9872-74a81a7eb7e5"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "67b739fb-c26d-45b3-9aae-780d9a7f5b5a",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2328474d-527d-4a28-bf7d-124df2f6c31f"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "429976ea-ec5a-41b1-b098-fed9250efd65",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "19bc6acc-63ae-4d98-9471-58039d299583"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "67feb1c1-ed6a-4360-a532-97ba12565524",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "47deb3b3-b2b5-46ba-9f88-00b15efbe760"
            }
          }
        ]
      },
      {
        "id": "53823888-f0b1-4f36-9fec-fa6027a05883",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "178152e6-73bd-4590-b31a-d6d8f18cd50a",
            "name": "Negative Testing",
            "item": [
              {
                "id": "f86c9ad8-47b9-4c45-b31f-679a0d637fb9",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "502050dc-d170-449c-a9b6-18abe91aa03e",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "12e0a2ba-b6a8-452b-99ea-0132b0823d75",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "aa5742fa-c024-46e0-a5d3-a93c352d6afd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ef11bbb-00a4-41b0-869a-4ff51f0c8e94",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "945574ee-9c51-44ba-ab46-ed2aaa06541e"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "064c100e-b5d3-4940-9f6b-4f4bd1e28e61",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "3cbf2448-b40f-4a22-8f61-dbff082db051"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "28bd1201-b5e6-4eef-8c90-78086ddc454b",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "a596db6e-0f4e-4ac6-94e6-1493da53f530"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "1212db01-91db-4396-aba9-8bbd23883202",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "7383c889-2f58-42bd-b395-41bda6f827fd"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "503ca7d5-9935-48cc-a4dc-7e77a5dbd54e",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "14f31a05-b7d8-4c46-8f53-91827bf16777"
            }
          }
        ]
      },
      {
        "id": "b71a1fc5-8551-4e59-8901-8b8d6ebba535",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "6c0b41c3-66d4-4435-bbc2-7acacef23a2d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "219c264a-f340-4766-93e9-8376b08a24d6",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6456627c-f3f2-4156-831c-91cbc1ea1115",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22afe6f6-6730-4aa4-8f9e-fd271a4e4f61",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "26f273fd-aafc-4cf3-8912-d696c10e30e6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e074af06-850f-4394-a20d-ae68d961027a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "df30398c-49a9-4e41-a9ef-aa81db8a995b"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "fe1d07df-aa2f-4cf0-9132-30d2a4ac4759",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "1cba1b79-c9ed-426b-9447-698d9806c038"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "692554e1-6473-4dac-8a47-5e6cc844ae08",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "356842f0-dbea-4339-b1f3-e2ddf73fe374"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "989c9bfe-23c9-4793-80db-b3ef75374290",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "694836cc-8e49-4300-baa9-ca937cb29ef1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "b37447f5-b9d1-457d-b06e-0657435cf570",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "48542b02-ae6a-4aad-8cc9-728330c3e4b5"
            }
          }
        ]
      },
      {
        "id": "b553744b-d4b3-4a01-925a-eeae1c6ec15c",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "67093972-0351-43fc-a8e7-9ac641713c81",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "57e44f00-e390-4679-9740-aabe714a2a7c",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "782b13f2-cc1e-47f2-845b-70a8ffa9c286",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "5532acad-1f09-44cf-87a8-9cf8657abe13",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "23ce85e1-4f97-4644-9a35-0399b1473e54",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 2091,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 285,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 283,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 573,
        "pending": 0,
        "failed": 24
      },
      "testScripts": {
        "total": 1050,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 1041,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 113.95438596491228,
      "responseMin": 7,
      "responseMax": 4471,
      "responseSd": 359.74981758535074,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1697848347384,
      "completed": 1697848394271
    },
    "executions": [
      {
        "id": "dbccb286-25cd-4442-b7b4-30c47822cfe5",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 283,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "6f21c76c-f144-4d31-bfe2-be1ff2b101ab",
          "httpRequestId": "b220f38a-8fbf-4794-9dde-9aa7871acccf"
        },
        "item": {
          "id": "dbccb286-25cd-4442-b7b4-30c47822cfe5",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "120646c1-bcfb-4ba0-9674-0fc7f286da81",
          "status": "OK",
          "code": 200,
          "responseTime": 63,
          "responseSize": 0
        }
      },
      {
        "id": "e3fd1a8a-68f7-4159-a395-d8fba65470a0",
        "cursor": {
          "ref": "949baac2-de7a-491b-a246-165a17a97e67",
          "length": 283,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "4cdd585f-6bc3-46ea-8a03-22fd8d4d9315"
        },
        "item": {
          "id": "e3fd1a8a-68f7-4159-a395-d8fba65470a0",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "c350b56b-f510-4c95-a199-5c24d0ee21a0",
          "status": "OK",
          "code": 200,
          "responseTime": 7,
          "responseSize": 0
        }
      },
      {
        "id": "c61d9cb5-9386-4313-82c1-822c239730e9",
        "cursor": {
          "ref": "e8b62ebf-8f1c-4311-8f83-c664601c2ecd",
          "length": 283,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a57619e4-ea8f-4973-8f8a-08f7af202e54"
        },
        "item": {
          "id": "c61d9cb5-9386-4313-82c1-822c239730e9",
          "name": "did_json"
        },
        "response": {
          "id": "51338629-1a35-48e9-b89f-83ae4b315e61",
          "status": "OK",
          "code": 200,
          "responseTime": 281,
          "responseSize": 2778
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c2907e-34d7-415e-8129-ba7107034d3b",
        "cursor": {
          "ref": "800b4469-288f-49bf-8297-7dff2b4daf28",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7da2da7c-d98b-4318-b444-3cf7fe4c1215"
        },
        "item": {
          "id": "64c2907e-34d7-415e-8129-ba7107034d3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c4234fa-19c1-46b7-a047-2483b493683c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 846,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64c2907e-34d7-415e-8129-ba7107034d3b",
        "cursor": {
          "ref": "800b4469-288f-49bf-8297-7dff2b4daf28",
          "length": 283,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "7da2da7c-d98b-4318-b444-3cf7fe4c1215"
        },
        "item": {
          "id": "64c2907e-34d7-415e-8129-ba7107034d3b",
          "name": "did:invalid"
        },
        "response": {
          "id": "6c4234fa-19c1-46b7-a047-2483b493683c",
          "status": "Not Found",
          "code": 404,
          "responseTime": 846,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 404",
              "stack": "AssertionError: expected response to have status code 400 but got 404\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b734d06-00b8-40f1-a34a-ba8bf4e98bfe",
        "cursor": {
          "ref": "068d7fab-9b21-4d28-8c85-75b3b46c5462",
          "length": 283,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9a8964b4-8da3-4190-80bf-d23d3667262a"
        },
        "item": {
          "id": "8b734d06-00b8-40f1-a34a-ba8bf4e98bfe",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "32062872-0628-4265-b867-2e773344c77e",
          "status": "Not Found",
          "code": 404,
          "responseTime": 63,
          "responseSize": 127
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6989917d-3d06-490a-beef-03524fcda28b",
        "cursor": {
          "ref": "77f89edc-bdd6-487d-9789-86dc365ae5cf",
          "length": 283,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "12d5d059-6dad-4e54-94cf-fcedf1d68b13"
        },
        "item": {
          "id": "6989917d-3d06-490a-beef-03524fcda28b",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "1b45d303-b2bb-4c84-83a4-c590d4277b1d",
          "status": "Not Found",
          "code": 404,
          "responseTime": 64,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0eb0cfd4-dd33-418c-9577-2c67531c14b3",
        "cursor": {
          "ref": "7f5123c3-b47d-481f-9ee8-7cca959cd3db",
          "length": 283,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "4b514a09-2072-4330-b409-9433a2257c95"
        },
        "item": {
          "id": "0eb0cfd4-dd33-418c-9577-2c67531c14b3",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "9ca3a536-3f47-4265-a86f-7f67517d29bd",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 69,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b282a928-82f7-4a0e-b887-3d7151408832",
        "cursor": {
          "ref": "99b5c6e1-1115-4bea-9020-46aead10ef8a",
          "length": 283,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "241d38df-51e2-419f-9c00-33f0b7a5f24d"
        },
        "item": {
          "id": "b282a928-82f7-4a0e-b887-3d7151408832",
          "name": "identifiers"
        },
        "response": {
          "id": "4e119f48-6982-4360-b059-da4e124f284e",
          "status": "OK",
          "code": 200,
          "responseTime": 68,
          "responseSize": 2450
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc9704b0-0070-4a4d-8fdb-6a15d161c909",
        "cursor": {
          "ref": "6f807011-1894-4546-a36b-98f91f591b99",
          "length": 283,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "2c8ff195-b166-415c-bc04-c42c92519fec"
        },
        "item": {
          "id": "fc9704b0-0070-4a4d-8fdb-6a15d161c909",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "3fbe79dd-ff17-46f4-bee2-426a08852dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78443268-f77a-4fec-9eb7-14841d96f79a",
        "cursor": {
          "ref": "d6670775-c01d-4c60-86a9-58b1c58f44cb",
          "length": 283,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "30dd8055-2ddb-4685-ae58-96c28875c213"
        },
        "item": {
          "id": "78443268-f77a-4fec-9eb7-14841d96f79a",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "7d493ba7-37bf-4b70-9bb3-fa03d350917c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "536f36c7-f5d5-4423-986e-8c9927b9d0b0",
        "cursor": {
          "ref": "bacc2225-0211-4fc5-b58f-97e9ef42c701",
          "length": 283,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "e6854309-335f-45a8-ab62-583798a478ad"
        },
        "item": {
          "id": "536f36c7-f5d5-4423-986e-8c9927b9d0b0",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "e6ad6bd3-0efa-4ae1-a7fb-93faa4504813",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2449e5a7-5ad1-4253-98ab-a2872854ac6e",
        "cursor": {
          "ref": "86f4f6b1-4310-411f-8722-debdb33021c6",
          "length": 283,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "2e8c2997-8e99-4ae4-b2d8-f7eec0dd5bef"
        },
        "item": {
          "id": "2449e5a7-5ad1-4253-98ab-a2872854ac6e",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "5688d9b1-e86e-455d-8fa4-c23eb5e8cf06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0503864c-d6a5-4ddb-a978-701a5316072c",
        "cursor": {
          "ref": "1eaaadf1-361f-47a2-98ab-d1e8cfaa2498",
          "length": 283,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "7604565e-08d3-468d-aaeb-0ffd0fa28337"
        },
        "item": {
          "id": "0503864c-d6a5-4ddb-a978-701a5316072c",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "765c9587-08e4-4327-920e-76b971419dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d400506-7430-47de-863b-85a22a7e4e32",
        "cursor": {
          "ref": "b65db31e-a88a-4910-9058-43de3deb9ccc",
          "length": 283,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "bfb40784-b339-480c-ac56-2dca1ee63a59"
        },
        "item": {
          "id": "3d400506-7430-47de-863b-85a22a7e4e32",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "b1d488c6-ac3b-444e-b8b6-a10e071324da",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "804dad46-30e9-4efb-b73b-0f8295914048",
        "cursor": {
          "ref": "b9e822cc-34bd-4e44-b644-10f237cb0630",
          "length": 283,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "c78967cf-21ae-46c4-9881-1b873422952a"
        },
        "item": {
          "id": "804dad46-30e9-4efb-b73b-0f8295914048",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "a36da7bb-d381-4d98-84b9-7db8e63bd54a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7f3a27b6-091a-4b23-8768-b73159d06472",
        "cursor": {
          "ref": "c140a96e-3145-4c04-b5e4-8645c216c666",
          "length": 283,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "1e19020f-7a3d-4789-8f1a-80b23437448e"
        },
        "item": {
          "id": "7f3a27b6-091a-4b23-8768-b73159d06472",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "f0573b3f-a2e5-4247-abc9-ed011aabed2a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c4b980e-bc8d-4a7e-82c7-bdf783371359",
        "cursor": {
          "ref": "e00be05a-5d85-4410-a533-cad0d0f5792f",
          "length": 283,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "dc247c9f-6509-4922-b8e7-044aa674dd7b"
        },
        "item": {
          "id": "0c4b980e-bc8d-4a7e-82c7-bdf783371359",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "d826da6d-e077-41d0-a4e2-5bed926cc3dc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "628575ca-146b-49b1-8a4d-e6d41e673011",
        "cursor": {
          "ref": "db7a93da-4b10-47cb-843c-f08e526cd07b",
          "length": 283,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "79418bf2-bdf9-44a6-81a1-a1836f6e070f"
        },
        "item": {
          "id": "628575ca-146b-49b1-8a4d-e6d41e673011",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "d7937ac8-38df-4fe2-aac1-1ac104cae30f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44869bc2-0be6-42ac-bd0e-0fb823479f4d",
        "cursor": {
          "ref": "300acf83-dee3-4ea1-9c28-4653b4c25f2e",
          "length": 283,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "0427668b-1804-4594-8757-07f0b3941f79"
        },
        "item": {
          "id": "44869bc2-0be6-42ac-bd0e-0fb823479f4d",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "57694a7c-58ba-4c1c-8b6a-a6d53a13e97b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 96,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ca3e095-6c4a-496c-bc8d-ea8e5a99901b",
        "cursor": {
          "ref": "cee11be0-28d9-4e11-99f9-ab0efbe998e9",
          "length": 283,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "8896f0b3-f69d-41e6-8d7c-615dd96bd8e1"
        },
        "item": {
          "id": "6ca3e095-6c4a-496c-bc8d-ea8e5a99901b",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "3ed96978-73ab-4f96-bcef-a4520ccc49ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9cae8782-8b05-473b-8545-444e4ba19f95",
        "cursor": {
          "ref": "96b1717c-88e0-456c-9ddb-fac13dd88237",
          "length": 283,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "f92af960-1a0d-41f3-88d5-7979aa4a1eca"
        },
        "item": {
          "id": "9cae8782-8b05-473b-8545-444e4ba19f95",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "bbfa3205-371a-439c-9475-79e9a3406f10",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "40c2e73d-9f23-43c6-ac24-a26276731bf5",
        "cursor": {
          "ref": "e6da2705-468a-4d1a-83f9-b3cd9b4db9fc",
          "length": 283,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aa227c8c-69ce-459e-b298-df38e9691dc9"
        },
        "item": {
          "id": "40c2e73d-9f23-43c6-ac24-a26276731bf5",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "58aca824-69cd-4405-b616-b23c09693e9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "76f842d0-63d6-42bd-8890-9fbbfdd3fee7",
        "cursor": {
          "ref": "074a6a0f-d58c-4b52-916d-c005e62333e7",
          "length": 283,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "356401a2-c75d-4178-958f-586eb0948a84"
        },
        "item": {
          "id": "76f842d0-63d6-42bd-8890-9fbbfdd3fee7",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "452108d9-ea71-4a54-a47e-b5a82530cbe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aaff3151-4e44-4906-a655-618684dc3744",
        "cursor": {
          "ref": "fe94aa3c-cd90-43ed-8dd3-a999d2c29787",
          "length": 283,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "d3d31958-b69b-4f46-9568-3aa7ece86998"
        },
        "item": {
          "id": "aaff3151-4e44-4906-a655-618684dc3744",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "05078126-bddc-43b3-b7d7-01f13cea7b8d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 118,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bafc4fc-5275-4ca6-8ea1-92f6c2af6114",
        "cursor": {
          "ref": "08925645-03e6-4f09-a706-c1ea92a97825",
          "length": 283,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "8d54cae9-d688-46d0-8b4e-ce1a90a35e95"
        },
        "item": {
          "id": "8bafc4fc-5275-4ca6-8ea1-92f6c2af6114",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "6e600a4c-84cd-4ad6-acca-e57adb6d5d72",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 91,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dd58da46-34f3-4687-92f6-8af5b5e0d44f",
        "cursor": {
          "ref": "7d141fbd-1f31-44f0-93bf-4f8334474ed1",
          "length": 283,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "7e1d3f89-018a-4f7c-85d8-9e8cef3d8688"
        },
        "item": {
          "id": "dd58da46-34f3-4687-92f6-8af5b5e0d44f",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "13fef967-8cf8-4a9d-9f8e-c1a2912d3c24",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0496dd76-7ec9-45fa-bdb9-c64ac3488b8a",
        "cursor": {
          "ref": "8084ecac-65c7-46f4-8f99-fe9f241910db",
          "length": 283,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "86838d66-a13f-491e-9aa4-da6ffc5541b6"
        },
        "item": {
          "id": "0496dd76-7ec9-45fa-bdb9-c64ac3488b8a",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "817fde39-18f5-4db0-b640-61d9a10ec772",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "26905d6f-4ead-4b87-a071-047d1ce8fda6",
        "cursor": {
          "ref": "a6e87114-8a04-44ca-9d75-65c14b583008",
          "length": 283,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "faadc2b0-dc52-4a3e-a76d-4a1e125db07d"
        },
        "item": {
          "id": "26905d6f-4ead-4b87-a071-047d1ce8fda6",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "9b6f9432-27e1-46e2-8288-92c22b716310",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b1915c63-b4cb-415e-b660-78b179e4c745",
        "cursor": {
          "ref": "7956323c-53d7-4312-b939-6f62bc4ac706",
          "length": 283,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "3b15275e-d324-49e2-b026-6a19731be2ed"
        },
        "item": {
          "id": "b1915c63-b4cb-415e-b660-78b179e4c745",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "1ff26d17-d07f-4b3b-8940-b1123862aa19",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2af16653-600c-4e78-ad00-025d74136001",
        "cursor": {
          "ref": "cede436b-558d-4c5d-95f8-7ac856367ce3",
          "length": 283,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "8d396b1e-e651-45e8-9f78-e6f94f830550"
        },
        "item": {
          "id": "2af16653-600c-4e78-ad00-025d74136001",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f3084bbd-81bd-4dbd-a82b-04e4aceb9485",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a11bb4c0-2cdd-4797-92eb-c565d67bd5b2",
        "cursor": {
          "ref": "1d0380e2-d905-43cd-8a74-7a46ef490fd7",
          "length": 283,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "217310a0-3bcb-4704-b412-5c4a59a4c9c4"
        },
        "item": {
          "id": "a11bb4c0-2cdd-4797-92eb-c565d67bd5b2",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "1646d25d-acae-4768-b0a7-4f137e72b4f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6b344075-e494-4e57-9edd-f1763bc267d6",
        "cursor": {
          "ref": "c957390d-2803-469b-9a5a-313f1498792b",
          "length": 283,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "ec78de49-f0a2-490f-b985-e517d27d6f7a"
        },
        "item": {
          "id": "6b344075-e494-4e57-9edd-f1763bc267d6",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "069878e5-58e6-4a9f-90fd-167a9faf0136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8e8f33ca-1120-49fe-96e5-f3c7adb20d0d",
        "cursor": {
          "ref": "9de5c504-8cfe-4cdc-8346-c9647c9ac46a",
          "length": 283,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "61527827-b00f-4e29-96c8-a62aac2325ca"
        },
        "item": {
          "id": "8e8f33ca-1120-49fe-96e5-f3c7adb20d0d",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "004cc595-2fa7-430e-878e-831a4577c31c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "46f9ba8f-f580-4bc1-82f5-1a7b39751061",
        "cursor": {
          "ref": "825f7304-dd38-4c1d-8ecd-7424ec21929b",
          "length": 283,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "8b16e59e-bc46-4337-9aaa-30dc403bc203"
        },
        "item": {
          "id": "46f9ba8f-f580-4bc1-82f5-1a7b39751061",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "0bc06d2f-1bb6-4980-a1fc-4b973f8dab14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17dfba0f-6b3d-4a7a-868a-af82df0fe149",
        "cursor": {
          "ref": "4f0f0be9-ad28-4c95-b386-7bb8b3716666",
          "length": 283,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "12b2338d-ef91-4d88-9052-f8090c4881a5"
        },
        "item": {
          "id": "17dfba0f-6b3d-4a7a-868a-af82df0fe149",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "904605c4-d7e2-4025-bf3c-8aee23f02fa4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53d99fda-a115-4ed1-acdb-6b41a7df125f",
        "cursor": {
          "ref": "ef72e80f-faa6-47f3-bfd2-c028e45f658f",
          "length": 283,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "ecdd267f-733d-4306-a54c-280a6310a46d"
        },
        "item": {
          "id": "53d99fda-a115-4ed1-acdb-6b41a7df125f",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "79da8d62-d638-4bbd-8286-05b1e3cfdb4c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ab5870f2-3018-48fa-9548-3d7f673320a5",
        "cursor": {
          "ref": "8b5c584e-2986-4993-b85f-31c86c5a1c8e",
          "length": 283,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "d463826c-bdef-4ad7-9c64-4ed3fac463e2"
        },
        "item": {
          "id": "ab5870f2-3018-48fa-9548-3d7f673320a5",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "db768d78-9d92-4f70-bde1-043897591eae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e99fdbaa-d064-475f-bfbf-3952d9e79fa2",
        "cursor": {
          "ref": "4047cafd-9296-4fba-bc94-fc96e0e306ea",
          "length": 283,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "6c17213e-118a-4a12-b9e1-2becf3ee3f80"
        },
        "item": {
          "id": "e99fdbaa-d064-475f-bfbf-3952d9e79fa2",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "0dabc2c8-9793-4d52-ac2b-f239da6ed032",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "71ad4f52-27ad-46d5-8082-4a6969ba8ec3",
        "cursor": {
          "ref": "1f43d5de-13ee-44a8-8113-23886efbc20f",
          "length": 283,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "89f7474a-69b9-43c2-8687-8a6db3536cdb"
        },
        "item": {
          "id": "71ad4f52-27ad-46d5-8082-4a6969ba8ec3",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "20e45381-d054-415f-b8ea-19be4f6534c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0738287f-9e60-4d72-be7a-5799ac546157",
        "cursor": {
          "ref": "247b84b3-161c-48a3-8fd4-c3506d225dab",
          "length": 283,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "0a65f02f-a735-4a95-8790-b49f8b0ebaef"
        },
        "item": {
          "id": "0738287f-9e60-4d72-be7a-5799ac546157",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "7ae64a33-a99c-45b6-bde0-9a5302464ca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af2a275f-ca72-46ba-8843-2d158d3d6480",
        "cursor": {
          "ref": "d4828a90-5d68-43e0-8752-2e8f43f827e0",
          "length": 283,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "a83ce3b2-4e2d-4fa4-8b47-183d5933c043"
        },
        "item": {
          "id": "af2a275f-ca72-46ba-8843-2d158d3d6480",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "b475f8f6-dc0b-442c-907b-3b713d17421c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a85c1a92-22dd-460e-9289-45e8a30adbe2",
        "cursor": {
          "ref": "f093b3af-4577-4bc4-a1d8-6309df4a1e7d",
          "length": 283,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "ca7c5879-5489-40c8-bec7-adf89bf6d2d6"
        },
        "item": {
          "id": "a85c1a92-22dd-460e-9289-45e8a30adbe2",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "47ac278f-4e60-47d8-8f88-310a7d19d85a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a2110db5-b158-4c48-858c-05c0123f47d2",
        "cursor": {
          "ref": "2fac1276-bebc-4b8c-8ff6-b38786af2e63",
          "length": 283,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "eb68bc1f-31f4-4e16-9362-593342061e5d"
        },
        "item": {
          "id": "a2110db5-b158-4c48-858c-05c0123f47d2",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "9ab62695-068f-4bd4-957d-e2d8be61b021",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 78,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ad98a76-52af-4ec1-bd42-f8f73dde7edd",
        "cursor": {
          "ref": "93397ab5-53aa-4ce5-9b65-d8a5ff86f1f4",
          "length": 283,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "04b714c1-9bf2-40a6-804d-1bc7a70e4c79"
        },
        "item": {
          "id": "6ad98a76-52af-4ec1-bd42-f8f73dde7edd",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "dc1c614a-4033-40b9-89b0-afbfd06895c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:44)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dad2a2a-f3c7-4473-a082-4507c4a0d340",
        "cursor": {
          "ref": "781b4a0d-be07-41cd-b73d-dc3a91248a4d",
          "length": 283,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "8c82cf1d-fe56-4ce8-be4e-96cda822ddc1"
        },
        "item": {
          "id": "7dad2a2a-f3c7-4473-a082-4507c4a0d340",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "daf9ef6b-9683-458f-ba43-bbc7af36eac9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afceeff4-5aab-4baa-907d-51a649d2b280",
        "cursor": {
          "ref": "b25f1c81-fcb7-43f0-a637-4d4356342177",
          "length": 283,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "4803553c-8113-4b22-9c04-756eb0673172"
        },
        "item": {
          "id": "afceeff4-5aab-4baa-907d-51a649d2b280",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "f66fe1a9-16b7-4a38-8c34-cf9bbed7ef12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "96fc0ee1-0d1e-498b-a8dc-08c750877f23",
        "cursor": {
          "ref": "904b8a95-6ffb-4846-8b1d-2b47a5adad8a",
          "length": 283,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "42ec5a06-3d6b-42f1-a03d-9e8bfc713c0f"
        },
        "item": {
          "id": "96fc0ee1-0d1e-498b-a8dc-08c750877f23",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "3e981319-b937-4d77-94c3-1ddf9c695dea",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "da84e12d-cd7c-458f-b4ab-0e7d2efa04e9",
        "cursor": {
          "ref": "030c0ac5-cf63-43af-9488-10ed28d56a20",
          "length": 283,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "20cd20f4-8c3e-435a-a1a8-403170d7ef14"
        },
        "item": {
          "id": "da84e12d-cd7c-458f-b4ab-0e7d2efa04e9",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "92e5748e-1eea-40b4-8e39-f729e13e476e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "155ec834-3ff8-417a-a709-1e3e0d75a4ff",
        "cursor": {
          "ref": "0dfc4b4c-f689-4215-8b02-d87d654bd832",
          "length": 283,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "5e11d1db-c5a1-4be7-a0ca-83b6896b60d1"
        },
        "item": {
          "id": "155ec834-3ff8-417a-a709-1e3e0d75a4ff",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "94dc12cc-ffff-4bcc-90f2-f0d35ea3b41c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9606366-c485-4f81-86ef-9c12c9238549",
        "cursor": {
          "ref": "e6479bcc-3712-4ebb-b9d6-3168cb75cc6c",
          "length": 283,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "9f7e69ae-8fe9-41e0-b257-a2ec77434977"
        },
        "item": {
          "id": "e9606366-c485-4f81-86ef-9c12c9238549",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "9c44c96b-0f36-48f2-9b8b-ff55ca1d5e97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69e25213-6355-4c6c-86d0-eb24776c7d55",
        "cursor": {
          "ref": "db79833d-3fce-476c-85ea-c24d5dbddc0b",
          "length": 283,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "8460d133-3ecb-438d-8a36-f58fa815f8d2"
        },
        "item": {
          "id": "69e25213-6355-4c6c-86d0-eb24776c7d55",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "2e09517c-2d26-4525-9c7d-9e3b6052ec9d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 422",
              "message": "expected response to have status code 422 but got 400",
              "stack": "AssertionError: expected response to have status code 422 but got 400\n   at Object.eval sandbox-script.js:1:51)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ec2b9c-d61b-44f7-a5a0-96ca9f99dd34",
        "cursor": {
          "ref": "d8ceaadc-781a-4976-b679-e9baac626e94",
          "length": 283,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0dcbdffa-1eea-495e-b7b7-88703e22947c"
        },
        "item": {
          "id": "c7ec2b9c-d61b-44f7-a5a0-96ca9f99dd34",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "be2ec2ef-e3cd-4557-8300-3fdf2043b1de",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b9505216-7c08-4d72-b545-a72654207076",
        "cursor": {
          "ref": "2839e876-58dc-4a8a-bda1-1d164b4d6d1c",
          "length": 283,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "1f59e403-ee75-4c6b-826f-8fe60b7f367b"
        },
        "item": {
          "id": "b9505216-7c08-4d72-b545-a72654207076",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "8ad848ed-0785-4734-8a46-5e4a78161261",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4203c40d-2dc6-4326-8331-6331963a9b45",
        "cursor": {
          "ref": "596973ce-e2db-44be-a545-eedfb50dfc2e",
          "length": 283,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "c0de3be4-37cb-4564-ac74-ed92e262a370"
        },
        "item": {
          "id": "4203c40d-2dc6-4326-8331-6331963a9b45",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "83b3ec8a-6b44-42ee-a8a2-70c334f3d1df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78939ffb-aac9-4c40-902e-62cb81695885",
        "cursor": {
          "ref": "5c562553-95d2-445d-bbf7-af9a87b71103",
          "length": 283,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "f8f37482-d2cf-494e-906f-d8647e8a4973"
        },
        "item": {
          "id": "78939ffb-aac9-4c40-902e-62cb81695885",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "0f94dd8a-6da9-44b8-adba-5848613584b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "91e104fa-4fcd-4002-972f-80f7010a62b1",
        "cursor": {
          "ref": "465d81d6-7fb5-4ce7-80f5-196168db96fd",
          "length": 283,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "995af339-bc9e-4444-8ff9-d0425b2e03dc"
        },
        "item": {
          "id": "91e104fa-4fcd-4002-972f-80f7010a62b1",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "e5b1f002-dba1-41d8-9d3b-764aaef0b5b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cbae90f-ffa7-4b89-aed1-ae336f32b5c6",
        "cursor": {
          "ref": "b3449486-bb2d-4296-945a-47c5669b8d86",
          "length": 283,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "2199c0a5-717f-43d4-b46d-de5ec037b176"
        },
        "item": {
          "id": "1cbae90f-ffa7-4b89-aed1-ae336f32b5c6",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "410d0ae4-3d8f-47df-b338-4b167d4eeffc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "05f57c2f-b7d2-4bfd-9090-b543d088ce84",
        "cursor": {
          "ref": "6e17d6b0-7558-4877-bf02-0e5213f7de6b",
          "length": 283,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "312f4677-3eec-4803-bcb5-13208fd2bd2e"
        },
        "item": {
          "id": "05f57c2f-b7d2-4bfd-9090-b543d088ce84",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "4ead4544-624e-44c2-8267-f9d7dc431cda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 126
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ccc80700-4a19-48b8-bea9-d5905a7838da",
        "cursor": {
          "ref": "226aa2f3-147a-40a9-8467-abad7c9fe276",
          "length": 283,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "81651a6e-c841-4061-b59f-a4789c3f2134"
        },
        "item": {
          "id": "ccc80700-4a19-48b8-bea9-d5905a7838da",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "2d77fca5-13df-401b-befa-8c097ab5a88b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 87,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7ac661d-7bf8-4069-980c-570a477fc29c",
        "cursor": {
          "ref": "9a7916f5-bc03-447c-8d61-112b8ba45a4f",
          "length": 283,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "5a85dcaf-f93f-4055-992a-e9234370347f"
        },
        "item": {
          "id": "c7ac661d-7bf8-4069-980c-570a477fc29c",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "bcdd5341-a31d-4ecb-ae32-efae604da5b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8c5edbec-0a38-4838-a7ea-bd702904183e",
        "cursor": {
          "ref": "8489c78b-402f-446b-8f81-6f525cb2b613",
          "length": 283,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "e2644783-6b21-417a-b240-8f16872a85fa"
        },
        "item": {
          "id": "8c5edbec-0a38-4838-a7ea-bd702904183e",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "deed075f-0c05-4b16-aeda-d4c1d2ee97e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f66ca583-ff0a-4dd2-adef-0fabd6b2c9a9",
        "cursor": {
          "ref": "c9261604-dd5b-45ff-8863-8dc2ba1d695a",
          "length": 283,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "c393291c-3a5f-4bef-8f6c-c917679ab3ec"
        },
        "item": {
          "id": "f66ca583-ff0a-4dd2-adef-0fabd6b2c9a9",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "f07ae5c2-5cf7-4d00-9c54-76d284ef05ef",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1972651-cf4a-4c34-873f-696b44bd18e5",
        "cursor": {
          "ref": "23d88692-738f-4b18-b500-a70772a548cb",
          "length": 283,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "597d7dfb-7e0e-42e8-8ff3-7e1dc0d88208"
        },
        "item": {
          "id": "d1972651-cf4a-4c34-873f-696b44bd18e5",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "bbb19d00-8f4f-4e6e-b69a-b614eab72eb2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a347e97-8493-42de-a0ea-1ff885c8a7ed",
        "cursor": {
          "ref": "2da8cefa-9d51-46dd-b614-b6d31113e04f",
          "length": 283,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "ef6a16ef-5312-48b5-9963-244564930624"
        },
        "item": {
          "id": "1a347e97-8493-42de-a0ea-1ff885c8a7ed",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "a67094ef-0189-4c98-b995-b1659fc728c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "186c659b-41e8-42ed-8f17-3c80ef8390f1",
        "cursor": {
          "ref": "8a1e1d97-bc31-49aa-af49-a04d8a0fea4f",
          "length": 283,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "adefebb2-e616-4b90-9041-1c38c7dbbbf6"
        },
        "item": {
          "id": "186c659b-41e8-42ed-8f17-3c80ef8390f1",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "15ebfd7b-5a3c-4bf7-a255-9d0fca86625e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c99a02d6-de0c-4833-b3ea-3b7dcbe8537c",
        "cursor": {
          "ref": "926ab0c4-8db2-460b-b9af-372541eba15e",
          "length": 283,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "3398ce4a-02b3-4f0b-9cc6-2755169eca0f"
        },
        "item": {
          "id": "c99a02d6-de0c-4833-b3ea-3b7dcbe8537c",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "03e97a82-8c85-4a7c-9ed0-f2f0550befd9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a5339f68-d031-4ca3-aad5-4def4016406e",
        "cursor": {
          "ref": "87b853bc-7b6c-480c-aea6-86ea50eeb34c",
          "length": 283,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "732890c9-f807-40a0-9e6f-04031b279f3d"
        },
        "item": {
          "id": "a5339f68-d031-4ca3-aad5-4def4016406e",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "90d2c4c9-6333-4638-b8a3-08d1d2c42a9b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b77bb0e1-70d0-434d-b344-07e4f44b4efa",
        "cursor": {
          "ref": "4f3151d2-5b5f-41fb-8274-e374b4fef083",
          "length": 283,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "a09b11b7-c90c-4c30-a11f-893f3523b9b8"
        },
        "item": {
          "id": "b77bb0e1-70d0-434d-b344-07e4f44b4efa",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "82c020eb-8bd3-4d40-af15-88d76abf3d95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ff5a0a4-51f3-4150-822e-17598806eebd",
        "cursor": {
          "ref": "325121ac-cd5d-42c2-b7e8-cee786417246",
          "length": 283,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "c8afbe1f-8f5c-4452-b41a-30889de0d999"
        },
        "item": {
          "id": "5ff5a0a4-51f3-4150-822e-17598806eebd",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "b762c3b2-c7d6-4939-b34c-edf199b91354",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d824f57-9f63-43cb-86ba-4d28a983309a",
        "cursor": {
          "ref": "45e9aa06-e642-44f9-94ec-110ef37739a6",
          "length": 283,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "69624475-a8b6-4142-8f52-a1ed5ff72e48"
        },
        "item": {
          "id": "7d824f57-9f63-43cb-86ba-4d28a983309a",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "f1589db8-7308-4b25-b9f2-b92f16b6aaaf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58ed9cf7-e579-466c-8525-83a5f4eed34b",
        "cursor": {
          "ref": "298c49b3-26fc-48f5-a60c-253fb81085a7",
          "length": 283,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "50f4f1c3-dbcf-4171-8525-c780d60269f3"
        },
        "item": {
          "id": "58ed9cf7-e579-466c-8525-83a5f4eed34b",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "da83bbb4-f050-4a03-a290-4be5265bc8e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 152,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8a8f97ea-d927-4dd8-a3b5-3a1c560f389b",
        "cursor": {
          "ref": "ed11eab6-0a28-4e06-9ad6-92d9b61da5fc",
          "length": 283,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "49b29a98-8869-44fa-b8f7-1fe6503d41de"
        },
        "item": {
          "id": "8a8f97ea-d927-4dd8-a3b5-3a1c560f389b",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "82e70c74-56c7-400c-9da6-af397e319acb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb7f1755-4a15-4246-a9fc-a75a3e086b48",
        "cursor": {
          "ref": "ea06a019-3dad-4b76-8589-a813aca4d74e",
          "length": 283,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "850dd4f6-e601-4120-b5a2-c9f06f59596b"
        },
        "item": {
          "id": "cb7f1755-4a15-4246-a9fc-a75a3e086b48",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "49e9be93-ee5d-4765-9f9d-6b479fdc8d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e345fb5c-cdbe-4fed-a018-22b4455a65f2",
        "cursor": {
          "ref": "778ec6e1-c34d-470d-afdd-6a97d3163f01",
          "length": 283,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "f3dd7558-8248-4309-bf05-41f0f59cc3c5"
        },
        "item": {
          "id": "e345fb5c-cdbe-4fed-a018-22b4455a65f2",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "3a0b492c-7d89-4ccb-9295-457acada4757",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bd190c6-bbc0-44ca-8b10-ef91488b724f",
        "cursor": {
          "ref": "f1849965-cd38-40e7-9662-91b7876eca26",
          "length": 283,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "60d622f6-6b90-4278-972f-5f9329d2dc10"
        },
        "item": {
          "id": "4bd190c6-bbc0-44ca-8b10-ef91488b724f",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "9b397f8a-5545-414b-8ff8-1df0370cc551",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b94a3c3-4913-4b94-9817-4495500aeeae",
        "cursor": {
          "ref": "08282733-2f64-408c-9524-f30f56303b69",
          "length": 283,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "a58cb055-b92c-4817-b47a-2b5df0da8dba"
        },
        "item": {
          "id": "7b94a3c3-4913-4b94-9817-4495500aeeae",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "9a067a97-24c3-4b5a-917c-5e4f047ce295",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66e8602c-dcf2-4995-8651-c7bc56a90a91",
        "cursor": {
          "ref": "47e8c4ed-4d7d-4e40-bb2a-99fb161401d6",
          "length": 283,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ad50183e-0335-49ed-8eee-93bc3a31f57e"
        },
        "item": {
          "id": "66e8602c-dcf2-4995-8651-c7bc56a90a91",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "2ecac9b5-3a91-4495-99c5-2c4de4e9dd50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94f39764-90e2-4b36-8886-56303a78841f",
        "cursor": {
          "ref": "d16714c9-21ed-489c-80f3-b88ed7071377",
          "length": 283,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "dc2ef51c-3714-4dcf-bcd1-21a16d5b337d"
        },
        "item": {
          "id": "94f39764-90e2-4b36-8886-56303a78841f",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "d939eb65-53e1-4df6-b761-347b8db73af1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dfc2a21-a024-4632-bfb6-57e3b46ee6d9",
        "cursor": {
          "ref": "c5ec43c7-4b89-49b6-92a5-d536b7677d6a",
          "length": 283,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "fd3bc724-087b-412e-92ac-7301ecf6166e"
        },
        "item": {
          "id": "7dfc2a21-a024-4632-bfb6-57e3b46ee6d9",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "5fdc0c4f-54b5-4f99-a63f-451ce8b3dca6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dedb798b-5a22-40ed-9f60-50c21da4a21e",
        "cursor": {
          "ref": "cabb50ef-58d9-4cf2-89ed-dc4b4652fb3c",
          "length": 283,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "259fad06-2a0c-4382-a955-b2ef52be7bfe"
        },
        "item": {
          "id": "dedb798b-5a22-40ed-9f60-50c21da4a21e",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "e02511f9-6cc1-4d07-b1d3-b3c8d0a33e80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4ebcf4c-82ee-49ff-a17b-09fc32141721",
        "cursor": {
          "ref": "ff4948ec-4279-4cf9-b5de-8dfc47019844",
          "length": 283,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "95c90485-429a-497f-9b7d-a9dc0e4fe136"
        },
        "item": {
          "id": "a4ebcf4c-82ee-49ff-a17b-09fc32141721",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "1d52587f-5981-464f-b119-41872209b6c5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77079a91-5ad7-42d0-83d4-518025d1bccd",
        "cursor": {
          "ref": "e0f52b4c-89f6-4287-8b7a-88c7b90119f2",
          "length": 283,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "7a909a40-ff2a-4b2f-bb51-36434e1d333a"
        },
        "item": {
          "id": "77079a91-5ad7-42d0-83d4-518025d1bccd",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "19ba6ee2-2866-4082-8b3c-0fc7886a8bee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35ada37a-787f-4d19-b0e0-0328a9f4f33f",
        "cursor": {
          "ref": "55d45e18-f7e1-4b3e-b030-7c40ff96496f",
          "length": 283,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "68687d7b-24ee-4461-b786-3e2bebcdc88f"
        },
        "item": {
          "id": "35ada37a-787f-4d19-b0e0-0328a9f4f33f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "1c6312a1-a666-439e-b38b-3dac2d2f6690",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ddf0d95d-74fb-4c1d-840a-1b15f19de84e",
        "cursor": {
          "ref": "ec7dd2bd-f5c2-4aec-85e4-80a57ac291fe",
          "length": 283,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "6252b2b5-cb2f-4682-8f0d-b96067af7593"
        },
        "item": {
          "id": "ddf0d95d-74fb-4c1d-840a-1b15f19de84e",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "5d0d6f2d-7aba-4427-9496-afe883a57a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2e92f254-0242-4d8f-b177-458f59fa5c9f",
        "cursor": {
          "ref": "7698c417-f227-4db9-80b9-9fc0cd6f7b70",
          "length": 283,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "53759305-a7ea-47d3-8b88-92b1314fdf47"
        },
        "item": {
          "id": "2e92f254-0242-4d8f-b177-458f59fa5c9f",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "bec1e845-d2b0-4898-a8cb-e21b86f97279",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a9aaf6a3-a479-41dc-8460-c4a955fc30b4",
        "cursor": {
          "ref": "66556c8f-32a8-4ce2-9796-3f8c0b8bb220",
          "length": 283,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "69de46b1-0952-4cf8-a424-7f96e13c9f32"
        },
        "item": {
          "id": "a9aaf6a3-a479-41dc-8460-c4a955fc30b4",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "4c4d98b5-e7cd-41ef-9d87-0bec6c9f0ca7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe5be0dc-7a13-4c91-88ef-996f1459fd70",
        "cursor": {
          "ref": "5cbeab11-a14f-41aa-b630-5e88efc4436b",
          "length": 283,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "e08a29a7-f0bf-4f32-a42b-29c47ed52e52"
        },
        "item": {
          "id": "fe5be0dc-7a13-4c91-88ef-996f1459fd70",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "24534cc5-c210-4563-9e64-86ef0ea0af5b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "731d3153-591b-4a77-aa62-7443b5e84a5b",
        "cursor": {
          "ref": "104b7ba4-8e2a-41a2-8a37-9093689aae74",
          "length": 283,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "b0173bd5-7ac8-454b-8041-a7dbe2b41c9a"
        },
        "item": {
          "id": "731d3153-591b-4a77-aa62-7443b5e84a5b",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "d3cf1f7a-ade8-41ed-aabe-6a8606276f07",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0093b520-6d2e-4d64-a828-004f56ce24c2",
        "cursor": {
          "ref": "37c4e127-df47-4021-9dab-3f17bb0462c2",
          "length": 283,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "396534cc-4aea-407d-900b-d381e16ec070"
        },
        "item": {
          "id": "0093b520-6d2e-4d64-a828-004f56ce24c2",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "89faad7d-1a9b-4da4-b356-2e5a4e9b97bd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d824ed4a-814e-4023-b984-d4b7db047f76",
        "cursor": {
          "ref": "692eb0ab-1201-44f0-8a57-35a3b8d4ebe7",
          "length": 283,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "c3589d42-8149-4b56-a8e3-20c5f2e66d24"
        },
        "item": {
          "id": "d824ed4a-814e-4023-b984-d4b7db047f76",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "665a8614-c63b-498a-9e4f-00727149a3e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92ab925d-a7ba-438d-9e25-1b3f91d49469",
        "cursor": {
          "ref": "19a87050-3b6a-4eb5-a1a7-9484b714f82d",
          "length": 283,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "bd376b7b-a7c3-4c85-9740-d1df5e354e6a"
        },
        "item": {
          "id": "92ab925d-a7ba-438d-9e25-1b3f91d49469",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "1b8a81a5-42b0-457d-930f-f4ef5387f17e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "137abd64-5968-4215-87b7-44827550be1c",
        "cursor": {
          "ref": "0f0058b0-74db-453d-8e0f-11875a777d6c",
          "length": 283,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "9cfe310f-17f0-4d44-a560-6f12a39de5be"
        },
        "item": {
          "id": "137abd64-5968-4215-87b7-44827550be1c",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "69c21055-1ca2-42ba-bf1b-e22760502f0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e6d8e125-d4a5-482d-ac35-998e24ce39dc",
        "cursor": {
          "ref": "e00073b0-9ca7-46c5-a22a-f0561c5a0e42",
          "length": 283,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "83c81e68-60fd-427a-852e-9857c9f5f37b"
        },
        "item": {
          "id": "e6d8e125-d4a5-482d-ac35-998e24ce39dc",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "c5810dca-716a-4098-8535-306473342a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfd4544c-18ed-4777-9321-dd3e12e64ab7",
        "cursor": {
          "ref": "49d91080-ebe4-44ec-8e49-7366c421758f",
          "length": 283,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "cc8ba6ca-a8fc-4e62-9259-aeb65a3fcf3a"
        },
        "item": {
          "id": "dfd4544c-18ed-4777-9321-dd3e12e64ab7",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "fb187040-017d-48c8-83d3-810f4ccdb227",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9e107bcd-d226-4083-afff-68bbcd56cc43",
        "cursor": {
          "ref": "547ae21d-392c-4189-ad48-31f558a4b8c8",
          "length": 283,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "8fee51a4-61a0-4ba3-bb6d-e27cacba1136"
        },
        "item": {
          "id": "9e107bcd-d226-4083-afff-68bbcd56cc43",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "caf0b91a-b2c2-428e-90e5-33ca46b378f6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fcfed21b-f82a-4c7f-939c-f93238bd75fa",
        "cursor": {
          "ref": "dff6e13b-ce46-4a2c-9dfe-17dd4047635d",
          "length": 283,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "bc9a61e5-a380-4b31-8174-ae86213c156c"
        },
        "item": {
          "id": "fcfed21b-f82a-4c7f-939c-f93238bd75fa",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "3cafa3c9-f269-4eca-920e-ecd74a9b1c91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ae6c216-eb7a-4302-8ba8-24e54744e50c",
        "cursor": {
          "ref": "a7cd626d-4334-4764-b36c-2595b469d60b",
          "length": 283,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "b09b26fa-2581-455e-94b0-ae4aef51475a"
        },
        "item": {
          "id": "9ae6c216-eb7a-4302-8ba8-24e54744e50c",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "be8176ce-0f20-4651-bd8d-e4318b6e344e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aafca1c8-4bf7-434e-8d43-c9e43d4f8830",
        "cursor": {
          "ref": "87741a22-b02d-4ce9-b11b-1ef837bd06c4",
          "length": 283,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "f673f312-50ae-46db-8e24-815283749fd8"
        },
        "item": {
          "id": "aafca1c8-4bf7-434e-8d43-c9e43d4f8830",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "c2d4e820-1c84-41fd-85ed-8edb336039bb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6ac42303-a0a2-4acc-a6cb-bee1ee2e419e",
        "cursor": {
          "ref": "45ec1fa9-1cb6-4532-b3de-cf1b04973550",
          "length": 283,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "35450ccc-ceb4-45e4-bb47-474b0ce043fc"
        },
        "item": {
          "id": "6ac42303-a0a2-4acc-a6cb-bee1ee2e419e",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "6a04e14c-cc99-4469-b2df-456241ecc408",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68541b72-257f-449a-b6b5-aa99cbed1ae8",
        "cursor": {
          "ref": "b8617bc0-d22a-4793-b1d0-89b8957cd064",
          "length": 283,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "bcd0115c-d576-41bf-8f05-c2719c302b8a"
        },
        "item": {
          "id": "68541b72-257f-449a-b6b5-aa99cbed1ae8",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "c287ab77-d2ea-42ff-adb5-0c16f7df3b91",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "073c1d32-eb6e-4516-b027-8bbc868dbab5",
        "cursor": {
          "ref": "ec164eb1-e4a0-44bb-98b5-f175e2d0b4f0",
          "length": 283,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "6110238e-914d-4885-ad64-592c449d070f"
        },
        "item": {
          "id": "073c1d32-eb6e-4516-b027-8bbc868dbab5",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "13cff89c-f165-4f53-8576-900c4b1b9658",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4c952ce4-f98b-43b9-bcd0-0a37aa9b258b",
        "cursor": {
          "ref": "2b1bad04-a422-4503-87e1-70697c274574",
          "length": 283,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "7ebdb42e-ecf3-47e0-9ea9-c158f28fd7e8"
        },
        "item": {
          "id": "4c952ce4-f98b-43b9-bcd0-0a37aa9b258b",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "514b1e27-bb2c-45ff-b0a6-f6b86a4c6dc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "703f8a1c-e0ac-465a-b9c9-874e92536624",
        "cursor": {
          "ref": "f174fa15-ce49-4b2b-bea5-6eac6a592f46",
          "length": 283,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "8253ae37-5358-4276-aabc-b4329265b044"
        },
        "item": {
          "id": "703f8a1c-e0ac-465a-b9c9-874e92536624",
          "name": "credentials_issue"
        },
        "response": {
          "id": "a09a78f5-cd5c-4144-b27c-30db2923ec66",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "c045d15a-e894-428b-be7d-e441ff54a2ef",
        "cursor": {
          "ref": "3b037a9b-d34b-49ee-9426-2cc2d1021588",
          "length": 283,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "fcb9a0ff-60e2-4e8f-ba70-e45d17fa0c4e"
        },
        "item": {
          "id": "c045d15a-e894-428b-be7d-e441ff54a2ef",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "89aa5097-f0db-401e-a953-1a0c138fb348",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "95136216-d6b9-41cc-b111-836d7e00a9ea",
        "cursor": {
          "ref": "6e639f22-f057-43bb-be17-bf95acb2c906",
          "length": 283,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "114eccc1-69eb-4af4-8283-0d294ad88c61"
        },
        "item": {
          "id": "95136216-d6b9-41cc-b111-836d7e00a9ea",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "c9e0d4b0-7982-405c-ac66-df8a8ef8cc25",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "8837b415-237e-4470-9510-9b8d505deab8",
        "cursor": {
          "ref": "a211ce98-e2c6-45cf-b484-03fc16052f1a",
          "length": 283,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "f26b25c5-897e-4ea3-84a3-1621446bf0f4"
        },
        "item": {
          "id": "8837b415-237e-4470-9510-9b8d505deab8",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "b005e54b-2f77-408a-b257-4c863ff0770e",
          "status": "Created",
          "code": 201,
          "responseTime": 4471,
          "responseSize": 992
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false
          }
        ]
      },
      {
        "id": "17d7bed1-cf04-40e4-88bb-918d23b02c89",
        "cursor": {
          "ref": "90562a95-f101-465d-81ed-5f762e61c8b2",
          "length": 283,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "00461dd0-9329-40d7-9e6a-0f33a59c0457"
        },
        "item": {
          "id": "17d7bed1-cf04-40e4-88bb-918d23b02c89",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "8f0ab448-f52e-4c80-bc93-86dd7008ce53",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "e6a6b6fb-6256-4cc2-936b-a9047a7337d8",
        "cursor": {
          "ref": "5dc2e9ad-10b9-4d2e-9b1a-8546ed31ad82",
          "length": 283,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "f6b3759b-1f50-4324-9aa7-b42dd9cf9914"
        },
        "item": {
          "id": "e6a6b6fb-6256-4cc2-936b-a9047a7337d8",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "917cc206-e1ef-4bdc-bf11-ea6e715da7c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "65d4cd4e-8e87-4502-91b9-226978db5b0d",
        "cursor": {
          "ref": "caee0285-bc01-47fa-b3de-fe3b18241beb",
          "length": 283,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "fd6c28ad-d739-4de6-b6bf-962c058d3364"
        },
        "item": {
          "id": "65d4cd4e-8e87-4502-91b9-226978db5b0d",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "e74d7eb9-4cc4-43f9-978e-ce58aabb893c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a7f369c-98b2-44d9-8058-f7b607cb28b7",
        "cursor": {
          "ref": "01b44ebc-1aa0-4c2a-94fe-d109d7c54c49",
          "length": 283,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "11c300a1-599b-4acc-97df-d22aa2bd071b"
        },
        "item": {
          "id": "6a7f369c-98b2-44d9-8058-f7b607cb28b7",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "e934d18b-60fa-44c3-8ed1-9ed5b9f71515",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8d269df-d37e-4eb8-bb34-fed9bfac2c88",
        "cursor": {
          "ref": "119f8015-afbd-4f9d-b4ac-43f965f24b7a",
          "length": 283,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "3c79661c-c319-4090-848b-c49bbdc4f5cc"
        },
        "item": {
          "id": "f8d269df-d37e-4eb8-bb34-fed9bfac2c88",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "dd291718-3272-403d-91b5-ad306cec7ea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa39f5ea-33aa-468e-ae41-3c571e2d9962",
        "cursor": {
          "ref": "bfefd30d-1c2f-4377-b472-7c45db66695a",
          "length": 283,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "99b106ff-7cc3-4364-8b0f-f47ebfcd9931"
        },
        "item": {
          "id": "aa39f5ea-33aa-468e-ae41-3c571e2d9962",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "968a6cb7-84bd-49d2-b75a-6fd04db5a5d0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "17897c85-141b-408f-a19f-dcd437a3b0f6",
        "cursor": {
          "ref": "09d00fda-4b04-4d8f-af9f-d6e6eb45d9e9",
          "length": 283,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "7d146497-7e7a-444a-8bdf-21cfeb455122"
        },
        "item": {
          "id": "17897c85-141b-408f-a19f-dcd437a3b0f6",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "5e849542-89d5-42b0-ad57-c75287497457",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "995e50b7-9aba-4f53-9392-8c4152e65186",
        "cursor": {
          "ref": "4a237e8c-bb57-4864-b349-e0098cd930d6",
          "length": 283,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "ba73a52d-c921-48e7-8c0a-2cc8ca6c4aa0"
        },
        "item": {
          "id": "995e50b7-9aba-4f53-9392-8c4152e65186",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "19296597-d63d-4306-bc07-fe5c907676c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "38cb9cf3-40fb-4679-b4e8-1169573d5f08",
        "cursor": {
          "ref": "5d056e3c-789d-4501-8035-7514c13c0a29",
          "length": 283,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "4aed18ec-1f87-4c04-8f1c-b3a56bf85798"
        },
        "item": {
          "id": "38cb9cf3-40fb-4679-b4e8-1169573d5f08",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "7039d105-0ccb-4420-805c-fcd15d20ddb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8d09954c-b886-4168-a4d9-50ef5af53cc6",
        "cursor": {
          "ref": "751809a8-4bc3-4c15-84e1-55a18796dd60",
          "length": 283,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "5b23deb4-146a-4a37-bc4e-b9259edf16bd"
        },
        "item": {
          "id": "8d09954c-b886-4168-a4d9-50ef5af53cc6",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "d9d40ae9-ee65-478d-99e3-2b925828358b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 83,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "92c96e05-38a0-4cac-91a8-dc0f802c55f3",
        "cursor": {
          "ref": "c2524c24-5235-45ea-8bea-c31f03f82bd5",
          "length": 283,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "69f22054-9c58-45ae-98af-965973fbac53"
        },
        "item": {
          "id": "92c96e05-38a0-4cac-91a8-dc0f802c55f3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "247bb1db-5f9b-4a73-9489-c4becb220a32",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dfe892a9-60d4-41c0-8935-fbbf467b05a2",
        "cursor": {
          "ref": "87688aba-416e-4584-9c84-5fd925a08dbc",
          "length": 283,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "945daa63-765f-4150-a23d-ae60598b3240"
        },
        "item": {
          "id": "dfe892a9-60d4-41c0-8935-fbbf467b05a2",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "2cccc273-c247-4f45-a27f-d878ef0daf95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4ca448e2-1d5b-4597-a7d8-980e3931fa0f",
        "cursor": {
          "ref": "8836eec6-9e53-466a-8c7b-c5ed16f47a37",
          "length": 283,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "4c7257dc-c381-4b5e-84f7-7d6f917def75"
        },
        "item": {
          "id": "4ca448e2-1d5b-4597-a7d8-980e3931fa0f",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c82a62cf-dd60-43e2-b285-9b2672a5d128",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4986089b-164c-421e-be33-7e32a6175948",
        "cursor": {
          "ref": "e094f416-cf09-440c-8752-bf2a359ee022",
          "length": 283,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "62a38471-95f3-40f4-abe2-955566e0cdb2"
        },
        "item": {
          "id": "4986089b-164c-421e-be33-7e32a6175948",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "374599e8-5802-4fd9-a31c-ae554905bb9a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ddb4ea-ab62-4d10-8060-09094f10983d",
        "cursor": {
          "ref": "52caee6e-7acb-4f4d-8999-27c711f8c5bc",
          "length": 283,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "78d04535-7a33-41af-bd43-b99bf09ca58d"
        },
        "item": {
          "id": "87ddb4ea-ab62-4d10-8060-09094f10983d",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "09646396-f773-43ac-8a62-a97bfbf31fad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "19e626d5-6370-4842-9317-5bd7a527c5fa",
        "cursor": {
          "ref": "1b56717c-3965-46c6-bec7-5a6052b83c76",
          "length": 283,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "8eafca72-77a6-43c8-88bd-1e2b1f0a6d60"
        },
        "item": {
          "id": "19e626d5-6370-4842-9317-5bd7a527c5fa",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "7a7a54cc-c46b-4fb1-a611-54798916de61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1341bd3e-c6c0-4f60-b37c-8e9106a6c8ed",
        "cursor": {
          "ref": "333dfdd1-57da-421c-9aca-b4c9909f2b74",
          "length": 283,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "e469fe82-6ac2-4102-8cd5-c10c1addd3e7"
        },
        "item": {
          "id": "1341bd3e-c6c0-4f60-b37c-8e9106a6c8ed",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "2a84f5f7-b5ea-42bb-8674-7c6bb2dac766",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 86,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "124c2b9c-7726-428e-9675-9797f94faf1b",
        "cursor": {
          "ref": "e3f16d6c-42ae-4502-b3e8-f3c67825a726",
          "length": 283,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "56952fe8-6e5f-4c06-878a-dacbd2b813f8"
        },
        "item": {
          "id": "124c2b9c-7726-428e-9675-9797f94faf1b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "398e111b-5bb0-49f3-b851-59d0a3efc06c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 82,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f6f9b7c-4892-498a-b015-8cc2b3e70abd",
        "cursor": {
          "ref": "734040ed-8dbe-4914-9d37-ea1787976661",
          "length": 283,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "c54ac5d5-7f94-407c-8a11-6260bd28a846"
        },
        "item": {
          "id": "1f6f9b7c-4892-498a-b015-8cc2b3e70abd",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "d341f410-af3d-43e8-9b8b-c864e5e7da1b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1c946d44-62d5-4da4-a7b0-03fdcfaf3cfa",
        "cursor": {
          "ref": "dc5365e6-764c-453b-9370-63616af295ce",
          "length": 283,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "c0c56781-1b1a-447f-9263-9c6954f1748e"
        },
        "item": {
          "id": "1c946d44-62d5-4da4-a7b0-03fdcfaf3cfa",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "ed1a4ba3-ef9f-491e-bfcf-f6156ccc43ad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8126eeb9-8246-4ebc-a5ae-2117a97d363c",
        "cursor": {
          "ref": "85eda53c-7f95-45e4-9023-cf8d808c2876",
          "length": 283,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "d63d9414-3b00-4d69-aece-488096032738"
        },
        "item": {
          "id": "8126eeb9-8246-4ebc-a5ae-2117a97d363c",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "0f475ac4-2c6c-4a33-8ef5-9f16ff23af09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 84,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bcea8722-1ca5-42e9-971e-b8220502acfa",
        "cursor": {
          "ref": "02be8318-8612-4c9e-ba98-be2c3bf94ae8",
          "length": 283,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "be77d39e-048d-473b-ba71-06ad60bea0d6"
        },
        "item": {
          "id": "bcea8722-1ca5-42e9-971e-b8220502acfa",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "707e59be-f8f4-4a0d-8009-6edea8fccc71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e976a4b0-fbf6-416a-bdfc-58d8395a3d8b",
        "cursor": {
          "ref": "208723a8-2906-4e1c-b2a0-92c375d10b45",
          "length": 283,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "481da86d-f571-40db-8313-bf8b34c888be"
        },
        "item": {
          "id": "e976a4b0-fbf6-416a-bdfc-58d8395a3d8b",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "2fc5a7dd-146e-46b8-8e9c-a392b588bca2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a049233-68d3-4c5f-b194-185e67234d97",
        "cursor": {
          "ref": "8b33021d-6c80-4142-9b9b-473c5bc53d7e",
          "length": 283,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "3a750300-9b7a-4639-9943-d2d3f15f6b63"
        },
        "item": {
          "id": "6a049233-68d3-4c5f-b194-185e67234d97",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "a4bea7f6-6932-49bd-a456-d89324af444a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c0d769e-040e-4ee5-9426-de86b3796ed4",
        "cursor": {
          "ref": "1eb66c9a-f4b1-4d39-93a3-4d2dcfd37a31",
          "length": 283,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9f10e4cd-2a79-4eaf-a189-d60871fec0fe"
        },
        "item": {
          "id": "6c0d769e-040e-4ee5-9426-de86b3796ed4",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "27f0a5b6-764c-4cca-bceb-4472d38a5a93",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c7dfda7-9ee1-4762-9ddb-f765c9fbd7dc",
        "cursor": {
          "ref": "24b15f2c-33f8-4a4c-ab4f-a7519c8425e9",
          "length": 283,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "15478c0d-44ed-4b3b-bee9-8b313349d37a"
        },
        "item": {
          "id": "6c7dfda7-9ee1-4762-9ddb-f765c9fbd7dc",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "d04872e1-6d1e-4671-9bb5-526561805a39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e090b996-c8d6-464f-b5bc-df93cd294927",
        "cursor": {
          "ref": "be64bad4-be80-43c5-af46-e04288a5bf38",
          "length": 283,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "4e914a4e-9406-441a-bdb1-53718b8d948e"
        },
        "item": {
          "id": "e090b996-c8d6-464f-b5bc-df93cd294927",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "b898bbdf-8a85-4e55-9118-4856c2d67045",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b1d4a62-0051-4b4b-a370-b3276e58a9bb",
        "cursor": {
          "ref": "4a8efef3-8f53-4ced-91a9-3bce9c84ef6b",
          "length": 283,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "91bd4707-f288-4362-95a6-de837337aec7"
        },
        "item": {
          "id": "7b1d4a62-0051-4b4b-a370-b3276e58a9bb",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "f30598b3-87ad-4def-8b7b-1d058cb99193",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04a0fe7a-cee9-43f1-a60d-80fc5380ca41",
        "cursor": {
          "ref": "098dc665-916d-4014-9501-4f3aa9255815",
          "length": 283,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "0ba4d2fa-609b-4e73-b5e2-35ab224a8226"
        },
        "item": {
          "id": "04a0fe7a-cee9-43f1-a60d-80fc5380ca41",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "b0381954-d786-4b89-ae28-97a37cec87ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dcf1cc0e-4741-4590-81af-95d8160d0156",
        "cursor": {
          "ref": "b999205a-b28b-43ba-96eb-aad14431a51f",
          "length": 283,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "e5ec52e1-9feb-4c94-8558-e08dce974e8e"
        },
        "item": {
          "id": "dcf1cc0e-4741-4590-81af-95d8160d0156",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "b6faacaa-c39e-4c18-b857-3a2090c5988d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00827568-780d-403e-b533-794b53a621ae",
        "cursor": {
          "ref": "3b46db1b-0e3d-452b-91ab-4107ab2be455",
          "length": 283,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "353f4561-2fbd-4334-b645-4b408f0e8a93"
        },
        "item": {
          "id": "00827568-780d-403e-b533-794b53a621ae",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cc937927-991d-4f8a-bb6f-c62b27d4722c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bbe4efd7-b936-4b17-bcf5-e5cca42fb03b",
        "cursor": {
          "ref": "91c3ba71-c838-4fd1-8bc5-670c345e0471",
          "length": 283,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "30a4257a-126f-497b-aaf5-acd138c27ef6"
        },
        "item": {
          "id": "bbe4efd7-b936-4b17-bcf5-e5cca42fb03b",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "cf0a0b73-e782-472c-b366-86984feee028",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52e3501a-a2ed-4efe-aae1-2071faa5d64f",
        "cursor": {
          "ref": "a808469c-43f4-4676-b4fd-3a6ffef03933",
          "length": 283,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "f1742d0d-1ce7-4d61-812f-94b11ca830f5"
        },
        "item": {
          "id": "52e3501a-a2ed-4efe-aae1-2071faa5d64f",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "0efd3b48-8516-49e1-bb17-98f8033b2bdd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d4e22f4-bb37-4539-92bb-d636c498fa54",
        "cursor": {
          "ref": "2c0c48a2-77ea-4d36-ae8e-2bef3fd4b6c8",
          "length": 283,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "d11b5b05-e6cb-4588-9ad6-f8e5954d0b4b"
        },
        "item": {
          "id": "9d4e22f4-bb37-4539-92bb-d636c498fa54",
          "name": "credentials_status:credentialStatus:item:status:invalid"
        },
        "response": {
          "id": "b59fb695-be60-48bf-aa37-4f246234fb14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa1c3d2a-76c1-4d7b-a3af-e5b16a479a1f",
        "cursor": {
          "ref": "163526a0-cb5d-47d7-8d7d-a04defc71c82",
          "length": 283,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "521190cd-a19e-44f4-9189-bc8038e76f7b"
        },
        "item": {
          "id": "aa1c3d2a-76c1-4d7b-a3af-e5b16a479a1f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "e01ff580-2387-49fd-8ddb-ca878911420d",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef44bd68-cf8b-42c9-b4d8-677904fef558",
        "cursor": {
          "ref": "4f4ecec8-14bc-448e-93c4-6777f18c66b8",
          "length": 283,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "3597c944-a1ee-400d-b512-44210407eaf9"
        },
        "item": {
          "id": "ef44bd68-cf8b-42c9-b4d8-677904fef558",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "1a299fb4-74c3-4def-9e16-47915898de13",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e1e79477-6fc6-433c-bfa7-7d5920bc7e25",
        "cursor": {
          "ref": "665d5002-6d60-4dff-83f2-2e8426e60b25",
          "length": 283,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "b7d88d6f-09b1-41b2-8ca2-dbccff1441ae"
        },
        "item": {
          "id": "e1e79477-6fc6-433c-bfa7-7d5920bc7e25",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "8aeca1e9-7c82-4886-98ba-4d96b55eadb6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f83ab8a2-ea18-4b90-a1d6-55acc897a8c6",
        "cursor": {
          "ref": "2a53d4a8-9c84-4a3c-b7ff-eb39d77542dc",
          "length": 283,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "cbfad074-acd6-4300-871b-4548e2fdbd8a"
        },
        "item": {
          "id": "f83ab8a2-ea18-4b90-a1d6-55acc897a8c6",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "a321995a-5410-4a73-943c-6f85450efea0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc7a961e-6ae6-492f-8b0f-46b741c1e1b7",
        "cursor": {
          "ref": "78c33b9b-6550-49d2-b576-a3af71e63eb1",
          "length": 283,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "73c79729-6ab9-4823-8faa-4c6ec639297d"
        },
        "item": {
          "id": "dc7a961e-6ae6-492f-8b0f-46b741c1e1b7",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "3fa5067b-921f-4753-a047-838fe1b0019f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "801aab05-2a15-435d-b9d8-8b1209b78345",
        "cursor": {
          "ref": "982174c7-852b-437b-8f5f-9f3d0ed2557f",
          "length": 283,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "d063e5c3-b579-422b-a4f0-0eddd35a8677"
        },
        "item": {
          "id": "801aab05-2a15-435d-b9d8-8b1209b78345",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "252b6a38-64f6-41d0-902b-14535d1f8876",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "69b2d336-baef-415f-ab6d-bcdf3a9d66f5",
        "cursor": {
          "ref": "1d138625-60e7-4ddb-b4b1-114067ca4e57",
          "length": 283,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "2b328e61-4d14-4c46-8358-9c907e230db5"
        },
        "item": {
          "id": "69b2d336-baef-415f-ab6d-bcdf3a9d66f5",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "3473a808-8998-4131-b561-2f19e343c78f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 152
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e233d210-b87b-4bee-ad21-96c746958f35",
        "cursor": {
          "ref": "52fcd08f-3804-4c86-afd9-428219c68e18",
          "length": 283,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "2295037c-cff3-459c-a9f5-e4a56d413bce"
        },
        "item": {
          "id": "e233d210-b87b-4bee-ad21-96c746958f35",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "19c1b16b-b094-4bb8-a63d-94f0703ae3fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ec553d3-1d55-425b-af66-739fd481201d",
        "cursor": {
          "ref": "591fc576-1c60-4078-bfa9-550a36b4a1a1",
          "length": 283,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "edab4a41-2842-434d-894b-c3bc140b4e09"
        },
        "item": {
          "id": "5ec553d3-1d55-425b-af66-739fd481201d",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "06bda717-ecc3-4529-ae2d-60904b94013c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d78a985-1847-4526-88b7-5583e52d9350",
        "cursor": {
          "ref": "968f9294-39f5-432b-9019-439412b3e30e",
          "length": 283,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "7b4bf1fa-0889-4dd7-8ce8-b09be900b2a0"
        },
        "item": {
          "id": "7d78a985-1847-4526-88b7-5583e52d9350",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "48c8c1ba-2289-46b5-b5c6-34422847eff2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5e134b50-d38f-49e5-a81b-774a02d2afdd",
        "cursor": {
          "ref": "39b3a5ed-7a06-4370-b99e-2a7e4253d669",
          "length": 283,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "3a7b0a8f-b075-46f8-a910-8b13b3141f81"
        },
        "item": {
          "id": "5e134b50-d38f-49e5-a81b-774a02d2afdd",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "36aa33a8-abf2-4136-af26-1b7f8b9f1731",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bc7561cf-58c8-4817-a9e6-eb9ed793adf1",
        "cursor": {
          "ref": "82b7cbef-4ebc-4637-a072-c4ea900dc8ab",
          "length": 283,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "98cdad5f-2b24-43ac-bb3b-240dcad66e73"
        },
        "item": {
          "id": "bc7561cf-58c8-4817-a9e6-eb9ed793adf1",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "d389b4d7-9f64-43ee-9ff1-31a28205f758",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c511da-daca-4d07-bdc7-ad10c7e9543a",
        "cursor": {
          "ref": "23c63821-e04d-4623-8f90-ff4847e233be",
          "length": 283,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "0d6c23a3-6819-4935-8371-9273de488926"
        },
        "item": {
          "id": "d9c511da-daca-4d07-bdc7-ad10c7e9543a",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "070315f9-90ab-4eb2-a471-a4e9d56f4df5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b6bb5b0f-c43b-4f3c-869d-0c4d20b5c35c",
        "cursor": {
          "ref": "d7f6e0e7-951e-40b3-bbfc-ed56ac3a740a",
          "length": 283,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "ffa7e5f3-8a6c-43e7-bff0-7974ef76853c"
        },
        "item": {
          "id": "b6bb5b0f-c43b-4f3c-869d-0c4d20b5c35c",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "33770111-a583-44fe-a090-fb0e2d3ed806",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c7407e2b-b403-462f-8d1f-88e9eb2e71ef",
        "cursor": {
          "ref": "bac09b6a-73b9-4dd3-894c-9ef58ae7b7e8",
          "length": 283,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "58ff0abf-eeac-4a79-abef-7c545cb605d4"
        },
        "item": {
          "id": "c7407e2b-b403-462f-8d1f-88e9eb2e71ef",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "74073c95-0e28-43bb-acc2-b5e445ed0473",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73a06b29-49c7-4441-8a64-138721dd6c2c",
        "cursor": {
          "ref": "93c48711-15de-4296-81a7-c7fc7d3e7079",
          "length": 283,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "fb7f8af5-0538-43d5-a997-175f58bb47af"
        },
        "item": {
          "id": "73a06b29-49c7-4441-8a64-138721dd6c2c",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "71d228a4-5d25-4a06-84ee-a510c89c855f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5b7cadb9-98d2-4872-97f7-2feda5f26b7c",
        "cursor": {
          "ref": "553d5955-fcde-4b22-b254-6b7f19a28a24",
          "length": 283,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "1af04ed3-1459-46f8-9257-3dfac93c06ac"
        },
        "item": {
          "id": "5b7cadb9-98d2-4872-97f7-2feda5f26b7c",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "bf5bfb32-6bcf-41ac-9a14-5181921150a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 162,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2ed38cd3-f39c-4d7f-a24a-3acea37e02d3",
        "cursor": {
          "ref": "10b64af5-997d-4d95-8477-7e6c2aa970c4",
          "length": 283,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "2302b61c-6af4-4776-b394-4ebe2f42db6b"
        },
        "item": {
          "id": "2ed38cd3-f39c-4d7f-a24a-3acea37e02d3",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "ccfc89ca-85a4-47b7-8fc7-0270bb048c37",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d480e918-5767-4c0f-a58d-686cff075126",
        "cursor": {
          "ref": "a91cd294-b9d1-4c7c-9db4-da7171d3cb3e",
          "length": 283,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "9608c0bf-7ad8-4705-bba9-f1df0a1c1d2d"
        },
        "item": {
          "id": "d480e918-5767-4c0f-a58d-686cff075126",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "2bfdebf0-5d31-4127-aec6-7261f3f9ee9c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f4efb77-adb1-4917-907b-ed81c7ff0e43",
        "cursor": {
          "ref": "46c198c8-eaa6-47c6-a0ca-9d36f2675b3d",
          "length": 283,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "fe6b8d24-4b01-4f21-b0fe-13ca120592d6"
        },
        "item": {
          "id": "4f4efb77-adb1-4917-907b-ed81c7ff0e43",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "5c179d4c-8080-4f5b-94a9-3f136d2515ba",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5be8d22c-b0c6-4785-98f9-4e96582d327b",
        "cursor": {
          "ref": "3e15cc33-91c2-45e6-94ab-bb4a2534f56b",
          "length": 283,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "a28b286d-0c11-4834-9d31-4fb3a86e3be7"
        },
        "item": {
          "id": "5be8d22c-b0c6-4785-98f9-4e96582d327b",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "4a11c28e-73f3-4f9b-ad07-98f742c043b0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "837a40cb-f06b-401f-a70d-751c18fe6480",
        "cursor": {
          "ref": "e8b3e469-1cf1-47a9-83b7-e4dbc8be65cf",
          "length": 283,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "4d9c6d39-38b9-409c-a574-8e17a2a48715"
        },
        "item": {
          "id": "837a40cb-f06b-401f-a70d-751c18fe6480",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "cab528db-1f71-4f2d-bcef-40f65f86cbe2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd57ce10-1695-4f9d-a777-064d880499ee",
        "cursor": {
          "ref": "41bde619-cb1f-4fe7-9c0f-9624e27191ff",
          "length": 283,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "80c44ba3-fdff-410c-ba92-1828a051a024"
        },
        "item": {
          "id": "cd57ce10-1695-4f9d-a777-064d880499ee",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "10aa1a43-ffc4-408d-836a-0066b25e8cc8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bc53824-878e-4949-80bb-3476eed98b87",
        "cursor": {
          "ref": "6b499517-d711-4999-931c-796cc793b158",
          "length": 283,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "e72cc604-0922-49cc-9943-4700f0863797"
        },
        "item": {
          "id": "8bc53824-878e-4949-80bb-3476eed98b87",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "f536620d-90bc-4a10-88dd-fac8a86a01f5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 85,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e324ce1-8e04-4983-8926-69cd1ced175a",
        "cursor": {
          "ref": "82a95eb4-4c3d-4e1a-9c29-35bc1ef7d86a",
          "length": 283,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "faab131c-1dc1-4079-b3f2-bf28fd39ba0b"
        },
        "item": {
          "id": "3e324ce1-8e04-4983-8926-69cd1ced175a",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "b394d635-29a9-4151-adaa-4401c2a2dfd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 101,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f2bc5bb5-fe06-4030-a11c-dd48c6f476f3",
        "cursor": {
          "ref": "edd44a45-22a4-4d4d-a0d5-c903327fcfe7",
          "length": 283,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "f58a202c-41c4-4432-a1e8-90ff445f5e04"
        },
        "item": {
          "id": "f2bc5bb5-fe06-4030-a11c-dd48c6f476f3",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "f2a05521-1a71-4349-b8fd-72e3d3fca3aa",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5645472-cb7e-4b0f-91aa-aed0481f7d96",
        "cursor": {
          "ref": "9b78ddef-585e-4491-aa18-ccfe87249671",
          "length": 283,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "d274ebde-d0f8-42d8-899c-c5b74beda211"
        },
        "item": {
          "id": "b5645472-cb7e-4b0f-91aa-aed0481f7d96",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "3c59405c-bf8e-42d0-b7e4-c0bd87da1c6a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "10396fce-af73-4f1c-a3d0-e959b69b0a80",
        "cursor": {
          "ref": "e07fe14f-836f-42a2-ac90-1fba4b66cfe0",
          "length": 283,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "e39cf67f-3151-4c4f-8abb-90b8db2b2e88"
        },
        "item": {
          "id": "10396fce-af73-4f1c-a3d0-e959b69b0a80",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "ab93e141-13ea-43f2-a824-9ce29c5b4921",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a299e66c-2912-4d01-b91e-f4ae20f02b90",
        "cursor": {
          "ref": "cd44f9fe-9354-4fc8-a027-3a53ee76bf02",
          "length": 283,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "195a2c95-a6d2-4eea-a314-27ab6d0f9948"
        },
        "item": {
          "id": "a299e66c-2912-4d01-b91e-f4ae20f02b90",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "35080162-9f23-4ef6-9d90-ec361e33d34a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d6bdcf9b-391f-4b4d-bc5f-4d19443cf28a",
        "cursor": {
          "ref": "32e780cd-72d1-4cc2-a869-6a7a43561778",
          "length": 283,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "5adb27e2-0bde-4d94-a6a9-2b5bd8e0bafa"
        },
        "item": {
          "id": "d6bdcf9b-391f-4b4d-bc5f-4d19443cf28a",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "fb4eb825-4264-4547-ab2d-33ee72d2e5a2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cf41c0b-d4e0-453f-a5bf-7261027de0ec",
        "cursor": {
          "ref": "74a2c86f-f43f-4108-8b2f-f178942f8b66",
          "length": 283,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "69dd5fd3-5932-4863-94ad-8861e7dc2ca9"
        },
        "item": {
          "id": "2cf41c0b-d4e0-453f-a5bf-7261027de0ec",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "32dac2b5-f030-46ef-acb5-732641e37872",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b889fae-f4f4-426c-9198-291bbbb54504",
        "cursor": {
          "ref": "c3cd0402-5fc1-4def-a013-029db2ac4d66",
          "length": 283,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "4dc470b2-0016-4ca9-afa4-e5d3d67445ea"
        },
        "item": {
          "id": "7b889fae-f4f4-426c-9198-291bbbb54504",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "1aeaade7-d85b-462b-9731-214c3d0760e3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7b300a7c-6b89-4a8d-a206-1078079812ef",
        "cursor": {
          "ref": "5545d2c9-57cf-461e-b1c3-ac296bcced74",
          "length": 283,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "7cf853eb-280a-4505-a8fe-e6b23ede0c51"
        },
        "item": {
          "id": "7b300a7c-6b89-4a8d-a206-1078079812ef",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "379372eb-ef04-4a6c-ac5b-974bae24f55c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f0e0953-d831-4f70-8797-36343ed5bd46",
        "cursor": {
          "ref": "28692435-20b1-4be8-8969-2301124eeeeb",
          "length": 283,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "94c48556-c186-4131-b5ae-d17464f27fd2"
        },
        "item": {
          "id": "0f0e0953-d831-4f70-8797-36343ed5bd46",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "f0024b85-5883-415a-b01d-0f4b1cf1b1bf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cd3f116-2fa7-4bce-911b-d756fdca03cf",
        "cursor": {
          "ref": "d321546b-08c1-4236-916e-f109da9bf686",
          "length": 283,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "6cb184c0-a3c9-43a2-ad68-b9318874e055"
        },
        "item": {
          "id": "0cd3f116-2fa7-4bce-911b-d756fdca03cf",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "0bae163e-16da-4934-9f9b-8bb220c46d73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b20cd772-3f1a-4c8a-a11d-4df63f28695b",
        "cursor": {
          "ref": "b6764caf-cc4f-41ae-a2ca-a4ae6834201b",
          "length": 283,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "56fd95db-7810-4f7f-886c-3970625b96ec"
        },
        "item": {
          "id": "b20cd772-3f1a-4c8a-a11d-4df63f28695b",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f51bed99-f118-434e-b65d-7d5f3a9f243b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f453ff03-6371-4d0d-a26d-9e09aabfc315",
        "cursor": {
          "ref": "ba98858f-5e28-464c-9a56-4f11fda8e514",
          "length": 283,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "85861a82-de37-4d7f-94f6-9689f80ce28d"
        },
        "item": {
          "id": "f453ff03-6371-4d0d-a26d-9e09aabfc315",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "1160a4c9-c871-4c79-aa73-da4219a35fd0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3033c09e-f69d-4222-b1b8-f0492e9d1fec",
        "cursor": {
          "ref": "75b7d599-2946-4e22-8e55-bff115a396d9",
          "length": 283,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "ed434056-225f-48fa-be12-7b609245255b"
        },
        "item": {
          "id": "3033c09e-f69d-4222-b1b8-f0492e9d1fec",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "cc8943ea-777c-410b-bc11-6e27682253a6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65399758-bb9e-4b2d-a18c-d934831ffc4f",
        "cursor": {
          "ref": "797e4451-f810-4025-997f-652d1bd8b7b1",
          "length": 283,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "a0e42de6-6f2d-475d-8a0d-74006a031b0c"
        },
        "item": {
          "id": "65399758-bb9e-4b2d-a18c-d934831ffc4f",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "f3395326-21f2-4c27-84d6-605c6427e879",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 52,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7d96f5b2-98d8-4ba9-8293-b16125715dd8",
        "cursor": {
          "ref": "13a207ca-0bfc-4e3d-833a-566649248abf",
          "length": 283,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "52c56777-b9d8-426c-b5f4-bd8c872b1486"
        },
        "item": {
          "id": "7d96f5b2-98d8-4ba9-8293-b16125715dd8",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "5f90c000-d0d0-4419-b35c-c85586af347e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fc630a07-9bb7-414b-9f49-94169fb313d9",
        "cursor": {
          "ref": "fe577200-b0b4-4e16-960a-b5eb296cfe26",
          "length": 283,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "ae52e047-ca40-4873-98e4-9f05aa780c44"
        },
        "item": {
          "id": "fc630a07-9bb7-414b-9f49-94169fb313d9",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "808efb1b-3536-4520-94c9-770b06ae5429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0e8751e9-7dec-4458-a09c-1e663e409ef5",
        "cursor": {
          "ref": "613da591-fb2b-4559-908e-05efdac3a85f",
          "length": 283,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e87f71ef-ced3-4ee3-91c0-2266d385d244"
        },
        "item": {
          "id": "0e8751e9-7dec-4458-a09c-1e663e409ef5",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "faa84f29-9a14-4339-b93b-3f7ac2864cf9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f7919c8-db20-442e-8d92-eb888a18ddd9",
        "cursor": {
          "ref": "fb513282-677d-4a4f-bd7c-9625f47dbdd4",
          "length": 283,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "ca073a0c-91a8-4597-9203-c8ca93757a4a"
        },
        "item": {
          "id": "1f7919c8-db20-442e-8d92-eb888a18ddd9",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "e126d22f-d4e2-4f61-9a75-c830545e4d04",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 77,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b7dfa9f7-4c48-48e6-91dc-a53ac3301a69",
        "cursor": {
          "ref": "043272ee-5df3-4726-8080-9a7d24f10139",
          "length": 283,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "b37a97f0-5823-4922-a1da-00a22bef8e41"
        },
        "item": {
          "id": "b7dfa9f7-4c48-48e6-91dc-a53ac3301a69",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "ba7a9929-6833-440a-9bcf-cb3cb12c8898",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "546d1a19-26fa-48a3-a117-084b744d4625",
        "cursor": {
          "ref": "8cc1cb42-a39e-4021-9b0d-4bd75af40ee1",
          "length": 283,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "dbf86d74-cff4-4eb4-b95a-7a03922d2783"
        },
        "item": {
          "id": "546d1a19-26fa-48a3-a117-084b744d4625",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "63ff448b-c272-46e0-9a16-029050f5ab40",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 160
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ae3def2-0871-4cdb-9c6c-ca035f2433d8",
        "cursor": {
          "ref": "310fd787-d9b3-451c-a002-2a7bd823b456",
          "length": 283,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "eccebddf-76b0-47b1-ab4d-d4aaced9f1a5"
        },
        "item": {
          "id": "5ae3def2-0871-4cdb-9c6c-ca035f2433d8",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "ce9736c4-ffe9-4df0-b78c-cad72274ee47",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fca122da-52d2-4da3-b5db-c0b6d8a5037b",
        "cursor": {
          "ref": "63c946fb-065c-4f61-99b2-e1252cca2eee",
          "length": 283,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "2b7740b0-ea10-4b83-a434-a3f769ae7ff9"
        },
        "item": {
          "id": "fca122da-52d2-4da3-b5db-c0b6d8a5037b",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "df06f1e0-8e50-4fcd-97fd-4a3ff44f7588",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b1bf5bf-daa9-4fcb-a0e0-c35b5ef01583",
        "cursor": {
          "ref": "697ce5a4-b049-4073-bf32-4dd39997dd59",
          "length": 283,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "d3d80fb1-83eb-4e25-add8-0a2776ce2a90"
        },
        "item": {
          "id": "9b1bf5bf-daa9-4fcb-a0e0-c35b5ef01583",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "00d36f1c-9dd7-4a73-9d2e-a9d605c66398",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5309612c-3f8a-49a8-a5d6-e8f89b3a4f72",
        "cursor": {
          "ref": "ee5f04e5-84ba-4c40-93bf-49a6495aaacc",
          "length": 283,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "38b6d4a6-f825-47f5-9c94-a02a3a91a469"
        },
        "item": {
          "id": "5309612c-3f8a-49a8-a5d6-e8f89b3a4f72",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "af9071ab-8e0d-4ebb-a9da-d00a7df0a3a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "369fb233-4c96-4d17-a00c-49261e61ecde",
        "cursor": {
          "ref": "bc0045c7-36ab-469d-8db4-2c5a0f7a6101",
          "length": 283,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "8c4910dd-5764-4fa5-8798-60541004b0f7"
        },
        "item": {
          "id": "369fb233-4c96-4d17-a00c-49261e61ecde",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "86995349-2aad-4b98-b516-2092b1c230e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "66502d32-46b6-440e-921e-609ebbdad875",
        "cursor": {
          "ref": "b1052bf9-03f1-4687-9966-bbeb36252512",
          "length": 283,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "e4b2ca04-8003-43e4-a216-0fc902b93dcc"
        },
        "item": {
          "id": "66502d32-46b6-440e-921e-609ebbdad875",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "fc734ac2-af0f-43ca-a917-dcabfb228963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 147
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f50cbc6-9dc5-482d-9270-de037674386d",
        "cursor": {
          "ref": "d8dd7c41-dc44-48c6-b012-286f96410829",
          "length": 283,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "8b9ebd59-11f6-426b-b576-7eefb433bb5b"
        },
        "item": {
          "id": "0f50cbc6-9dc5-482d-9270-de037674386d",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1807f1d8-45c1-4970-a619-6ee27b089649",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f2f9410-6117-42d1-8c80-d847f3e24727",
        "cursor": {
          "ref": "315380b2-defc-41ed-a184-728910e22dc3",
          "length": 283,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "5cbf717f-78a1-44ce-a17a-5f91940b8a9c"
        },
        "item": {
          "id": "2f2f9410-6117-42d1-8c80-d847f3e24727",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "0ea7f1ce-84df-4463-a369-e2b0f5abaa3d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9952f1d2-a207-422f-8765-34af2aa2163e",
        "cursor": {
          "ref": "561d69a9-13b3-45d5-b6de-9f8c864cc454",
          "length": 283,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "8a7fa574-f534-4e4f-88fe-2d4bcdb36c84"
        },
        "item": {
          "id": "9952f1d2-a207-422f-8765-34af2aa2163e",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "aaabb9c5-56b7-4e12-b6c9-e18a9a1930cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "abc7d5a6-cd9b-4592-ae70-e812261cec00",
        "cursor": {
          "ref": "7d89e727-bc4c-49dd-80d4-c79ccc65d306",
          "length": 283,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "9bab968a-920f-4a60-a083-b9863c05fd6c"
        },
        "item": {
          "id": "abc7d5a6-cd9b-4592-ae70-e812261cec00",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "2f00c901-20b1-4fc8-b614-b3187cf11a08",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 79,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1a3af0cc-8544-40b8-bdc7-e04767c19dd6",
        "cursor": {
          "ref": "28a8453c-ae74-428c-83f9-9f3a86c0f69c",
          "length": 283,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "08244b39-650a-45ad-b7c3-c363b85035f2"
        },
        "item": {
          "id": "1a3af0cc-8544-40b8-bdc7-e04767c19dd6",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "f330bf18-33b4-4b34-a906-ad2c5c9f2768",
          "status": "OK",
          "code": 200,
          "responseTime": 147,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 200",
              "stack": "AssertionError: expected response to have status code 400 but got 200\n   at Object.eval sandbox-script.js:1:196)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'message'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'message'\n   at Object.eval sandbox-script.js:2:196)"
            }
          }
        ]
      },
      {
        "id": "6e4f2ac4-f893-4b26-914c-3d0f26528c19",
        "cursor": {
          "ref": "ff87e7f8-3a42-47da-858a-e206c839b2db",
          "length": 283,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "b851f132-c73c-406f-96c0-adf373e81ab8"
        },
        "item": {
          "id": "6e4f2ac4-f893-4b26-914c-3d0f26528c19",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "2563dc7f-1640-4114-baea-dfdc0ef7ec6c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2fc52c94-9cc6-4c6f-bfed-74c3de9d6d9e",
        "cursor": {
          "ref": "1427e32f-8d53-480e-b8b5-b68fa9e4918b",
          "length": 283,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "634d91f5-3850-412e-837b-40649a6605d3"
        },
        "item": {
          "id": "2fc52c94-9cc6-4c6f-bfed-74c3de9d6d9e",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "c8c9bd2c-7b1a-4590-95de-05c329fc5d46",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d0d0a875-60d4-4c3f-b98d-2083136e0759",
        "cursor": {
          "ref": "82aadc21-9466-4854-a65f-2101182aa958",
          "length": 283,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "d808a68a-1dd8-4f0a-817c-8fd6c0795617"
        },
        "item": {
          "id": "d0d0a875-60d4-4c3f-b98d-2083136e0759",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "56dc2903-1ce1-45cd-b2d3-b49e01a6daec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9db1c04a-75ed-4806-8bed-14cb93194031",
        "cursor": {
          "ref": "594001c1-8142-4a1b-a6c7-f67ec79addd8",
          "length": 283,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "3025a125-8259-4cc4-8de7-8dc7a932ec08"
        },
        "item": {
          "id": "9db1c04a-75ed-4806-8bed-14cb93194031",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "352fa31f-5f1a-404a-8b13-bfec71d095ec",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0aade20-2c43-4c7d-8e26-9f17fe049914",
        "cursor": {
          "ref": "77b8b51a-761b-4d01-b363-2035de01ff59",
          "length": 283,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "63da012e-2520-4ff1-b6c4-8002bed36348"
        },
        "item": {
          "id": "e0aade20-2c43-4c7d-8e26-9f17fe049914",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "5b966d2f-7578-4680-9c3e-5b7aa64287ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 112,
          "responseSize": 141
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e356740e-c795-4854-b606-3a486553e3c6",
        "cursor": {
          "ref": "02b4a428-d0c3-4af2-bbbe-78f7b335fdaa",
          "length": 283,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "5ddc36c8-482a-4c8c-80b6-a40a1136090a"
        },
        "item": {
          "id": "e356740e-c795-4854-b606-3a486553e3c6",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "96e75e19-84f2-4231-8433-e84020efe7f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53fe3cf2-2150-4fa5-9c94-ee47d853ee7f",
        "cursor": {
          "ref": "a569bb58-d1f5-46fa-b858-008d0b3a6493",
          "length": 283,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "ec8f6816-978c-427d-96d0-b5f55a5d14e7"
        },
        "item": {
          "id": "53fe3cf2-2150-4fa5-9c94-ee47d853ee7f",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "b3dc5f62-cdf7-47a3-a588-aae9ed63d7d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 114,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dbbecc60-cca6-4477-98db-2a5abaedc997",
        "cursor": {
          "ref": "4f000a38-d97d-4712-9043-fa9f4690deb5",
          "length": 283,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "26b15ead-6d43-42e2-a755-2a107df635fd"
        },
        "item": {
          "id": "dbbecc60-cca6-4477-98db-2a5abaedc997",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "092d3f4b-b3de-4896-ab0e-a43973c17272",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5d7208f5-1c83-409d-8c0e-c0af32d64985",
        "cursor": {
          "ref": "e5bd7ae3-9495-45cb-83a3-03cdc7dfc6ae",
          "length": 283,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "fb88f248-0258-48f9-9f08-c46f3880ea00"
        },
        "item": {
          "id": "5d7208f5-1c83-409d-8c0e-c0af32d64985",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "40177258-be58-4fb1-ad03-e60f55ecc886",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b23b3a09-37ce-4200-9baf-222cb7f979f2",
        "cursor": {
          "ref": "af824e04-b860-4975-99d1-0db6f1783b41",
          "length": 283,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fda227bb-3484-4468-b36c-7e864d7818c7"
        },
        "item": {
          "id": "b23b3a09-37ce-4200-9baf-222cb7f979f2",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "64e58fc0-cbee-44a2-996f-8a7ceae5f6d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a274176b-aefa-4bfb-bc1a-a04f3f311729",
        "cursor": {
          "ref": "64a11e2d-9048-4088-9f20-e86d0a4f716d",
          "length": 283,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "e7e4e8b2-0d19-4d72-a782-0fc12557c7b2"
        },
        "item": {
          "id": "a274176b-aefa-4bfb-bc1a-a04f3f311729",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "fcccad7e-8a21-4fe1-b0f3-5dc52921e90d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f123711-eb57-4ffd-86b9-99b37155130a",
        "cursor": {
          "ref": "6a41c922-8e16-45f4-a1d2-1be757a6b055",
          "length": 283,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "847564b7-bd3d-40cd-bf3e-4b66eaafda99"
        },
        "item": {
          "id": "5f123711-eb57-4ffd-86b9-99b37155130a",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "2b344d6e-4714-4c96-81dd-a521b5266d39",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 76,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b21c210-f8ef-4362-95fa-8b9581c1ff28",
        "cursor": {
          "ref": "0f2678d7-194e-40c8-b993-feff5f86c583",
          "length": 283,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "d7bfa0d9-5ff0-47e1-98a2-da12c4cbe97c"
        },
        "item": {
          "id": "4b21c210-f8ef-4362-95fa-8b9581c1ff28",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "514dd2c4-7691-4881-a329-3ddbd5554080",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11bfde93-cf33-4d49-bfa3-4c86e5cba4ea",
        "cursor": {
          "ref": "69da4be6-768d-478a-b945-b73d64a15c17",
          "length": 283,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "4bd5ba6d-6291-42ba-bbe0-018ceb02ca1c"
        },
        "item": {
          "id": "11bfde93-cf33-4d49-bfa3-4c86e5cba4ea",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "b5205b24-f139-456e-9c23-ed5295d37127",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "de7eaa43-9f22-4bf3-89e2-42319b7af667",
        "cursor": {
          "ref": "c2dc44e9-b4fd-4181-af5a-9849905d619b",
          "length": 283,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "042d2718-4af9-418a-867a-f25e651876e0"
        },
        "item": {
          "id": "de7eaa43-9f22-4bf3-89e2-42319b7af667",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "05dc0e44-64a3-47f4-acb7-0f7aef954331",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc1aca20-d115-4279-af08-f1b6a9db52b3",
        "cursor": {
          "ref": "7e2846fc-bd8f-4536-84a2-f0b2b16c0628",
          "length": 283,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "b4eadaf9-2624-4c3f-8480-1f59e8c53e1e"
        },
        "item": {
          "id": "cc1aca20-d115-4279-af08-f1b6a9db52b3",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "580574cf-1c48-455b-b598-c450cdae84b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e5398a05-a5fd-4252-9f4e-4927dcb9d03e",
        "cursor": {
          "ref": "6eaab82b-147b-4419-909d-a82d7d7b4c74",
          "length": 283,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "ec37cccc-c792-4fbe-a21d-25bcd5935b82"
        },
        "item": {
          "id": "e5398a05-a5fd-4252-9f4e-4927dcb9d03e",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "2ef88dde-1fce-4545-b510-f6aa2097c077",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 109,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3eec414-a5bc-4b7d-8927-f2789fc01e68",
        "cursor": {
          "ref": "3036879b-37a2-45ec-ad0d-e09406ae992b",
          "length": 283,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "fe571652-380b-44db-b7d0-4198b7a1ca5e"
        },
        "item": {
          "id": "f3eec414-a5bc-4b7d-8927-f2789fc01e68",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "d07a5565-23a8-4e96-958f-87d62054f8df",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fec1407-064b-4552-af1d-a0ea658e5311",
        "cursor": {
          "ref": "4b72d277-cff4-42b5-b678-d455f085f5be",
          "length": 283,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "cf37c3c4-30bd-4e3e-b950-c1450ea9a24f"
        },
        "item": {
          "id": "4fec1407-064b-4552-af1d-a0ea658e5311",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "5c7a04b0-b76a-45be-aaad-44138aa4e402",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf0b9c71-a68a-4795-85ae-e1050867ca5a",
        "cursor": {
          "ref": "90405a23-b1de-4281-92fd-36a7c5306884",
          "length": 283,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "4941727a-215b-44bf-ae1f-5752cd5dac14"
        },
        "item": {
          "id": "bf0b9c71-a68a-4795-85ae-e1050867ca5a",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "8ecbae2b-2209-4598-a9a0-696f1909b10f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697e7e0d-b903-4c62-ac01-929e8ddf761d",
        "cursor": {
          "ref": "17a38193-1b67-4b4b-b420-47217658743c",
          "length": 283,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "6c463264-72c1-4270-89b8-1c77a44d5ed5"
        },
        "item": {
          "id": "697e7e0d-b903-4c62-ac01-929e8ddf761d",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "d2d27c42-796b-4b93-94a9-ad52553008ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2db67139-16bc-4f08-8a80-c603a5c60f82",
        "cursor": {
          "ref": "1c40afdb-48e9-4031-8898-b50181456f9f",
          "length": 283,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "91695a59-d189-4cf0-9dfd-1fdd60d14cd5"
        },
        "item": {
          "id": "2db67139-16bc-4f08-8a80-c603a5c60f82",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "9c76d6fc-e7c5-439d-9773-fedcea721bae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "277c8817-45c3-49cf-96a5-e8509347cd34",
        "cursor": {
          "ref": "bb5b29c3-f07f-4d5d-93b8-84e2b7434b08",
          "length": 283,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "c5a35431-8d45-4421-8332-4b25c46ac92e"
        },
        "item": {
          "id": "277c8817-45c3-49cf-96a5-e8509347cd34",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "ab150426-cf0b-41ad-b25b-23f4e3db115c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0843c6-82c1-4d20-88b1-cb038163f226",
        "cursor": {
          "ref": "7718bb66-277a-4e9e-983d-7ded0f5af3f7",
          "length": 283,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "e2ddb0a2-049a-4053-a451-1a194e40addc"
        },
        "item": {
          "id": "4d0843c6-82c1-4d20-88b1-cb038163f226",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "e014db5d-48f6-4b4b-badc-10d9f15e7d49",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04fda819-1225-4d7c-a168-591fe00d3d50",
        "cursor": {
          "ref": "28e4a0d5-d7f0-405f-bc0d-578cc7b8bf32",
          "length": 283,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0a969d70-8dc0-476b-9bcc-df088586a1ed"
        },
        "item": {
          "id": "04fda819-1225-4d7c-a168-591fe00d3d50",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "d6176dda-b9f8-4fae-811a-cda945cddebe",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3ae09b8-3744-4b2d-a65a-067a65c03cf4",
        "cursor": {
          "ref": "814a4a68-9aca-4560-877d-b8ba7718bacf",
          "length": 283,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "856945cc-8f28-469c-be1c-f32c3a3406a1"
        },
        "item": {
          "id": "c3ae09b8-3744-4b2d-a65a-067a65c03cf4",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "fb28607d-5e5a-4c93-9fcf-fe35fb2be541",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0f9036ae-1999-4a53-9134-c471f319f284",
        "cursor": {
          "ref": "7b0457ea-b27f-4c65-ba4e-a15d7c2124f0",
          "length": 283,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "69cc0818-87a6-4bb2-9d49-e6c9a8fa3b33"
        },
        "item": {
          "id": "0f9036ae-1999-4a53-9134-c471f319f284",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "73c68567-f38a-4806-a08b-037c93d90da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "39bd3478-0988-4a24-81af-6cf8395b0a9a",
        "cursor": {
          "ref": "a732a040-f3be-452a-8088-a7d6763311ea",
          "length": 283,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "176d420a-e395-4643-b50f-5cd10c2d6f4b"
        },
        "item": {
          "id": "39bd3478-0988-4a24-81af-6cf8395b0a9a",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "9b9d330f-c965-4a83-b5c3-dddc80b89e09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 156
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d59c2b45-00f1-427b-b55f-5d479029997e",
        "cursor": {
          "ref": "55b54990-d03a-47bd-8aef-a25e988567cc",
          "length": 283,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "2cd71018-32d6-41cc-80eb-a436c9586acb"
        },
        "item": {
          "id": "d59c2b45-00f1-427b-b55f-5d479029997e",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "0bf2123b-208a-4a6d-80f8-7431b6571666",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bfb69915-9a09-4bf3-9edf-12393f736b64",
        "cursor": {
          "ref": "8d34eee5-3bde-481a-a35e-10c7ec9b964d",
          "length": 283,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "d397304f-c4b0-4d1e-9780-765087b13410"
        },
        "item": {
          "id": "bfb69915-9a09-4bf3-9edf-12393f736b64",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "50215d92-35c0-4752-b765-de3f4ee9773d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc4d8fcf-c4aa-400e-9517-af23b3d52611",
        "cursor": {
          "ref": "24a1840c-fa1e-481a-9468-4e440facfbda",
          "length": 283,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "518707d6-e12b-417d-8cc8-0cc2711d0e4c"
        },
        "item": {
          "id": "cc4d8fcf-c4aa-400e-9517-af23b3d52611",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "1ba4a982-c3f3-4188-9cd0-e17bb7483e26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4291dc32-e82a-428e-891d-4cc8d0f95599",
        "cursor": {
          "ref": "cf6f4623-4163-4ff5-9cfd-529f2ed5af4e",
          "length": 283,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "7f110e35-56a2-4e85-96ac-07bfd78fafdb"
        },
        "item": {
          "id": "4291dc32-e82a-428e-891d-4cc8d0f95599",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "0ba88aa5-1854-421c-99ae-aae256639653",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85f72b1c-aba9-44b7-ba3b-72cd84d7e231",
        "cursor": {
          "ref": "7904c871-b2aa-415c-84cd-8d7580d88a63",
          "length": 283,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "8d69f8dc-f1d9-4112-9cc5-34bebe6a2e42"
        },
        "item": {
          "id": "85f72b1c-aba9-44b7-ba3b-72cd84d7e231",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "f7aa92cf-a90c-4214-841f-1472fdf01f0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2311a4-6c02-4c82-89b4-ad466c236f17",
        "cursor": {
          "ref": "a10d2f1d-ef87-403e-a8a9-e789d1da0ce5",
          "length": 283,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "02cb310c-904c-4689-8d57-145b51921129"
        },
        "item": {
          "id": "5a2311a4-6c02-4c82-89b4-ad466c236f17",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "4d8b2676-7e4a-41eb-bc60-43675d7078c4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5f80fae2-2b2f-418e-8e3a-8ab722e404cd",
        "cursor": {
          "ref": "bf0a0082-667b-41ff-b3da-87cbd9f46404",
          "length": 283,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "17abfbc1-50ab-4fc0-9301-12ee8a09073e"
        },
        "item": {
          "id": "5f80fae2-2b2f-418e-8e3a-8ab722e404cd",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "c082711a-6d2e-4d33-9ac3-877a337ceed5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 150
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c097c5a-cfba-4fc2-8e13-6f2f665a8d42",
        "cursor": {
          "ref": "9de184db-b69f-4bcc-9ba0-522a89db6a81",
          "length": 283,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "0a97f592-1526-4533-9a9b-dde73e25b723"
        },
        "item": {
          "id": "5c097c5a-cfba-4fc2-8e13-6f2f665a8d42",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "9f1d9fd8-bc46-40da-ac5a-08194a8bcb06",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 81,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e413ce72-7796-4618-85ba-de0b1779b7b5",
        "cursor": {
          "ref": "65d2faac-ed08-4633-ba16-ed4615cab66b",
          "length": 283,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "3b55f128-732e-401e-a60f-1515f1c16e6e"
        },
        "item": {
          "id": "e413ce72-7796-4618-85ba-de0b1779b7b5",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "c31352f0-52e0-4f15-8dd1-175f0e6ade82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f7e81f32-bbac-4e65-a6e6-5b748e6765b4",
        "cursor": {
          "ref": "939c13a1-69d9-4a8b-9892-f36f16a1d617",
          "length": 283,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "ae31dc47-c4a3-4912-a4b4-70473e800706"
        },
        "item": {
          "id": "f7e81f32-bbac-4e65-a6e6-5b748e6765b4",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "196d36e4-ea0f-4f30-b0d8-1c9522b0bc80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b00f3281-9691-4f69-beb9-356d396b77fa",
        "cursor": {
          "ref": "1fc2b488-487b-4cc7-8c53-3c940618d9be",
          "length": 283,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "422d6e27-969b-4b40-a62c-90bdce17c6cf"
        },
        "item": {
          "id": "b00f3281-9691-4f69-beb9-356d396b77fa",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "030e17e2-4726-42f5-a53b-2fa95670e256",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db4f2691-972a-4b1b-b9f2-ad887f0177a9",
        "cursor": {
          "ref": "b46eff99-db83-4602-b734-a507a4e3b377",
          "length": 283,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "5cbfb908-d762-438c-bdc0-41828eab0743"
        },
        "item": {
          "id": "db4f2691-972a-4b1b-b9f2-ad887f0177a9",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "8c67d8f6-9743-4c2f-b2d2-2a874dc15fbf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e0b8d3f9-6029-4df6-a3c7-e0adf291c3ff",
        "cursor": {
          "ref": "a89debc7-d809-481b-955e-aab67981ca89",
          "length": 283,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "c35234d9-739a-45f4-98a0-9c72a2aca290"
        },
        "item": {
          "id": "e0b8d3f9-6029-4df6-a3c7-e0adf291c3ff",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "94be030a-d48d-4129-abc4-9f07ba542120",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "908ad303-9a23-459e-b5c8-34fe8d602892",
        "cursor": {
          "ref": "df4ad485-b275-49c6-b316-4c0dade6b0f5",
          "length": 283,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "e3fc3eb4-c2a1-40e3-bb0c-1a26e10445e3"
        },
        "item": {
          "id": "908ad303-9a23-459e-b5c8-34fe8d602892",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "627898df-7bae-47f1-af2c-9f0c0fb8bb3e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7bd2252-aa2c-4276-b853-47c6c8b390cd",
        "cursor": {
          "ref": "87d89ee4-40cc-4194-8426-6d0a1d1d7d04",
          "length": 283,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "a85705c9-029e-4cc5-8b89-b0133cb0e9fe"
        },
        "item": {
          "id": "a7bd2252-aa2c-4276-b853-47c6c8b390cd",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "579495a4-c6b2-4ba3-b564-f6bd1707b6a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7c151cc9-e714-49ed-aea4-05a90937eaf6",
        "cursor": {
          "ref": "ec5083ad-bec4-4977-8bec-076c12f71f69",
          "length": 283,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "67cdb53c-ed8b-42d2-a134-155e7ea12f4f"
        },
        "item": {
          "id": "7c151cc9-e714-49ed-aea4-05a90937eaf6",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "31ad85d9-81ee-4211-83fd-02264999849b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "091418eb-c3eb-44aa-a0c3-aebbc5d1a484",
        "cursor": {
          "ref": "045a57e6-e330-4c91-a9d2-9bbb6ec527cc",
          "length": 283,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "6ae91a44-8c52-4e49-ac34-78104c554522"
        },
        "item": {
          "id": "091418eb-c3eb-44aa-a0c3-aebbc5d1a484",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "1e09752e-d5d9-450e-8063-651d2a24aeca",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 134,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3178c74e-717c-4670-9559-5d8d67a1d4ff",
        "cursor": {
          "ref": "df3e9b92-d9cf-4222-a80f-a33f97f4b467",
          "length": 283,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "1041dd87-18e6-46b9-8085-d560a234d43d"
        },
        "item": {
          "id": "3178c74e-717c-4670-9559-5d8d67a1d4ff",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "588af74d-89f6-4adc-a5f7-3ef45b3026ac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 158
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f201e056-2fdd-4069-a87d-5d8a7c2b7583",
        "cursor": {
          "ref": "3c21a9d8-a3f5-4517-9bd7-6ddf5055dc2c",
          "length": 283,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "87b88806-2a52-4e5d-abcc-7fc74bb39256"
        },
        "item": {
          "id": "f201e056-2fdd-4069-a87d-5d8a7c2b7583",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "a7cc7750-ea7c-4151-9385-3082e454f07f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1e7f5fd6-4229-4757-9849-99569e02225b",
        "cursor": {
          "ref": "3000d0a8-ef50-47e3-bc3f-90ebd77d5982",
          "length": 283,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "44d56ee6-29c2-4944-b9bb-06a964c1ca77"
        },
        "item": {
          "id": "1e7f5fd6-4229-4757-9849-99569e02225b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "4f067244-d0f6-4a30-aa93-adffe9822628",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "192925c5-4a8e-485c-a9d5-116e1cfb8a2b",
        "cursor": {
          "ref": "7d3fc62d-db08-463c-9f9b-bf797484705c",
          "length": 283,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "1f2a0626-5d14-4ecc-944b-8e25611013cf"
        },
        "item": {
          "id": "192925c5-4a8e-485c-a9d5-116e1cfb8a2b",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "341cad99-c5d9-4969-ae36-b48d21e8a30e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c907941-0934-4b5c-84b2-f00b79208305",
        "cursor": {
          "ref": "baa5cea8-dca8-4331-a372-3c97efa86215",
          "length": 283,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "2446d7d9-07ce-4d41-a3b3-3216686be65b"
        },
        "item": {
          "id": "0c907941-0934-4b5c-84b2-f00b79208305",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "3a804ee3-49f9-4dd8-a004-45eba8fc35f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e2d933be-8d38-4478-acbe-6375c0b67a95",
        "cursor": {
          "ref": "01f0f5c3-07ed-4972-82e5-92a7a29d29a6",
          "length": 283,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "eff73cd1-185f-41c4-ab95-711dd81562c7"
        },
        "item": {
          "id": "e2d933be-8d38-4478-acbe-6375c0b67a95",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "4b2701fc-1447-4815-9f5a-e3402e63dc90",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa9f16f4-dc07-4034-a865-c7d0ac3f3c9a",
        "cursor": {
          "ref": "ac41d58d-ead9-45ad-b7b7-dcdabc2e97df",
          "length": 283,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "5cd521d3-93d7-40a2-a8a6-5f70fc497256"
        },
        "item": {
          "id": "fa9f16f4-dc07-4034-a865-c7d0ac3f3c9a",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "0be01b23-7107-4903-b905-747bf3ff369c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b44f687e-df3a-49c7-838e-adda04be4bf6",
        "cursor": {
          "ref": "7a1bb5cb-d9f1-4b86-b88d-529ce884fbef",
          "length": 283,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "dfd5dc97-02b6-4275-8d06-78465f44ccc1"
        },
        "item": {
          "id": "b44f687e-df3a-49c7-838e-adda04be4bf6",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "271725fc-def3-4cad-be7e-e15ed6b8bd33",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3bce167c-81b2-4049-8a6a-a893b1784a85",
        "cursor": {
          "ref": "b47535ed-8c07-4ca5-8254-1140ede31524",
          "length": 283,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "26733d5f-d9ee-4f3f-9358-281ba9fe6730"
        },
        "item": {
          "id": "3bce167c-81b2-4049-8a6a-a893b1784a85",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "e61da4b2-a86e-4c0e-880e-15c162cafb54",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "06e654f5-04fe-486e-927c-81242c9dfad8",
        "cursor": {
          "ref": "2594e024-b31e-4212-85ed-c7573a910662",
          "length": 283,
          "cycles": 1,
          "position": 250,
          "iteration": 0,
          "httpRequestId": "b489cf85-1226-4b13-b89b-dcd9a24274db"
        },
        "item": {
          "id": "06e654f5-04fe-486e-927c-81242c9dfad8",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "cdf4e5e5-d0df-42cc-88c0-7fe0e87a0245",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "682d4274-205e-4309-863a-1868a8e0fb50",
        "cursor": {
          "ref": "681efd0b-c9a8-40a9-84f4-fdc6363558be",
          "length": 283,
          "cycles": 1,
          "position": 251,
          "iteration": 0,
          "httpRequestId": "dac168bf-e071-468d-9998-e7197761d9ff"
        },
        "item": {
          "id": "682d4274-205e-4309-863a-1868a8e0fb50",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "efb745a3-b016-4096-8476-81bafda83417",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "080c9ce6-7465-40d6-a6fe-2103420bd347",
        "cursor": {
          "ref": "51380dfd-0514-4fa0-8d99-a94842dcc100",
          "length": 283,
          "cycles": 1,
          "position": 252,
          "iteration": 0,
          "httpRequestId": "b6ad3126-b400-4e73-a128-98d46c1d79ff"
        },
        "item": {
          "id": "080c9ce6-7465-40d6-a6fe-2103420bd347",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "cfd7d6a1-3748-4936-9c5f-9c329b7c69f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e56d25fe-ab41-4208-a2c7-ccd8c1053457",
        "cursor": {
          "ref": "1647591d-99c2-412e-a696-d1dfa4f2c186",
          "length": 283,
          "cycles": 1,
          "position": 253,
          "iteration": 0,
          "httpRequestId": "88eb2a17-cc88-45b2-b4b6-abdb55f076d0"
        },
        "item": {
          "id": "e56d25fe-ab41-4208-a2c7-ccd8c1053457",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "3431fe0f-e322-4f51-80a4-ace05cc8c786",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 80,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4aae6d8-3592-469b-8ab3-03c3f49cc5bd",
        "cursor": {
          "ref": "f1f4e81a-525a-4ab1-8478-feb7d2546831",
          "length": 283,
          "cycles": 1,
          "position": 254,
          "iteration": 0,
          "httpRequestId": "b9224e94-c3dc-4dc9-9696-b8d346139c92"
        },
        "item": {
          "id": "e4aae6d8-3592-469b-8ab3-03c3f49cc5bd",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "0d5c25a8-a0f5-4d09-80c6-1bc6b24978cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 90,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9fe40c57-e4fb-4a3c-80c2-cdec92ad061c",
        "cursor": {
          "ref": "7e7b2606-ea66-410b-9bac-42994032cb3a",
          "length": 283,
          "cycles": 1,
          "position": 255,
          "iteration": 0,
          "httpRequestId": "e7878442-afe0-4f1d-8cb2-c2ae53c84c3e"
        },
        "item": {
          "id": "9fe40c57-e4fb-4a3c-80c2-cdec92ad061c",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "46ec2fe7-41ac-48c2-8d78-2dcda9c1431c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b576dfc8-4d4d-4b5f-9f95-596da2297cde",
        "cursor": {
          "ref": "20604e2d-06f5-4f10-acd2-fad8cfa53ffe",
          "length": 283,
          "cycles": 1,
          "position": 256,
          "iteration": 0,
          "httpRequestId": "78aace07-ec07-4c38-8505-e6509572c8a9"
        },
        "item": {
          "id": "b576dfc8-4d4d-4b5f-9f95-596da2297cde",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "49c8706c-a3c4-4adb-a38c-c58eaefffc97",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "85031333-5181-4970-b555-85fe39331069",
        "cursor": {
          "ref": "022e893e-9f3e-43b9-b75f-c8ca946aa48f",
          "length": 283,
          "cycles": 1,
          "position": 257,
          "iteration": 0,
          "httpRequestId": "8fc6ba4b-8732-42d0-8e25-13725d6acab5"
        },
        "item": {
          "id": "85031333-5181-4970-b555-85fe39331069",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "50c15b37-cc12-46c1-9349-ee5fb4bc1e18",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3b67117-1fff-4324-8e06-8efa191046e3",
        "cursor": {
          "ref": "a9da1b7b-57f9-42ae-a0be-1e96dbb6644c",
          "length": 283,
          "cycles": 1,
          "position": 258,
          "iteration": 0,
          "httpRequestId": "3751a080-507b-4f55-a9b5-ee72b6278685"
        },
        "item": {
          "id": "e3b67117-1fff-4324-8e06-8efa191046e3",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "de4c48f4-b600-41ab-a29a-f51e1fe2e524",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "403fa0c3-7568-4341-b0bc-26712cfc8bd1",
        "cursor": {
          "ref": "cc96b112-49cc-4c02-afeb-c85ed8736848",
          "length": 283,
          "cycles": 1,
          "position": 259,
          "iteration": 0,
          "httpRequestId": "1bee96ea-bcbd-4512-a17e-c3d6c0276f0a"
        },
        "item": {
          "id": "403fa0c3-7568-4341-b0bc-26712cfc8bd1",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "037a0899-677c-46ea-b1a6-48b2aedbbbc0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1f82946b-6960-4a40-add6-a854b4abdbc6",
        "cursor": {
          "ref": "845233cd-09da-4a80-83e0-bedb5a6ff360",
          "length": 283,
          "cycles": 1,
          "position": 260,
          "iteration": 0,
          "httpRequestId": "ef24f329-850d-4ea1-8e22-27ac62df5988"
        },
        "item": {
          "id": "1f82946b-6960-4a40-add6-a854b4abdbc6",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "064c3cd4-d990-4f59-99b5-ce6457698661",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48e034b9-fbe6-47af-9188-42d3ef5d7a74",
        "cursor": {
          "ref": "faee2766-ff92-4bf5-83e5-977263aa19e9",
          "length": 283,
          "cycles": 1,
          "position": 261,
          "iteration": 0,
          "httpRequestId": "cbb3c8ff-77a9-4d71-9ce7-c7f71d11471a"
        },
        "item": {
          "id": "48e034b9-fbe6-47af-9188-42d3ef5d7a74",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "8e6fe838-6fbc-42c1-9dfc-d07f107d741f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43bd1f7e-23a1-46ad-9342-f08e2e45f921",
        "cursor": {
          "ref": "39a6ccf2-7734-4335-83c1-635b89896bf9",
          "length": 283,
          "cycles": 1,
          "position": 262,
          "iteration": 0,
          "httpRequestId": "b9d2685e-fac8-4ca2-a5ba-70abef7d88dd"
        },
        "item": {
          "id": "43bd1f7e-23a1-46ad-9342-f08e2e45f921",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "19694141-1d8b-4a81-b266-3fb1b947dbf4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e4ed2c89-4d6e-4329-b752-cd6955872e06",
        "cursor": {
          "ref": "013f6f75-6c48-47fe-9610-1ad3774eefcb",
          "length": 283,
          "cycles": 1,
          "position": 263,
          "iteration": 0,
          "httpRequestId": "f0394a72-ce8f-469f-a327-83d6771423a1"
        },
        "item": {
          "id": "e4ed2c89-4d6e-4329-b752-cd6955872e06",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "c2f7d9da-386c-4434-be19-38be2dbf6c09",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49ca83f1-0941-4a81-ac38-250518f6ca56",
        "cursor": {
          "ref": "bad5f276-582a-4610-81c9-7ed268aa84f9",
          "length": 283,
          "cycles": 1,
          "position": 264,
          "iteration": 0,
          "httpRequestId": "dd6dde5e-f4f3-451e-a6e6-276a5a6cb294"
        },
        "item": {
          "id": "49ca83f1-0941-4a81-ac38-250518f6ca56",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "33d71024-eb3a-4801-8c28-9e1a28cbba6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a7eaf7f9-d727-4a94-b0c9-72c2ab6099b1",
        "cursor": {
          "ref": "6471cc6b-01a8-47d6-ab7e-c7a4358bac00",
          "length": 283,
          "cycles": 1,
          "position": 265,
          "iteration": 0,
          "httpRequestId": "a3082c52-edc9-431a-9444-ac6381b39d5a"
        },
        "item": {
          "id": "a7eaf7f9-d727-4a94-b0c9-72c2ab6099b1",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "26eda122-7c7f-4597-babb-4bebfef667cb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a75a87e3-86c6-40d1-a4fe-0e29a255b49c",
        "cursor": {
          "ref": "947f4926-b5e7-4da9-a782-6a201f859b6b",
          "length": 283,
          "cycles": 1,
          "position": 266,
          "iteration": 0,
          "httpRequestId": "986633d3-b16c-4004-9ac2-2017e98a5126"
        },
        "item": {
          "id": "a75a87e3-86c6-40d1-a4fe-0e29a255b49c",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "14455d78-1bd3-4ba0-bd86-72df21cd2773",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d1607b4b-7589-4499-aa9e-79301a726e64",
        "cursor": {
          "ref": "25ae89ca-15a5-4a90-b3c0-829a403f3df8",
          "length": 283,
          "cycles": 1,
          "position": 267,
          "iteration": 0,
          "httpRequestId": "525793eb-a86b-4249-91e5-4e489c0ebc0b"
        },
        "item": {
          "id": "d1607b4b-7589-4499-aa9e-79301a726e64",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "7954d1f1-82b3-4095-80e0-d6c526572ccb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9935a908-9db7-494f-9ea9-801f7eacf296",
        "cursor": {
          "ref": "1a209475-9866-46fb-8587-6df72bef391f",
          "length": 283,
          "cycles": 1,
          "position": 268,
          "iteration": 0,
          "httpRequestId": "105eab68-0b56-4f3a-91ae-89c006a2c4e6"
        },
        "item": {
          "id": "9935a908-9db7-494f-9ea9-801f7eacf296",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "c4b24fa3-792a-4ead-98d2-8d7992b85a2f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fd62571d-04cb-4149-bd79-759c7ad41629",
        "cursor": {
          "ref": "38d72825-d463-4209-819e-925e2c3fe0d7",
          "length": 283,
          "cycles": 1,
          "position": 269,
          "iteration": 0,
          "httpRequestId": "c653af60-b141-4351-9845-1cfe34cc6a91"
        },
        "item": {
          "id": "fd62571d-04cb-4149-bd79-759c7ad41629",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "d05ed3ba-697f-4a58-b25d-e9c70493b06b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8e2b560-2f87-42f8-9421-803205e1147a",
        "cursor": {
          "ref": "dc271244-a2d0-44d9-b195-73279b2100a4",
          "length": 283,
          "cycles": 1,
          "position": 270,
          "iteration": 0,
          "httpRequestId": "8972b752-2a4d-426a-afed-c52b90d4142d"
        },
        "item": {
          "id": "e8e2b560-2f87-42f8-9421-803205e1147a",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "256beb47-cd22-46c8-a39f-d78deccf5b43",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "943e6421-7a74-4296-982f-e5d43d48cc94",
        "cursor": {
          "ref": "53d80625-ee6d-4ea5-8c24-f8de912f7541",
          "length": 283,
          "cycles": 1,
          "position": 271,
          "iteration": 0,
          "httpRequestId": "1d1d6e22-bf89-42e9-8b56-b3a8428c88a1"
        },
        "item": {
          "id": "943e6421-7a74-4296-982f-e5d43d48cc94",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "ebc71c42-1160-4f4e-bb5d-627349ea64c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cb445559-0914-470d-ad56-5ffdf352698f",
        "cursor": {
          "ref": "f3dcb32a-90cb-4144-bfc8-8a2215142b8a",
          "length": 283,
          "cycles": 1,
          "position": 272,
          "iteration": 0,
          "httpRequestId": "5c048ed6-3b3a-45e2-aa01-b7b4034adb24"
        },
        "item": {
          "id": "cb445559-0914-470d-ad56-5ffdf352698f",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "8b36f6cf-beb6-41d8-8133-71be4fa879e6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9461f3bf-8edc-45d6-be09-096e7a5c85a4",
        "cursor": {
          "ref": "205d643b-21d8-45d0-a771-3ecf5f340d94",
          "length": 283,
          "cycles": 1,
          "position": 273,
          "iteration": 0,
          "httpRequestId": "ccb8783d-d006-4937-9bb6-e72f1648f264"
        },
        "item": {
          "id": "9461f3bf-8edc-45d6-be09-096e7a5c85a4",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "b92d5e46-ec97-4f87-adfb-db3b86906736",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1b467565-f746-4b41-aa0f-764fabae213c",
        "cursor": {
          "ref": "443c5549-bc53-4365-8025-2c088121f123",
          "length": 283,
          "cycles": 1,
          "position": 274,
          "iteration": 0,
          "httpRequestId": "586eec70-5719-4c1a-a667-fc0587905e32"
        },
        "item": {
          "id": "1b467565-f746-4b41-aa0f-764fabae213c",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "dc4fcdf2-3ee7-49cb-b6aa-bd2f0a0c3937",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8bae2e14-4baf-4d77-822a-fa0d70c8fd13",
        "cursor": {
          "ref": "47d955b8-67a5-41bb-b42d-8857139498eb",
          "length": 283,
          "cycles": 1,
          "position": 275,
          "iteration": 0,
          "httpRequestId": "bca2b6e8-42cd-48b5-bc27-83d7b34caf57"
        },
        "item": {
          "id": "8bae2e14-4baf-4d77-822a-fa0d70c8fd13",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "1eb7abc4-1371-467c-b459-39efbbd2fed4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 97,
          "responseSize": 154
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac098bd0-d093-4c23-9528-970872289a20",
        "cursor": {
          "ref": "80f4f2c8-dda7-407d-9871-7cfd4ae7d6f1",
          "length": 283,
          "cycles": 1,
          "position": 276,
          "iteration": 0,
          "httpRequestId": "acf5f89c-fd00-497f-8864-b7cb22cc79fa"
        },
        "item": {
          "id": "ac098bd0-d093-4c23-9528-970872289a20",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "d878c16a-b805-4233-add4-8e53c5a1eabe",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 53,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "44faca2f-2104-4824-9efa-ab4ef994a12b",
        "cursor": {
          "ref": "8bf46b16-6dea-4e03-8160-a6b6857e72f5",
          "length": 283,
          "cycles": 1,
          "position": 277,
          "iteration": 0,
          "httpRequestId": "2571b781-9861-4fec-8cfb-9afd59b1a573"
        },
        "item": {
          "id": "44faca2f-2104-4824-9efa-ab4ef994a12b",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "172381fa-14c2-4d7a-a83d-32c59898a031",
          "status": "OK",
          "code": 200,
          "responseTime": 92,
          "responseSize": 172
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is false",
            "skipped": false
          }
        ]
      },
      {
        "id": "22df0c95-a8b4-4c84-90c9-b71fb5d0678e",
        "cursor": {
          "ref": "26db70c4-d79c-400e-b582-682ce001cd9d",
          "length": 283,
          "cycles": 1,
          "position": 278,
          "iteration": 0,
          "httpRequestId": "b659125a-452a-4dbd-87c2-93aeed9c0588"
        },
        "item": {
          "id": "22df0c95-a8b4-4c84-90c9-b71fb5d0678e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "d7927b7d-f26e-4816-be41-99a71676a5f0",
          "status": "OK",
          "code": 200,
          "responseTime": 3104,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "a32c646b-b418-4c2b-a57d-30ed6117d291",
        "cursor": {
          "ref": "799186c4-71d1-4fbd-8244-57833fe5bdc8",
          "length": 283,
          "cycles": 1,
          "position": 279,
          "iteration": 0,
          "httpRequestId": "a2611287-546c-4309-80bb-d1c666a866cf"
        },
        "item": {
          "id": "a32c646b-b418-4c2b-a57d-30ed6117d291",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "1d9a4a8e-4a7f-4873-a66f-2f1caa7b0230",
          "status": "OK",
          "code": 200,
          "responseTime": 2625,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          },
          {
            "assertion": "response verified is true",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0049ff-6d0f-46eb-9f0b-9abb1a1f0e20",
        "cursor": {
          "ref": "a4135489-f788-4a99-8b3c-070e688aec0c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "90789f9c-a472-46b4-907a-874005be1faf"
        },
        "item": {
          "id": "1d0049ff-6d0f-46eb-9f0b-9abb1a1f0e20",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7ea430e-ada4-42b6-901e-03d792772331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d0049ff-6d0f-46eb-9f0b-9abb1a1f0e20",
        "cursor": {
          "ref": "a4135489-f788-4a99-8b3c-070e688aec0c",
          "length": 283,
          "cycles": 1,
          "position": 280,
          "iteration": 0,
          "httpRequestId": "90789f9c-a472-46b4-907a-874005be1faf"
        },
        "item": {
          "id": "1d0049ff-6d0f-46eb-9f0b-9abb1a1f0e20",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "e7ea430e-ada4-42b6-901e-03d792772331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "502050dc-d170-449c-a9b6-18abe91aa03e",
        "cursor": {
          "ref": "4b829270-81b2-4039-a3a6-452ea8a12e88",
          "length": 283,
          "cycles": 1,
          "position": 281,
          "iteration": 0,
          "httpRequestId": "51ceb6df-2227-4225-a510-5c0bbd8df46e"
        },
        "item": {
          "id": "502050dc-d170-449c-a9b6-18abe91aa03e",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "8afe4eee-efb7-4ec2-80d3-c76e1b2cd488",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6456627c-f3f2-4156-831c-91cbc1ea1115",
        "cursor": {
          "ref": "faa8ca19-95f7-494a-8fe2-9aa4a4cf1f14",
          "length": 283,
          "cycles": 1,
          "position": 282,
          "iteration": 0,
          "httpRequestId": "e0162d8d-5bf1-41ff-a4f6-be344df99d7f"
        },
        "item": {
          "id": "6456627c-f3f2-4156-831c-91cbc1ea1115",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "0a59a46f-ed92-4949-8143-27e79d2e591c",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 54,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}