{
  "collection": {
    "info": {
      "_postman_id": "0b8a4a7f-f952-4403-a9a4-909b37b8fa24",
      "name": "Conformance Suite",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
    },
    "item": [
      {
        "id": "265eb796-baba-4d81-bdce-6c412a10df91",
        "name": "Clear Cache",
        "item": [
          {
            "id": "b798abf4-b990-4d63-9632-0e0c7eabd9d1",
            "name": "Clear Token Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "7938a9e4-c9ed-4d45-84fe-fba25177d667",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"tokenCache\");",
                    ""
                  ],
                  "_lastExecutionId": "283fa280-6d1e-438b-b7e0-2f3e664047e2"
                }
              }
            ]
          },
          {
            "id": "5020dd57-29d0-4e58-a068-b3770c524a29",
            "name": "Clear DID Web Cache",
            "request": {
              "url": {
                "host": [
                  "www",
                  "example",
                  "com"
                ],
                "query": [],
                "variable": []
              },
              "method": "HEAD"
            },
            "response": [],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "2e6f5581-44d7-453d-a7e9-10cc80f1e164",
                  "type": "text/javascript",
                  "exec": [
                    "pm.globals.unset(\"didWebCache\");",
                    ""
                  ],
                  "_lastExecutionId": "83796eec-7a93-4199-9806-4d26dee298b2"
                }
              }
            ]
          }
        ],
        "event": []
      },
      {
        "id": "a03594c9-642b-4ca4-815a-825fe67b7641",
        "name": "Discovery - API Configuration",
        "item": [
          {
            "id": "e047980b-83ef-4b8e-b2bd-968cc4fa19ca",
            "name": "Positive Testing",
            "item": [
              {
                "id": "a21cee73-e1d2-4f52-972c-9b33659906df",
                "name": "did_json",
                "request": {
                  "url": {
                    "host": [
                      "{{did_web_endpoint}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "99c09355-aaa7-4274-959f-970e40c8cac1",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200ApiConfiguration\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "e2689f87-9b8a-4fd5-8832-b18d8b7cd3ef"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "4ff2c92e-d259-4960-ac5d-16752eaac880",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "9a71b57a-c7c8-4614-9c5e-ac1f4f44ab55"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "5ad6b61a-fbab-48cb-b014-f6751ac80411",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "dfd57327-b259-4347-bcd2-f6e7952c2415"
                }
              }
            ]
          }
        ],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d1062fc5-235f-4582-aa55-05f6984d5168",
              "type": "text/javascript",
              "exec": [
                "// Discovery requires a multi-tenant aware did web endpoint",
                "const did_web = pm.environment.get(\"ORGANIZATION_DID_WEB\");",
                "const did_web_endpoint = utils(pm).convertDidWebToEndpoint(did_web);",
                "pm.variables.set('did_web_endpoint', did_web_endpoint);",
                ""
              ],
              "_lastExecutionId": "c8ced87c-8a0b-45b8-9809-de0f897b4776"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ece8c384-f81d-4dfc-b3ab-df424b62b629",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "654eed92-8e9a-4c8d-9f29-d76ea4db1b5a"
            }
          }
        ]
      },
      {
        "id": "b599c354-e7e2-477c-96b2-302fdead823f",
        "name": "Identifiers - Resolve",
        "item": [
          {
            "id": "c33b9d39-d959-40d3-85ad-70ee63bd204c",
            "name": "Negative Testing",
            "item": [
              {
                "id": "ff16b8ed-5cc0-4779-9373-e3de62dc4f9d",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "4b1aeba3-21f0-4ede-bd70-4f1cf6dfe8c5",
                    "name": "did:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "invalid_did"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5c01381-f177-4a78-af6a-a0b51c701025",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400Identifiers\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "6079ef0f-9a43-449d-9d8a-aa591d8a40b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4719fb62-6dc3-4113-bcbf-4a71d486b404",
                    "name": "did:not_found:did_web",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "did:web:example.com"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5dccef10-749f-4d50-a80a-bae705895566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "821b6f71-71b5-4ca6-a025-ae417092eee4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "553a7e1f-8d0d-4c28-8e08-2a97be41cb82",
                    "name": "did:not_found:urn",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "urn:uuid:{{$randomUUID}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "GET"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b077f5a-61fa-475d-9b94-f0c8b5a7ed10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 404\", function () {",
                            " pm.response.to.have.status(404);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema404\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "32866a9e-37d6-423c-b6a9-24d941ec20ad"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "23998c90-5b7d-4395-8f17-b9497090fd8f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "1d91e6a9-a7c6-4479-853f-319f892d0577",
                    "name": "identifiers:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "identifiers",
                          "{{ORGANIZATION_DID_WEB}}"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "GET",
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "62b0096a-e887-4e8f-82ac-28a98f04ec53",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "f7b620d0-81e2-4ecf-a633-a48bc4f28a0a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6f0aaf3d-9fe3-4819-9007-d933b0049fc0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1ce81cea-e752-4d5c-b0c7-97da8f934cec"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "e7cac093-2c62-4d4b-ac39-5153d64be54c",
            "name": "Positive Testing",
            "item": [
              {
                "id": "6a14f782-905f-42f9-98fe-2bb6a5985437",
                "name": "identifiers",
                "request": {
                  "url": {
                    "path": [
                      "identifiers",
                      "{{ORGANIZATION_DID_WEB}}"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "method": "GET"
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "e9261438-b292-4066-a04a-191e3a2ad9bd",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200Identifiers\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString), {",
                        "     strict: true,",
                        "     strictSchema: true,",
                        " });",
                        "});"
                      ],
                      "_lastExecutionId": "1b6d5529-3d1f-4c68-b42f-072b08c69518"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "54fcd64a-509e-4a9c-904b-4480b0f635cd",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                ""
              ],
              "_lastExecutionId": "f8de8eca-a901-4e47-a948-2ff57ec502cc"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "30d7d4e2-9918-48f2-99f2-43f85ec930b9",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "3f16ace2-06ae-4989-a88f-829d409f760a"
            }
          }
        ]
      },
      {
        "id": "e2482cac-b4e7-4e7b-8bee-7142dbdc029b",
        "name": "Credentials - Create",
        "item": [
          {
            "id": "f1709a0c-a6a6-4f62-bb49-2271c768cc88",
            "name": "Negative Testing",
            "item": [
              {
                "id": "011b4f29-97c6-4516-96a7-9c6180cf7ee9",
                "name": "Bad Request",
                "description": {
                  "content": "This folder contains requests which mutate a valid request body in a way that should provoke a \"400 Bad Request\" response from the server.",
                  "type": "text/plain"
                },
                "item": [
                  {
                    "id": "9795e4ae-4fa5-4653-b707-64da020d6d66",
                    "name": "credentials_issue:credential:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7cba96a-c3bf-4fef-8b41-cf833feabc0e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e355ef7c-6be8-4db3-a8bd-722eefebe136"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8e9c2c6-3286-421f-877d-a6c13577d83d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential\" is a required field",
                            "    delete req.credential;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "91da817a-ba78-4e0d-8cea-f246f5d6360a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "63d355af-2352-40c9-baef-d3893fd0e22d",
                    "name": "credentials_issue:credential.@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6478c9a8-575c-4d01-99dc-111159fac708",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b69e08e2-0ea3-4c50-b0a3-c2137bc60ea5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e97efb81-e4a4-4fee-b9c8-c25cc14d63f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" is a required field",
                            "    delete req.credential[\"@context\"];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3dd2bb4f-6930-454b-9691-c7d207ab6084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "205d7af7-72c6-4157-91d7-2d14109211ba",
                    "name": "credentials_issue:credential.@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5961467f-8da3-481d-ae68-cf26932161ea",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "68bcc741-ce2d-43f9-981d-803e307f8a21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2c330720-54ed-4fa5-a1be-7acbfddd0561",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a boolean",
                            "    req.credential[\"@context\"] = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "e3999ac8-5dfa-4385-b7ad-913f112d928f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52ed7efc-529c-4702-acec-0dd51706a011",
                    "name": "credentials_issue:credential.@context:integer Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1afcad3-d837-44a0-86e3-3a2d5cb2e7aa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "993b9d12-06ef-4ac8-b6b4-3da8d2b56283"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fd7e85a2-dff7-499b-8045-9c1e2b439e5e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an integer",
                            "    req.credential[\"@context\"] = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "0244b01a-cb50-40b8-be09-62e09553bf38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "498528d4-7d05-48b2-82f9-23434d95d050",
                    "name": "credentials_issue:credential.@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3f2a541f-cedd-4f0f-9504-a8dfd058ab8a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ec3edc69-cd3e-4bd8-bc29-fa2882829f38"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c973c133-b9ac-45d2-8967-635f3f37db7b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not null",
                            "    req.credential[\"@context\"] = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3fd1aedf-45b8-4a19-b175-20ed89756d69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "191cd3d7-2cce-431a-9a84-ab368071e393",
                    "name": "credentials_issue:credential.@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2bb75ab1-2bb6-4758-ab39-fd51270c1bb3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1c1e24df-ed6b-430e-bd87-b456c57d7490"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "02d98d38-2696-4c53-b32f-6963099f1ad1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not an object",
                            "    req.credential[\"@context\"] = {\"@vocab\": \"https://www.w3.org/2018/credentials/v1\"};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "2b30f281-f7fc-4a95-9991-04ab65f2f3b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412c3dd3-56bd-4dd4-9b4c-fb53d7c3aeab",
                    "name": "credentials_issue:credential.@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dca29c49-0e98-4cfd-a82c-aa2ad14aba83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "63641752-9214-4297-8d52-39c6c0d4470c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c24fbe1d-d12e-4089-b2d6-74e4fb08325a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // \"credential.@context\" must be an array, not a string",
                            "    req.credential[\"@context\"] = \"https://www.w3.org/2018/credentials/v1\";",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "05faad41-d4cf-416b-ac41-b29b54771472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6ab0d2b-a557-42ed-9fdf-129004377044",
                    "name": "credentials_issue:credential.@context.item.array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "81d7dec7-7b42-449d-93a6-b83216f26757",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0cf8dca3-33ff-4237-bd01-3addabdf28fe"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8d31834-d5fc-4b68-a8f2-3ba71dedee26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not array",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        [\"https://w3id.org/traceability/v1\"],",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5e4c4229-7e6c-4f3b-956e-4eeb1c209e69"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef8ec89a-57cc-4cca-88fc-f13cde46d8bd",
                    "name": "credentials_issue:credential.@context.item.boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d80732c2-39d3-434c-b762-b5ed5de8579e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "42972c0a-e552-4c8c-a9c1-dcc0d5181fcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cbd04c42-27c3-405e-9d0e-a27e9cad18ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not boolean",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        false,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7781fd81-1d43-4edf-955a-9fa6cb11ba38"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5140acfe-ae44-4e4d-a1d7-639881fe4060",
                    "name": "credentials_issue:credential.@context.item.integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4d8a79d2-2a16-4913-988c-c9240b4d6e0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1436cf6d-2436-42f6-93a7-0d1a114ccb1a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cd455e2-3c9d-4380-be26-e24e2cd81cb9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        42,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "10641ea8-df3f-48e1-9057-ce2d2d12adfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2bbbd1d9-60f5-4aae-ae9a-0bc199137040",
                    "name": "credentials_issue:credential.@context.item.null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "777a4b69-56a5-4bc7-85a9-ba2ed9ec0973",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5c402cfc-afa3-4ff2-8070-4cc7e2d58797"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e151bfb1-b243-4c09-a313-77e7780d57b2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not integer",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        null,",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "1916e758-a2dd-4281-921c-7537e1756dfe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f6ce9fb4-aac8-472c-8a55-7f2e596048ee",
                    "name": "credentials_issue:credential.@context.item.object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "37fcdc43-3b43-4886-90ec-4552081a8bb2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "36198463-1592-45ff-9d82-d7e0e00add93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7d944c78-6d74-44e1-967d-a172b296d82d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Elements of credential.@context array must be string, not object",
                            "    req.credential[\"@context\"] = [",
                            "        \"https://www.w3.org/2018/credentials/v1\",",
                            "        {\"@vocab\": \"https://w3id.org/traceability/v1\"},",
                            "    ];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "4765bdee-fe5b-4f29-a0bc-524abd105217"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cc25aae5-4b5f-4c63-9918-b0ecc0cc769e",
                    "name": "credentials_issue:credential.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1598ad5-3092-4360-ad99-8348db452d26",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e000bc50-790e-4caf-b538-41525a998f41"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "efb95c92-21eb-4586-9a48-0064e1cf6eda",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not array",
                            "    req.credential.id = [pm.variables.get(\"credentialId\")];",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "9dc4d272-e0ef-40f9-b30f-12fd2aad0062"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9c1cb4b-83c4-4b98-a293-08b33c6bd1b6",
                    "name": "credentials_issue:credential.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a73682c6-5483-480a-8099-a8ce9c824853",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a955822-916e-45b1-bd4e-3015ba0a998a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1169ef97-d62f-48f7-a7af-47a02c0da975",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not boolean",
                            "    req.credential.id = false;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3d41ec05-3015-441d-bb5c-049e51bc052f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41af94fb-e4ab-40a9-9360-ecaf567c59c5",
                    "name": "credentials_issue:credential.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c2001309-8cdd-4743-9d6b-f7520683b2ee",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2126a1d7-2426-435f-8a36-c3ddafa2a23c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f6e430-281b-4a0f-9ac8-fa0296484651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not integer",
                            "    req.credential.id = 42;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "3721ec4e-4223-4c0b-9bd5-4e54ce4cdef3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9aa6c4e3-6f01-4d29-9caa-0494a7e508c5",
                    "name": "credentials_issue:credential.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e12f1210-ca4a-4601-bd25-755bb1291f40",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7a855a2d-8fa1-487e-b9de-6563e286f3c9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d5af9cde-9281-4c29-999a-ad6ce6c67b4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not null",
                            "    req.credential.id = null;",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "7db8579d-2862-4cf9-bad4-99eb6562c54a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78031f1a-190c-48ee-865e-52e0c6e996fc",
                    "name": "credentials_issue:credential.id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "eab6ec5b-7f5c-4373-8cad-0541789fbce2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "99641eea-e8e3-4803-aa96-f5d90ee7e14b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2376ba4d-62a5-49e4-b8e8-e61cadb24782",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // Optional credential.id must be string, not object",
                            "    req.credential.id = {\"id\": pm.variables.get(\"credentialId\")};",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "b0cd8e36-d3e7-4c68-828e-2e7ebf5846fd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8f213395-828a-4037-b0f7-ffecf7066811",
                    "name": "credentials_issue:credential.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6e3c96b9-51b9-462d-a9b9-28e3424fba12",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b7b76c77-a5f3-4f74-ada4-b23282647ce4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "152da230-db3d-4a26-a1e1-17a2ba288679",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type is a required property",
                            "    delete req.credential.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "b35732b7-d52c-4ad6-8bf9-1cd9a4b26d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "361a7618-59ba-47e6-8aeb-8517a64ac764",
                    "name": "credentials_issue:credential.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ce602b7b-e513-4190-b6aa-6dcd95869a6f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ede0b224-b093-482e-a76e-789816a2b70d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9935c326-9da7-4812-938a-8f42e9b4611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not boolean",
                            "    req.credential.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "0afca0a3-9772-4484-992a-a9c3908980b9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4189973f-7d1e-47fe-a991-ad644e29d986",
                    "name": "credentials_issue:credential.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "aaf36f48-1b7b-4dec-93d3-4450dc6505d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d1b6e32b-6d24-4b11-a765-698225eb318d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4fa10591-eec8-495e-9566-ca4e0a483958",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not integer",
                            "    req.credential.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "bb65322d-a16b-450b-ac8c-911e25c4d9b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f949041f-4b8c-4db6-9bb3-3b2a8429f4a5",
                    "name": "credentials_issue:credential.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b921325e-f241-4b6a-b4cf-ba9ff49402f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "766c2b89-074d-4953-9dfc-87b3be880d0d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "717980fb-d182-4e6d-bf3b-b6fc790be1c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not null",
                            "    req.credential.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "f5c6ae51-0551-4ee8-9b76-f5907edd298e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d0fb158-29e0-4805-b474-3a68c3f1e595",
                    "name": "credentials_issue:credential.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1c1a49e-84c9-48d5-90f7-fed8c6a9e9d5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae4bde62-cc6e-4ff5-9d74-d83249dae32f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f2693756-49d7-4d8d-b84e-83f07cacea52",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not object",
                            "    req.credential.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "279b1d8a-15dc-490f-9124-0ca8fd082d34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e9009b72-69b5-40a9-a467-782ba815a5d9",
                    "name": "credentials_issue:credential.type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d17469b-c3b0-491f-82fd-dc9510082bdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "401e4ce3-f4e7-4dde-97a0-06038e988690"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8b28c2c3-173e-4b9d-954f-e75b11984fbc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must be array, not string",
                            "    req.credential.type = \"VerifiableCredential\";",
                            "}));"
                          ],
                          "_lastExecutionId": "ca5cc355-0b36-4645-82c0-f9959ee431c2"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1cef4517-2c6f-49aa-beb8-fcb3c2716a7f",
                    "name": "credentials_issue:credential.type.item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "df15f56f-31ae-47a9-8c3b-0591802645c2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2b9cb7ff-7869-4e3c-9815-8cf6d43d6418"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f22f5f-3bf5-46df-93bc-7297b6f1daba",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type must have at least one element",
                            "    req.credential.type = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "6bd35cc7-5b90-48c8-9fc0-a91eac13aa3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3ab1558-532a-411d-83f3-4ef71dd8beb5",
                    "name": "credentials_issue:credential.type.item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "87959607-72ef-424c-b655-28928c005d90",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a14b42ec-86a9-45dd-8423-2b7b95576065"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d44b9513-3b96-438b-9f7d-0cef38a6ee71",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not array",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        [\"AnotherType\"],",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "8945300a-653c-4f2e-aa78-b263d59a54ec"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ca89693a-a68b-4c7d-854d-327d75358dae",
                    "name": "credentials_issue:credential.type.item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb60581e-ec7a-46a4-a1f4-06aa58fec9c3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af0b4f14-e77c-40d6-97de-3cfdb6ae8cb7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7fe7bace-2682-4dc4-9c21-a9e0d19fa2ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not boolean",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        false,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "24c0759b-0963-46a1-8d34-d9b29aeea2d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "34eb4be2-67ca-45d8-944e-e17967a88b34",
                    "name": "credentials_issue:credential.type.item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66c04da9-784d-4d3c-b666-30f01b2edd2f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "37553968-0374-4a80-9437-e98e89568fd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312ca1ac-88f0-4aac-bf55-dc9000f8ed07",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not integer",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        42,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "9e35b021-e2b2-41ec-bb22-9a4bf27b01be"
                        }
                      }
                    ]
                  },
                  {
                    "id": "917fdb41-ec5d-40bf-a794-13d8e42e36e0",
                    "name": "credentials_issue:credential.type.item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c305aefc-a8c1-487d-b1a5-982056b4f5ce",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f233659-6fe3-4a0e-9f54-704936b17918"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "59c0f187-da83-4caa-af75-40604ee2f432",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not null",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        null,",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3677d6c0-3a46-4fbd-a43a-2a1d25032cc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a0de51b8-5b4e-4907-8e74-2d061b7b06a4",
                    "name": "credentials_issue:credential.type.item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8a13d57c-c3db-4c9d-914a-6510e0be0b65",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "58ed52a1-3e1e-483e-b473-9e457cd62957"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6defb879-9ec3-46d0-81d2-90ae181a49fa",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.type elements must be string, not object",
                            "    req.credential.type = [",
                            "        \"VerifiableCredential\",",
                            "        {},",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "135e359a-18af-4762-938f-e039778b9ca3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3e54ade0-b4bd-4c3e-b9b6-9e95213eaebf",
                    "name": "credentials_issue:credential.issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b145b4a9-e7d3-4e23-84e2-3330ca2c04d0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6a018498-7a0d-41dd-b7bc-c83b03161f04"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bf0e9da9-9f36-4f3a-9c76-9efb68fc1fdb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer is a required property",
                            "    delete req.credential.issuer;",
                            "}));"
                          ],
                          "_lastExecutionId": "f2c166f5-2c0b-4726-b388-affe60341d47"
                        }
                      }
                    ]
                  },
                  {
                    "id": "765a9a5b-cbb4-4640-8517-6a5cbf79a0d1",
                    "name": "credentials_issue:credential.issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fad40148-f1cd-4d3b-b49e-a100a7e76a62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ed6fb10a-4cce-4616-a454-cd89de29bd56"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "caef9dc5-df42-46b2-bfd1-756ad94f3380",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not array",
                            "    req.credential.issuer = [pm.variables.get(\"issuer\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "81b25207-9d65-484d-b592-fae5dc59adf9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4983a6f9-8e40-4872-89db-b596859a47e1",
                    "name": "credentials_issue:credential.issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "48ccf373-04d6-485b-872e-92cd0a00fa06",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "bbbeb04c-d05a-4da9-a104-f6577aef75b7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64899369-1a0f-4f67-af19-a95c61e4486d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not boolean",
                            "    req.credential.issuer = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "5e9b2f0e-c2ad-4630-bc25-24b66db45ea6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "04797a4b-6889-4f66-a7d5-48b03248a01b",
                    "name": "credentials_issue:credential.issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "16abc2cf-9c46-4bf9-8931-fed8a70e877f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5e7f57e2-9d95-45d4-bc0d-ec3bb1c85caf"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6c73c310-b95f-4f25-a9fe-372e9e39bad8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not integer",
                            "    req.credential.issuer = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "e64fc08c-cbed-450b-abac-3f81b1cd4179"
                        }
                      }
                    ]
                  },
                  {
                    "id": "162c4b0f-2f38-4039-8c02-7b38b6310b67",
                    "name": "credentials_issue:credential.issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "66a49590-9fd7-41aa-b3ed-dfaa1ac763f2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7ac3906f-2477-4cb8-8aeb-3e7366718f2e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f66dd4d-19bc-45ad-9ffe-6f952dfd62ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be string or object with id, not null",
                            "    req.credential.issuer = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "645c09c9-1d7a-4372-b52a-25a623b1c617"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2c80d64-7938-45b2-a489-9aa619336f85",
                    "name": "credentials_issue.credential.issuer:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b02fffdb-c18f-4794-887b-1aabd27b93cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55308d67-9122-444e-b96b-ef85819371b1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b3d5ca3d-5003-4f3e-ae5c-c19b6c562f1f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be a valid URI",
                            "    req.credential.issuer = \"not.a.uri\"",
                            "}));"
                          ],
                          "_lastExecutionId": "47c1ab83-2e77-497e-ad7e-4f953a76a1ff"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b977d3b-0116-420f-8c9a-ea1c0e7bb98a",
                    "name": "credentials_issue.credential.issuer:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d6b9fddf-0038-4455-ae99-659843893d0b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "2a9ca0e9-a948-4819-a223-e99a57332711"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e37a24fb-fe2b-44f1-93e1-2a3469f21a42",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer must be known to the endpoint.",
                            "    req.credential.issuer = \"urn:uuid:{{$randomUUID}}\";",
                            "}));"
                          ],
                          "_lastExecutionId": "7b895220-4178-4222-b8dd-1ca40a8b1084"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b92590a8-0343-4c84-a32c-3da66da12604",
                    "name": "credentials_issue:credential.issuer.id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0984bd69-2535-4abe-989e-d1c46c342d34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6cb6a7ec-4105-4208-a4f3-58bd99814130"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cc0038fd-51c9-4582-8a20-a78e93ef30f6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id is required when issuer is in object format",
                            "    req.credential.issuer = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "ec9eb6f9-936a-4cc8-8cb2-57bfb663ca28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2161cda0-1105-4dd8-aed2-a8edd04be447",
                    "name": "credentials_issue:credential.issuer.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "80ff3eb7-98c7-46d9-81af-eb457a96a872",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ca99a1ee-8dd4-4b1d-a02f-63fab2d7d9c7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ebe0a29-4cb4-4a93-af86-4d99e48db6dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not array",
                            "    req.credential.issuer = {\"id\": [pm.variables.get(\"issuer\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "e252f7a6-b975-406b-ab67-0306ae480ad8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14b97bc9-d66e-49b7-8780-86fe38471ea4",
                    "name": "credentials_issue:credential.issuer.id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "484f867e-991a-472c-b84f-f969a3a9f953",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "78a3712d-1e5c-4b76-a0ee-0c9a361f077d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8be30669-b021-46ce-81a2-5662707a2989",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not boolean",
                            "    req.credential.issuer = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "f29dcf49-0fff-44ef-a741-6f31453bd9d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "910e5a3a-c2ed-42fe-9788-ec45bf083266",
                    "name": "credentials_issue:credential.issuer.id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a1ae6dd3-1e30-47b0-a2d4-1e350ce73f9c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1e3cb829-75fa-42b1-ae30-382d813614fa"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5db3d3a1-90e0-4469-b686-ea39398bbfc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not integer",
                            "    req.credential.issuer = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a505c05e-c1ac-49a4-8a2c-171b3408e618"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5cd4b761-e08c-4296-a99d-6e31c629c386",
                    "name": "credentials_issue:credential.issuer.id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4177eda2-85a1-4107-b207-526aa8338cf9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac77c44a-b901-4f98-8ed8-9560df7f41b9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c87abe83-b2ee-4509-ba43-8e6e1ee6ec6e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be string, not null",
                            "    req.credential.issuer = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "7348d52f-9f77-4263-8f47-9307026723d1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1faf50c2-c4b6-4cfe-a327-f88542b14de5",
                    "name": "credentials_issue.credential.issuer.id:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a7ad078-fb09-40a0-b3e5-2859995f0096",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6e601bc3-e11f-4451-b883-495ecd8c1108"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "52d4472e-bf8a-45d0-a5a3-faee0b9d3e3e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be a valid URI",
                            "    req.credential.issuer = {\"id\": \"not.a.uri\"}",
                            "}));"
                          ],
                          "_lastExecutionId": "cc5cb3be-d9f3-4219-8a17-26cc5c3a0472"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2943c1b5-a587-4917-ac91-82ac26212983",
                    "name": "credentials_issue.credential.issuer.id:unknown",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc478d1d-ee8f-4801-8d43-2c638bfcb8fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 422\", function () {",
                            " pm.response.to.have.status(422);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema422CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "793c3a99-bea6-437d-9d87-2c69e59c7798"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cd3d0e67-2c45-4868-a2dd-c4b5a0c52d45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuer.id must be known to the endpoint.",
                            "    req.credential.issuer = {\"id\": \"urn:uuid:{{$randomUUID}}\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "86e6e833-908e-4c29-bb52-eb99ba507e12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "94ccb30b-fa8f-422c-8ce5-5e009b80bed5",
                    "name": "credentials_issue:credential.issuanceDate.missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b0e95bd-99bf-44bf-ac38-dcdba5138b22",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "770305b6-f349-44b5-b9e4-00558a4461ba"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "069a742e-9bf6-4d17-8db6-24cfa124151a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate is a required property",
                            "    delete req.credential.issuanceDate;",
                            "}));"
                          ],
                          "_lastExecutionId": "a7620ec6-adef-4b1e-8f1d-32181a37edb4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a424abbe-677c-42b2-b1a1-56eb7126cb21",
                    "name": "credentials_issue:credential.issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a4aadb8-f7a3-4bf6-ae9e-a6e5ee681c5a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f37aac05-d10c-4558-b788-12d7940f9dff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4f9d5546-2645-47e0-a98b-a816f9b6f684",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not array",
                            "    req.credential.issuanceDate = [pm.variables.get(\"issuanceDate\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "ab8d8a49-ffea-4ce5-b21a-16915ee71326"
                        }
                      }
                    ]
                  },
                  {
                    "id": "51da08e5-5525-44b7-a196-348acfaa9b56",
                    "name": "credentials_issue:credential.issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3a173cd7-bba0-4bda-a861-6296e050c5f8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "865901f1-2cff-4560-b7d0-f4aa03daaa3e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b5182591-585e-433d-858a-1fef47640738",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not boolean",
                            "    req.credential.issuanceDate = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "31730821-2cdc-4d46-af97-b5511cea0dd5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "55d440e0-8d78-413e-b399-daba6929fa9f",
                    "name": "credentials_issue:credential.issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4834e545-7b5f-446b-9df2-449eff2072e6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "887990f4-e249-463d-835e-b23ad530d7e3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "94dd3a4f-3344-475e-bdf0-afa0a208611a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not integer",
                            "    req.credential.issuanceDate = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "c08d9183-fc8f-4683-8a27-0d4902700f92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8fd7cc09-2618-4a92-86c7-008459b2db72",
                    "name": "credentials_issue:credential.issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "114a4e3b-7186-4dbc-b9c2-8d7c7798c0b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3d427125-0092-4f5e-95e1-a803b2d39bac"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b343569b-635a-4b4d-9e84-4fb3c3c72f39",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not null",
                            "    req.credential.issuanceDate = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "4f1a5cc6-83e3-43e7-b7b2-6c1d9a1fc000"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f17b417c-0c30-47e0-a6c0-9bef162a1f95",
                    "name": "credentials_issue:credential.issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0cf9c0d-6974-41e3-947c-3070e86bd64c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5362ec4d-4433-423e-83da-e10fc04fc4f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "521b5a22-646e-4f18-a456-75413a612768",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be string, not object",
                            "    req.credential.issuanceDate = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f8236baf-a8b9-4f99-a053-bdc5d094b86e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "90bc4295-9837-4025-ada8-19662cc0bb4e",
                    "name": "credentials_issue:credential.issuanceDate:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b30fa4c2-04c5-4b73-aaf5-d070c200575c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4396a73a-f99d-4328-8011-4658af26b980"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4da14aea-17a4-4d99-b2e1-ef1d96ba66a3",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.issuanceDate must be a valid XML date time string",
                            "    req.credential.issuanceDate = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "c9e9d8f1-fb09-4de8-b44a-cddd348faf6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db2b0638-7bac-4ea8-a1cb-4d5cc1f816fa",
                    "name": "credentials_issue:credential.credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7a600ed-b687-4bfd-97f1-12ef4a9bfd98",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d6810048-1b37-4eed-9ae3-d7aa0416c972"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fec1c22b-8e29-423b-be68-ccffc1f984d7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject is a required property",
                            "    delete req.credential.credentialSubject;",
                            "}));"
                          ],
                          "_lastExecutionId": "10cb9e40-8138-4f1a-8190-66771a76b2e1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af8e8197-bba7-491d-a5c5-1709e3b12f44",
                    "name": "credentials_issue:credential.credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84115784-bece-4f7c-9290-d4a257dee168",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6c368242-e88d-4fa0-86dd-86311d999b52"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5a5389ed-a9c0-4959-a442-3d7c8c81ec79",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not array",
                            "    req.credential.credentialSubject = [pm.variables.get(\"credentialSubject\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4dd62d46-8ec2-4c54-8fdc-2f9fe49e1c1c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "84459937-2ba2-467e-8de7-f472fc5d3dad",
                    "name": "credentials_issue:credential.credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ea89e39-c1a8-4d3b-abf0-46fa3ad223d8",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ab61d0c5-264b-485a-aa10-c4b6c0a09b93"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "312bab97-dc0e-44ae-8c7e-77d115462cdd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not boolean",
                            "    req.credential.credentialSubject = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "38b40f8d-17a6-4c8a-ba77-8c589bea17b7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "07e7a046-d62d-432e-9522-5a968aa41bda",
                    "name": "credentials_issue:credential.credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d0e1a400-bed2-44f5-8f3a-375f7cf35cd7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "e871986f-6e05-4cb7-baeb-8f3f8c4244af"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b181f8a1-133f-437f-b3ce-a36c5c430cc9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not integer",
                            "    req.credential.credentialSubject = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3fb82911-b380-469b-bc0a-b16dce4f29d0"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0510c7f1-0e68-4f30-b37a-5619a474f997",
                    "name": "credentials_issue:credential.credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "364a06d5-2deb-4170-85aa-e4967b5a5c62",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "70dc32cf-4138-4b37-8b88-cdb98a3726c4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "64b78fb5-a643-4d0a-9118-d64bf6e1f619",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not null",
                            "    req.credential.credentialSubject = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "1d0da66c-0522-4bd0-9868-7097ec71adbb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "64d63a6b-ad9a-4225-b8d1-97a811e3fce0",
                    "name": "credentials_issue:credential.credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "317a2954-d5a5-432a-9ec4-04d62002877c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3835e634-575f-4296-b2ea-2ec9e0af27f3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38305a64-d0ba-4a82-ae1c-92d8cb84bcbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject must be object, not string.",
                            "    req.credential.credentialSubject = pm.variables.get(\"credentialSubject\");",
                            "}));"
                          ],
                          "_lastExecutionId": "7e3e13df-ff25-4ebb-956f-63596c3a2633"
                        }
                      }
                    ]
                  },
                  {
                    "id": "868eefed-7078-4696-a781-3b47eaec3cc5",
                    "name": "credentials_issue:credential.credentialSubject.id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c598ad50-bc93-4bfc-993c-1e4929ba33a5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b806424a-95cf-4dea-b536-c59c8affaa5d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8bbd5339-944f-4247-bbd6-37390986e5fb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not array",
                            "    req.credential.credentialSubject = {\"id\": [pm.variables.get(\"credentialSubject\")]};",
                            "}));"
                          ],
                          "_lastExecutionId": "13959cbd-8fbc-4c8f-a293-4b1868173116"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c3260b3e-06fe-486f-b47a-c9c57ec5a6be",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "17b5aaed-a966-4aa5-9182-025158bac215",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4bef2320-6af9-480b-9fd0-7a3c64a1c0a4"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c0094fc8-8279-449e-9a28-41fd8899161e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not boolean",
                            "    req.credential.credentialSubject = {\"id\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "458fd970-80f4-430e-8349-d61ca2fc2a44"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1957b226-a17a-489c-ac20-c757febcda72",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 2",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bfe3ec7-22dd-45a9-bbe8-473cbc505aab",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8d808a99-0438-4ddb-9a78-00a9ea0a0015"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c712bb72-5e1c-4092-8efc-6dc22fc3caaf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not integer",
                            "    req.credential.credentialSubject = {\"id\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "a2b0bb5d-50b5-4416-99a6-863d65113dfc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e8caa406-01f9-434d-ae05-eae59072884d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 3",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "3427c70e-c94c-44e8-9885-a8466e8fe54d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "18737947-911e-472e-b5eb-7b3223095cc6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4e9d04d3-a0b8-48ca-8264-79990b2c3b28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not null",
                            "    req.credential.credentialSubject = {\"id\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e3780ff0-62d6-41d1-a725-bf35c483c4c6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "58f8af96-17bc-46db-b937-b8587d7ad03d",
                    "name": "credentials_issue:credential.credentialSubject.id:array Copy 4",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "84ecc210-98ff-4da8-b9f2-53844f25766e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a8bbc5c-d131-4d8a-8f10-886e94316f9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c38848e2-8909-48ff-a9ec-20e736c236ff",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credential.credentialSubject.id must be string, not object",
                            "    req.credential.credentialSubject = {\"id\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "d8cfd01a-545d-44aa-816f-59199bafdf7b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c661bafa-b67b-46f8-ac28-5b1dfd05c133",
                    "name": "credentials_issue:options:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c0eb54c5-355f-4ad1-88f6-ae8333671052",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a906de5-bbee-4639-91a0-f533d64a00f7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f163bae0-06f0-4341-a257-902faf4e1331",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options is a required property",
                            "    delete req.options;",
                            "}));"
                          ],
                          "_lastExecutionId": "b00f8a25-4ff1-4adb-baa1-142ab99d6329"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2d44c9b-1e11-47ee-9b1d-e80fcfe3d7bb",
                    "name": "credentials_issue:options:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5f23df69-3776-4e69-89b1-16998fc3c59a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "69384ba4-e7af-4d86-add7-33955e4efbe0"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9a0becd1-546f-40bb-9fad-250f37095bb1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not array",
                            "    req.options = [];",
                            "}));"
                          ],
                          "_lastExecutionId": "1a00f1b9-d08a-49a5-8d90-0c8db469bded"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e62449f6-b650-4838-8804-f61060298122",
                    "name": "credentials_issue:options:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a098ec7-4fe5-47d8-a287-a9c89da45c7c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cdc05a73-191c-48ac-904d-5a91f7386e84"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "76e08b12-715b-4565-a95b-33b34dcb67db",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not boolean",
                            "    req.options = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "1e69523a-5987-4f1c-84ac-93aafb1c8afc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75bd9452-9b15-4be9-aa6b-acbafd3de7d9",
                    "name": "credentials_issue:options:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "11288297-b230-4aee-96b1-1df8e7d48761",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "31134944-5503-4c5d-a393-9bf189107bda"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8fa9b2b0-f2a1-43e5-93e9-87c8f54d732a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not integer",
                            "    req.options = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "284a834d-4f0e-48b0-bb5d-ac48f8a7b82d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "49e27f47-4ea4-4189-b386-858cb117b2b4",
                    "name": "credentials_issue:options:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf163da4-b2e1-4276-831d-20464c78fe92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f7e1a4eb-7670-4f41-905d-c18d1819ec9c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e933b01f-abab-49da-ade6-85e4e7ca0064",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not null",
                            "    req.options = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43f79fd7-a278-4670-a0b2-47238d2832d9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d1e7f50-946c-49a1-b297-5de6c62b2c39",
                    "name": "credentials_issue:options:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c6a9697-0991-43a6-adf5-c03f0a795703",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8be6c55a-a768-4d94-8269-eb2b0aa48238"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0867c7f3-e73f-4e01-9d5a-6adcf9b3791d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options must be object, not string",
                            "    req.options = \"\";",
                            "}));"
                          ],
                          "_lastExecutionId": "2b9f743d-5e95-42cd-92f5-e28268f3cfda"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c4fc3fc8-921e-43c2-85cc-eb2e89c47e82",
                    "name": "credentials_issue:options.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "92e33bf9-ecc2-4bc4-90c9-be2572f1251c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "55ff802a-8259-4ecd-9114-413fb73e74ad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c3d9b90d-b6be-454b-9e08-f20853e41466",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type is a required property",
                            "    delete req.options.type;",
                            "}));"
                          ],
                          "_lastExecutionId": "46b8271b-ce1b-4d78-8e7e-0d265f55723f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "67e74c49-35af-49e5-b5f0-720a2fcf6799",
                    "name": "credentials_issue:options.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1bd00591-e9a7-409f-8f97-ea6447ab6dd4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "82a39cd8-aa07-4a0e-b290-fa8105e77428"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ca2d494b-eda6-4233-ac27-3614ec3c71f1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not array",
                            "    req.options.type = [\"Ed25519Signature2018\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "d3e0d138-a19c-47c9-bc14-866ee6442891"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7a8394d1-71fe-41d3-a11b-a23159e1501c",
                    "name": "credentials_issue:options.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ad9b8da3-a1d9-4fce-bf6d-b6440926600e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d656b6c5-d174-4f6c-9f01-f25934966ed9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3b946c4a-2869-4fb7-9e3d-0c53bd3874d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not boolean",
                            "    req.options.type = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "aadc5164-4c27-4936-9ecb-ee3b72cd9ebc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00c1bddd-c298-4c35-a776-77d4fe627991",
                    "name": "credentials_issue:options.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d9017629-2add-4c9b-82b5-a7ed52fe61fe",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "51d0720a-d59a-4d29-99bd-d2f4be74ba12"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0b2c152d-11a8-45fe-bc02-d2c7b4666742",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not integer",
                            "    req.options.type = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "22b6cdff-056f-414c-9014-82b8e9b83740"
                        }
                      }
                    ]
                  },
                  {
                    "id": "31f458d6-3bdb-4aa4-a99b-d077ec299301",
                    "name": "credentials_issue:options.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "85a24948-fd7e-4c8e-8fbd-73563427a571",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9f5b675a-2a3f-4ecc-b936-aa793caa16a7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b4e1a3f3-58d2-4283-a4c3-81f8f75857e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not null",
                            "    req.options.type = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "e9edda6b-a486-43f7-90b7-6d367a1ee3f6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "11907845-8d5b-4dbe-922a-42863d6979fd",
                    "name": "credentials_issue:options.type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c08c3576-1ebc-424d-9de9-65ab21efb8f0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "52a204b9-60a7-4eb6-acb6-bc8fbb50db9e"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "0f0dca06-4ae7-4068-9298-b64810047ecb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be string, not object",
                            "    req.options.type = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "cca2094b-06ed-4d7d-a5e4-91ce4883ae83"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6c159323-d31f-43ba-b1e9-7065504f38f9",
                    "name": "credentials_issue:options.type:invalid_value",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5d40dff-b09d-4947-9f56-8ec888d6d10c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a3b7e88-3f91-4eb7-9f71-55c2bf7f9fee"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2a4026d8-175c-46fc-8867-19548e63d804",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.type must be one of the valid values",
                            "    req.options.type = \"invalid value\";",
                            "}));"
                          ],
                          "_lastExecutionId": "241e2b3d-9653-4b70-9f8c-e152a25f8cd8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eea8ab43-89af-4c12-b730-4594e846b88f",
                    "name": "credentials_issue:options.created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ea3d2156-85da-4945-88e2-346a3c8fcc2a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1eaf5cda-a2a1-43b3-89e1-9cb7bd20a5a2"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1eb40289-c354-4a9d-9c45-5889d2c5b082",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not array",
                            "    req.options.created = [pm.variables.get(\"created\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "4a72453c-6e6a-4e9b-b55a-dee2b3f05c6a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c2431b88-c5ea-4a2c-8b92-34684a09efb0",
                    "name": "credentials_issue:options.created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "0ffb9a2b-87e0-4a03-ba17-cc542db57448",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "d7a231b3-345f-4998-a700-8973fc4d2f1c"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1b66406e-50a9-48e6-b703-6e5b778c65d2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not boolean",
                            "    req.options.created = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "3c2117e4-0ff3-4894-8951-44cb30eb7804"
                        }
                      }
                    ]
                  },
                  {
                    "id": "03e90ac8-3901-48d2-a63c-18d61541ea13",
                    "name": "credentials_issue:options.created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "01c3d77a-b887-43b3-8c7e-6d42820998b6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8702d556-d1cc-4199-9e43-8681efe97175"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66c14d9c-5e1f-40e3-b63d-9705119ba56a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not integer",
                            "    req.options.created = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "6b6424e3-f996-4af4-89e8-12689bc64ad6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bb3a9579-4cc3-4a77-b7ca-089ea242ea89",
                    "name": "credentials_issue:options.created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5b1641d-8ad6-44a3-acc8-5fac6474fdc4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "c3579e9c-fb87-479a-a883-c01a4886a968"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18e1e36b-91f4-4e2f-8516-efd7101aaacb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not null",
                            "    req.options.created = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "17a4c0a2-4160-46ba-a1eb-7d7c78b1a50f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "423ae1e2-43b5-4d34-9100-8f9b28da8814",
                    "name": "credentials_issue:options.created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b7227079-11c0-4e2a-9093-df885b9b6d9a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "963799a2-41a0-4120-a691-1b31016f3521"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "720289df-e0eb-4b9f-9c50-359bdb058444",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be string, not object",
                            "    req.options.created = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "70576cd2-88aa-4248-9f9d-9700007c009a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "77513176-5f4f-4c25-9420-cb1d743011a8",
                    "name": "credentials_issue:options.created:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1980e17c-5658-4943-8432-79cf967fd8e5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b49e2166-9ae4-4da4-986b-fc71ccd46c71"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "3cba1364-4131-4a12-b840-17e989453005",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.created must be a valid XML date time string",
                            "    req.options.created = \"not an xml date time string\";",
                            "}));"
                          ],
                          "_lastExecutionId": "df11e97c-caaa-4c56-a6ab-247e18d35450"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9a5efc2a-2b8c-43c0-bda4-e12336f3dc63",
                    "name": "credentials_issue:options.credentialStatus:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f3a527a-9f75-4469-ac0d-8f86b0a84455",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "022d1de5-2d8a-4993-a6e1-d9f09d31fb91"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "05a42f38-8798-4af3-986b-9d1b69dbaf4f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not array",
                            "    req.options.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "b179c856-d951-4031-a263-aa34723230b6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3b66f725-7cb7-4415-bca4-d7219f6e46a0",
                    "name": "credentials_issue:options.credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d2576aa2-0d1b-42d7-9d80-29420bace69c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "5feb7a58-f22d-48db-8039-da84fedb8ba1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5c9fa419-1a71-4d20-955a-1f6a11cc56cc",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not boolean",
                            "    req.options.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "a1f0c3fd-888c-4cc2-acef-825678f02502"
                        }
                      }
                    ]
                  },
                  {
                    "id": "118309b5-2d85-445f-9e23-e339ad5a139b",
                    "name": "credentials_issue:options.credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e67db0bf-4b82-4a7c-abb1-3c5496206191",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dbb42547-4bb7-4c00-a534-75b1466135ca"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7ea9b527-411d-4c57-8b36-cdfda6fa31e1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not integer",
                            "    req.options.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "a8a69ac4-da5e-4085-8f65-7006b2056751"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3577d5d5-3d05-4281-938d-73c6e57f2189",
                    "name": "credentials_issue:options.credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cea913a4-0c29-4a80-be37-59df5360870a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7cb91576-ea27-438c-b5c1-c1b29ae03334"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "754ed390-b008-434c-93ef-f01c5fac6d2d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not null",
                            "    req.options.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "43b0e8b2-1f4c-4434-9c5e-2e85edad4222"
                        }
                      }
                    ]
                  },
                  {
                    "id": "903814ab-6e6c-4d97-9633-96f2e172a6b6",
                    "name": "credentials_issue:options.credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a7eda8af-32b3-4c31-95c5-d78b5f508b0c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "48220d51-6c50-4ff9-8b1a-4d570c1c1bcc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f18d1527-c82f-4b31-9d5c-d69b4906a89d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must be object, not string",
                            "    req.options.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "20e18b80-2d6b-4b54-a802-f8551b6115c7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9ccccdd4-95b8-43cf-bcfb-38c191ca65c6",
                    "name": "credentials_issue:options.credentialStatus.type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "044cc5be-211d-43ab-9bdf-8a50d4b11c81",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8a422b4f-310d-43e5-ab66-6f68eb9880b5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d57ed2e6-f2e6-4fc6-8890-8ffb23710636",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus must contain \"type\" when present    ",
                            "    req.options.credentialStatus = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "40874f1c-0595-4943-a27a-19335c21036b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4d0ca047-8de3-4c00-8bf5-701ec39aa4f1",
                    "name": "credentials_issue:options.credentialStatus.type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7964156a-6369-45de-84db-4c12155db38a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8c701174-0cff-4392-afd5-90f849253ad9"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "412c3538-6bed-45de-a7b9-568d9890d1c9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not array",
                            "    req.options.credentialStatus = {\"type\": [\"StatusList2021Entry\"]};",
                            "}));"
                          ],
                          "_lastExecutionId": "c1ace51a-a684-46f9-b157-e2ba40ad2ad9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ff3cd4b8-6da8-47fe-9dc0-c149fa0c5965",
                    "name": "credentials_issue:options.credentialStatus.type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "88f54295-b524-4160-bcc4-0ae756e52d7d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "53d09542-1f68-44f4-9248-6baa596bca44"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ea15956-1ec6-4ebc-8139-aaaa8fc85c08",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not boolean",
                            "    req.options.credentialStatus = {\"type\": false};",
                            "}));"
                          ],
                          "_lastExecutionId": "866c1768-ed1e-425a-b20c-dc6943634a3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "73e886d9-93c7-4ac2-a950-0482f59b6d71",
                    "name": "credentials_issue:options.credentialStatus.type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b7e4ca4-e840-455b-9beb-c5cec546082f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8f40859c-c798-491e-b0c9-e1a6b769ea09"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e973eed3-1614-4e52-8552-67f5ea35028a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not integer",
                            "    req.options.credentialStatus = {\"type\": 42};",
                            "}));"
                          ],
                          "_lastExecutionId": "568be6d5-c4a9-4368-8cb3-067a10966e3f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2b8508-cf83-46cb-bf72-358ba1945724",
                    "name": "credentials_issue:options.credentialStatus.type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "69ecd7f5-40d3-432f-a825-2c26789a0e9e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "72c53ea2-a876-42b7-b302-e0d57384976a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9e7bd922-7921-4888-938b-3755b24d01b0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not null",
                            "    req.options.credentialStatus = {\"type\": null};",
                            "}));"
                          ],
                          "_lastExecutionId": "e0f2e5f2-c3d9-4149-a22a-dd86e2a07fde"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0cba19d2-dc10-4a7f-9a45-f71acd5b7ccf",
                    "name": "credentials_issue:options.credentialStatus.type:null Copy",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8fc371a9-eaca-45fc-927d-b76e80a5bfbd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cf24020-d9ff-48e7-b5b5-24692a11751d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "42ff5a11-d925-4370-a885-1cd0a863c6a7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be string, not object",
                            "    req.options.credentialStatus = {\"type\": {}};",
                            "}));"
                          ],
                          "_lastExecutionId": "ced7013b-b5e5-4838-a884-f5bf6c19441e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c06faca5-b8ea-4286-a5f9-2a7ba17e5001",
                    "name": "credentials_issue:options.credentialStatus.type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6cc6632a-2548-43bf-b48d-ff8a1cefd36c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "f891a8ee-8ae2-4751-966e-75ea66937dc5"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d79e0af0-f6d0-4c3c-b1e6-14df561d2c09",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // options.credentialStatus.type must be a valid value",
                            "    req.options.credentialStatus = {\"type\": \"invalid value\"};",
                            "}));"
                          ],
                          "_lastExecutionId": "1fd92e41-adf9-40fa-8f64-86a7daaa9d49"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "2a32d086-2a65-4b3b-a82a-14f328c4769f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8f00bab1-30cc-4fe6-a020-aa574dc769a9",
                    "name": "credentials_issue:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/vc+ld+json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      },
                      "auth": {
                        "type": "noauth",
                        "noauth": []
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fe605a6b-fafa-4871-8b12-cc2d260540a4",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "791409c3-fa50-4587-8a6f-95fedb62d26f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e4df660b-1548-48c8-86f8-caad7267ec89",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "22f42ec6-acb1-4596-9814-a918f51ea275"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ae265c09-4a33-4bc6-b461-dc60600936a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "5d888068-17f0-4e90-a7df-974db0adf61e"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "f42c75e3-e4ad-4673-9753-3f07287857c3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "63383f95-c1a4-40e2-b3ab-d69489278ed4"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "f6800968-dfc8-45cc-a44a-6cf3266f403e",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "843906d7-8ec6-4b58-98e1-a510ac7533bc"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "ccf17146-3f33-4239-9029-5fc5172624cb",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "4210794f-0ebf-44a9-abb8-03c9ed76be66"
                }
              }
            ]
          },
          {
            "id": "bcef6007-e1e2-4c32-b717-456449ddae3a",
            "name": "Positive Testing",
            "item": [
              {
                "id": "9186ff07-f9cc-4a26-817e-91a33c52fc6b",
                "name": "Duplicate Keys",
                "item": [
                  {
                    "id": "d60af255-afb3-4140-9626-00a2ed82cc6d",
                    "name": "credentials_issue.credential.issuer:dup",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "issue"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"credential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"issuer\": \"{{issuer}}-ignored\",\n        \"issuer\": \"{{issuer}}\",\n        \"issuanceDate\": \"{{issuanceDate}}\",\n        \"credentialSubject\": {\"foo\": \"bar\"}\n    },\n    \"options\": {\n        \"type\": \"Ed25519Signature2018\"\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "text"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "c318c230-fa53-4ab5-8a3f-800f7c251526",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 201\", function () {",
                            " pm.response.to.have.status(201);",
                            "});",
                            "",
                            "pm.test(\"response issuer matches request credential.issuer\", function() {",
                            " const { issuer } = pm.response.json().verifiableCredential;",
                            " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});"
                          ],
                          "_lastExecutionId": "12245ea0-4e66-45b5-b20a-3a3d555269f6"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "21c95606-7efe-414a-9cbf-f15fa7e1648e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a068207-3b73-415b-abdd-37ae05950a38"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "f816800b-0a9b-4deb-96b8-cb0ae0908ec9",
                "name": "credentials_issue",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "be6e8e1f-13d9-41c3-9ffc-f6949aac3921",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        "});",
                        "",
                        "pm.test(\"response issuanceDate matches request credential.issuanceDate\", function() {",
                        " const { issuanceDate } = pm.response.json().verifiableCredential;",
                        " pm.expect(issuanceDate).to.equal(pm.variables.get(\"issuanceDate\"))",
                        "});",
                        "",
                        "pm.test(\"response proof.created is close to 'now'\", function() {",
                        " const { proof } = pm.response.json().verifiableCredential;",
                        " const delta = Math.abs(Date.parse(proof.created) - Date.now());",
                        " const tenSecondsInMs = 10000;",
                        " pm.expect(delta).to.be.lessThan(tenSecondsInMs);",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6dcfed71-26bd-4f6c-9337-671808db7de6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecc1a01f-2b6a-4f4e-bf9c-841188e6d81b",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // noop",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a2b8ce96-4dd8-4982-98f1-8d32bd7eb0c6"
                    }
                  }
                ]
              },
              {
                "id": "05a9b3ae-a296-4386-b051-d5cfab692c71",
                "name": "credentials_issue:credential.opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "3f955d72-f550-4c4e-84b0-d2df9860f9b9",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verifiableCredential.id matches request credential.id\", function() {",
                        " const { id } = pm.response.json().verifiableCredential.id;",
                        " pm.expect(id).to.equal(pm.variables.get(\"id\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "82569f16-8191-4a89-8d37-b10f568129d2"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "b720f0d3-7ac7-4825-9e91-e2c2714c9043",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.credential.id = pm.variables.get(\"credentialId\");",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "f4182023-4d86-4024-b5fc-5b873923252b"
                    }
                  }
                ]
              },
              {
                "id": "8eb8de62-1801-4598-b2b0-2180eed18cca",
                "name": "credentials_issue:credential:alt.issuer.object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "2b79aa09-4bde-46b4-aa9b-f5c2761fa754",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response issuer matches request credential.issuer.id\", function() {",
                        " const { issuer } = pm.response.json().verifiableCredential;",
                        " // Implementations may reduce object with just \"id\" property to a bare string",
                        " if (typeof issuer === 'string') {",
                        "  pm.expect(issuer).to.equal(pm.variables.get(\"issuer\"))",
                        " } else {",
                        "  pm.expect(issuer.id).to.equal(pm.variables.get(\"issuer\"))",
                        " }",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "1694a878-f13e-41a4-a8e8-04a78ba3324b"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "ecc2975d-09c9-47ca-97dc-f69acd29a929",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.issuer can be an object with required 'id' element",
                        "    req.credential.issuer = {\"id\": pm.variables.get(\"issuer\") };",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "a369c3c1-15ef-45f8-82c8-1da883e372b6"
                    }
                  }
                ]
              },
              {
                "id": "3a434c8a-e16a-483f-83d6-aa3a79769650",
                "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "b33c2227-aa3c-4917-b959-5b285914a915",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response credentialSubject.id matches request credential.credentialSubject.id\", function() {",
                        " const { credentialSubject } = pm.response.json().verifiableCredential;",
                        " pm.expect(credentialSubject.id).to.equal(pm.variables.get(\"credentialSubject\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "872d8199-e002-489c-89d6-52c732f19d80"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "be77c951-412d-48d4-ae87-e1db07ea218a",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // credential.credentialSubject can be an object with optional 'id' element",
                        "    req.credential.credentialSubject = {\"id\": pm.variables.get(\"credentialSubject\") };",
                        "}));"
                      ],
                      "_lastExecutionId": "ce5c0941-7db7-4e39-92d9-fff1f0a6ce79"
                    }
                  }
                ]
              },
              {
                "id": "772daee2-ae9e-4162-b548-de43874fbd99",
                "name": "credentials_issue:options:opt.created",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "d40793b8-5b26-4d0e-ace9-87310cada08d",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response proof.created matches request options.created\", function() {",
                        " const { created } = pm.response.json().verifiableCredential.proof;",
                        " pm.expect(created).to.equal(pm.variables.get(\"created\"))",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "4a0e2b0d-277b-4cb9-a0ef-ddcbb4daff4d"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d1079098-62bb-44ef-bb9f-f8c2044e4c31",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    req.options.created = pm.variables.get(\"created\");",
                        "}));"
                      ],
                      "_lastExecutionId": "4998b348-8323-4026-babf-656245c3c7e6"
                    }
                  }
                ]
              },
              {
                "id": "1f50c894-1313-45a0-820e-94a054c9a92b",
                "name": "credentials_issue:options:opt.credentialStatus",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "issue"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/vc+ld+json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{{requestBody}}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "96f96aa2-f14a-45f8-a393-093b1a424f32",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 201\", function () {",
                        " pm.response.to.have.status(201);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema201CredentialsIssue\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "585723a3-7b51-43f5-9197-c5be84ccccda"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d751dfac-312e-4d90-a080-1d7080bb0c61",
                      "type": "text/javascript",
                      "exec": [
                        "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                        "    // options.credentialStatus can be an optional object",
                        "    req.options.credentialStatus = {\"type\": \"StatusList2021Entry\"};",
                        "}));",
                        ""
                      ],
                      "_lastExecutionId": "38d4e688-50db-4c8b-aa12-56560fc41aae"
                    }
                  }
                ]
              }
            ],
            "event": [
              {
                "listen": "prerequest",
                "script": {
                  "id": "d370c775-e13a-4e1f-bf40-67eef02f05f6",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "b31c7210-d8a0-4348-a759-a96dcad0171c"
                }
              },
              {
                "listen": "test",
                "script": {
                  "id": "63c235c9-f3e3-403a-a456-18d7f59ae99f",
                  "type": "text/javascript",
                  "exec": [
                    ""
                  ],
                  "_lastExecutionId": "c16cf2d3-0927-4178-aa65-c333b886ccf2"
                }
              }
            ]
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "90566738-57f2-4cb8-8895-a92905f526d3",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "pm.variables.set(\"credentialSubject\", \"did:example:123\")",
                "pm.variables.set(\"issuanceDate\", \"2006-01-02T15:04:05Z\");",
                "pm.variables.set(\"issuer\", pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "pm.variables.set(\"created\", \"2006-01-02T15:04:05Z\");",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credential\": {",
                "        \"@context\": [",
                "            \"https://www.w3.org/2018/credentials/v1\",",
                "            \"https://w3id.org/traceability/v1\"",
                "        ],",
                "        \"type\": [",
                "            \"VerifiableCredential\"",
                "        ],",
                "        \"issuer\": pm.variables.get(\"issuer\"),",
                "        \"issuanceDate\": pm.variables.get(\"issuanceDate\"),",
                "        \"credentialSubject\": {\"foo\": \"bar\"}",
                "    },",
                "    \"options\": {",
                "        \"type\": \"Ed25519Signature2018\"",
                "    }",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};",
                ""
              ],
              "_lastExecutionId": "a9c08555-dee7-49a2-bbfe-8309b48e0851"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ebc38f9f-db39-40fc-8819-622d8af60a88",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "cf508a97-6e06-4ade-a0f6-195b364236fe"
            }
          }
        ]
      },
      {
        "id": "17a4508d-0245-4f93-8e71-323aaec158c4",
        "name": "Credentials - Update Status",
        "item": [
          {
            "id": "7040f8ad-f8fb-4a4a-a8a2-2ca68ca574b9",
            "name": "Negative Testing",
            "item": [
              {
                "id": "a8032d15-d607-4187-afeb-fcdb24f0454f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "0179455c-e0fe-466a-9e33-56b6115bf75c",
                    "name": "credentials_status:credentialId:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2a9c74d-036d-43ea-87c1-24bcb565dba6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1a6c7607-8af1-4af7-bc53-91780674843f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "69558657-7b56-4826-a1de-3c0ee3d2e8bb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId is a required property",
                            "    delete req.credentialId;",
                            "}));"
                          ],
                          "_lastExecutionId": "89da2196-7d53-4bc0-b523-59fca1bfc73d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "788b3db3-0faa-4b5c-bd9b-736b22a73d2c",
                    "name": "credentials_status:credentialId:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9c04ac14-0f5b-4d51-8c7f-59b1dcc1d615",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7245b823-9045-4230-8955-0ce74c55f9cc"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6ccafe1d-1f02-4128-b077-7593ef011857",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not array",
                            "    req.credentialId = [pm.variables.get(\"credentialId\")];",
                            "}));"
                          ],
                          "_lastExecutionId": "cffcc746-ff16-40eb-804b-f72214c2e9dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "442b5f4e-e527-4ca5-8c9b-470a8d1fdbc7",
                    "name": "credentials_status:credentialId:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "52358f09-cffa-41d7-918b-27442b676518",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "af62460e-e541-43f5-b6be-8872309825d1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22336024-fdb1-46b3-9d06-656586096651",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not boolean",
                            "    req.credentialId = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "204a5b94-16da-4a89-852e-8f9f77e0dd08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4016b516-7c01-4757-bb35-8aa722c9ee97",
                    "name": "credentials_status:credentialId:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "fb7d0672-77fd-4435-a5b2-b3c70a1c089d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3a42151a-61e2-4639-b836-4b3594910382"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c06acf24-60b4-4715-a535-97fc8ed539b5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not integer",
                            "    req.credentialId = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "18696076-3e4c-4395-ad8d-da9b2f882bc1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53695373-c4ef-4a03-a44c-23f7c0f0b43f",
                    "name": "credentials_status:credentialId:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "39cbe385-ef49-43e0-a2d9-bdfa5e0f4c3a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "2ce93b81-b64f-4e26-8b5b-132a2a434cd7"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "804edcf0-92b4-473f-81a3-0dc90f778c10",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not null",
                            "    req.credentialId = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "a71a442e-9d6c-4955-b904-1a1ddc44a674"
                        }
                      }
                    ]
                  },
                  {
                    "id": "97036337-00ef-4f5a-bc83-782cde5d2144",
                    "name": "credentials_status:credentialId:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "abb83718-9b5d-48ca-b54d-1bde14b1f546",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "0904c99b-f522-492f-a999-37901c119634"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f74ea16-fdef-4ef4-a16d-4e53224bfd34",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialId must be string, not object",
                            "    req.credentialId = {};",
                            "}));"
                          ],
                          "_lastExecutionId": "f5079919-6ca6-44e6-9535-063236193a17"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7dd491d6-9d5f-4fa5-822a-0714945bb7ad",
                    "name": "credentials_status:credentialStatus:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5b1c3a59-fe95-45aa-ae3b-798e90964af7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3b065e04-5162-4895-b4de-c01d66f2b18a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bc8a388d-e9e2-4281-ba96-b47c817634ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus is a required property",
                            "    delete req.credentialStatus;",
                            "}));"
                          ],
                          "_lastExecutionId": "d7bb9e4a-ab93-4c1e-805e-80a899faa4c9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "653c0ef5-a166-407b-bc59-30f07209b33b",
                    "name": "credentials_status:credentialStatus:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "9168fd82-e0dd-4025-bdb0-b5800a2c94dd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3015da87-cc12-4a0e-8713-758f3b0e8430"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cecc7a9d-b189-4bce-b132-e1aebe7fde83",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not boolean",
                            "    req.credentialStatus = false;",
                            "}));"
                          ],
                          "_lastExecutionId": "ecce0cbc-85af-49b8-a5f5-83b11be8a158"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b08f5851-9d04-41de-81f9-12e728e217e3",
                    "name": "credentials_status:credentialStatus:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "757e227a-2b82-436e-8946-52b86c021566",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "8af045f4-b7c4-441e-a592-fc9bba20cad8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "630cd5a0-1278-4a6b-a07a-d1c2ae7a1721",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not integer",
                            "    req.credentialStatus = 42;",
                            "}));"
                          ],
                          "_lastExecutionId": "3b7169cf-4d50-461d-96c9-d36a63282d56"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fb177908-87ab-40f0-8c91-b4fd2f30cf66",
                    "name": "credentials_status:credentialStatus:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1f9ad101-c836-47e8-962c-b14834d1b0d6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "031b2b63-835e-41ef-8dca-28f291e8edc8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "10d7828b-be51-4723-aa69-f4559331628b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not null",
                            "    req.credentialStatus = null;",
                            "}));"
                          ],
                          "_lastExecutionId": "c440ce10-a887-4e47-a151-720e3ff09171"
                        }
                      }
                    ]
                  },
                  {
                    "id": "48923211-ad76-43e0-ac8b-dfffe3bbee71",
                    "name": "credentials_status:credentialStatus:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "7a874ce1-f259-4be6-b8a3-1c9cedf1efb6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "6362b837-bb63-49ee-b1aa-9589677bbed8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51a24c31-d0c7-433b-96ad-dfb553e04532",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not object",
                            "    req.credentialStatus = {",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\"",
                            "    };",
                            "}));"
                          ],
                          "_lastExecutionId": "a325b4e7-2d90-4f32-8dc9-aa1a5794ee49"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7ce2622f-3166-4d41-b209-ad1d5b92dec1",
                    "name": "credentials_status:credentialStatus:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "31eccc6d-18bf-470f-8e5f-e111568c2699",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f1d88b6e-86fe-401f-ae2f-8c8fa89037ff"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984a72c3-c83c-4d4e-8059-8fe623bb347b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus must be array, not string",
                            "    req.credentialStatus = \"StatusList2021Entry\";",
                            "}));"
                          ],
                          "_lastExecutionId": "fb1e3d07-6087-467b-b955-2e93fd73815c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "78bbc047-f330-4d77-9157-c5935157f7ca",
                    "name": "credentials_status:credentialStatus:too_long",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a6503f39-6325-4341-bdda-dcef81eac0ca",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9cd124b8-e1f9-4819-8ed1-e9eaa75e3b21"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f8964d2b-70b5-4813-81cc-cdb1957b7a59",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus can only have zero or one elements.",
                            "    req.credentialStatus = [",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"0\",",
                            "        },",
                            "        {",
                            "            \"type\": \"StatusList2021Entry\",",
                            "            \"statusPurpose\": \"revocation\",",
                            "            \"status\": \"1\",",
                            "        }",
                            "    ];",
                            "}));"
                          ],
                          "_lastExecutionId": "3cc9bc14-857e-4a2d-929f-3d140c28ad29"
                        }
                      }
                    ]
                  },
                  {
                    "id": "435b220a-36bd-47c7-a103-df436b35cc48",
                    "name": "credentials_status:credentialStatus:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "05812d7b-fe35-4fc1-95b7-3bd5b083d6f5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a5089120-5490-4f70-90ae-cb1b40a82bcd"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2cc911c8-d8f0-4e8c-97df-0bf1979f6e28",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not array",
                            "    req.credentialStatus = [[]];",
                            "}));"
                          ],
                          "_lastExecutionId": "80406038-1c36-47b5-b575-3460784c77d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8b0ae003-7791-4fbd-b056-f716526615a6",
                    "name": "credentials_status:credentialStatus:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "71a350b0-a5d5-4c3c-ace3-c982c2d1a05f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9c605a7a-7f9b-413b-8137-43aaa4f11d2d"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "84f6ba44-869b-49bc-8d6f-a24d6f5b7270",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not boolean",
                            "    req.credentialStatus = [false];",
                            "}));"
                          ],
                          "_lastExecutionId": "80d8a225-6576-4cc6-b12a-8162c8c2293b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d19d970-276e-43d6-966a-c6503519ae1b",
                    "name": "credentials_status:credentialStatus:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "dad98185-559c-43b2-85d8-a6101e9b6374",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "a6c54ce8-545e-41d8-b6bd-4a318d923dd3"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01976d8e-63a3-4573-b44c-50914f0c3278",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not integer",
                            "    req.credentialStatus = [42];",
                            "}));"
                          ],
                          "_lastExecutionId": "3a3de675-53b0-45d3-9549-31fced0f0d28"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3d684aa0-ee57-459d-a757-b88ba79ceea9",
                    "name": "credentials_status:credentialStatus:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "afbde48d-1871-43c1-bad6-223211ffec87",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3ac39a8c-fc2a-440c-9c66-ce9da8b8ec6a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b0367764-a72c-46bc-b086-a10c236b2487",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not null",
                            "    req.credentialStatus = [null];",
                            "}));"
                          ],
                          "_lastExecutionId": "ebcd2791-bb3f-4328-a399-58a936e75a96"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60dda075-f1cf-437d-9882-ca6f607cef6d",
                    "name": "credentials_status:credentialStatus:item:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e06f81f2-283c-4dee-8eaf-5521aa99e88e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "db13c54c-5063-4e65-bd71-e11885b86db1"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2273262c-b59f-461b-955a-83a1cb100a2e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus elements must be object, not string",
                            "    req.credentialStatus = [\"StatusList2021Entry\"];",
                            "}));"
                          ],
                          "_lastExecutionId": "ccdd3104-83b5-4458-98b4-1fb45d09e090"
                        }
                      }
                    ]
                  },
                  {
                    "id": "83446cee-593d-4ce8-9be6-4fa7dd5d2281",
                    "name": "credentials_status:credentialStatus:item:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "53631dc0-1a66-4c4f-b678-2e54ee455a47",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "080736d8-5bd9-40e1-afa1-c392a9021748"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ceef301f-e7b7-41e4-8f04-132e789a84a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type is a required property",
                            "    req.credentialStatus = [{",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "0cabb598-bcc2-4289-9833-80cb8cd52faa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b8fc1f6f-02c1-47c3-8431-7b2ff82621e1",
                    "name": "credentials_status:credentialStatus:item:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4fad8375-5d47-4246-a947-47e63ebc9d33",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "cf28c239-a154-464d-b0df-5f3f3d63aa98"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d05628ba-3fdb-4bbd-be5e-1e9e81c260a1",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": [\"StatusList2021Entry\"],",
                            "        \"statusPurpose\": \"revocation\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "6280a439-7566-4c1f-a660-8c1a623983ab"
                        }
                      }
                    ]
                  },
                  {
                    "id": "efbbec79-a140-4aec-bc1a-4e1d80349eba",
                    "name": "credentials_status:credentialStatus:item:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "132b8961-e0a8-42d7-a55b-f956c30ff694",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "217189e6-18f6-4ab6-8ed3-39d29ca37489"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "89166c96-20f2-4137-80a7-1618c50e3f11",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": false,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "3fe94d09-0689-4fc0-b48e-fa0ede629a7e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9c7c7e8-b868-4d78-aefc-2f1c49237b83",
                    "name": "credentials_status:credentialStatus:item:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "512ddccc-8f72-4ca9-b8e7-c4f6c24b2ca2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "4a9197f7-f119-422f-90cf-4ba86f1ef92a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2866ddf4-092a-4a8e-9a94-3a68388d023c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": 42,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2b650a0a-9b58-440c-8de6-8a6ac8a1a710"
                        }
                      }
                    ]
                  },
                  {
                    "id": "75e265e9-2db0-44dd-871f-77dc079dd543",
                    "name": "credentials_status:credentialStatus:item:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b6aed85b-cabe-4e15-910e-1f99dd1c11cb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "b5b59610-327a-4cca-944c-0d6f3b958c26"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "163e5afe-c7a7-4a05-a07b-fa78254731bd",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": null,",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "61180933-9143-4eae-a8d4-6969bb2bed40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c19d232f-e1c4-4af3-b163-0c931c3014db",
                    "name": "credentials_status:credentialStatus:item:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1b85131a-baee-4a07-853a-ea94e990a337",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "32cbd7f4-4f0a-4a80-a99f-eb3b54ebb151"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6024a276-53ca-42ed-8e30-8327f688207b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": {},",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "1168bda4-072b-4f70-a3cf-77099318d88d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "dc63021b-1f90-4325-86fa-db5fbdbe14a7",
                    "name": "credentials_status:credentialStatus:item:type:invalid",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "4b5be231-4f78-432c-a3c2-357caff36dbb",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "1f44e8eb-8484-4c92-81fa-2bff667e25cb"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d73fc78f-6005-41af-9be5-578afd7c9f9f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item type must be a valid value",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"invalid value\",",
                            "        \"status\": \"0\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "b11e48b9-0fe9-428a-9e59-aaff13dfc22b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7daca660-b8fd-4abb-9a47-79740205e5d2",
                    "name": "credentials_status:credentialStatus:item:status:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "6a01cfcd-63f8-4ae2-bd5a-aa0997ef761c",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "224d29fa-505f-4eec-84ba-73f82820c8a8"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38ab0d81-d7d7-48e0-9107-8791ad5e2ed5",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9218ca81-4482-4e8d-9021-c2650d3d03cf"
                        }
                      }
                    ]
                  },
                  {
                    "id": "00a35ec9-e46c-45cd-9910-9457affc0765",
                    "name": "credentials_status:credentialStatus:item:status:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "23f65fcf-8b69-4f96-84be-890d64717d74",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ae40e0ed-827e-46a9-ab21-fec6dbf15607"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4cd66b15-cab7-4b3f-b194-03d6d0f94370",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": [\"0\"],",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "9bcf66ee-7ea3-445d-9573-91e988a06e9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "825e163d-b2ad-40d2-b808-a005e2f5b22f",
                    "name": "credentials_status:credentialStatus:item:status:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "5a1029b1-b26f-478a-8c08-db10164a56d9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "dc1bcd82-e0ee-4f38-9295-10109d05737a"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b85454d-4b73-45f8-8b03-3ad21d824c1e",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": false,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "dd6a0945-4837-4c8f-b91d-4ccde27e9f58"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af595236-07f6-4f0c-8cbd-a2f88a3ac057",
                    "name": "credentials_status:credentialStatus:item:status:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "63ff0a1c-2ed2-4168-9e0b-f896ac90ded0",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "3dd83e2f-ebf2-4fbc-ace6-9a0d39a08c33"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "88dbacea-621c-4076-8e7e-627ca492b9c6",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": 1,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "18fbe7ca-3f8f-47c8-84bb-1dde26962e40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "bf3d779c-004d-4663-8558-a194e611738c",
                    "name": "credentials_status:credentialStatus:item:status:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee1b051b-ce33-4891-ae0b-ac30cdb9de92",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "da84dd5a-80d9-4765-8f7b-ca27d993c9ae"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "18dd6ebe-b4d3-4866-bac3-620d88eb9993",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": null,",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "bb9392c7-5db8-4f51-b7e9-609e23bdf5a5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aea7c849-920f-4997-872d-b2fbee730f71",
                    "name": "credentials_status:credentialStatus:item:status:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "8026a714-cf56-4b98-aeed-4c3f77014755",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "7412b94c-295f-4927-8330-08137066f61b"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef86b8e6-869d-4539-ae39-617cdf428317",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": \"revocation\",",
                            "        \"status\": {},",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "cfacac06-7482-48c8-a74a-542eeaf115c1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "aa2494bb-3d3c-4fcc-af39-b9cddb72faea",
                    "name": "credentials_status:credentialStatus:item:purpose:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "a5801b74-c1ab-4dfc-ae70-f31e79ee9068",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "67c78b7a-09c9-4b3d-a5ee-07170d8a82de"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfd44d6b-1d29-4f48-a27d-df07b1cb8835",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status is a required property",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "2c020a01-3295-4a85-9eaa-a7b6e2ebad0b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8be08042-96ea-4c95-b353-5bcd384dc493",
                    "name": "credentials_status:credentialStatus:item:purpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ed64461d-08ae-49eb-961d-53d227e9d7e2",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "f13ec881-30f8-4f23-8aaa-11809a38ec31"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38fdf4ad-c9bc-4d65-ae49-9113718a24ec",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not array",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": [\"revocation\"],",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ed72cde4-626a-4995-ab18-44c9eb14de5b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5baf792a-6f28-49fa-901b-24161f68dae6",
                    "name": "credentials_status:credentialStatus:item:purpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "cf484c27-d952-4401-88a6-c5fd96eff79d",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9a38ee06-c081-44dc-84f8-dffa32559990"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2984b87f-6222-4f0a-b923-2cd08b14de45",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not boolean",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": false,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "5524db6c-e25c-48b2-a7c2-eca3f669222c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3faa99a1-c29b-4708-baff-ab7b2a1243ce",
                    "name": "credentials_status:credentialStatus:item:purpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "e2e94938-3284-4321-a6f7-373f0035e7c7",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "390a8993-f5bb-4380-8682-d61babe7cd1f"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "26212579-515f-4e99-932c-fe43c6633456",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not integer",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": 42,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ae59eaf1-8f70-4e7e-973d-d29c125cf820"
                        }
                      }
                    ]
                  },
                  {
                    "id": "25ec1868-867f-4505-9325-114b377c9304",
                    "name": "credentials_status:credentialStatus:item:purpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "375f83ef-c1c6-4dda-b28e-30bf3dd8b95b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "9132ad2d-a5e3-4280-b129-e2da8cd28bad"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "597132bf-9ee1-4050-9267-1c5e4dc9916a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not null",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": null,",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "ee5e14a4-9cfd-47f8-b6bc-89ee48822d6d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ac2083ae-5e02-4d23-9b71-7157c303b28b",
                    "name": "credentials_status:credentialStatus:item:purpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "75d491ec-5026-4aae-a10c-a56f9a05a8da",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 400\", function () {",
                            " pm.response.to.have.status(400);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            ""
                          ],
                          "_lastExecutionId": "45764c75-b4dd-408f-a460-fc30b289ce28"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d7d563d6-6c8e-4d4c-b3dc-0475bd136dbf",
                          "type": "text/javascript",
                          "exec": [
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // credentialStatus item status must be string, not object",
                            "    req.credentialStatus = [{",
                            "        \"type\": \"StatusList2021Entry\",",
                            "        \"purpose\": {},",
                            "        \"status\": \"1\",",
                            "    }];",
                            "}));"
                          ],
                          "_lastExecutionId": "c175fcae-5594-49a9-8a2b-f70d448397af"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              },
              {
                "id": "4ef01b94-6133-40b3-9f2a-f400755876a0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "04f94075-6413-4d0b-bb24-77ecfd2fbdab",
                    "name": "credentials_status:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "status"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50ad13bc-110d-4f13-96e4-1ff778da6ab9",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));"
                          ],
                          "_lastExecutionId": "8f43efce-ff7f-4f22-815a-7267091fb529"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "8e898053-18bc-44d7-94d0-afd90e3dd896",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "461b39f2-ea77-483b-994b-82d3a1a3216d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "76faa4e0-1357-4a1b-94b2-77e52b6a5863",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "24ce858e-f8a9-48fb-91e2-68861c60cf4a"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4ba9437a-b778-4a55-92e7-18e493a5a1e3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "835d4625-0943-4059-8a50-39bd14fb4e67"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "038239e6-61d3-4236-8a95-bee3d165c577",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Some values are stored in variables so that they can be substituted",
                "// into the request body and so that the response body can be tested to",
                "// ensure it contains the same value.",
                "",
                "pm.variables.set(\"credentialId\", \"urn:uuid:{{$randomUUID}}\")",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// to issue a valid credential. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "    \"credentialId\": pm.variables.get(\"credentialId\"),",
                "    \"credentialStatus\": [],",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "624719e6-c6e3-4739-b0f0-79d337725af1"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "32b6442c-7e74-48b1-85cc-cf73613615da",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "0836198d-0f5b-4cae-9903-5547944d1346"
            }
          }
        ]
      },
      {
        "id": "92c88884-e8a3-4c09-b2c7-9b50f41efb18",
        "name": "Credentials - Verify",
        "item": [
          {
            "id": "8b70cb7b-703e-4c58-928f-772c0ce14fb2",
            "name": "Negative Testing",
            "item": [
              {
                "id": "8d7b697d-a2f4-4254-abc0-38a6073f240f",
                "name": "Bad Request",
                "item": [
                  {
                    "id": "009c4c65-a55c-4b41-bc65-4b8f60082bf1",
                    "name": "credentials_verify:vc:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ef54bfb0-47bb-475a-b081-d2b5409ea63f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f99b1e74-e861-4ce0-8a9b-436e65cd097c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "14dce834-bc10-412a-8c9f-10d08ff28e44",
                    "name": "credentials_verify:vc:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": \"string\"\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "2409bdd2-2d2c-48b1-bd0e-d84318391dd4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6cc953e1-26a6-4a4c-b181-234aa7b61791"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fa53ea65-523a-4083-af8b-a74dfa4d34ef",
                    "name": "credentials_verify:vc:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": null\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "ba5a059f-264f-4527-9056-e262ee058c5c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f8be5fc9-0054-484b-9641-f9b3e7c1e0d6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c74d91fc-e669-4738-bb77-f27393e8a2d6",
                    "name": "credentials_verify:vc:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": 123\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "d4c01560-d725-463e-93ad-439c48608084",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "75dc6797-9bb4-417a-ba48-a0ce91336bb6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6a774082-245e-4067-9e81-640ac86f0354",
                    "name": "credentials_verify:vc:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": true\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "b57ae4b7-4677-48b0-8e74-0509deea91f9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "af30edd1-3dfd-4fe2-8c04-28137049eff4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "412a25a6-509f-4c3a-bef9-9d6c4f1d9ad1",
                    "name": "credentials_verify:vc:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": []\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "60f9e87f-e976-4c53-8175-5e6e8ae782b1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dbef4df9-0425-4ada-baa8-84ccaa58a195"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee151d04-b891-4cf9-85df-5955cdb9fb1b",
                    "name": "credentials_verify:vc:@context:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..V5PnQzCWxrPiCYT-WAyKAnypebgwYeD7lX_hyIjFa_lbJje23pZAfFdgnlqBnXLd19Ksa8fZpCE9TN7kAjzxDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4d3574a8-e80c-4e0a-a81f-507806cf6b1f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "be662e60-b9ce-4881-bd66-b68fde25df3a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bf7bceb1-20aa-4c6b-95d1-605d8ea7f673",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a94c7ade-57ad-40e0-9549-74c23bf09cea"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5018513c-0e20-4164-a983-bdfee2873ddf",
                    "name": "credentials_verify:vc:@context:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d00ebc1d-e256-4afc-867f-8e419ccc628b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ecdb1523-7fdb-4071-8ae8-6af517309546"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fc4cd19e-1589-42e6-91d3-a999a0b95e6b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4962d039-f18c-4677-a790-118e58d01a77"
                        }
                      }
                    ]
                  },
                  {
                    "id": "453ac8bd-c8dd-4e51-b09e-1789223e6af9",
                    "name": "credentials_verify:vc:@context:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "91224dba-1f0c-4024-8b59-28f0c29736b4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "2994632a-1bc4-48bb-a1ac-52c53851c08e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "adf25e73-b511-49be-84af-f9c02da8e367",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "dd4cfe34-ca83-4322-a88a-9b7431a5cd1e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5ef2b971-38d4-413b-9dda-c943a15bf782",
                    "name": "credentials_verify:vc:@context:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "83203d68-a577-4944-8001-f6984c8cbed4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7343b373-be6e-4e53-b985-662a25a9ca72"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "15084850-202c-47e6-81f8-c8e63ee65790",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9867c1eb-05d1-4b28-91fe-35e80b6dba08"
                        }
                      }
                    ]
                  },
                  {
                    "id": "145c1b46-2f6d-4796-8dd5-7ecff1ebed95",
                    "name": "credentials_verify:vc:@context:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": {\n            \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n        },\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..w4xJhf2l_4JzwE4kp8pD8dNJdWSaws5HiBgal8zFzB6i9p05tmPITdsrUttpUwopW5UAq9M_EZVqlz-kRfSFBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e613ae9c-4f24-4e1b-be1d-d377334f9a08",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c8131f39-df76-4a52-930b-c3fc84d5c39a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a326d40e-9c22-4dcf-80d4-a5f778f1408f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79262ade-d0e0-41e4-a190-30b334c2af61"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef13196e-98d5-4e17-9625-2e8a2e0693a5",
                    "name": "credentials_verify:vc:@context:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": \"https://www.w3.org/2018/credentials/v1\",\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e08d93dc-c0c0-47a7-8fce-340ea6ff9eb2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f7575c87-7784-4e1d-be73-8575f3335279"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ffa5af9-513d-43da-b8b0-f9f200bf48ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "79fd02e4-9b55-409f-a9d4-e3ab3e27ac1d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "01f9dbf2-bf1b-42de-baaf-bd63f6ae702b",
                    "name": "credentials_verify:vc:@context:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9cb94256-700b-4d34-843e-cf7cd0785c8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "eea5d9b8-9510-4088-b481-eba6ff0e939f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85acd120-a6d5-479d-ba8c-b0d3ec5e18e9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44df3e21-ba9e-4597-aa1a-b37c7461aafa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2f578498-4a0b-417a-a8d4-024b778cdcf7",
                    "name": "credentials_verify:vc:@context:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c032ddc9-8424-49ae-b9d4-ba99876316d7",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7e8b3287-a366-4373-9339-100cdca26621"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f1e7e562-0726-406c-a0c5-f9bbfa027412",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "019af216-c742-4c5a-a3b7-ffc0e5b60d90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "928c7ea4-6dd2-4ce5-bed6-9bd9ecbd7733",
                    "name": "credentials_verify:vc:@context:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a6092497-dc63-4e6a-a092-0b91750258e0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8ddf4135-075f-439b-8f0d-ac6b754141e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "7b048f29-852e-4786-8da9-f855f9426896",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "8eba0b63-d1e2-441e-bfbc-4e893aa42fbe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5a2ef13e-ef93-4480-a6fa-9ec906312f3f",
                    "name": "credentials_verify:vc:@context:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9d0c5199-9b06-49db-b9c4-f1983dd64304",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.@context must be an array of strings",
                            "rawBody[\"@context\"] = [\"https://www.w3.org/2018/credentials/v1\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "24894bf3-2ba1-454f-a8e8-5b2e435cdcd4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "12dc0e5b-ad6c-4035-b945-18927ffa56e5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "094fe122-5885-4e6e-86b8-e89c2e5cd557"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3ad04a13-c557-4f92-bca7-198ddf514cc1",
                    "name": "credentials_verify:vc:@context:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            {\n                \"@vocab\": \"https://www.w3.org/2018/credentials/v1/#\"\n            }\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d1d526d6-728a-468e-8d3e-fcea779a963d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a499be46-2234-424a-9f51-013cc6f2090d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f05e54d0-e263-456e-96fc-7295dcf6635a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "16821b8a-ab1f-430f-b788-e19716dcdf9f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "65bf27fb-8f48-4d93-9eaf-f88aca4dbfb1",
                    "name": "credentials_verify:vc:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": [\n            \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        ],\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..iom-sOLAz9-9FhadLRpqOYXXBhx4Rgwa3I3w1oh087xFQqIMhVTzcSpHCGdGWu2QT1KwrrgVAXPeTT2EthmxBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "5fffe522-71e8-4368-bde6-6d117d129f7b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fb8c9c2-a88d-48fd-a017-253c4a94ed68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c312d392-8d5b-4acb-b500-432bd64b34eb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "668d17a8-f5b2-4ef3-8756-990f51baca99"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d5b22ff3-84ae-4a44-9fbb-4e266e67dd66",
                    "name": "credentials_verify:vc:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": false,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..xftqB9cBFsSe226cWEZ4wr5sfxlAOJYYo6yjwPCVeHDdk6OoWGjZQGO7xXpSidrrr6e1imP18LiFK34xtRWADQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87c7d4e9-0210-4492-bdf5-c3f0f7d6b90f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "242c4a1a-6fd4-4ae9-addd-c27c91b3e98d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b88cbcba-81c7-4266-8f12-6ee03eb57b12",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f423d707-e524-4aaa-83c0-bd733e60048f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0a0cba4-00cf-4874-8aba-c82c07e6b02a",
                    "name": "credentials_verify:vc:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": 123,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ZqV-qqLOh_Kb4vAdXKBfmFdNyv3FzXJAIYV9JltcYGDAefU3OUOnoaAU2WSEufkuYkvczxfRLhrMKgkoVoIRAA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e51f63e9-6988-4f53-badb-11ed924a20ae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a5b4459-67f9-4fd8-ae6f-4fc9a492fb03"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "02dc9b7e-501a-4815-b277-4c8ee008a1cf",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "aced9d85-3ba0-47fc-a16b-3635b3edc202"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d9fdc18a-57df-4abc-979f-9c8c0f72c2f6",
                    "name": "credentials_verify:vc:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": null,\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Csadnd3P2WqJLxAeXMkyx4nkvXvSEssOQriVuwYK0_6zyssqkkuAcKpkUFh8rf4J5JVpng9yvb_2263dLMLZCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ff5ef1a5-c024-432d-ba88-ffdd5db51cae",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c4420701-ed0d-4993-839e-6a17fadfa7a7"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e4c43805-0156-41c7-91ac-d2a018339692",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "24cc4b61-c0ba-456b-8471-81731b81a657"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0c8d567b-60da-4b9d-8721-4ec32be5a6c5",
                    "name": "credentials_verify:vc:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": {\n            \"key\": \"urn:uuid:07aa969e-b40d-4c1b-ab46-ded252003ded\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..0Nrj_srTLYyA-9ZVA_dkVGjUcKx6xELHjbbdppEMFPGEN5c2gPXgstNRjnrr8hhMMegSAbvGASKWseBXGR9uAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cec7f146-5b36-46cb-a7dc-e238b1c533b8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e1f46577-e654-4936-a674-ab49de539e7f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c6acee42-b410-4892-8502-c56be4fb422a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f9a119b3-1f0b-4a5a-9e47-fa0a8592c7c5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "fe26a96a-b4fe-4974-9af9-17a8e88541fc",
                    "name": "credentials_verify:vc:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Bx6sv21fSmT7fCCxU3fDaLhEOhfRK8llXSiFTgApd4PHot00nVjhaKQyhBW9FfFmJljstlOV_Zff164cxOKiCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "862718f9-901f-4474-b375-b162aaad9d0f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fb01bc8c-684e-4f7f-81b8-c1e0f6858e23"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "810d3f98-1ca3-4192-82e1-146b559b1f22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "29eed4af-7dd6-43ea-9a0d-7a29ca0ef658"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53f3c930-ea70-42aa-80a6-2c834ea742b4",
                    "name": "credentials_verify:vc:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e66a63cf-cdbf-4be2-9b74-9bc1e21699ba",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5edd0c63-a6f6-4a0a-bc8a-93e194858a55"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2be73615-cdf9-4576-bf5d-94e563b0d4d9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9de47a88-6a8c-4371-9165-8e670bdb55e4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6d2eb72d-6096-4a8d-9d85-21e8efa07037",
                    "name": "credentials_verify:vc:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6e554e1a-aa51-474b-b9ca-75ab439b89a4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5f0a3ced-1164-42df-98cf-291704933aa4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "751ade88-bcea-434b-be37-fff9e3bd3d6e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bb8893ee-68a9-47c7-b083-fa0b046ebfcc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a774faee-cfe4-4923-95da-5dd937142bac",
                    "name": "credentials_verify:vc:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c43cf7c8-7acc-4e11-aee4-1e52cf59a9e2",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a14d428f-c7bb-4186-b02f-e71ecb437198"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d587e763-3352-44e3-b98d-bea9745231d0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9b382531-736c-4df8-9bc9-fd881773c67f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f8a167cd-c141-45df-8682-3c742e80345e",
                    "name": "credentials_verify:vc:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da1eff0d-529f-4180-9b18-b08ddbb2d4c0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody[\"type\"] = {\"key\": \"VerifiableCredential\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "6b54c995-a781-4d1a-9ecb-74c642b2bea5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2d75fb0c-3947-460d-a8fe-7ab020759ec0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a32a9390-972c-413c-aae7-52bc58f6d7fe"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f3cec254-efff-4777-97ae-06fe60792b57",
                    "name": "credentials_verify:vc:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": \"VerifiableCredential\",\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a8bf284d-35d3-4813-a171-9a3d8cd66a5a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "042cfb4c-f038-46c3-9d6d-36ff50911648"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "360a1e85-e0ba-4636-a694-8bc66a22b0d2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "08fd1a43-b52c-4071-80dc-674eda4d4754"
                        }
                      }
                    ]
                  },
                  {
                    "id": "35176537-c12a-47cc-95dd-3e8aa3b83e26",
                    "name": "credentials_verify:vc:type:item:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "31cb5cbb-4548-4a10-9d95-b7e4e5319a8c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must have at least one element",
                            "rawBody.type = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a4807159-eb4c-41b4-a4e3-61a4950e4a68"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c062875-4707-45de-a7d3-02519f6aa271",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bafcf2ad-65a9-4c44-ab9e-711af4d5a8dd"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c75b52d7-117b-4ba9-bd0f-c4666d781742",
                    "name": "credentials_verify:vc:type:item:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "51b66acc-2c2f-449e-9d22-616b89fffc8b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", [\"array item\"]];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a793739b-0355-4c7c-a396-6a9c991a3978"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "711f2bdc-f0b5-4f06-98ce-ddc5c1ca2d7e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "725cfa90-7f9c-4b46-a360-992c7be719ef"
                        }
                      }
                    ]
                  },
                  {
                    "id": "d4ba8176-8138-468a-a9af-d289bd4c2a9e",
                    "name": "credentials_verify:vc:type:item:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dfe77019-fc70-4b8e-bb35-4250c0986826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", true];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97bccee7-add2-4864-9f17-6887d9e8a63b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "be5f111c-2da0-47ae-b161-6c1f885648b6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1a3a6efc-0fc0-406e-a680-18874957be7f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8ea341ab-0cae-457a-bb2d-2a90047e4cb9",
                    "name": "credentials_verify:vc:type:item:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1ee153b-6cf9-4027-b330-c379ae35d827",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", 123];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "bfad3190-6e64-4aa0-a69f-d7e67925764f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3ada5477-a827-4f13-af48-bf801d46885a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6fbb1f30-10d9-4cb4-b055-f5683a89706a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "af87cb17-64ae-4a9d-9a37-df3f55bf1805",
                    "name": "credentials_verify:vc:type:item:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08947ee2-fd4a-468f-8e40-6ab1d0193205",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", null];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "cb9f340b-10af-46a0-afc0-5172dbcbe0df"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "83f74752-8c16-4db0-b775-a1857fa73ca2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cad845ad-0098-4099-88e7-7a110c6bd805"
                        }
                      }
                    ]
                  },
                  {
                    "id": "350ea8e1-2e5b-4007-9fe1-3db68ca2a7e4",
                    "name": "credentials_verify:vc:type:item:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1dccc5f8-451e-425a-beca-0aed5e5d0b0e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.type must be an array of strings",
                            "rawBody.type = [\"VerifiableCredential\", {\"key\": \"VerifiableCredential\"}];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5741f70a-ada4-478f-9ef5-cc9d93791af5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "949aadc0-a970-4ac8-bc8b-309e2c8e6aa6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "951fe578-a44e-4f32-8985-44563d7a48da"
                        }
                      }
                    ]
                  },
                  {
                    "id": "f32d8844-8677-430c-93fb-294a689afb8f",
                    "name": "credentials_verify:vc:issuer:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "250d8e35-1223-4ddd-acb8-52cb0b79575d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "316dea4e-f1b4-407e-88c8-3627576ff16d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "6f36d3f6-d068-4bb3-a543-ed40be6c1beb",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c89b0302-d631-4764-8c3b-2fd4a0765814"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e693027d-7a0f-40ab-8563-fabbf7dd27bb",
                    "name": "credentials_verify:vc:issuer:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": [\n            \"did:example:123\"\n        ],\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Mdpb0nbZLuHLqh6IBr6ouahKZNFB-cIKJXn-b-O6Pt6HyJaECfc399qgMTWovf-l04XYEpuYDmfZeYVThBeMDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dc0fe327-b7b4-440b-8762-f6c255102d13",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fda3b321-00f2-47b2-9784-9157b0388c9b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a11160d5-0f20-40a7-b8f9-40b2ae0644d1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b62ab9cb-7390-4b9d-a163-8178673ab4c3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "cd73cfd7-0911-4404-9802-10cd09753985",
                    "name": "credentials_verify:vc:issuer:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": false,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ryGzH1cVI0oyA0eBPKjIBDGJ8FYapvVnUEcovWWepoAASL3SzOOUvcQ9XOnQlclFU8dYhkEN2L8TQAj2OHlcBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f6ffd47e-68b7-4cfb-b91b-e1b9f2492da6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0872c9b0-e35e-4208-8b01-1705473fc7e9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "55caf50c-03fe-4687-83e1-0d76f54a49be",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec018af4-4ca3-45ae-a682-34868e1b7115"
                        }
                      }
                    ]
                  },
                  {
                    "id": "416d779c-d8eb-4b3d-ad50-3672928236ab",
                    "name": "credentials_verify:vc:issuer:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": 123,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..kEE8wQKYgVQlcBvJeVeV151aR_iD6vPrlW2bgXPW8NvJx9AOuW5eGtL3j_I3xIGR_JWDA5jGy6KDVkqJNEDHAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c71175a3-1d5b-4fa2-a688-4415f5c85ea4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0ad5d71c-4138-4a7d-ac0d-96bb3e9d9e81"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb75a365-27b8-432f-9a34-30e9b682bd94",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "01ef0d06-9cbd-4de3-b48f-ba591b7ab180"
                        }
                      }
                    ]
                  },
                  {
                    "id": "474acafd-95b4-4e9a-b26f-5e0a4314e3ed",
                    "name": "credentials_verify:vc:issuer:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": null,\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JtG57INFa8ZuLTnouU9zbgh8jUf_red-a-75XviPrr3HsCFPhrMo6HltNwwb8d4-lftLfws1Bj0NVTYaTKpjBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "984308b0-671f-41ab-9a5b-03a577b6a6a2",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "516a6ebe-dcb0-48a4-8110-e5d68a2e1e83"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "436b9f3b-ef5f-417f-9211-eef20731eff9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cc26a29c-688e-4902-a4e1-ab40f86fc98f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fe1362a-0dd6-45f7-b767-79696469a774",
                    "name": "credentials_verify:vc:issuer:id:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {},\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "765d3b12-8454-4cd5-87a4-83078f1bfde8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c7bbb49d-1041-45e5-8ca4-dd7810fd52de"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "dfa19196-5df7-45c8-ab60-b866f0863cb7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "caacfc56-8029-4269-8e62-3eaafae249af"
                        }
                      }
                    ]
                  },
                  {
                    "id": "adfa3fdb-c70b-4b10-9195-5e622118b1a0",
                    "name": "credentials_verify:vc:issuer:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TsN_31UJYzTTx1xh5CB9PjhnehJza3N5gAEFoNO55HLtQvoqGiEd-SI_4Xy7cpuYMbHdYf5CKHwP0eooyzjrAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "58c3403a-d8e9-4893-b050-16545ad86015",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "18bfa7be-04b5-46de-bd8a-2bfa17c433cf"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa88bdef-1284-4769-a51d-c9b364803308",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6f1601c6-84f3-4fb8-b6b2-de857c5a32eb"
                        }
                      }
                    ]
                  },
                  {
                    "id": "18b5f459-2f5d-4ba7-8295-c3e218df6e57",
                    "name": "credentials_verify:vc:issuer:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": false\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..JOl3FF8mG94K8DDAtSYeirCtE5GRVHXYZcIbf3JRCquZ7obaBm1wh3rEzbG-t8kjdWMn7Zwy8q4zw7pMC2-gAw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2e87be1f-9a60-43de-939f-1aa290b5b146",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0b5704ef-dd4f-4e38-a3d9-e2330b4f905d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ee0df748-5796-464e-bb6e-7f57e317b736",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ccaccc7a-6adc-4099-9c17-daf6cbe3d1a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "61a56490-1be6-4dce-9fcc-99df2b136e0f",
                    "name": "credentials_verify:vc:issuer:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": 123\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Ibp_FWO5FwzfTfd_PeTgedqAEcbS7dtCOoREanyZP0yAg63ZGay4hjjd-NwZfmWG8LRbMSqtjX2_Cu5BbBEoAQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a4b580b7-1d39-4e58-90c0-00f04a61ced6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a22c4808-a966-425e-bc80-ea3011f481bd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a86274f0-640f-4fd8-8be7-bb114180a781",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9e16254e-bc79-4da7-8471-34702b48229f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db044961-2806-45dd-ba10-e3322cdb139e",
                    "name": "credentials_verify:vc:issuer:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": null\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..3mHg7Xr443P-rcakew2CdGzjKXncUa4j2zY8A_W7U9tqPMFAiWuNqK5CTKV8yM_P3p5VZC8HMlc7SiaJYp-iBQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "87907592-27c8-4df3-8fe2-d3120dcdd40f",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "abe42a7d-79c0-4169-b806-51667abb903d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e09ca53e-528a-4a86-9e3f-b066b5f947cd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e41f0775-3cf9-4aef-8035-2f29c5f0da12"
                        }
                      }
                    ]
                  },
                  {
                    "id": "41170001-1651-46da-8a69-e04694b51a95",
                    "name": "credentials_verify:vc:issuer:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..n3pFfPx4jY7EjlOpLNJT4CAJYI1roVE6LoUgLQhJ1bMgS5xUKbsIhynp7xDW-vSGzIcu58w-Z8_d9--99NCDBw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "1f971369-446f-4dcf-af27-9417d28d67a0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6c5bd49d-2cd5-4abf-952f-4144042475e8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d940b2c2-f83b-4394-83b9-acbae12fd0a9",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cb83b5b6-2b3f-4d6c-8374-1a8bf7d267a6"
                        }
                      }
                    ]
                  },
                  {
                    "id": "859db8ca-44cb-4c7c-bfb5-6516581e03db",
                    "name": "credentials_verify:vc:issuanceDate:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a33fdada-c9ce-474a-a0a0-9c649c1a1909",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "fdea8c23-b5a9-4949-bff5-50defea023b2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "666c7112-6dae-44e9-bee3-4f51c9735c1d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ec627855-1090-4438-8d28-9298b0ed9775"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c122ff9f-33f5-4d7c-b9a8-bd758677e415",
                    "name": "credentials_verify:vc:issuanceDate:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": [\n            \"2010-01-01T19:23:24Z\"\n        ],\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..eJGt2anEVhR3qXrd8726C2a8PNJ-S4SnhIUB2YpAUiLJhTQ4FcY_nONpl-U0MbpWgwlpJ7xa1_uk4EMrGmOUBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "661ec764-b9db-482a-9525-88fbf8c84cca",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f428165c-2cbb-4367-baa5-0506960933ad"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c1447fd-80f4-42dc-aed2-4d76c9b748d4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ea92d979-d79e-4413-9c5c-4531adfa245f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4872d3e5-6916-47aa-9ced-90cf8f72acf0",
                    "name": "credentials_verify:vc:issuanceDate:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": false,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8Ax_d8Yp8MIszSaGQa1WkiT4xktUk0Ltg7EF3QQ-GGY8JaV_jR6-zRUlEF2iW0HcK6C8ZoAt0KrllUUDdJkdDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b863cffa-dfad-4f16-9de4-52eb7b03854e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b92784a2-895b-46c0-9ab1-36ae763f53b6"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "32916a76-9cdf-41ae-905b-7a7c64ee2070",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "cd37d31f-b918-4e7e-b84e-566faaf2b32d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "860cd7a0-9577-4557-b5e6-407326a47d1e",
                    "name": "credentials_verify:vc:issuanceDate:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": 123,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..x-sSX9vqc6977YPFhNbzjKdisDv4qD2mx-yBSH_EG-UQCpyH_ErCzoFWnpJzRJKIKbOLEvvZ5SO_fWbNWyNdCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "01bf0a1f-c8d3-4198-8e1c-a0b3ae4070da",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "88c6324a-6a8e-465c-bd55-b2bb91957e3b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "4f1f7c5d-e0f5-40d6-891b-eb912aaeb646",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "25b6fa9c-72de-4071-b82b-11207ef56c3a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5994ce7f-15a3-4bca-8fa7-ae09d4533435",
                    "name": "credentials_verify:vc:issuanceDate:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": null,\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..TM8P7mgJHcCjS_-L0AM_0QC1NSxVBcrUmv8bgZNoU-XF9F69wiOhogacbQFbewG5g7kf6mUvNA2Rv2SOHnjyCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08662dcd-e11f-4162-919b-72b200a7c706",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cecfd47-2f5c-4d1a-b35d-480058d91541"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9ea98d63-18b1-489f-9194-fa9e6b13829c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "6efda743-9d76-4891-a152-cb5f03563fce"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5bdf2e57-ef35-4d83-bb41-0408c38c0f75",
                    "name": "credentials_verify:vc:issuanceDate:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": {\n            \"key\": \"2010-01-01T19:23:24Z\"\n        },\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..Z1GVMKiJuJeJMpR_Ag4Wpv6940N3WUreYSxEsPaZgU_J1C_EDUj8ycRJitlJNEBBuGhibJ0GWyK-WW9RO2WCDA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "66058ea5-cb55-4ae1-a87d-c51a7ce7c0c5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e29bd4b8-ca28-4232-8dc3-bc3a5759f03f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "76961b1f-4972-4512-9862-61e206dfe28a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "674b9cee-7297-4feb-9e50-bb62eeaa5862"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ef7130f9-5b4d-432a-934c-31044f3bb2b5",
                    "name": "credentials_verify:vc:issuanceDate:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"not a valid XML Date Time string\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..ebrsCszvH6TQHw1QhA8laajPRWL_zGvQ96Up8A4TiJrY7ueFm3V-Suk-KNd6JKckpOxLoF-Cb24KG_g73AqHAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "57ef147d-8d4c-4aad-bceb-5f994064cf0b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f25a2a00-126e-4b54-ac0f-9bdede7353a4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d3e7e5-86e2-4c4d-b70e-36ab532b3ccc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "889042d8-93c6-4fc2-8b58-c386d80054ee"
                        }
                      }
                    ]
                  },
                  {
                    "id": "43955b50-897e-4040-b3b3-511477a8ccaf",
                    "name": "credentials_verify:vc:credentialSubject:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ef1d819a-4217-42c1-9a19-fe671b56fc24",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "86b3bc1e-38e9-43cd-99ff-b16061b4dac4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "9e8b7a54-3104-436c-ba9c-b777a9c03ece",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9ec3287f-d651-4daf-84bc-bbe82bc2819f"
                        }
                      }
                    ]
                  },
                  {
                    "id": "52be43f9-11ee-468f-b20e-564fed773d67",
                    "name": "credentials_verify:vc:credentialSubject:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": [\n            \"did:example:123\"\n        ],\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "382e32ed-f1cd-41f2-8b86-a5ff7bf74aa3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bf1b1a24-1a02-43d5-b150-3006373c5611"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3df8d175-83a3-41d1-af9a-2e906717b4f0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37eeed94-66f8-4a83-a950-a7a623892cc3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "ee688036-0742-4f51-8dc3-0c59806d1226",
                    "name": "credentials_verify:vc:credentialSubject:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": false,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..VK75R0RpQX9g4E_vGExhb_aDUNycy1UlQYvhCL1Ydl9bWiT1oUPeHEUgJMRGzmRRvyByyj13oHI2yB3cOLWXCA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "50d5db62-3b02-42ae-8471-e6a179da9ae1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b261ad9-2033-4d3b-875c-eb002640f397"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b8bf258a-5628-45e8-8ba2-554c564671c4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "0a9e6fda-325c-4eb9-9144-dbbf979b9899"
                        }
                      }
                    ]
                  },
                  {
                    "id": "7eb16ec5-bee9-416f-970d-89c99d45d1fd",
                    "name": "credentials_verify:vc:credentialSubject:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": 123,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..dQnu8mT7YMECvDQPODQ1YUudQIO9Yx7WsZ07UWpHRqw0iV3ZvJOebbBoY0gFvsF9t6foFFEaaWcKi4vNgIdfCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "da2b6d29-7ffb-420e-8f9a-8b8a3a44a3f5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ed488b28-040c-48ae-987c-88b7492ba867"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1ca07210-810a-4aec-9cf3-c2c781496e52",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d1afa637-91f6-4097-aa03-dc7477290937"
                        }
                      }
                    ]
                  },
                  {
                    "id": "50153c71-6b36-4c4a-b66a-a6d0ac8e0b75",
                    "name": "credentials_verify:vc:credentialSubject:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": null,\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..bHp5pm-9GUkKetjC75DopheXPgXztK_ruNFKStI2vt2pBbXHRJWZlO1PsXInyqfre9BcqmIUcwD4TbbjfiUYCw\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "82995eb5-4070-49b3-9752-dcacfdcc0bd8",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b7dd9a24-b1a1-4d99-b52b-dc4853cf4dfd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "cc6a6475-69ba-4044-b8a7-362f88aea2de",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "71dfabf7-a27c-469d-836a-6617b5fa8c5a"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5543934e-e749-48fa-974a-43f79e360ba8",
                    "name": "credentials_verify:vc:credentialSubject:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": \"did:example:123\",\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b77822df-4cf2-4feb-ba7c-1df3afc75f46",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "3c382733-fd8d-4d4f-972f-95f0ccb191f3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b2d0e3f9-ca92-4843-a180-6ef8eb3c1b0c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2c94fda7-cf36-48a6-b690-6ae86fc6835c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "421df540-a8f5-4374-9705-345d051819ce",
                    "name": "credentials_verify:vc:credentialSubject:id:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": [\n                \"did:example:123\"\n            ]\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..8KJ136ciaI5X01UO8dPG0KMcsxmd7qzxvrahflTNqsrjjd-vF8bBKpjVDLOOj7bUolO277JWFCPX1xvvAVAvAg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f715472f-7c78-4232-9e3c-bfcdcd209e38",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d25aafd0-48b6-471f-8d12-97588b290b56"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c1206b9-170b-4254-bcfc-be4f245376a7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "2fb977e7-904e-4697-af8c-fc36951395f1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "99c64a91-c23b-414c-8d38-f6354e3dc37e",
                    "name": "credentials_verify:vc:credentialSubject:id:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": false\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..1Tatn2a45JYHHvhGvCLNbO1VUDV_lkvRVosGzDXDF-DseqRorDTFmY7XSyYqrl5yc6B200ET0RBvgK2vyEC6BA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "dda1bc69-0cad-4f23-b7c6-c149ffbb1a6d",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "61f9ed34-fdbc-4793-a528-562046a9c01f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e5d4b0a5-0c1f-4dc0-9d5c-eec896c523ea",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "203c9c02-ed79-40b7-a741-b7d448fb5f9e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9d9d2ba7-09bc-4f07-b4ee-470b2cb264c1",
                    "name": "credentials_verify:vc:credentialSubject:id:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": 123\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..qPc7PrMuniibwI74A9ELPRd1YyUjNyeccnUFc4GCfj7I3oREDl0RT6PEt1pEY81mq7vlIsNG1myE86igC__qBA\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "cfabb8ff-ed5d-424b-a479-d0effeed194a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5cd2226e-fdcc-4870-9059-cb74c72907da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "42542741-215f-4326-9785-7934d3ad4113",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "710a32bf-667d-46ea-8969-445f8f09bf82"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4f0cba88-db2b-44cb-afa1-e64179a6f08d",
                    "name": "credentials_verify:vc:credentialSubject:id:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": null\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..10vzNYPpxv6gZwVR-V23lgvIgseVOwxT6Tc1Zbn5T6pWGmUhrkur_O-OexNVjkVSf7Qu_6NDnIL1m0KcNKGBCg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "002a6cf9-58fa-4367-b454-973269bcb016",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d7abce8c-9f9a-4732-bef8-4ea96c0b0bfc"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "a9d01f6c-86d3-43da-9f53-b83b0dc0097a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bbec3f14-a8b3-433d-b93a-a9fff1bd4ca5"
                        }
                      }
                    ]
                  },
                  {
                    "id": "db5c6a33-f7d9-47b9-bdff-59d4029c749c",
                    "name": "credentials_verify:vc:credentialSubject:id:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": {\n                \"key\": \"did:example:123\"\n            }\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..tQJMGZTsqt1RhpxKkq647EHc3pjQ183zd4KchfvD3dXWVfL9X1fUedMbj33l8eev6YWua2-6_4_sUTDr2MLEDg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "22ff50fd-54a2-44e4-a3ba-b096b8a9b258",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "5fd60976-926c-40ec-bba1-235c3242d673"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "92809052-e03e-4756-b78b-8d233cd6304e",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c6d18a8b-43b1-4002-834c-d97a15f3cd34"
                        }
                      }
                    ]
                  },
                  {
                    "id": "9b081c94-6b79-428c-9c71-f82b7b094205",
                    "name": "credentials_verify:proof:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aff1911a-3d02-470a-baf1-f81686b29d29",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required for embedded proof VCs",
                            "delete rawBody.proof",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "8638061d-b939-4262-af59-912aa062121b"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "59c62758-63bb-4a7c-944c-b0f948657f86",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "9999e84b-2814-437d-89a2-4139ffbfe8a4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "593e627b-b73c-4163-9813-0f28c551ef8b",
                    "name": "credentials_verify:proof:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "38949d57-b6b0-49cb-b5af-0b9d14d7e050",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = [];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "4d17d5b9-299d-4fa6-9fab-b1e527adc6c8"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d01f8c25-f2fc-4eef-b180-53f84111f77a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "bfa9e1dc-0f86-47b1-94c4-11c1b7da5da7"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a4795bea-b178-48d4-94a8-5511c0fce278",
                    "name": "credentials_verify:proof:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dee4f4a-cc93-4487-8b5a-fc1213906a4e",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "a73f6267-a3b1-4cf5-b158-c1d66a22e0ea"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5d31c02d-21c1-468b-b6f1-2fa8d8aa8d93",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a5a0ec96-7f6d-4868-96a7-c9614b7c7de1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1d02b827-156f-4387-8e3b-fc028f64da3f",
                    "name": "credentials_verify:proof:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "4bc6e7e9-14b7-4765-8f10-62778a70adc1",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = 10;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "378ceb24-f37f-42f8-96ed-a87e2655812c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bb16e09e-c71d-4908-b9a2-42965d26ddf5",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "23ef7bd1-03b6-4abf-925c-7fb1637e2df1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5cf5cad-c252-4110-8975-fa92cd8515f2",
                    "name": "credentials_verify:proof:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8ef5d977-349a-4712-a0bf-ad67c311ec83",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "36a10c8d-651c-4baa-8d82-acc86828be63"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f0c7fdf3-82ee-4218-92b6-1782fd86bacd",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "350e1c88-c8b7-4081-8209-f82d87c8c74c"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e23841a5-4ef9-4636-b480-f895e2979073",
                    "name": "credentials_verify:proof:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fa5e26cc-6bec-4178-8b9d-9a0a9a8c1fb4",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof is required to be an object for embedded proof VCs",
                            "rawBody.proof = \"string\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5543bdf7-150f-430f-9329-8115eacf6146"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1efc4c29-13ab-4b6f-897d-7d1f93b35d07",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "def12470-1695-44e7-bc7d-7b9fcd602b63"
                        }
                      }
                    ]
                  },
                  {
                    "id": "014ce255-1590-4afc-93cb-7043c9dcfcb0",
                    "name": "credentials_verify:proof:type:missing",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "335304b1-db3f-4551-af8c-38b10b80eb78",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required for embedded proof VCs",
                            "delete rawBody.proof.type",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "55bfa7cf-5fdd-444e-a86d-9dd6b5646165"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "86d0547d-8762-4cd0-a229-e58fe8f37814",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "187719d5-784b-4cd2-b7d6-225b0e3e49a9"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2921169e-c5fe-4484-a5ca-ea31abd56341",
                    "name": "credentials_verify:proof:type:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "de26a705-6c9a-4d63-b793-c16726924ff3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = [\"Ed25519Signature2018\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "dadd79c6-f96e-4bdd-b64c-e75d3f30c8da"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1679722-3342-4264-93ec-f79f5bb39800",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "37e7b39a-faad-4555-be4c-76ee0cd64133"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2cea0c3c-0b29-452a-b168-e29950012d65",
                    "name": "credentials_verify:proof:type:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "9dce9e2c-6a31-4184-a3d6-bbdf007ae703",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7b65af18-ded8-4f36-8eb7-1f029d93099d"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "328e1e25-e1a0-4967-afb0-06a89da90782",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "358572f8-2b14-44bf-b38e-d7d58beb5e41"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4bb98f2b-9fa6-451d-8918-75a3efd80d60",
                    "name": "credentials_verify:proof:type:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "486b0969-3dd7-4e5a-b7a0-0e9ad7a7537f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "7010b6e7-e80c-465a-bcc3-4ba1bcd98458"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2c350e23-3179-4f0b-98e3-63596e60748b",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1bee29c6-d9f6-41a7-a93a-8ad7f65aa9df"
                        }
                      }
                    ]
                  },
                  {
                    "id": "1207ffe2-898c-4c80-a9dd-33605d3da472",
                    "name": "credentials_verify:proof:type:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6b25ba85-2c76-4cca-ae9f-268f21e5b314",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "97f269cd-91a1-466f-a265-1258fc7e0017"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "b82071cf-7f19-4104-afc1-928154a386f1",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b68e19a6-bade-4717-a65f-66c089ac4bf8"
                        }
                      }
                    ]
                  },
                  {
                    "id": "87ba052b-e681-45db-90ec-787e87f4e719",
                    "name": "credentials_verify:proof:type:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "f3473595-d0fd-42cb-9054-aee2d0e6e511",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = {\"key\": \"Ed25519Signature2018\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f63998a9-1cfd-4b31-bf13-42c326f1f778"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f588122a-7831-442e-af65-745e8a6d8f4a",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "a338d719-d2e6-4aae-ba27-1d36730cff46"
                        }
                      }
                    ]
                  },
                  {
                    "id": "0de00fe0-2a7f-4d75-9ab4-a4f6496e2c86",
                    "name": "credentials_verify:proof:type:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d703b38-a62d-477c-af82-9f7e8a74585f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.type is required to be a specific string",
                            "rawBody.proof.type = \"not one of the valid values\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "1ad86154-b5c5-464e-97eb-ed322f12a9fd"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "85ec5b97-7b81-47d9-ae45-186e859c9475",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4483d77d-e304-428f-ab7b-4577c737d872"
                        }
                      }
                    ]
                  },
                  {
                    "id": "60303955-1c18-420f-aebd-aadf93dc8984",
                    "name": "credentials_verify:proof:created:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "949cfb45-2912-417f-aa9a-f845204c2d93",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = [\"2020-04-02T18:28:08Z\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "23e09903-22d8-4dfb-95ef-e5bffc30fd4f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "092661cc-9302-4d22-b76f-c5bc087d7423",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f82a811f-2699-4389-80e7-bb75caa3a31b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "c0643b32-7017-431e-bc71-5037fa3de1d9",
                    "name": "credentials_verify:proof:created:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b8fa4a5-68b4-4f5e-8865-0976c8bc1ad6",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "916c5f7f-7131-4d59-8b95-9764af0cd739"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "626d71af-5a16-45a7-b867-9c3aefd64830",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f18bd280-60ae-4ced-8df9-5b699c79eb40"
                        }
                      }
                    ]
                  },
                  {
                    "id": "697ca1e7-c4a7-456c-8f71-f3134bfb0480",
                    "name": "credentials_verify:proof:created:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "aa42c9b1-fe40-465a-8886-8a9886c69e43",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "9c5032e1-6ab7-4332-85fe-a47e61b65010"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bfa1d64e-f6c4-4ad1-8b4f-5a6930258f53",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "c005deb5-2798-409d-9d71-ee9497c5c1fa"
                        }
                      }
                    ]
                  },
                  {
                    "id": "8611e8ac-1f6c-4b9a-b4ad-3dd8fe58a474",
                    "name": "credentials_verify:proof:created:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2b350730-e38d-4565-8576-36b54d6ee3fb",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "96208537-a859-4c64-bea9-591884c8194e"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3cb35165-b408-47ae-8091-506bb69717dc",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "03a3d19f-c251-4776-9d63-b4fb1c418b27"
                        }
                      }
                    ]
                  },
                  {
                    "id": "afc791a1-94f0-421f-8975-d82477c6d558",
                    "name": "credentials_verify:proof:created:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b89f4d30-2d26-434e-976e-cbe87ccb572c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.created is required to be a string",
                            "rawBody.proof.created = {\"key\": \"2020-04-02T18:28:08Z\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad12feab-d79b-4f9b-a8c5-0d63b9ee3d52"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fae7bbe5-9f55-4487-85f5-9d7ee85bd675",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b4253a89-efe5-4a93-8282-5a48cbb220d4"
                        }
                      }
                    ]
                  },
                  {
                    "id": "eb1728bc-ab0b-45c2-8093-24d67b1f5cfa",
                    "name": "credentials_verify:proof:verificationMethod:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "bd652921-d301-42e5-96bf-1aa68b6f62d0",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = [\"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "72e45a09-6cb9-410b-b0a5-96f6df017af9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "aae3cf8e-7921-4066-9771-fd103e415c22",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "1213960f-b2d9-43da-bf17-b6c2bbd10ac3"
                        }
                      }
                    ]
                  },
                  {
                    "id": "e3945c9c-66d8-4683-8649-e63d65554ff8",
                    "name": "credentials_verify:proof:verificationMethod:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "e1df7c79-ca22-4b26-9310-6bb40522b46c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f5b5ed25-57de-4f79-80ee-c5762f5c9403"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "75e27601-96b6-4c56-a4bb-037f9ad428b0",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "f549f8f4-06c3-48f9-b22c-21f594972248"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a6490bdf-6418-4ebc-9672-592e6b044e40",
                    "name": "credentials_verify:proof:verificationMethod:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b812d7b8-12dc-46fd-a26b-cfa4f96bb17f",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3ac438fd-1801-4885-9841-c3140c2e9364"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "3eaa5976-7e31-431d-9f36-86df91c32241",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "15be7b7f-0e60-4f74-9179-d437d3a42f4d"
                        }
                      }
                    ]
                  },
                  {
                    "id": "6f35a443-e938-4b5c-8518-a4e579ef4f85",
                    "name": "credentials_verify:proof:verificationMethod:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d92a25d1-0fd3-4df4-ba37-06fdb71f1fc3",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "5986e6a6-7d5f-44ca-bc6c-6699e039a29a"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "62387804-4ca5-4c72-8339-bdea2f382283",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "40ea3dea-5189-4850-95b2-4d0bb6746fbc"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3499fdba-87bc-4ad5-add2-55fe802c525f",
                    "name": "credentials_verify:proof:verificationMethod:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "6dc8264b-96b0-42bf-9bb5-60a62951be45",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.verificationMethod is required to be a string",
                            "rawBody.proof.verificationMethod = {\"key\": \"did:example:123#z6MksHh7qHWvybLg5QTPPdG2DgEjjduBDArV9EF9mRiRzMBN\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "26b6fdc6-dfa5-4ef5-862d-7350a25d691f"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "61f899d8-e560-4b1c-9285-9c2e87a5d8b4",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "54b839d2-9194-4224-9045-1272cf2c9f85"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4fc4176d-5a64-47a5-b035-18d5b9439131",
                    "name": "credentials_verify:proof:jws:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7c8c356-6bb8-47cf-9858-603ac53b8826",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = [\"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "435eaba2-0261-458e-88fb-3bf84752c99c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "c7499602-2d5d-4884-a217-874f52f1178c",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "d45d294b-530c-43bc-9d26-691a03f76e97"
                        }
                      }
                    ]
                  },
                  {
                    "id": "32228a30-3182-4268-9165-e5040f099e58",
                    "name": "credentials_verify:proof:jws:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a42cad80-33ab-4c27-ae94-fcb5a2484a62",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "979a324c-9e9d-4cd2-aacf-78f5917d24a2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "80a653d7-5836-46c3-b01d-1eeb0e77f2c7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "17af4067-0020-4a1d-8c02-c82e4dfb219e"
                        }
                      }
                    ]
                  },
                  {
                    "id": "4e57c5ff-93d9-4ffc-ae9b-42ac75c78a4c",
                    "name": "credentials_verify:proof:jws:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "08ee7018-2821-4b2d-90d3-1920f2f06d4c",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "47e466a6-e4f7-4011-b572-fb52b6b37992"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "fa2353ae-aa4b-4ad9-a7c3-f5115ac1f9f7",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "ad411955-7422-4e37-b09a-e547be9a9482"
                        }
                      }
                    ]
                  },
                  {
                    "id": "53ee03f1-ffc5-4abd-8f09-33a9d72e8718",
                    "name": "credentials_verify:proof:jws:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ac7ea9e0-39b9-4dab-861e-cc73b54a99bd",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f7f7d516-96c1-4b51-adf7-34995a6587d5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "426efd83-75ff-4682-b74f-672cb05c2e3d",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "109a72c9-01dd-45d9-b9df-53de4dd57598"
                        }
                      }
                    ]
                  },
                  {
                    "id": "3187d68f-39e3-4522-bf91-2199e8005dcf",
                    "name": "credentials_verify:proof:jws:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "2d3812a2-3d01-41fe-b127-4a65acd32ede",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.jws is required to be a string",
                            "rawBody.proof.jws = {\"key\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..YtqjEYnFENT7fNW-COD0HAACxeuQxPKAmp4nIl8jYAu__6IH2FpSxv81w-l5PvE1og50tS9tH8WyXMlXyo45CA\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "705c5c33-57df-4fc3-9bcf-fdc66de0fbc3"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "53d105cb-6df7-41dd-928c-b780d42bb669",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "45e4e919-8352-4a97-945e-c8e33ca668a1"
                        }
                      }
                    ]
                  },
                  {
                    "id": "68b51d5d-751e-407c-b44b-857323db04c4",
                    "name": "credentials_verify:proof:proofPurpose:array",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "8d3e732b-c3fc-4371-9b1a-23e4ba0d6e19",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = [\"assertionMethod\"];",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "ad702b3b-52e8-4c82-9493-6206c1e4c932"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e467c3d8-8968-4af9-b8c9-e8edc70d37df",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "e335a604-8a49-407c-ab7b-47160fc3bc90"
                        }
                      }
                    ]
                  },
                  {
                    "id": "2965f43d-a5fd-4589-9dca-150d117c14e4",
                    "name": "credentials_verify:proof:proofPurpose:boolean",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a27a6b7e-7fad-4568-905a-b557cd2b1fad",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = true;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "284a982a-43d3-4546-8f6f-a416ea0131d4"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "bac0954b-aa7a-4303-ab9a-a59c530a8810",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "4b5a0966-313e-444e-b56b-a645e5596690"
                        }
                      }
                    ]
                  },
                  {
                    "id": "21a22d76-3eff-4341-93d3-bbf2931513c2",
                    "name": "credentials_verify:proof:proofPurpose:integer",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "a7d8ee89-3595-4768-924d-6a57b5a2a27d",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = 123;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "291c83ad-859f-48ef-b6cb-dc5c82f1a559"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d7a2fbf1-04dd-4c44-8c1c-44ed942cf5a6",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "51707a2b-7a25-4b56-8333-4f975a8fea9b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "5c17b90f-c736-4386-b569-b4cc4b36a61f",
                    "name": "credentials_verify:proof:proofPurpose:null",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "fc8eab59-5145-45b7-821f-0ae2f681b37b",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = null;",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "3a8cd373-11c8-4fe5-95be-2baef953f17c"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "2a161c9a-7c43-4494-b777-11c7557a2a10",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "b0bc09aa-1d77-476f-817c-d51bdefa0b8b"
                        }
                      }
                    ]
                  },
                  {
                    "id": "b5ed167f-7054-438d-9fc0-d3c353114a34",
                    "name": "credentials_verify:proof:proofPurpose:object",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "d9ec889e-3587-4e5e-a383-dca5635de357",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = {\"key\": \"assertionMethod\"};",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f692327e-5605-4b06-bec7-3f1799bae101"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "1c19aaec-08eb-4593-bf6d-2088f7e57ad9",
                          "type": "text/javascript",
                          "exec": [
                            "",
                            ""
                          ],
                          "_lastExecutionId": "ac814125-4cd7-43cc-ac04-bb5c3ead8b92"
                        }
                      }
                    ]
                  },
                  {
                    "id": "a114da8e-1ff7-4a0f-8cca-306b4a0a3a76",
                    "name": "credentials_verify:proof:proofPurpose:string",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "c1015e5d-a160-4a77-a771-ce8ab3d57920",
                          "type": "text/javascript",
                          "exec": [
                            "let rawBody = pm.variables.get(\"valid_vc\");",
                            "",
                            "// credential.proof.proofPurpose is required to be the string \"assertionMethod\".",
                            "rawBody.proof.proofPurpose = \"not a valid value\";",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(rawBody));"
                          ],
                          "_lastExecutionId": "f44e907d-1b53-443c-a971-978ece2becf5"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "d1da4981-0ecd-4796-b66b-46df3925bc64",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "44e6aa72-f190-4643-8b46-9f4add69403b"
                        }
                      }
                    ]
                  }
                ],
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "132eaee2-06a8-419f-b8c6-0a20c766cde3",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "ff97dce6-e892-46e4-927a-127dd3abedf8"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "e47387d1-3209-471f-90b3-342b57e7d6d0",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 400\", function () {",
                        " pm.response.to.have.status(400);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema400\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        ""
                      ],
                      "_lastExecutionId": "6ea54f05-e361-4feb-a1c7-73deae7e85bd"
                    }
                  }
                ]
              },
              {
                "id": "191c6b2c-2ffd-48f8-8093-60cc0c33cb09",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "6534b6e4-7075-4d02-bee3-f85cae3ea0be",
                    "name": "credentials_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {{requestBody}}\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "ce92d9c9-5b91-4129-82f6-6172d59eec38",
                          "type": "text/javascript",
                          "exec": [
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", JSON.stringify(pm.variables.get(\"valid_vc\")));"
                          ],
                          "_lastExecutionId": "bea17fa2-37a3-48df-a9d9-957c280a9488"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "ca46b416-ad00-47d6-8282-ab9f0291259a",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "907dc15a-40ca-4b88-b13f-29b0e220d27d"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "66076d0b-e86b-4791-a77c-70b039902726",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "8f026d5d-7d48-4cf6-911e-084b6e0309ac"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "69d9bcbc-ec9a-48cf-ae1e-63c1830a1f3e",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "42ad4589-4728-438b-b0cd-8ecdba566203"
                    }
                  }
                ]
              },
              {
                "id": "b5378140-3ef7-4b6b-8a8f-8736e2e1bb36",
                "name": "Bad Signature",
                "item": [
                  {
                    "id": "c4749973-c3fe-4714-a68d-0c5949f903dc",
                    "name": "credentials_verify:bad_signature",
                    "request": {
                      "url": {
                        "path": [
                          "credentials",
                          "verify"
                        ],
                        "host": [
                          "{{API_BASE_URL}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "header": [
                        {
                          "key": "Accept",
                          "value": "application/json"
                        }
                      ],
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{\n    \"verifiableCredential\": {\n        \"id\": \"urn:uuid:e22ccc92-2c81-411f-a80f-e7f8334000a7\",\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..mvbcalofPOi7o7nxByyxXCuSOKXuGFM7_W9a8N62-EERarrH4p4T_0c2ZfGnGLiHOvY6Q-dyy38t9HPvXy-MBg\"\n        }\n    }\n}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "test",
                        "script": {
                          "id": "1abe5395-67f4-4cdd-a539-79729237439b",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 200\", function () {",
                            " pm.response.to.have.status(200);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            "",
                            "pm.test(\"response verified is false\", function() {",
                            " const { verified } = pm.response.json();",
                            " pm.expect(verified).to.be.false;",
                            "});"
                          ],
                          "_lastExecutionId": "bc30555b-583d-40e5-985f-d1fc4fd54e07"
                        }
                      },
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "eeb0631c-cdb1-414e-a7bf-535e14c58cb3",
                          "type": "text/javascript",
                          "exec": [
                            ""
                          ],
                          "_lastExecutionId": "60d5ee75-2163-4dcc-80a6-0c93d7ce71c4"
                        }
                      }
                    ]
                  }
                ],
                "event": []
              }
            ],
            "event": []
          },
          {
            "id": "f3b0e09b-1fae-45ab-95fc-cb08652dfa34",
            "name": "Positive Testing",
            "item": [
              {
                "id": "b7bf02e0-4414-4ce5-816c-c3492a12cc6e",
                "name": "credentials_verify",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "ecb4c12b-1634-4115-801d-7ba600f9516e",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "e3f71672-750b-42ca-b6a2-2618a7801789"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "778192ab-7781-4f70-a28f-9d48580e8a1c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "dbfaaf26-0082-4b3a-b072-a7a9f61005e2"
                    }
                  }
                ]
              },
              {
                "id": "965f2c99-3aa1-4108-b175-51abf8388f9e",
                "name": "credentials_verify:issuer:object",
                "request": {
                  "url": {
                    "path": [
                      "credentials",
                      "verify"
                    ],
                    "host": [
                      "{{API_BASE_URL}}"
                    ],
                    "query": [],
                    "variable": []
                  },
                  "header": [
                    {
                      "key": "Accept",
                      "value": "application/json"
                    }
                  ],
                  "method": "POST",
                  "body": {
                    "mode": "raw",
                    "raw": "{\n    \"verifiableCredential\": {\n        \"@context\": [\n            \"https://www.w3.org/2018/credentials/v1\",\n            \"https://w3id.org/traceability/v1\"\n        ],\n        \"credentialSubject\": {\n            \"id\": \"did:example:123\"\n        },\n        \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",\n        \"issuanceDate\": \"2006-01-02T15:04:05Z\",\n        \"issuer\": {\n            \"id\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\"\n        },\n        \"type\": [\n            \"VerifiableCredential\"\n        ],\n        \"proof\": {\n            \"created\": \"2006-01-02T15:04:05Z\",\n            \"verificationMethod\": \"did:key:z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn#z6MkgVHZNqLBqoQAoGxRiSJP5gLgVEDCJJzT5ZsGEabKtfyn\",\n            \"proofPurpose\": \"assertionMethod\",\n            \"type\": \"Ed25519Signature2018\",\n            \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..z7SC-b7i7GCi9S_RgHGIkqzgeSxV5XUT_77JuHgqzQP-5KB5n_PrOW6ITnAlmgWyaVPSOD1IHVjb--avWDrbCQ\"\n        }\n    }\n}",
                    "options": {
                      "raw": {
                        "language": "json"
                      }
                    }
                  }
                },
                "response": [],
                "event": [
                  {
                    "listen": "test",
                    "script": {
                      "id": "92e1f4fb-e934-4aac-a6cb-5306b97f93a6",
                      "type": "text/javascript",
                      "exec": [
                        "pm.test(\"status code is 200\", function () {",
                        " pm.response.to.have.status(200);",
                        "});",
                        "",
                        "pm.test(\"response validates against schema\", function() {",
                        " const schemaString = pm.collectionVariables.get(\"responseSchema200CredentialsVerify\");",
                        " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                        "});",
                        "",
                        "pm.test(\"response verified is true\", function() {",
                        " const { verified } = pm.response.json();",
                        " pm.expect(verified).to.be.true;",
                        "});"
                      ],
                      "_lastExecutionId": "711b9672-1e30-411d-ad05-4a742ed50aa6"
                    }
                  },
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "a1f3da17-7fdb-44d7-bd34-9ee8b81c8465",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2cf1ec86-c221-40c4-9aa7-50a727312dab"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "d4a0c3bf-7268-4b1f-86fe-43d6de839604",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Dummy VC issued for testing",
                "pm.variables.set(\"valid_vc\", {",
                "    \"@context\": [",
                "        \"https://www.w3.org/2018/credentials/v1\"",
                "    ],",
                "    \"credentialSubject\": {",
                "        \"id\": \"did:example:123\"",
                "    },",
                "    \"id\": \"urn:uuid:57016a7f-0e4c-4be9-beec-cf39c4dd459a\",",
                "    \"issuanceDate\": \"2006-01-02T15:04:05Z\",",
                "    \"issuer\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\",",
                "    \"proof\": {",
                "        \"created\": \"2020-04-02T18:48:36Z\",",
                "        \"jws\": \"eyJhbGciOiJFZERTQSIsImI2NCI6ZmFsc2UsImNyaXQiOlsiYjY0Il19..R618vVfGIF2jTe5dVkzMqQYIFKoIkyK_3_35z15tp_aFzew_4ruQt2DcaxdtkwsRff7bFsrVfigTl_XeE3tPDA\",",
                "        \"proofPurpose\": \"assertionMethod\",",
                "        \"type\": \"Ed25519Signature2018\",",
                "        \"verificationMethod\": \"did:key:z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV#z6Mkf5p6p73kd57TRr2zWC1NuMUt3SjtYNANn9qjYXZPAYJV\"",
                "    },",
                "    \"type\": \"VerifiableCredential\"",
                "});",
                ""
              ],
              "_lastExecutionId": "5853a8c4-a030-4396-bdb5-331011680f01"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "1fd2a446-684f-4c84-a59c-7687afb8f8cd",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "70196e2e-3cd5-469f-bc75-51aa73549c87"
            }
          }
        ]
      },
      {
        "id": "b9254ed9-fec1-4f61-8210-eba24fc16338",
        "name": "Presentations - Present",
        "item": [
          {
            "id": "be94a577-6985-456d-a70e-9249b6a09017",
            "name": "Negative Testing",
            "item": [
              {
                "id": "2c6fe2af-10cf-4830-a446-3c26a98cd5e0",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e298bb4a-eda8-4f88-ac52-3d61412f33c9",
                    "name": "presentations:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST"
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "b68f91ec-cc47-40d0-964a-510eb90c84e6",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            ""
                          ],
                          "_lastExecutionId": "12a9c1b3-af21-4f2a-ae72-bb2fc0977bc2"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "f6b5e99a-4f80-4a9f-b485-d6516cd590a9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "c487730d-ea99-425a-906f-6ce2cf64bef1"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "d6534c52-1b8b-4390-bb7a-35db05d6a74c",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "89b134b3-9f58-4c47-8c23-bfdc3c5b798f"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "4be1fca8-94b1-47fd-942b-77d12fce5671",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "01b33a06-43bc-4000-8856-542fbef7e285"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": [
            {
              "type": "string",
              "value": "{{currentAccessToken}}",
              "key": "token"
            }
          ]
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "717b3592-729a-46de-8fd2-776c6ac8fb5e",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ],
              "_lastExecutionId": "aab40db7-d959-4ad6-a6fd-3719489e2f59"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "827da597-826b-4aed-9b5d-9778e3a15ebb",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "80360d0a-310a-4d3f-b886-a7bc0d1006e5"
            }
          }
        ]
      },
      {
        "id": "77f52e6d-62ff-43bf-b24a-b5179ac33286",
        "name": "Presentations - Create",
        "item": [
          {
            "id": "369211e8-b4ff-484c-a50a-c1aba865124d",
            "name": "Negative Testing",
            "item": [
              {
                "id": "3c1f519f-a6a9-4dad-a2ef-34fadbf9434f",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "8ed16bf0-296f-45d5-9267-70bc8df836ee",
                    "name": "presentations_prove:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "prove"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "af34249a-528c-40e6-bd45-90067402e4ef",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "5da897ac-8185-45da-9207-46164dc988c9"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "e192c936-1715-4558-ba88-ed5004f077f9",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "e4522ca7-5917-4cb2-b6f8-5b5f3493f460"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "0383266c-c88e-4da0-931a-bd393f76d647",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "2af5d7f8-340b-44fb-afe4-68855ecf77b1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "1beaa34d-a208-4498-8f10-66d3b05ec638",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "def38672-f01e-4d88-98fb-99d609fece89"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8494e02c-fd1d-4a9c-a5d6-8a2d1b28c381",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "ea787840-7126-4e7c-8cad-b9e8df0e8073"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "bcb4cf12-b0dc-4e36-9ded-f8036beb0625",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "d73ee1ac-fc19-4e74-9959-1dea389c10ba"
            }
          }
        ]
      },
      {
        "id": "711efb0d-9b64-4b61-b2d7-60b1f17c3073",
        "name": "Presentations - Verify",
        "item": [
          {
            "id": "64d043e2-8c37-46b2-90a9-4cbb1b50cd43",
            "name": "Negative Testing",
            "item": [
              {
                "id": "86beabd9-495b-4c0d-86df-ca4c742e33b2",
                "name": "Bad Auth",
                "item": [
                  {
                    "id": "e3bcee9b-4ae4-4dbf-aabc-55fd90258e53",
                    "name": "presentations_verify:missing_auth",
                    "request": {
                      "url": {
                        "path": [
                          "presentations",
                          "verify"
                        ],
                        "host": [
                          "{{presentations_base_url}}"
                        ],
                        "query": [],
                        "variable": []
                      },
                      "method": "POST",
                      "body": {
                        "mode": "raw",
                        "raw": "{{requestBody}}",
                        "options": {
                          "raw": {
                            "language": "json"
                          }
                        }
                      }
                    },
                    "response": [],
                    "event": [
                      {
                        "listen": "prerequest",
                        "script": {
                          "id": "7a14800a-733b-4dee-bfad-07d577abb3f0",
                          "type": "text/javascript",
                          "exec": [
                            "// Get multi-tenant aware presentations base URL from cached did:web document",
                            "const didDoc = pm.variables.get(\"currentDidWeb\");",
                            "const service = didDoc.service.find((s) => s.type.includes('TraceabilityAPI'));",
                            "pm.variables.set(\"presentations_base_url\", service.serviceEndpoint);",
                            "",
                            "// Request body must be serialized before sending over the wire.",
                            "pm.variables.set(\"requestBody\", mutateRequestBody((req) => {",
                            "    // noop",
                            "}));",
                            ""
                          ],
                          "_lastExecutionId": "a189eb93-98a8-45b7-a22e-37eb5b3a0a73"
                        }
                      },
                      {
                        "listen": "test",
                        "script": {
                          "id": "5c4fb8da-639f-4aa2-abe1-fbe9e767185f",
                          "type": "text/javascript",
                          "exec": [
                            "pm.test(\"status code is 401\", function () {",
                            " pm.response.to.have.status(401);",
                            "});",
                            "",
                            "pm.test(\"response validates against schema\", function() {",
                            " const schemaString = pm.collectionVariables.get(\"responseSchema401\");",
                            " pm.response.to.have.jsonSchema(JSON.parse(schemaString));",
                            "});",
                            ""
                          ],
                          "_lastExecutionId": "0b38dce9-7211-4d0f-a516-b374ada17893"
                        }
                      }
                    ]
                  }
                ],
                "auth": {
                  "type": "noauth",
                  "noauth": []
                },
                "event": [
                  {
                    "listen": "prerequest",
                    "script": {
                      "id": "e87abf8b-06fd-41f4-ab66-d4f9eb4dd7a8",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "95daebdc-ac33-40b3-bff1-dd0ff9cd60c1"
                    }
                  },
                  {
                    "listen": "test",
                    "script": {
                      "id": "8d9ebe74-3d6f-42b2-8fbf-6a9fc3d0bf80",
                      "type": "text/javascript",
                      "exec": [
                        ""
                      ],
                      "_lastExecutionId": "883a187e-8b5c-4f6a-b062-8c4111f1ee40"
                    }
                  }
                ]
              }
            ],
            "event": []
          }
        ],
        "auth": {
          "type": "bearer",
          "bearer": []
        },
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "ce17d0f7-0c10-4477-9658-fbbb8537ed76",
              "type": "text/javascript",
              "exec": [
                "// Obtain an access token",
                "utils(pm).getAccessToken();",
                "",
                "",
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                "",
                "// Minimal request body should represent the minimum set of data required",
                "// for a successful request. This should exclude all optional items, and",
                "// should contain the first alternate version of any 'oneOf' elements",
                "// defined in the OpenAPI schema.",
                "//",
                "// Tests will use this minimal request body as a starting point and will",
                "// mutate it as needed in pre-request scripts, e.g., to run tests using",
                "// alternate or optional elements.",
                "",
                "pm.variables.set(\"minimalRequestBody\", {",
                "});",
                "",
                "mutateRequestBody = (mutationFunction) => {",
                "    const req = pm.variables.get(\"minimalRequestBody\");",
                "    mutationFunction(req);",
                "    return JSON.stringify(req);",
                "};"
              ],
              "_lastExecutionId": "896c07b6-958d-4f53-be2e-0c4fac655020"
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "6b3e51b7-9ceb-4fb4-9f85-c5defdfb4fe0",
              "type": "text/javascript",
              "exec": [
                ""
              ],
              "_lastExecutionId": "28e90343-580c-4710-a046-24e3ded5eb80"
            }
          }
        ]
      },
      {
        "id": "ae6249cb-b85e-4fe7-a770-a37dcb7b6623",
        "name": "Presentations - Notify",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "58df3e3f-e227-458c-8e65-d44feaa203c6",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "ef4c6d6f-095e-4494-b00f-a2b46462f822",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      },
      {
        "id": "f9f5b851-2c2f-4382-b8cc-60815df6339e",
        "name": "Presentations - Submit",
        "item": [],
        "event": [
          {
            "listen": "prerequest",
            "script": {
              "id": "8dc8a4dd-db68-4978-92a7-859917ef1451",
              "type": "text/javascript",
              "exec": [
                "// Presentations requires a multi-tenant aware presentation endpoint. This",
                "// fires off an async sendRequest() that Postman will wait for before running",
                "// any requests in the collection.",
                "utils(pm).populateCurrentDidWeb(pm.environment.get(\"ORGANIZATION_DID_WEB\"));",
                ""
              ]
            }
          },
          {
            "listen": "test",
            "script": {
              "id": "59540890-d071-4632-a732-21181a0ce092",
              "type": "text/javascript",
              "exec": [
                ""
              ]
            }
          }
        ]
      }
    ]
  },
  "run": {
    "stats": {
      "iterations": {
        "total": 1,
        "pending": 0,
        "failed": 0
      },
      "items": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "scripts": {
        "total": 1891,
        "pending": 0,
        "failed": 0
      },
      "prerequests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "requests": {
        "total": 252,
        "pending": 0,
        "failed": 0
      },
      "tests": {
        "total": 250,
        "pending": 0,
        "failed": 0
      },
      "assertions": {
        "total": 507,
        "pending": 0,
        "failed": 36
      },
      "testScripts": {
        "total": 950,
        "pending": 0,
        "failed": 0
      },
      "prerequestScripts": {
        "total": 941,
        "pending": 0,
        "failed": 0
      }
    },
    "timings": {
      "responseAverage": 357.5079365079366,
      "responseMin": 14,
      "responseMax": 11700,
      "responseSd": 1683.5973284080494,
      "dnsAverage": 0,
      "dnsMin": 0,
      "dnsMax": 0,
      "dnsSd": 0,
      "firstByteAverage": 0,
      "firstByteMin": 0,
      "firstByteMax": 0,
      "firstByteSd": 0,
      "started": 1725842693901,
      "completed": 1725842792510
    },
    "executions": [
      {
        "id": "b798abf4-b990-4d63-9632-0e0c7eabd9d1",
        "cursor": {
          "position": 0,
          "iteration": 0,
          "length": 250,
          "cycles": 1,
          "empty": false,
          "eof": false,
          "bof": true,
          "cr": false,
          "ref": "2cf92c84-e46b-4a61-a5bc-eed52a4e7024",
          "httpRequestId": "dcee7ad9-016a-4706-bb8d-e6f7cfd8f857"
        },
        "item": {
          "id": "b798abf4-b990-4d63-9632-0e0c7eabd9d1",
          "name": "Clear Token Cache"
        },
        "response": {
          "id": "ab474575-7d9f-4a5d-8d81-5e5a4369e9b9",
          "status": "OK",
          "code": 200,
          "responseTime": 62,
          "responseSize": 0
        }
      },
      {
        "id": "5020dd57-29d0-4e58-a068-b3770c524a29",
        "cursor": {
          "ref": "87a3334a-4e34-4282-8992-1cc16b78d632",
          "length": 250,
          "cycles": 1,
          "position": 1,
          "iteration": 0,
          "httpRequestId": "5cdd5550-8633-4ca1-95b1-9a8bdbd219d5"
        },
        "item": {
          "id": "5020dd57-29d0-4e58-a068-b3770c524a29",
          "name": "Clear DID Web Cache"
        },
        "response": {
          "id": "bc395b25-c091-4082-b2a6-e753daf58723",
          "status": "OK",
          "code": 200,
          "responseTime": 14,
          "responseSize": 0
        }
      },
      {
        "id": "a21cee73-e1d2-4f52-972c-9b33659906df",
        "cursor": {
          "ref": "cc55b041-5985-4d8a-95ab-abcc9d94a370",
          "length": 250,
          "cycles": 1,
          "position": 2,
          "iteration": 0,
          "httpRequestId": "a6681945-275c-428b-a9e6-5b4206aaae1d"
        },
        "item": {
          "id": "a21cee73-e1d2-4f52-972c-9b33659906df",
          "name": "did_json"
        },
        "response": {
          "id": "a4e06aed-3a85-424b-986e-d63f59338bce",
          "status": "OK",
          "code": 200,
          "responseTime": 431,
          "responseSize": 1024
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1aeba3-21f0-4ede-bd70-4f1cf6dfe8c5",
        "cursor": {
          "ref": "b6de9c6e-6804-4ab3-97bb-812fe54be96f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68e011de-024c-4885-8193-a08d4f8bab7b"
        },
        "item": {
          "id": "4b1aeba3-21f0-4ede-bd70-4f1cf6dfe8c5",
          "name": "did:invalid"
        },
        "response": {
          "id": "0068363d-7688-48a6-9d10-eb33390c0b0a",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 11474,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 504",
              "stack": "AssertionError: expected response to have status code 400 but got 504\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4b1aeba3-21f0-4ede-bd70-4f1cf6dfe8c5",
        "cursor": {
          "ref": "b6de9c6e-6804-4ab3-97bb-812fe54be96f",
          "length": 250,
          "cycles": 1,
          "position": 3,
          "iteration": 0,
          "httpRequestId": "68e011de-024c-4885-8193-a08d4f8bab7b"
        },
        "item": {
          "id": "4b1aeba3-21f0-4ede-bd70-4f1cf6dfe8c5",
          "name": "did:invalid"
        },
        "response": {
          "id": "0068363d-7688-48a6-9d10-eb33390c0b0a",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 11474,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 400",
              "message": "expected response to have status code 400 but got 504",
              "stack": "AssertionError: expected response to have status code 400 but got 504\n   at Object.eval sandbox-script.js:1:4)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4719fb62-6dc3-4113-bcbf-4a71d486b404",
        "cursor": {
          "ref": "4b3db95d-2c14-4bbc-8795-fe1693db6c5b",
          "length": 250,
          "cycles": 1,
          "position": 4,
          "iteration": 0,
          "httpRequestId": "9e25d20c-234e-41de-ac4d-b4298460deaf"
        },
        "item": {
          "id": "4719fb62-6dc3-4113-bcbf-4a71d486b404",
          "name": "did:not_found:did_web"
        },
        "response": {
          "id": "7d0be4b6-af52-4e6a-acf6-829288b74d67",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 11629,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 504",
              "stack": "AssertionError: expected response to have status code 404 but got 504\n   at Object.eval sandbox-script.js:1:5)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "553a7e1f-8d0d-4c28-8e08-2a97be41cb82",
        "cursor": {
          "ref": "f8428215-104b-4d68-9d2c-edfd6dc73df7",
          "length": 250,
          "cycles": 1,
          "position": 5,
          "iteration": 0,
          "httpRequestId": "d7b08e33-50c2-4341-9435-f15354496de0"
        },
        "item": {
          "id": "553a7e1f-8d0d-4c28-8e08-2a97be41cb82",
          "name": "did:not_found:urn"
        },
        "response": {
          "id": "2254bb14-b3c1-43b7-937f-89c28bc598f9",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1545,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 404",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 404",
              "message": "expected response to have status code 404 but got 500",
              "stack": "AssertionError: expected response to have status code 404 but got 500\n   at Object.eval sandbox-script.js:1:6)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d91e6a9-a7c6-4479-853f-319f892d0577",
        "cursor": {
          "ref": "bea72d67-e8fe-4ec1-9a77-2bbe8c898116",
          "length": 250,
          "cycles": 1,
          "position": 6,
          "iteration": 0,
          "httpRequestId": "20e65dbd-bc68-4424-bebf-65e9e2bd23dc"
        },
        "item": {
          "id": "1d91e6a9-a7c6-4479-853f-319f892d0577",
          "name": "identifiers:missing_auth"
        },
        "response": {
          "id": "1a9c5e24-5e46-421f-8197-8304fde2abf1",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 68,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a14f782-905f-42f9-98fe-2bb6a5985437",
        "cursor": {
          "ref": "bec75405-7cdb-4daa-a095-2857b20aa1c9",
          "length": 250,
          "cycles": 1,
          "position": 7,
          "iteration": 0,
          "httpRequestId": "8f7e7214-b59d-447d-ba08-18e0ce74c1b6"
        },
        "item": {
          "id": "6a14f782-905f-42f9-98fe-2bb6a5985437",
          "name": "identifiers"
        },
        "response": {
          "id": "6702fbc4-8c52-4c8d-8b23-7742de979667",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 403,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:8)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'didDocument'\n   at Object.eval sandbox-script.js:2:8)"
            }
          }
        ]
      },
      {
        "id": "9795e4ae-4fa5-4653-b707-64da020d6d66",
        "cursor": {
          "ref": "430cbe29-47d7-4513-b720-1f19a3172a1f",
          "length": 250,
          "cycles": 1,
          "position": 8,
          "iteration": 0,
          "httpRequestId": "0223d9f2-4836-41cb-97a2-4826350b8651"
        },
        "item": {
          "id": "9795e4ae-4fa5-4653-b707-64da020d6d66",
          "name": "credentials_issue:credential:missing"
        },
        "response": {
          "id": "4e0c40b6-de7f-4014-9a0e-2bc8bbbe295c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 78
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "63d355af-2352-40c9-baef-d3893fd0e22d",
        "cursor": {
          "ref": "eda794fd-c1ac-4098-aefb-73d1cc64323d",
          "length": 250,
          "cycles": 1,
          "position": 9,
          "iteration": 0,
          "httpRequestId": "ed98eeec-287d-48ca-b606-a68847febb9d"
        },
        "item": {
          "id": "63d355af-2352-40c9-baef-d3893fd0e22d",
          "name": "credentials_issue:credential.@context:missing"
        },
        "response": {
          "id": "89cdfbfa-3c3e-4200-8c86-7cb53721e51f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 89
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "205d7af7-72c6-4157-91d7-2d14109211ba",
        "cursor": {
          "ref": "df1791ff-19bc-4a86-a94b-1139de872761",
          "length": 250,
          "cycles": 1,
          "position": 10,
          "iteration": 0,
          "httpRequestId": "1e15a838-b002-4105-8fe1-046b1d1da327"
        },
        "item": {
          "id": "205d7af7-72c6-4157-91d7-2d14109211ba",
          "name": "credentials_issue:credential.@context:boolean"
        },
        "response": {
          "id": "710fe5e9-4008-4200-99da-0336689e798e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52ed7efc-529c-4702-acec-0dd51706a011",
        "cursor": {
          "ref": "1da59f4f-7a6e-4358-8701-dec2e23b14d2",
          "length": 250,
          "cycles": 1,
          "position": 11,
          "iteration": 0,
          "httpRequestId": "48262ead-4a15-4248-97be-aad88ea3f458"
        },
        "item": {
          "id": "52ed7efc-529c-4702-acec-0dd51706a011",
          "name": "credentials_issue:credential.@context:integer Copy"
        },
        "response": {
          "id": "1a9f4133-75ed-4367-9cfe-94cc32a22a48",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "498528d4-7d05-48b2-82f9-23434d95d050",
        "cursor": {
          "ref": "cc565bac-be1d-49ea-8f11-e4959ecb012a",
          "length": 250,
          "cycles": 1,
          "position": 12,
          "iteration": 0,
          "httpRequestId": "fe01c6a5-b1d9-4f6f-8888-8d22ee0ada00"
        },
        "item": {
          "id": "498528d4-7d05-48b2-82f9-23434d95d050",
          "name": "credentials_issue:credential.@context:null"
        },
        "response": {
          "id": "adc3c822-9478-4ceb-bf40-3d996b1bb9d1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "191cd3d7-2cce-431a-9a84-ab368071e393",
        "cursor": {
          "ref": "a92ec54c-048e-471e-bb52-e400703cc1a5",
          "length": 250,
          "cycles": 1,
          "position": 13,
          "iteration": 0,
          "httpRequestId": "53c59da4-c60d-451c-b896-8c0b4d597527"
        },
        "item": {
          "id": "191cd3d7-2cce-431a-9a84-ab368071e393",
          "name": "credentials_issue:credential.@context:object"
        },
        "response": {
          "id": "33c27a16-f41a-4852-896b-33aee3a57d26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412c3dd3-56bd-4dd4-9b4c-fb53d7c3aeab",
        "cursor": {
          "ref": "f4c8acff-16a4-4080-8b60-7918c2c8bb76",
          "length": 250,
          "cycles": 1,
          "position": 14,
          "iteration": 0,
          "httpRequestId": "22537cc8-5451-4898-bc95-9c713d0db888"
        },
        "item": {
          "id": "412c3dd3-56bd-4dd4-9b4c-fb53d7c3aeab",
          "name": "credentials_issue:credential.@context:string"
        },
        "response": {
          "id": "f8c3e559-8391-4186-8a60-004304e7fc73",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6ab0d2b-a557-42ed-9fdf-129004377044",
        "cursor": {
          "ref": "3b0a4ea5-7831-436b-a6bd-f3e264665ebf",
          "length": 250,
          "cycles": 1,
          "position": 15,
          "iteration": 0,
          "httpRequestId": "a6151948-2759-4da0-b138-9d5b9ef36c1e"
        },
        "item": {
          "id": "a6ab0d2b-a557-42ed-9fdf-129004377044",
          "name": "credentials_issue:credential.@context.item.array"
        },
        "response": {
          "id": "87c20a70-65de-4e73-ab54-7a5df30d3d01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef8ec89a-57cc-4cca-88fc-f13cde46d8bd",
        "cursor": {
          "ref": "acebd49b-c228-4afd-923a-afaaccb2b9fc",
          "length": 250,
          "cycles": 1,
          "position": 16,
          "iteration": 0,
          "httpRequestId": "41a6f6f6-8e4a-4f53-871c-0b60c8372686"
        },
        "item": {
          "id": "ef8ec89a-57cc-4cca-88fc-f13cde46d8bd",
          "name": "credentials_issue:credential.@context.item.boolean"
        },
        "response": {
          "id": "f2d721d3-e251-450d-8b4c-0e2016facaf5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5140acfe-ae44-4e4d-a1d7-639881fe4060",
        "cursor": {
          "ref": "2c83ddd9-d480-4e38-91a4-1b6f5344e71a",
          "length": 250,
          "cycles": 1,
          "position": 17,
          "iteration": 0,
          "httpRequestId": "c4c17fdd-d0b8-4348-8bcf-7180a4ad61a8"
        },
        "item": {
          "id": "5140acfe-ae44-4e4d-a1d7-639881fe4060",
          "name": "credentials_issue:credential.@context.item.integer"
        },
        "response": {
          "id": "c50a188d-33be-411e-b6cd-871015b6310f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2bbbd1d9-60f5-4aae-ae9a-0bc199137040",
        "cursor": {
          "ref": "05314349-dff4-481d-9302-3ab330f19c08",
          "length": 250,
          "cycles": 1,
          "position": 18,
          "iteration": 0,
          "httpRequestId": "a643d4ec-4ef5-4bfd-bcc7-36c265733486"
        },
        "item": {
          "id": "2bbbd1d9-60f5-4aae-ae9a-0bc199137040",
          "name": "credentials_issue:credential.@context.item.null"
        },
        "response": {
          "id": "76db53c4-4e01-4961-a147-5acfce3f006a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f6ce9fb4-aac8-472c-8a55-7f2e596048ee",
        "cursor": {
          "ref": "769b9864-dfe2-4d45-be6e-f8caab7ba80e",
          "length": 250,
          "cycles": 1,
          "position": 19,
          "iteration": 0,
          "httpRequestId": "ddce8ae2-0bed-4d4f-95d7-d80e941f1115"
        },
        "item": {
          "id": "f6ce9fb4-aac8-472c-8a55-7f2e596048ee",
          "name": "credentials_issue:credential.@context.item.object"
        },
        "response": {
          "id": "b023503c-9f0a-45bd-8d0d-7ac444c3733c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cc25aae5-4b5f-4c63-9918-b0ecc0cc769e",
        "cursor": {
          "ref": "cc171819-d463-4a93-8223-de018726bb6d",
          "length": 250,
          "cycles": 1,
          "position": 20,
          "iteration": 0,
          "httpRequestId": "313e97ae-45d5-45e0-ac69-f91e018e87e1"
        },
        "item": {
          "id": "cc25aae5-4b5f-4c63-9918-b0ecc0cc769e",
          "name": "credentials_issue:credential.id:array"
        },
        "response": {
          "id": "24f2f4f9-734d-4530-930e-87ad571b7fd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9c1cb4b-83c4-4b98-a293-08b33c6bd1b6",
        "cursor": {
          "ref": "75a08002-f299-45df-bb52-d61c4deadeea",
          "length": 250,
          "cycles": 1,
          "position": 21,
          "iteration": 0,
          "httpRequestId": "aa56b4c2-c9f7-4714-ab38-d00b589a817e"
        },
        "item": {
          "id": "e9c1cb4b-83c4-4b98-a293-08b33c6bd1b6",
          "name": "credentials_issue:credential.id:boolean"
        },
        "response": {
          "id": "c7741dec-edaa-431b-a20b-8a3853327346",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41af94fb-e4ab-40a9-9360-ecaf567c59c5",
        "cursor": {
          "ref": "aa4a3c85-0afb-407b-a4cc-511ef5080dc4",
          "length": 250,
          "cycles": 1,
          "position": 22,
          "iteration": 0,
          "httpRequestId": "3180eaf1-4e9a-459a-aaf6-a97a9aae2a04"
        },
        "item": {
          "id": "41af94fb-e4ab-40a9-9360-ecaf567c59c5",
          "name": "credentials_issue:credential.id:integer"
        },
        "response": {
          "id": "b31f4e7b-08bd-49d1-a2fe-08eb36036293",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 73,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9aa6c4e3-6f01-4d29-9caa-0494a7e508c5",
        "cursor": {
          "ref": "df754b48-c7ce-446b-baee-5b1990a6218d",
          "length": 250,
          "cycles": 1,
          "position": 23,
          "iteration": 0,
          "httpRequestId": "b3e8e049-63b9-456f-a349-5148a30b6ace"
        },
        "item": {
          "id": "9aa6c4e3-6f01-4d29-9caa-0494a7e508c5",
          "name": "credentials_issue:credential.id:null"
        },
        "response": {
          "id": "fd45f2f5-d118-4ef6-a58f-0362c0c4f102",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78031f1a-190c-48ee-865e-52e0c6e996fc",
        "cursor": {
          "ref": "bd9bbc30-2012-43f6-bec9-6af4c117ce78",
          "length": 250,
          "cycles": 1,
          "position": 24,
          "iteration": 0,
          "httpRequestId": "4137063b-efb0-45bb-8590-e8f3125c654f"
        },
        "item": {
          "id": "78031f1a-190c-48ee-865e-52e0c6e996fc",
          "name": "credentials_issue:credential.id:object"
        },
        "response": {
          "id": "4c7629c2-3ced-4235-8a3a-a697540b3ebc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f213395-828a-4037-b0f7-ffecf7066811",
        "cursor": {
          "ref": "13e06886-224b-4551-82d6-4550f8170485",
          "length": 250,
          "cycles": 1,
          "position": 25,
          "iteration": 0,
          "httpRequestId": "2ac7bccf-3d6f-476f-b3f7-79f67e772a33"
        },
        "item": {
          "id": "8f213395-828a-4037-b0f7-ffecf7066811",
          "name": "credentials_issue:credential.type:missing"
        },
        "response": {
          "id": "4d15dfaf-f55d-4762-a154-408cf0567350",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 85
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "361a7618-59ba-47e6-8aeb-8517a64ac764",
        "cursor": {
          "ref": "64277f27-522a-4df3-94cd-1de6f7815b57",
          "length": 250,
          "cycles": 1,
          "position": 26,
          "iteration": 0,
          "httpRequestId": "e1e39ceb-d770-4604-8ea1-95067b51ffa2"
        },
        "item": {
          "id": "361a7618-59ba-47e6-8aeb-8517a64ac764",
          "name": "credentials_issue:credential.type:boolean"
        },
        "response": {
          "id": "b6c5d796-0acf-4c6d-baa0-772924dad553",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4189973f-7d1e-47fe-a991-ad644e29d986",
        "cursor": {
          "ref": "0287196e-7cd7-4188-b9bf-f1b60b2e3e2b",
          "length": 250,
          "cycles": 1,
          "position": 27,
          "iteration": 0,
          "httpRequestId": "41da7ff7-76ec-4609-a771-b1816d13dc6a"
        },
        "item": {
          "id": "4189973f-7d1e-47fe-a991-ad644e29d986",
          "name": "credentials_issue:credential.type:integer"
        },
        "response": {
          "id": "97f0b893-505c-4edd-814e-f5a2d3b70f50",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f949041f-4b8c-4db6-9bb3-3b2a8429f4a5",
        "cursor": {
          "ref": "3482f73d-0221-441a-9ba6-6ebb1cbefef9",
          "length": 250,
          "cycles": 1,
          "position": 28,
          "iteration": 0,
          "httpRequestId": "2ab7b7b2-ddf8-4d3a-a808-7631cadba21b"
        },
        "item": {
          "id": "f949041f-4b8c-4db6-9bb3-3b2a8429f4a5",
          "name": "credentials_issue:credential.type:null"
        },
        "response": {
          "id": "0634bb3a-6b2d-45e0-81fe-64af7aff38c6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d0fb158-29e0-4805-b474-3a68c3f1e595",
        "cursor": {
          "ref": "f177d7eb-b370-4b91-a856-87298ba3fdd1",
          "length": 250,
          "cycles": 1,
          "position": 29,
          "iteration": 0,
          "httpRequestId": "90541eb6-7e8a-4c37-86b4-ab3779655012"
        },
        "item": {
          "id": "6d0fb158-29e0-4805-b474-3a68c3f1e595",
          "name": "credentials_issue:credential.type:object"
        },
        "response": {
          "id": "f0094c1a-61b1-4cbd-9266-cb34bf75214a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e9009b72-69b5-40a9-a467-782ba815a5d9",
        "cursor": {
          "ref": "fd4609ff-c8c7-4f72-b3ff-fc8c450752fe",
          "length": 250,
          "cycles": 1,
          "position": 30,
          "iteration": 0,
          "httpRequestId": "367d3948-3dc9-4326-8082-ac3bb5f6e66f"
        },
        "item": {
          "id": "e9009b72-69b5-40a9-a467-782ba815a5d9",
          "name": "credentials_issue:credential.type:string"
        },
        "response": {
          "id": "a4746bfd-71ee-47bd-850b-d234e02d8ec7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1cef4517-2c6f-49aa-beb8-fcb3c2716a7f",
        "cursor": {
          "ref": "63761957-932b-4a1b-b6c9-f1c56e7bab8c",
          "length": 250,
          "cycles": 1,
          "position": 31,
          "iteration": 0,
          "httpRequestId": "e570f848-ef93-4434-8eb0-d61b2401ff11"
        },
        "item": {
          "id": "1cef4517-2c6f-49aa-beb8-fcb3c2716a7f",
          "name": "credentials_issue:credential.type.item:missing"
        },
        "response": {
          "id": "cd3628e0-7c69-4547-bc0d-04b357d9619c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3ab1558-532a-411d-83f3-4ef71dd8beb5",
        "cursor": {
          "ref": "b2fd604e-0903-46eb-8b3b-b97091bb13c6",
          "length": 250,
          "cycles": 1,
          "position": 32,
          "iteration": 0,
          "httpRequestId": "f0bf8b0b-03c8-432e-b310-3ac7ff42dade"
        },
        "item": {
          "id": "f3ab1558-532a-411d-83f3-4ef71dd8beb5",
          "name": "credentials_issue:credential.type.item:array"
        },
        "response": {
          "id": "df829eef-d57b-4bc1-80b2-6bfffefeabcd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ca89693a-a68b-4c7d-854d-327d75358dae",
        "cursor": {
          "ref": "b02891cb-b7ed-4161-8098-186e462fbff1",
          "length": 250,
          "cycles": 1,
          "position": 33,
          "iteration": 0,
          "httpRequestId": "b056628c-2fa1-487e-a8ae-af4565720a2f"
        },
        "item": {
          "id": "ca89693a-a68b-4c7d-854d-327d75358dae",
          "name": "credentials_issue:credential.type.item:boolean"
        },
        "response": {
          "id": "e6fe002d-618b-4c4e-aba9-2c159fba9570",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "34eb4be2-67ca-45d8-944e-e17967a88b34",
        "cursor": {
          "ref": "e234a1b8-31c4-455e-bcd2-c06e3811f8fd",
          "length": 250,
          "cycles": 1,
          "position": 34,
          "iteration": 0,
          "httpRequestId": "d47b5927-34a4-4b16-988d-138ccc8b36c3"
        },
        "item": {
          "id": "34eb4be2-67ca-45d8-944e-e17967a88b34",
          "name": "credentials_issue:credential.type.item:integer"
        },
        "response": {
          "id": "e56029a9-eb36-4923-98fd-40ccd5b61fe5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "917fdb41-ec5d-40bf-a794-13d8e42e36e0",
        "cursor": {
          "ref": "4c7b7e88-e0b4-4799-9cb3-a89ee4dd6481",
          "length": 250,
          "cycles": 1,
          "position": 35,
          "iteration": 0,
          "httpRequestId": "81f54142-bfa9-483e-9b7e-0917904cb767"
        },
        "item": {
          "id": "917fdb41-ec5d-40bf-a794-13d8e42e36e0",
          "name": "credentials_issue:credential.type.item:null"
        },
        "response": {
          "id": "15393e0e-1c16-4e4f-a4ca-cb953da14392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a0de51b8-5b4e-4907-8e74-2d061b7b06a4",
        "cursor": {
          "ref": "14d6cee2-bc23-4f91-be75-3c537fa6842f",
          "length": 250,
          "cycles": 1,
          "position": 36,
          "iteration": 0,
          "httpRequestId": "965822e7-b935-4988-bad4-309220190040"
        },
        "item": {
          "id": "a0de51b8-5b4e-4907-8e74-2d061b7b06a4",
          "name": "credentials_issue:credential.type.item:object"
        },
        "response": {
          "id": "5a90c894-94fa-4623-bf76-c1826dd8d51e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 107
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3e54ade0-b4bd-4c3e-b9b6-9e95213eaebf",
        "cursor": {
          "ref": "41c0d126-4031-4cdb-8fe0-c0cf4c078144",
          "length": 250,
          "cycles": 1,
          "position": 37,
          "iteration": 0,
          "httpRequestId": "795135bd-4be6-421e-a1dd-43a7349b7ab0"
        },
        "item": {
          "id": "3e54ade0-b4bd-4c3e-b9b6-9e95213eaebf",
          "name": "credentials_issue:credential.issuer:missing"
        },
        "response": {
          "id": "1eea1564-4668-48f9-8cb8-e1642ce54796",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "765a9a5b-cbb4-4640-8517-6a5cbf79a0d1",
        "cursor": {
          "ref": "2c9cee30-e104-4f37-b888-0fce230c05b7",
          "length": 250,
          "cycles": 1,
          "position": 38,
          "iteration": 0,
          "httpRequestId": "9b6d6345-bdf0-462b-924f-e631d66da826"
        },
        "item": {
          "id": "765a9a5b-cbb4-4640-8517-6a5cbf79a0d1",
          "name": "credentials_issue:credential.issuer:array"
        },
        "response": {
          "id": "55519801-8fc0-4d71-8259-62945331caf7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4983a6f9-8e40-4872-89db-b596859a47e1",
        "cursor": {
          "ref": "91727d4a-69b4-4d0f-8151-bbae22f18ed3",
          "length": 250,
          "cycles": 1,
          "position": 39,
          "iteration": 0,
          "httpRequestId": "61085f19-3ce5-41cb-8570-d2c9a0f1778a"
        },
        "item": {
          "id": "4983a6f9-8e40-4872-89db-b596859a47e1",
          "name": "credentials_issue:credential.issuer:boolean"
        },
        "response": {
          "id": "411a590a-b571-4fed-98e4-248b1c643eac",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04797a4b-6889-4f66-a7d5-48b03248a01b",
        "cursor": {
          "ref": "58122010-ae09-48e0-81a5-a9eb567d8819",
          "length": 250,
          "cycles": 1,
          "position": 40,
          "iteration": 0,
          "httpRequestId": "d0627b6c-ecf3-4d39-806e-6e36f7383bda"
        },
        "item": {
          "id": "04797a4b-6889-4f66-a7d5-48b03248a01b",
          "name": "credentials_issue:credential.issuer:integer"
        },
        "response": {
          "id": "f2409885-2833-489d-9f2f-5409d914cb61",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "162c4b0f-2f38-4039-8c02-7b38b6310b67",
        "cursor": {
          "ref": "71f61736-0b20-46e0-86e6-e1a15f93a001",
          "length": 250,
          "cycles": 1,
          "position": 41,
          "iteration": 0,
          "httpRequestId": "3c3be89b-8e4f-4239-ab18-8edecd6c8493"
        },
        "item": {
          "id": "162c4b0f-2f38-4039-8c02-7b38b6310b67",
          "name": "credentials_issue:credential.issuer:null"
        },
        "response": {
          "id": "a330dd8b-b5c7-4ff6-9fba-88f66f92c7ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 125
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2c80d64-7938-45b2-a489-9aa619336f85",
        "cursor": {
          "ref": "08184d56-0d1c-4b75-a56c-076e4de5a09e",
          "length": 250,
          "cycles": 1,
          "position": 42,
          "iteration": 0,
          "httpRequestId": "18f43673-b330-438f-89c7-7b4e52412c3e"
        },
        "item": {
          "id": "c2c80d64-7938-45b2-a489-9aa619336f85",
          "name": "credentials_issue.credential.issuer:invalid"
        },
        "response": {
          "id": "d1514946-46f4-4fd6-9dcb-35e7ab8d2e0b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b977d3b-0116-420f-8c9a-ea1c0e7bb98a",
        "cursor": {
          "ref": "ca902c78-a7f1-4648-ac43-aec528162f18",
          "length": 250,
          "cycles": 1,
          "position": 43,
          "iteration": 0,
          "httpRequestId": "380ca346-e79f-4e7d-8ce5-cedfe617bfd9"
        },
        "item": {
          "id": "8b977d3b-0116-420f-8c9a-ea1c0e7bb98a",
          "name": "credentials_issue.credential.issuer:unknown"
        },
        "response": {
          "id": "57e0da03-4f32-4e10-9b9e-8bce91abebb1",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 67,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b92590a8-0343-4c84-a32c-3da66da12604",
        "cursor": {
          "ref": "8e5fdf0e-66e0-43d4-ba35-aac967766a56",
          "length": 250,
          "cycles": 1,
          "position": 44,
          "iteration": 0,
          "httpRequestId": "a8a08e14-e407-4627-b9f8-29eae41cc3e0"
        },
        "item": {
          "id": "b92590a8-0343-4c84-a32c-3da66da12604",
          "name": "credentials_issue:credential.issuer.id:missing"
        },
        "response": {
          "id": "c962db87-3f2b-42bc-b07c-0b66b43d69fb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2161cda0-1105-4dd8-aed2-a8edd04be447",
        "cursor": {
          "ref": "5ca6f9b5-a3f6-4e66-adb3-73c3f7a61422",
          "length": 250,
          "cycles": 1,
          "position": 45,
          "iteration": 0,
          "httpRequestId": "9b49c6c7-c55c-4a68-b724-3dd7578e3997"
        },
        "item": {
          "id": "2161cda0-1105-4dd8-aed2-a8edd04be447",
          "name": "credentials_issue:credential.issuer.id:array"
        },
        "response": {
          "id": "8d172476-a6f1-4a00-ab6c-d9c1ad3b0c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14b97bc9-d66e-49b7-8780-86fe38471ea4",
        "cursor": {
          "ref": "3e0e5c7e-eeac-47bb-b4a3-2c851f5e8c0b",
          "length": 250,
          "cycles": 1,
          "position": 46,
          "iteration": 0,
          "httpRequestId": "4a29889d-1623-4aec-b2fb-a016a1b6b26a"
        },
        "item": {
          "id": "14b97bc9-d66e-49b7-8780-86fe38471ea4",
          "name": "credentials_issue:credential.issuer.id:boolean"
        },
        "response": {
          "id": "1a5f642d-9124-406e-9822-bb9ecd91d8d4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "910e5a3a-c2ed-42fe-9788-ec45bf083266",
        "cursor": {
          "ref": "419d2805-277c-439f-a997-b3b264d1920c",
          "length": 250,
          "cycles": 1,
          "position": 47,
          "iteration": 0,
          "httpRequestId": "5c94201a-b01f-400a-808b-c6cef24850d3"
        },
        "item": {
          "id": "910e5a3a-c2ed-42fe-9788-ec45bf083266",
          "name": "credentials_issue:credential.issuer.id:integer"
        },
        "response": {
          "id": "23f3cd97-e6d9-479c-9eb7-4f3abc2bd8cf",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5cd4b761-e08c-4296-a99d-6e31c629c386",
        "cursor": {
          "ref": "ab4ae470-377b-4520-89dc-d8a993827d60",
          "length": 250,
          "cycles": 1,
          "position": 48,
          "iteration": 0,
          "httpRequestId": "97967688-6b46-43e4-838a-c15af46ef643"
        },
        "item": {
          "id": "5cd4b761-e08c-4296-a99d-6e31c629c386",
          "name": "credentials_issue:credential.issuer.id:null"
        },
        "response": {
          "id": "51a603ee-dc42-486c-8af1-2871707e23a1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 128
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1faf50c2-c4b6-4cfe-a327-f88542b14de5",
        "cursor": {
          "ref": "d34d26b4-dd62-49a0-808d-6247391cb9e9",
          "length": 250,
          "cycles": 1,
          "position": 49,
          "iteration": 0,
          "httpRequestId": "4db57bc6-0067-4e80-847d-28d46a01238a"
        },
        "item": {
          "id": "1faf50c2-c4b6-4cfe-a327-f88542b14de5",
          "name": "credentials_issue.credential.issuer.id:invalid"
        },
        "response": {
          "id": "3f506b1d-61af-4ffa-8ed6-9392ae3bf320",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2943c1b5-a587-4917-ac91-82ac26212983",
        "cursor": {
          "ref": "36a1fc4d-bcf0-4a4e-ba43-fc5435956a4e",
          "length": 250,
          "cycles": 1,
          "position": 50,
          "iteration": 0,
          "httpRequestId": "7ca2320f-6da5-4262-8841-5018b34de3f4"
        },
        "item": {
          "id": "2943c1b5-a587-4917-ac91-82ac26212983",
          "name": "credentials_issue.credential.issuer.id:unknown"
        },
        "response": {
          "id": "504ef6c6-6f47-44d9-aa42-bf886a89698e",
          "status": "Unprocessable Entity",
          "code": 422,
          "responseTime": 66,
          "responseSize": 104
        },
        "assertions": [
          {
            "assertion": "status code is 422",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "94ccb30b-fa8f-422c-8ce5-5e009b80bed5",
        "cursor": {
          "ref": "c0fabcb5-33fd-401e-923c-c3e5a628e51e",
          "length": 250,
          "cycles": 1,
          "position": 51,
          "iteration": 0,
          "httpRequestId": "0540fdd7-64c7-44f1-8163-ee93f6cf84c7"
        },
        "item": {
          "id": "94ccb30b-fa8f-422c-8ce5-5e009b80bed5",
          "name": "credentials_issue:credential.issuanceDate.missing"
        },
        "response": {
          "id": "0d144cb3-cce2-4ca4-acf5-fa38abc1a122",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a424abbe-677c-42b2-b1a1-56eb7126cb21",
        "cursor": {
          "ref": "00b8fa75-8f0f-47cf-8ee7-2f0e49aafa7a",
          "length": 250,
          "cycles": 1,
          "position": 52,
          "iteration": 0,
          "httpRequestId": "9bfae624-2faf-4344-8733-5e2cf09c485d"
        },
        "item": {
          "id": "a424abbe-677c-42b2-b1a1-56eb7126cb21",
          "name": "credentials_issue:credential.issuanceDate:array"
        },
        "response": {
          "id": "6fa99f66-1ffe-49a9-8924-d7972c8af31d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "51da08e5-5525-44b7-a196-348acfaa9b56",
        "cursor": {
          "ref": "6f5d19ff-3b6d-4ab8-99fc-4d7c952a8641",
          "length": 250,
          "cycles": 1,
          "position": 53,
          "iteration": 0,
          "httpRequestId": "9af0ecec-0183-4d5e-91b0-37542e775065"
        },
        "item": {
          "id": "51da08e5-5525-44b7-a196-348acfaa9b56",
          "name": "credentials_issue:credential.issuanceDate:boolean"
        },
        "response": {
          "id": "1c6504ef-b6e8-4260-a978-62f77c4a545c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "55d440e0-8d78-413e-b399-daba6929fa9f",
        "cursor": {
          "ref": "89265f96-d3ea-4327-af62-bc4497beba00",
          "length": 250,
          "cycles": 1,
          "position": 54,
          "iteration": 0,
          "httpRequestId": "cdb743d7-0595-4d6f-9217-bcfd136d078a"
        },
        "item": {
          "id": "55d440e0-8d78-413e-b399-daba6929fa9f",
          "name": "credentials_issue:credential.issuanceDate:integer"
        },
        "response": {
          "id": "e770ab40-6815-493b-a7e0-acec4c47025e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8fd7cc09-2618-4a92-86c7-008459b2db72",
        "cursor": {
          "ref": "a0f38253-dd45-407c-80f6-c6e96cab30e2",
          "length": 250,
          "cycles": 1,
          "position": 55,
          "iteration": 0,
          "httpRequestId": "ea4ccacf-642d-42a5-a980-bb6fdd6f7983"
        },
        "item": {
          "id": "8fd7cc09-2618-4a92-86c7-008459b2db72",
          "name": "credentials_issue:credential.issuanceDate:null"
        },
        "response": {
          "id": "92fd9da6-c4bc-41c7-a7ff-2329f2886c1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f17b417c-0c30-47e0-a6c0-9bef162a1f95",
        "cursor": {
          "ref": "e059fa4e-cdb2-4fc4-aa4b-96c9a5019e31",
          "length": 250,
          "cycles": 1,
          "position": 56,
          "iteration": 0,
          "httpRequestId": "0cb46c7e-7fab-47e3-b069-59f7a3062b61"
        },
        "item": {
          "id": "f17b417c-0c30-47e0-a6c0-9bef162a1f95",
          "name": "credentials_issue:credential.issuanceDate:object"
        },
        "response": {
          "id": "0c21c3fc-197c-44fc-9f18-2a5c078514b6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "90bc4295-9837-4025-ada8-19662cc0bb4e",
        "cursor": {
          "ref": "af7ef6d7-e496-453b-910a-40c1a002bffc",
          "length": 250,
          "cycles": 1,
          "position": 57,
          "iteration": 0,
          "httpRequestId": "2f0cedcd-28d3-4959-ab50-50afa0cfcd1f"
        },
        "item": {
          "id": "90bc4295-9837-4025-ada8-19662cc0bb4e",
          "name": "credentials_issue:credential.issuanceDate:invalid_value"
        },
        "response": {
          "id": "3e41bbb7-6c6c-4622-b06e-ddb209b9d4ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db2b0638-7bac-4ea8-a1cb-4d5cc1f816fa",
        "cursor": {
          "ref": "4cbc62ce-1904-4c88-a01e-9607d771ff18",
          "length": 250,
          "cycles": 1,
          "position": 58,
          "iteration": 0,
          "httpRequestId": "4603ed35-fac9-4d27-9542-f2ebec6e59a3"
        },
        "item": {
          "id": "db2b0638-7bac-4ea8-a1cb-4d5cc1f816fa",
          "name": "credentials_issue:credential.credentialSubject:missing"
        },
        "response": {
          "id": "c58369a5-fea1-41dc-a7d6-995c00d13d0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 98
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af8e8197-bba7-491d-a5c5-1709e3b12f44",
        "cursor": {
          "ref": "36d6a7a7-2d74-41af-8c10-90aff678703f",
          "length": 250,
          "cycles": 1,
          "position": 59,
          "iteration": 0,
          "httpRequestId": "07daabd3-1643-4843-adcb-58eaeb7b46b6"
        },
        "item": {
          "id": "af8e8197-bba7-491d-a5c5-1709e3b12f44",
          "name": "credentials_issue:credential.credentialSubject:array"
        },
        "response": {
          "id": "af5ad912-e68a-4cde-8b0c-e1b618193f86",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "84459937-2ba2-467e-8de7-f472fc5d3dad",
        "cursor": {
          "ref": "99a69a09-6911-4f54-b59b-b61a3b1fa6e4",
          "length": 250,
          "cycles": 1,
          "position": 60,
          "iteration": 0,
          "httpRequestId": "4be924ed-d97c-44b2-b098-a73397126107"
        },
        "item": {
          "id": "84459937-2ba2-467e-8de7-f472fc5d3dad",
          "name": "credentials_issue:credential.credentialSubject:boolean"
        },
        "response": {
          "id": "c060991b-3266-4546-bba0-5830a376f552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "07e7a046-d62d-432e-9522-5a968aa41bda",
        "cursor": {
          "ref": "d55b6ea7-a944-4008-9978-8011af293ad0",
          "length": 250,
          "cycles": 1,
          "position": 61,
          "iteration": 0,
          "httpRequestId": "701bae4c-6f06-4f76-9b50-164b21b603c1"
        },
        "item": {
          "id": "07e7a046-d62d-432e-9522-5a968aa41bda",
          "name": "credentials_issue:credential.credentialSubject:integer"
        },
        "response": {
          "id": "2bb82b6e-e185-4a79-858e-9597278bf263",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0510c7f1-0e68-4f30-b37a-5619a474f997",
        "cursor": {
          "ref": "3e15d61c-194d-4557-b7dd-e936b37e1500",
          "length": 250,
          "cycles": 1,
          "position": 62,
          "iteration": 0,
          "httpRequestId": "e1f91017-d845-481e-9dc8-3f34715743c2"
        },
        "item": {
          "id": "0510c7f1-0e68-4f30-b37a-5619a474f997",
          "name": "credentials_issue:credential.credentialSubject:null"
        },
        "response": {
          "id": "c8dca0eb-c69f-4163-87f2-6e5b83a987c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "64d63a6b-ad9a-4225-b8d1-97a811e3fce0",
        "cursor": {
          "ref": "c5f577cb-6e1e-459a-ae37-c4141fbefef1",
          "length": 250,
          "cycles": 1,
          "position": 63,
          "iteration": 0,
          "httpRequestId": "b5256125-09e2-4480-b77a-3c2171f84bbb"
        },
        "item": {
          "id": "64d63a6b-ad9a-4225-b8d1-97a811e3fce0",
          "name": "credentials_issue:credential.credentialSubject:string"
        },
        "response": {
          "id": "cd7476be-8500-4e38-84b3-bbac571e788e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 120
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "868eefed-7078-4696-a781-3b47eaec3cc5",
        "cursor": {
          "ref": "259c6379-4557-4dad-aa16-72c6558036a2",
          "length": 250,
          "cycles": 1,
          "position": 64,
          "iteration": 0,
          "httpRequestId": "a319162c-8c96-4bdb-80e1-a0a4432c9576"
        },
        "item": {
          "id": "868eefed-7078-4696-a781-3b47eaec3cc5",
          "name": "credentials_issue:credential.credentialSubject.id:array"
        },
        "response": {
          "id": "44e76824-81ad-4201-aa68-535d88a95ea8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c3260b3e-06fe-486f-b47a-c9c57ec5a6be",
        "cursor": {
          "ref": "aef49c1c-8edf-4868-a9d4-bb8e2ba6f286",
          "length": 250,
          "cycles": 1,
          "position": 65,
          "iteration": 0,
          "httpRequestId": "c2bea727-c791-4745-b9d0-c9b18394ebb1"
        },
        "item": {
          "id": "c3260b3e-06fe-486f-b47a-c9c57ec5a6be",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy"
        },
        "response": {
          "id": "129e0d1a-fb9d-44cf-bac4-a21044fbb5e1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1957b226-a17a-489c-ac20-c757febcda72",
        "cursor": {
          "ref": "66b9cdc6-17ef-4cd8-98d3-7137ab54da81",
          "length": 250,
          "cycles": 1,
          "position": 66,
          "iteration": 0,
          "httpRequestId": "d652eff2-d302-432c-ad5b-a6a2298f2572"
        },
        "item": {
          "id": "1957b226-a17a-489c-ac20-c757febcda72",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 2"
        },
        "response": {
          "id": "a32c9bee-7071-40c5-971e-013e9f042143",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e8caa406-01f9-434d-ae05-eae59072884d",
        "cursor": {
          "ref": "3b5fedf0-fa65-47bf-a53e-82e1728b67b9",
          "length": 250,
          "cycles": 1,
          "position": 67,
          "iteration": 0,
          "httpRequestId": "49c53406-e587-4a95-8102-36e4453beacd"
        },
        "item": {
          "id": "e8caa406-01f9-434d-ae05-eae59072884d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 3"
        },
        "response": {
          "id": "a9268d50-51e6-4336-8c1e-c559d69547b3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "58f8af96-17bc-46db-b937-b8587d7ad03d",
        "cursor": {
          "ref": "8f324027-c5de-4440-99d9-429fe6fca294",
          "length": 250,
          "cycles": 1,
          "position": 68,
          "iteration": 0,
          "httpRequestId": "5a54fa48-c91b-4ddb-a4ec-9ffd7cd34bff"
        },
        "item": {
          "id": "58f8af96-17bc-46db-b937-b8587d7ad03d",
          "name": "credentials_issue:credential.credentialSubject.id:array Copy 4"
        },
        "response": {
          "id": "48db9bbb-81c0-4bee-995d-7ccac21f202a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 119
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c661bafa-b67b-46f8-ac28-5b1dfd05c133",
        "cursor": {
          "ref": "f6bd40e8-ba53-4e66-b0ad-96215c40f7df",
          "length": 250,
          "cycles": 1,
          "position": 69,
          "iteration": 0,
          "httpRequestId": "bc7d2964-cb6d-4b16-a72e-8cc09604f3bb"
        },
        "item": {
          "id": "c661bafa-b67b-46f8-ac28-5b1dfd05c133",
          "name": "credentials_issue:options:missing"
        },
        "response": {
          "id": "ef539472-03da-471c-9a67-e8930cd3bbd8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 75
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2d44c9b-1e11-47ee-9b1d-e80fcfe3d7bb",
        "cursor": {
          "ref": "d592c5d6-80d4-4183-9f9b-507bd28f327a",
          "length": 250,
          "cycles": 1,
          "position": 70,
          "iteration": 0,
          "httpRequestId": "014baa92-fba5-4ce4-93e5-87a275e8e6cf"
        },
        "item": {
          "id": "c2d44c9b-1e11-47ee-9b1d-e80fcfe3d7bb",
          "name": "credentials_issue:options:array"
        },
        "response": {
          "id": "09dd0512-b9f6-4293-a531-5863562632e9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e62449f6-b650-4838-8804-f61060298122",
        "cursor": {
          "ref": "43f9a9b0-25d7-4cef-8b66-3b6fbc22cd25",
          "length": 250,
          "cycles": 1,
          "position": 71,
          "iteration": 0,
          "httpRequestId": "c518d825-9972-44e3-a485-1129b5034185"
        },
        "item": {
          "id": "e62449f6-b650-4838-8804-f61060298122",
          "name": "credentials_issue:options:boolean"
        },
        "response": {
          "id": "b9926d03-9edc-4de8-b8e4-cdecd99fc3b9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75bd9452-9b15-4be9-aa6b-acbafd3de7d9",
        "cursor": {
          "ref": "eee64a76-2203-4a15-8739-469fb95d2165",
          "length": 250,
          "cycles": 1,
          "position": 72,
          "iteration": 0,
          "httpRequestId": "1118f974-dabb-43f3-ad55-eb0db947ef3c"
        },
        "item": {
          "id": "75bd9452-9b15-4be9-aa6b-acbafd3de7d9",
          "name": "credentials_issue:options:integer"
        },
        "response": {
          "id": "18875d5d-2d47-49ac-a21b-518fd97a79f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "49e27f47-4ea4-4189-b386-858cb117b2b4",
        "cursor": {
          "ref": "20376e64-9db1-4f1b-a7ec-675c74b44c79",
          "length": 250,
          "cycles": 1,
          "position": 73,
          "iteration": 0,
          "httpRequestId": "552b9c1c-baad-4485-969c-de0ef7128acf"
        },
        "item": {
          "id": "49e27f47-4ea4-4189-b386-858cb117b2b4",
          "name": "credentials_issue:options:null"
        },
        "response": {
          "id": "89614671-4384-41a9-8158-508193d6b7f1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 74,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d1e7f50-946c-49a1-b297-5de6c62b2c39",
        "cursor": {
          "ref": "b51beda6-6c10-4d1b-880a-724b7a8536ea",
          "length": 250,
          "cycles": 1,
          "position": 74,
          "iteration": 0,
          "httpRequestId": "44708102-ceee-418f-b6d1-6ddd4a415cad"
        },
        "item": {
          "id": "4d1e7f50-946c-49a1-b297-5de6c62b2c39",
          "name": "credentials_issue:options:string"
        },
        "response": {
          "id": "206ecaba-f6f4-4a41-8076-e96f48ad20f9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 142
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4fc3fc8-921e-43c2-85cc-eb2e89c47e82",
        "cursor": {
          "ref": "1a0b98fa-bb10-417f-acce-8d30e68142ad",
          "length": 250,
          "cycles": 1,
          "position": 75,
          "iteration": 0,
          "httpRequestId": "6c1d271b-a9c9-4c91-adc7-d8a4d8b69024"
        },
        "item": {
          "id": "c4fc3fc8-921e-43c2-85cc-eb2e89c47e82",
          "name": "credentials_issue:options.type:missing"
        },
        "response": {
          "id": "3e04879d-4ae6-46c9-8fea-1154d24b81c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 87
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "67e74c49-35af-49e5-b5f0-720a2fcf6799",
        "cursor": {
          "ref": "57f4feb2-9686-4f47-bdd5-6ab1acff6270",
          "length": 250,
          "cycles": 1,
          "position": 76,
          "iteration": 0,
          "httpRequestId": "ccbd2f26-4d9d-4f00-ba40-8a3c23afba87"
        },
        "item": {
          "id": "67e74c49-35af-49e5-b5f0-720a2fcf6799",
          "name": "credentials_issue:options.type:array"
        },
        "response": {
          "id": "5a2e33c5-682f-4334-802b-dbef91c2e08c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7a8394d1-71fe-41d3-a11b-a23159e1501c",
        "cursor": {
          "ref": "37e30f33-5536-4b54-b7a9-e3b4e7466181",
          "length": 250,
          "cycles": 1,
          "position": 77,
          "iteration": 0,
          "httpRequestId": "a572653f-af80-4eb0-bf80-f39600758c9e"
        },
        "item": {
          "id": "7a8394d1-71fe-41d3-a11b-a23159e1501c",
          "name": "credentials_issue:options.type:boolean"
        },
        "response": {
          "id": "4cef5b77-43e5-4120-acce-c7e7c97f4d3f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00c1bddd-c298-4c35-a776-77d4fe627991",
        "cursor": {
          "ref": "0707f19f-a172-4145-8356-2a452b47a6a5",
          "length": 250,
          "cycles": 1,
          "position": 78,
          "iteration": 0,
          "httpRequestId": "87888e3d-4951-4e33-a0e1-05c77cc3cc8a"
        },
        "item": {
          "id": "00c1bddd-c298-4c35-a776-77d4fe627991",
          "name": "credentials_issue:options.type:integer"
        },
        "response": {
          "id": "c14deb4c-2833-447e-aa79-88354fcdb693",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "31f458d6-3bdb-4aa4-a99b-d077ec299301",
        "cursor": {
          "ref": "b7024ee0-33c8-4c8c-a691-4dba9948b527",
          "length": 250,
          "cycles": 1,
          "position": 79,
          "iteration": 0,
          "httpRequestId": "9870644f-af8c-4bdd-91c2-f6bc5b135f71"
        },
        "item": {
          "id": "31f458d6-3bdb-4aa4-a99b-d077ec299301",
          "name": "credentials_issue:options.type:null"
        },
        "response": {
          "id": "957021f2-5f39-495f-a508-6b8f5615ad5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "11907845-8d5b-4dbe-922a-42863d6979fd",
        "cursor": {
          "ref": "4a4fb390-902a-4d3e-85c8-2df4b4237cef",
          "length": 250,
          "cycles": 1,
          "position": 80,
          "iteration": 0,
          "httpRequestId": "397c9f85-8a08-4ecd-ac3d-2739fbf88fc1"
        },
        "item": {
          "id": "11907845-8d5b-4dbe-922a-42863d6979fd",
          "name": "credentials_issue:options.type:object"
        },
        "response": {
          "id": "de6bf2ba-611f-453a-b582-344fec2fc76b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6c159323-d31f-43ba-b1e9-7065504f38f9",
        "cursor": {
          "ref": "a94dd499-8d43-4a48-a22b-de0dae1bc0a5",
          "length": 250,
          "cycles": 1,
          "position": 81,
          "iteration": 0,
          "httpRequestId": "e5f13989-9767-452a-b675-222dc6b07ec9"
        },
        "item": {
          "id": "6c159323-d31f-43ba-b1e9-7065504f38f9",
          "name": "credentials_issue:options.type:invalid_value"
        },
        "response": {
          "id": "7020cd17-b98f-4e07-99c7-47b3236927f2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eea8ab43-89af-4c12-b730-4594e846b88f",
        "cursor": {
          "ref": "159ace45-08c4-4244-8f64-cc6f8c6d39f5",
          "length": 250,
          "cycles": 1,
          "position": 82,
          "iteration": 0,
          "httpRequestId": "92777189-f9bb-40a8-84d3-70ab767ed444"
        },
        "item": {
          "id": "eea8ab43-89af-4c12-b730-4594e846b88f",
          "name": "credentials_issue:options.created:array"
        },
        "response": {
          "id": "6394ad46-21ee-49a5-9c86-83dfa705c979",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c2431b88-c5ea-4a2c-8b92-34684a09efb0",
        "cursor": {
          "ref": "aa97a068-c42d-407f-94fa-2067d61977e8",
          "length": 250,
          "cycles": 1,
          "position": 83,
          "iteration": 0,
          "httpRequestId": "55aa535b-24a0-4be6-a9d8-0a4ae4475826"
        },
        "item": {
          "id": "c2431b88-c5ea-4a2c-8b92-34684a09efb0",
          "name": "credentials_issue:options.created:boolean"
        },
        "response": {
          "id": "1c2c145b-5ad4-4b8d-85c2-d530d60da1af",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "03e90ac8-3901-48d2-a63c-18d61541ea13",
        "cursor": {
          "ref": "f1895aa6-5f44-41dd-8d51-1d639efad0dc",
          "length": 250,
          "cycles": 1,
          "position": 84,
          "iteration": 0,
          "httpRequestId": "8a6eab1b-033d-44e3-bbf8-f3717a8d1647"
        },
        "item": {
          "id": "03e90ac8-3901-48d2-a63c-18d61541ea13",
          "name": "credentials_issue:options.created:integer"
        },
        "response": {
          "id": "f5429330-f7fc-4700-bc6c-ec22a8607a82",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bb3a9579-4cc3-4a77-b7ca-089ea242ea89",
        "cursor": {
          "ref": "c6674479-c686-46db-820a-314bcd4551b5",
          "length": 250,
          "cycles": 1,
          "position": 85,
          "iteration": 0,
          "httpRequestId": "786fc618-a3b2-487a-ae79-73f7dff53165"
        },
        "item": {
          "id": "bb3a9579-4cc3-4a77-b7ca-089ea242ea89",
          "name": "credentials_issue:options.created:null"
        },
        "response": {
          "id": "9d77534d-569e-4556-94dc-120beda3e49f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "423ae1e2-43b5-4d34-9100-8f9b28da8814",
        "cursor": {
          "ref": "a085517c-16ab-459f-89f5-24fe50004cd3",
          "length": 250,
          "cycles": 1,
          "position": 86,
          "iteration": 0,
          "httpRequestId": "a6a34348-0a11-4241-b6d7-cc8f349c38d3"
        },
        "item": {
          "id": "423ae1e2-43b5-4d34-9100-8f9b28da8814",
          "name": "credentials_issue:options.created:object"
        },
        "response": {
          "id": "0b707731-7918-4a43-94ac-4b404d2a0bd4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 105
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "77513176-5f4f-4c25-9420-cb1d743011a8",
        "cursor": {
          "ref": "67892053-c4bd-456d-9df3-caafb3780903",
          "length": 250,
          "cycles": 1,
          "position": 87,
          "iteration": 0,
          "httpRequestId": "d95a7a29-fb8a-4711-b988-21ccb66007b2"
        },
        "item": {
          "id": "77513176-5f4f-4c25-9420-cb1d743011a8",
          "name": "credentials_issue:options.created:invalid"
        },
        "response": {
          "id": "2c88b26e-1b27-41c2-b6e9-2d9d512d845f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9a5efc2a-2b8c-43c0-bda4-e12336f3dc63",
        "cursor": {
          "ref": "f347cf62-a5ee-45bf-8bbe-09c3b1623ef3",
          "length": 250,
          "cycles": 1,
          "position": 88,
          "iteration": 0,
          "httpRequestId": "24a0686c-62d6-4ff1-9b23-98ad84ac2e17"
        },
        "item": {
          "id": "9a5efc2a-2b8c-43c0-bda4-e12336f3dc63",
          "name": "credentials_issue:options.credentialStatus:array"
        },
        "response": {
          "id": "f6cdd2e8-1f9a-4538-a547-ed2391013966",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3b66f725-7cb7-4415-bca4-d7219f6e46a0",
        "cursor": {
          "ref": "77f17ec9-b6bc-42d1-8025-5513c2e1acfb",
          "length": 250,
          "cycles": 1,
          "position": 89,
          "iteration": 0,
          "httpRequestId": "4fc8e125-187d-4552-9845-6232bf22dc03"
        },
        "item": {
          "id": "3b66f725-7cb7-4415-bca4-d7219f6e46a0",
          "name": "credentials_issue:options.credentialStatus:boolean"
        },
        "response": {
          "id": "36d3b2e3-af66-49ee-bf69-acd7628d80bc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "118309b5-2d85-445f-9e23-e339ad5a139b",
        "cursor": {
          "ref": "013711fb-e19c-4ba9-af09-b45b067ccf8f",
          "length": 250,
          "cycles": 1,
          "position": 90,
          "iteration": 0,
          "httpRequestId": "1d93f776-ca33-44b5-a127-8d40dae9e8c8"
        },
        "item": {
          "id": "118309b5-2d85-445f-9e23-e339ad5a139b",
          "name": "credentials_issue:options.credentialStatus:integer"
        },
        "response": {
          "id": "8c54ae15-eddc-4ea8-aa63-06715278593e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3577d5d5-3d05-4281-938d-73c6e57f2189",
        "cursor": {
          "ref": "856cc06d-a689-45ff-bd6b-36a9fa430f77",
          "length": 250,
          "cycles": 1,
          "position": 91,
          "iteration": 0,
          "httpRequestId": "095a196c-d45f-4ed6-8483-eaa34b20be6b"
        },
        "item": {
          "id": "3577d5d5-3d05-4281-938d-73c6e57f2189",
          "name": "credentials_issue:options.credentialStatus:null"
        },
        "response": {
          "id": "2ee898a1-382b-441b-953a-a233f9242ea5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "903814ab-6e6c-4d97-9633-96f2e172a6b6",
        "cursor": {
          "ref": "29d4604d-4c5e-423f-9e25-b702b9a8dc28",
          "length": 250,
          "cycles": 1,
          "position": 92,
          "iteration": 0,
          "httpRequestId": "c947dc0a-6c01-4240-a604-b34d67e6ecad"
        },
        "item": {
          "id": "903814ab-6e6c-4d97-9633-96f2e172a6b6",
          "name": "credentials_issue:options.credentialStatus:string"
        },
        "response": {
          "id": "21f94aa1-0657-4228-9e21-f17b3c64c830",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 161
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9ccccdd4-95b8-43cf-bcfb-38c191ca65c6",
        "cursor": {
          "ref": "ef96c807-75bb-4707-a764-d58f7566745f",
          "length": 250,
          "cycles": 1,
          "position": 93,
          "iteration": 0,
          "httpRequestId": "f85273e3-612a-4279-ad92-80b46fbf24ba"
        },
        "item": {
          "id": "9ccccdd4-95b8-43cf-bcfb-38c191ca65c6",
          "name": "credentials_issue:options.credentialStatus.type:missing"
        },
        "response": {
          "id": "f3e8e18f-82d2-40c5-97eb-0221b3f00ae2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 101
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4d0ca047-8de3-4c00-8bf5-701ec39aa4f1",
        "cursor": {
          "ref": "f329d980-45b1-4a44-93e0-b02268ef5af5",
          "length": 250,
          "cycles": 1,
          "position": 94,
          "iteration": 0,
          "httpRequestId": "0de7c16b-d549-4662-bf1e-f05f03ca3959"
        },
        "item": {
          "id": "4d0ca047-8de3-4c00-8bf5-701ec39aa4f1",
          "name": "credentials_issue:options.credentialStatus.type:array"
        },
        "response": {
          "id": "691139b6-c8ec-4067-b423-f40c154fd739",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ff3cd4b8-6da8-47fe-9dc0-c149fa0c5965",
        "cursor": {
          "ref": "f0a8d242-2859-41da-af29-1de460120f1f",
          "length": 250,
          "cycles": 1,
          "position": 95,
          "iteration": 0,
          "httpRequestId": "58e909b3-d22f-410a-a2f5-c60c1b30b58f"
        },
        "item": {
          "id": "ff3cd4b8-6da8-47fe-9dc0-c149fa0c5965",
          "name": "credentials_issue:options.credentialStatus.type:boolean"
        },
        "response": {
          "id": "f761104a-2ee0-4e42-9f53-a6e0ce87d605",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "73e886d9-93c7-4ac2-a950-0482f59b6d71",
        "cursor": {
          "ref": "e982eef8-af3a-4a63-988c-d4b23c1db371",
          "length": 250,
          "cycles": 1,
          "position": 96,
          "iteration": 0,
          "httpRequestId": "85ec79c0-131f-4a5e-b233-a1675fd4d8fb"
        },
        "item": {
          "id": "73e886d9-93c7-4ac2-a950-0482f59b6d71",
          "name": "credentials_issue:options.credentialStatus.type:integer"
        },
        "response": {
          "id": "b080d441-b382-4fca-a009-246262ad7730",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2b8508-cf83-46cb-bf72-358ba1945724",
        "cursor": {
          "ref": "a836f8b5-4cc7-4129-998d-e6cb464d30d9",
          "length": 250,
          "cycles": 1,
          "position": 97,
          "iteration": 0,
          "httpRequestId": "209ea305-1abd-460f-9c5d-c54c0d7054a4"
        },
        "item": {
          "id": "ac2b8508-cf83-46cb-bf72-358ba1945724",
          "name": "credentials_issue:options.credentialStatus.type:null"
        },
        "response": {
          "id": "0465cf77-dbe4-4d3d-be84-42d42fff50c9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0cba19d2-dc10-4a7f-9a45-f71acd5b7ccf",
        "cursor": {
          "ref": "5c479e9e-6ab4-47d0-953c-37a0f0b7663a",
          "length": 250,
          "cycles": 1,
          "position": 98,
          "iteration": 0,
          "httpRequestId": "5cb8460a-5164-40a5-a476-32f12018237d"
        },
        "item": {
          "id": "0cba19d2-dc10-4a7f-9a45-f71acd5b7ccf",
          "name": "credentials_issue:options.credentialStatus.type:null Copy"
        },
        "response": {
          "id": "8a7bcff6-ec47-42dd-b394-ca3b63dc73f3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c06faca5-b8ea-4286-a5f9-2a7ba17e5001",
        "cursor": {
          "ref": "47e5d1b7-f6ae-42a8-bb74-ef49cd87243e",
          "length": 250,
          "cycles": 1,
          "position": 99,
          "iteration": 0,
          "httpRequestId": "b02beb33-72f7-46bf-85a3-3e4dd68bebce"
        },
        "item": {
          "id": "c06faca5-b8ea-4286-a5f9-2a7ba17e5001",
          "name": "credentials_issue:options.credentialStatus.type:invalid"
        },
        "response": {
          "id": "7c7e9772-6a44-4867-91ad-b2ad4afe3d71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 116
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8f00bab1-30cc-4fe6-a020-aa574dc769a9",
        "cursor": {
          "ref": "9b094b1b-9b78-42e0-8f51-9030140cf6da",
          "length": 250,
          "cycles": 1,
          "position": 100,
          "iteration": 0,
          "httpRequestId": "10420b49-199b-46a2-8c5e-a88f8ef55209"
        },
        "item": {
          "id": "8f00bab1-30cc-4fe6-a020-aa574dc769a9",
          "name": "credentials_issue:missing_auth"
        },
        "response": {
          "id": "1ff384fb-f220-4010-9b80-ba14b9b33cb2",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d60af255-afb3-4140-9626-00a2ed82cc6d",
        "cursor": {
          "ref": "1d79593d-b7bf-4a2c-8fc2-333e1b141fb5",
          "length": 250,
          "cycles": 1,
          "position": 101,
          "iteration": 0,
          "httpRequestId": "dfb2d7eb-1e69-459a-8600-2fde52d4d7db"
        },
        "item": {
          "id": "d60af255-afb3-4140-9626-00a2ed82cc6d",
          "name": "credentials_issue.credential.issuer:dup"
        },
        "response": {
          "id": "76bd58bd-1527-4b3c-ab34-ef13a76cc4a0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 132
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 400",
              "stack": "AssertionError: expected response to have status code 201 but got 400\n   at Object.eval sandbox-script.js:1:102)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 1,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:2:102)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:3:102)"
            }
          }
        ]
      },
      {
        "id": "f816800b-0a9b-4deb-96b8-cb0ae0908ec9",
        "cursor": {
          "ref": "beca40db-3dc0-4eb5-8876-fb3823e918de",
          "length": 250,
          "cycles": 1,
          "position": 102,
          "iteration": 0,
          "httpRequestId": "4d5b7b52-cf5c-41b0-b6ae-e63697938231"
        },
        "item": {
          "id": "f816800b-0a9b-4deb-96b8-cb0ae0908ec9",
          "name": "credentials_issue"
        },
        "response": {
          "id": "bc532e8b-04c2-43d0-9119-0cac5fe6fef8",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 2144,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 500",
              "stack": "AssertionError: expected response to have status code 201 but got 500\n   at Object.eval sandbox-script.js:1:103)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:103)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:103)"
            }
          },
          {
            "assertion": "response issuanceDate matches request credential.issuanceDate",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 3,
              "test": "response issuanceDate matches request credential.issuanceDate",
              "message": "Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuanceDate' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:4:103)"
            }
          },
          {
            "assertion": "response proof.created is close to 'now'",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 4,
              "test": "response proof.created is close to 'now'",
              "message": "Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'proof' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:5:103)"
            }
          }
        ]
      },
      {
        "id": "05a9b3ae-a296-4386-b051-d5cfab692c71",
        "cursor": {
          "ref": "d37f30f1-de04-492b-9827-0b6f0410038f",
          "length": 250,
          "cycles": 1,
          "position": 103,
          "iteration": 0,
          "httpRequestId": "446e6ace-09a0-4c2f-b0a5-45b13781f887"
        },
        "item": {
          "id": "05a9b3ae-a296-4386-b051-d5cfab692c71",
          "name": "credentials_issue:credential.opt.id"
        },
        "response": {
          "id": "a3d354f1-0e4f-4b57-a7ec-8ef77f51790e",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 534,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 500",
              "stack": "AssertionError: expected response to have status code 201 but got 500\n   at Object.eval sandbox-script.js:1:104)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:104)"
            }
          },
          {
            "assertion": "response verifiableCredential.id matches request credential.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response verifiableCredential.id matches request credential.id",
              "message": "Cannot read properties of undefined (reading 'id')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'id')\n   at Object.eval sandbox-script.js:3:104)"
            }
          }
        ]
      },
      {
        "id": "8eb8de62-1801-4598-b2b0-2180eed18cca",
        "cursor": {
          "ref": "d932b36e-a364-4d92-9ea2-9f316e012df4",
          "length": 250,
          "cycles": 1,
          "position": 104,
          "iteration": 0,
          "httpRequestId": "321ca905-422c-4b0a-b944-ab9132a76e59"
        },
        "item": {
          "id": "8eb8de62-1801-4598-b2b0-2180eed18cca",
          "name": "credentials_issue:credential:alt.issuer.object"
        },
        "response": {
          "id": "9fa711ee-5686-4d86-adbd-91b86b12996a",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 10482,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 504",
              "stack": "AssertionError: expected response to have status code 201 but got 504\n   at Object.eval sandbox-script.js:1:105)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:105)"
            }
          },
          {
            "assertion": "response issuer matches request credential.issuer.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response issuer matches request credential.issuer.id",
              "message": "Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'issuer' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:105)"
            }
          }
        ]
      },
      {
        "id": "3a434c8a-e16a-483f-83d6-aa3a79769650",
        "cursor": {
          "ref": "67b22661-e279-4203-9929-425274d81a08",
          "length": 250,
          "cycles": 1,
          "position": 105,
          "iteration": 0,
          "httpRequestId": "101c5427-631f-4053-b367-1b67f0713f6b"
        },
        "item": {
          "id": "3a434c8a-e16a-483f-83d6-aa3a79769650",
          "name": "credentials_issue:credential:alt.credentialSubject.object:opt.id"
        },
        "response": {
          "id": "bcb21c0b-2538-4f0a-91e1-923aac074d4a",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 10477,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 504",
              "stack": "AssertionError: expected response to have status code 201 but got 504\n   at Object.eval sandbox-script.js:1:106)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:106)"
            }
          },
          {
            "assertion": "response credentialSubject.id matches request credential.credentialSubject.id",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response credentialSubject.id matches request credential.credentialSubject.id",
              "message": "Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.",
              "stack": "TypeError: Cannot destructure property 'credentialSubject' of 'pm.response.json(...).verifiableCredential' as it is undefined.\n   at Object.eval sandbox-script.js:3:106)"
            }
          }
        ]
      },
      {
        "id": "772daee2-ae9e-4162-b548-de43874fbd99",
        "cursor": {
          "ref": "a7f910d5-53b0-4963-8cfe-899929efc1be",
          "length": 250,
          "cycles": 1,
          "position": 106,
          "iteration": 0,
          "httpRequestId": "ffcc9c83-1bb1-42ec-8e36-b8df9808d30f"
        },
        "item": {
          "id": "772daee2-ae9e-4162-b548-de43874fbd99",
          "name": "credentials_issue:options:opt.created"
        },
        "response": {
          "id": "3e8990b1-f45f-4a7d-a9b0-08265c52a822",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 11700,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 504",
              "stack": "AssertionError: expected response to have status code 201 but got 504\n   at Object.eval sandbox-script.js:1:107)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:107)"
            }
          },
          {
            "assertion": "response proof.created matches request options.created",
            "skipped": false,
            "error": {
              "name": "TypeError",
              "index": 2,
              "test": "response proof.created matches request options.created",
              "message": "Cannot read properties of undefined (reading 'proof')",
              "stack": "TypeError: Cannot read properties of undefined (reading 'proof')\n   at Object.eval sandbox-script.js:3:107)"
            }
          }
        ]
      },
      {
        "id": "1f50c894-1313-45a0-820e-94a054c9a92b",
        "cursor": {
          "ref": "ff29c6e6-09e1-4746-8824-7bbd427618b9",
          "length": 250,
          "cycles": 1,
          "position": 107,
          "iteration": 0,
          "httpRequestId": "b6d3dcf1-9ea2-4ff0-ae7c-1fb7cf51662b"
        },
        "item": {
          "id": "1f50c894-1313-45a0-820e-94a054c9a92b",
          "name": "credentials_issue:options:opt.credentialStatus"
        },
        "response": {
          "id": "ea2ea0a7-b913-41ca-bbbb-a03988745e73",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 1505,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 201",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 201",
              "message": "expected response to have status code 201 but got 500",
              "stack": "AssertionError: expected response to have status code 201 but got 500\n   at Object.eval sandbox-script.js:1:108)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verifiableCredential'\n   at Object.eval sandbox-script.js:2:108)"
            }
          }
        ]
      },
      {
        "id": "0179455c-e0fe-466a-9e33-56b6115bf75c",
        "cursor": {
          "ref": "3f52a021-5c44-412f-ba03-066b53959475",
          "length": 250,
          "cycles": 1,
          "position": 108,
          "iteration": 0,
          "httpRequestId": "52926fe2-db71-43ff-bf4a-e887c5cdce26"
        },
        "item": {
          "id": "0179455c-e0fe-466a-9e33-56b6115bf75c",
          "name": "credentials_status:credentialId:missing"
        },
        "response": {
          "id": "5a4e3d76-2135-4194-813f-71f082f5d335",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 80
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "788b3db3-0faa-4b5c-bd9b-736b22a73d2c",
        "cursor": {
          "ref": "0c03f20a-1c29-4647-bdde-eaf5ba11b398",
          "length": 250,
          "cycles": 1,
          "position": 109,
          "iteration": 0,
          "httpRequestId": "1edcbdfd-4011-4894-b4d5-a09be90f3fbf"
        },
        "item": {
          "id": "788b3db3-0faa-4b5c-bd9b-736b22a73d2c",
          "name": "credentials_status:credentialId:array"
        },
        "response": {
          "id": "15bcb56e-580a-4167-a8ae-f62aec52d02e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "442b5f4e-e527-4ca5-8c9b-470a8d1fdbc7",
        "cursor": {
          "ref": "e42e24e6-257d-4221-b1d6-73de7f9ba525",
          "length": 250,
          "cycles": 1,
          "position": 110,
          "iteration": 0,
          "httpRequestId": "73289ecc-ff85-43bd-995c-8525d362d285"
        },
        "item": {
          "id": "442b5f4e-e527-4ca5-8c9b-470a8d1fdbc7",
          "name": "credentials_status:credentialId:boolean"
        },
        "response": {
          "id": "20c646b6-3f0a-41e2-ab07-83f216ca2788",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4016b516-7c01-4757-bb35-8aa722c9ee97",
        "cursor": {
          "ref": "f520f059-b478-4a66-ad6c-40da3addfb65",
          "length": 250,
          "cycles": 1,
          "position": 111,
          "iteration": 0,
          "httpRequestId": "c0b4e6df-ee50-4ce7-9f4a-7b7ab162a6c1"
        },
        "item": {
          "id": "4016b516-7c01-4757-bb35-8aa722c9ee97",
          "name": "credentials_status:credentialId:integer"
        },
        "response": {
          "id": "c3a1b893-9705-418a-95bd-161a90688790",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53695373-c4ef-4a03-a44c-23f7c0f0b43f",
        "cursor": {
          "ref": "cda3ca53-65d4-4f12-afdd-4b04a92c679a",
          "length": 250,
          "cycles": 1,
          "position": 112,
          "iteration": 0,
          "httpRequestId": "fb6ac8aa-394d-4680-a585-ad0e4a31e653"
        },
        "item": {
          "id": "53695373-c4ef-4a03-a44c-23f7c0f0b43f",
          "name": "credentials_status:credentialId:null"
        },
        "response": {
          "id": "ee966732-a1c6-4cc6-a724-859cc7984a74",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "97036337-00ef-4f5a-bc83-782cde5d2144",
        "cursor": {
          "ref": "52752627-a772-44f9-aa20-d74a1f6da127",
          "length": 250,
          "cycles": 1,
          "position": 113,
          "iteration": 0,
          "httpRequestId": "be8e392f-27b3-4357-ae78-b206b5cda7aa"
        },
        "item": {
          "id": "97036337-00ef-4f5a-bc83-782cde5d2144",
          "name": "credentials_status:credentialId:object"
        },
        "response": {
          "id": "39bcaadf-2a0e-4bf5-8da8-270acef75146",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7dd491d6-9d5f-4fa5-822a-0714945bb7ad",
        "cursor": {
          "ref": "7c7d1f4e-4a23-4053-9644-9d66b5e9aaf5",
          "length": 250,
          "cycles": 1,
          "position": 114,
          "iteration": 0,
          "httpRequestId": "e71c452a-a4ae-49c0-9833-c928649d980b"
        },
        "item": {
          "id": "7dd491d6-9d5f-4fa5-822a-0714945bb7ad",
          "name": "credentials_status:credentialStatus:missing"
        },
        "response": {
          "id": "51755867-74a8-4b0f-8f53-0ca55ba2ab2c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 84
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "653c0ef5-a166-407b-bc59-30f07209b33b",
        "cursor": {
          "ref": "3f987854-a007-438f-95a5-c3ad7fc4bd44",
          "length": 250,
          "cycles": 1,
          "position": 115,
          "iteration": 0,
          "httpRequestId": "bb3aa096-4cbf-4ab9-83a0-2fb662501ca9"
        },
        "item": {
          "id": "653c0ef5-a166-407b-bc59-30f07209b33b",
          "name": "credentials_status:credentialStatus:boolean"
        },
        "response": {
          "id": "a7fab13d-882b-4ca8-bd35-4d22467a3b41",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b08f5851-9d04-41de-81f9-12e728e217e3",
        "cursor": {
          "ref": "a3eb5ec4-8e38-47d8-85e4-3e21ac631339",
          "length": 250,
          "cycles": 1,
          "position": 116,
          "iteration": 0,
          "httpRequestId": "eb020e7b-9a5a-44d7-9d73-b93764083f61"
        },
        "item": {
          "id": "b08f5851-9d04-41de-81f9-12e728e217e3",
          "name": "credentials_status:credentialStatus:integer"
        },
        "response": {
          "id": "cb28148a-12ac-4b70-95c9-820f2f85f727",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fb177908-87ab-40f0-8c91-b4fd2f30cf66",
        "cursor": {
          "ref": "3582ab58-1e7f-4793-aca7-5d241542c39a",
          "length": 250,
          "cycles": 1,
          "position": 117,
          "iteration": 0,
          "httpRequestId": "d1e29985-22e5-445c-8bb6-fcca6eea7b3d"
        },
        "item": {
          "id": "fb177908-87ab-40f0-8c91-b4fd2f30cf66",
          "name": "credentials_status:credentialStatus:null"
        },
        "response": {
          "id": "d099d05d-d3f6-493e-bc70-e1ca7f89b518",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "48923211-ad76-43e0-ac8b-dfffe3bbee71",
        "cursor": {
          "ref": "fab11ce0-091e-4d2e-9edf-b28a07361818",
          "length": 250,
          "cycles": 1,
          "position": 118,
          "iteration": 0,
          "httpRequestId": "0bfb5321-077f-4701-aa04-ed05e959b2d5"
        },
        "item": {
          "id": "48923211-ad76-43e0-ac8b-dfffe3bbee71",
          "name": "credentials_status:credentialStatus:object"
        },
        "response": {
          "id": "c26a0fac-b8ca-48e2-8ebd-7999e43b7aa9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7ce2622f-3166-4d41-b209-ad1d5b92dec1",
        "cursor": {
          "ref": "f1cd5804-8e2e-4534-9397-6211e4138398",
          "length": 250,
          "cycles": 1,
          "position": 119,
          "iteration": 0,
          "httpRequestId": "9897463c-ecc8-46c7-be9b-4112c654f41e"
        },
        "item": {
          "id": "7ce2622f-3166-4d41-b209-ad1d5b92dec1",
          "name": "credentials_status:credentialStatus:string"
        },
        "response": {
          "id": "27971e99-a917-4cd3-97a2-756aac394340",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 100
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "78bbc047-f330-4d77-9157-c5935157f7ca",
        "cursor": {
          "ref": "101a4294-9a2c-428a-91b9-d8db01903f58",
          "length": 250,
          "cycles": 1,
          "position": 120,
          "iteration": 0,
          "httpRequestId": "36c7d11d-cf4a-42ba-9db4-8437a61894bd"
        },
        "item": {
          "id": "78bbc047-f330-4d77-9157-c5935157f7ca",
          "name": "credentials_status:credentialStatus:too_long"
        },
        "response": {
          "id": "4404f026-bcaa-4ebd-99e9-45931fc1f360",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "435b220a-36bd-47c7-a103-df436b35cc48",
        "cursor": {
          "ref": "ee5934a0-4cd3-43c1-a22d-290f2c658fe1",
          "length": 250,
          "cycles": 1,
          "position": 121,
          "iteration": 0,
          "httpRequestId": "f3a257c4-93d3-486e-ab9c-1006d35310ed"
        },
        "item": {
          "id": "435b220a-36bd-47c7-a103-df436b35cc48",
          "name": "credentials_status:credentialStatus:item:array"
        },
        "response": {
          "id": "bd9fcea4-f027-4d91-8e62-d652bc706fda",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8b0ae003-7791-4fbd-b056-f716526615a6",
        "cursor": {
          "ref": "193de01f-3b1f-4a01-b303-ecea8b18b814",
          "length": 250,
          "cycles": 1,
          "position": 122,
          "iteration": 0,
          "httpRequestId": "72a6db56-f528-4c14-a2cf-b8381a76553d"
        },
        "item": {
          "id": "8b0ae003-7791-4fbd-b056-f716526615a6",
          "name": "credentials_status:credentialStatus:item:boolean"
        },
        "response": {
          "id": "5c26b683-799c-4783-8a8e-000033038511",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d19d970-276e-43d6-966a-c6503519ae1b",
        "cursor": {
          "ref": "67875e7f-c674-4b9c-aa67-76e0636e16d7",
          "length": 250,
          "cycles": 1,
          "position": 123,
          "iteration": 0,
          "httpRequestId": "1c4376b3-6bd5-46cb-a81d-ca4875d04879"
        },
        "item": {
          "id": "6d19d970-276e-43d6-966a-c6503519ae1b",
          "name": "credentials_status:credentialStatus:item:integer"
        },
        "response": {
          "id": "399301ca-3fa9-49a0-864e-ae4214be6e7b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3d684aa0-ee57-459d-a757-b88ba79ceea9",
        "cursor": {
          "ref": "588156b5-1b1f-49f3-9821-98d2b4cc864d",
          "length": 250,
          "cycles": 1,
          "position": 124,
          "iteration": 0,
          "httpRequestId": "a174be85-33c7-432d-a008-821dc8503299"
        },
        "item": {
          "id": "3d684aa0-ee57-459d-a757-b88ba79ceea9",
          "name": "credentials_status:credentialStatus:item:null"
        },
        "response": {
          "id": "06779d22-ea4a-4217-b61e-345b67d9e136",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60dda075-f1cf-437d-9882-ca6f607cef6d",
        "cursor": {
          "ref": "ccdc31b6-be83-48e1-bf55-bc13e90258a9",
          "length": 250,
          "cycles": 1,
          "position": 125,
          "iteration": 0,
          "httpRequestId": "9ebbe9ee-5621-40c9-a774-2b2065ef72ae"
        },
        "item": {
          "id": "60dda075-f1cf-437d-9882-ca6f607cef6d",
          "name": "credentials_status:credentialStatus:item:string"
        },
        "response": {
          "id": "b7fb8179-cd1c-40da-8849-cd9d7e0e753c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 153
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "83446cee-593d-4ce8-9be6-4fa7dd5d2281",
        "cursor": {
          "ref": "6c39a8bc-c1c5-452d-a90c-adfea4291698",
          "length": 250,
          "cycles": 1,
          "position": 126,
          "iteration": 0,
          "httpRequestId": "3d80613c-ea9e-4598-a9c1-7b0172678d2f"
        },
        "item": {
          "id": "83446cee-593d-4ce8-9be6-4fa7dd5d2281",
          "name": "credentials_status:credentialStatus:item:type:missing"
        },
        "response": {
          "id": "a3225766-7fd8-404a-9e64-0e0e259ee61f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 93
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b8fc1f6f-02c1-47c3-8431-7b2ff82621e1",
        "cursor": {
          "ref": "54274bf8-5c0b-4591-a6ec-a2af09efb4a3",
          "length": 250,
          "cycles": 1,
          "position": 127,
          "iteration": 0,
          "httpRequestId": "e3481a2b-0ab8-49dc-a421-d339cf9e36d6"
        },
        "item": {
          "id": "b8fc1f6f-02c1-47c3-8431-7b2ff82621e1",
          "name": "credentials_status:credentialStatus:item:type:array"
        },
        "response": {
          "id": "c40c1dee-adb0-4694-9a50-b08f2f27c15c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "efbbec79-a140-4aec-bc1a-4e1d80349eba",
        "cursor": {
          "ref": "5aac29f4-5e19-4b9d-bde3-ff706fee3d92",
          "length": 250,
          "cycles": 1,
          "position": 128,
          "iteration": 0,
          "httpRequestId": "3b7f5800-e7a3-4496-a4fe-b1bd0dbde2ee"
        },
        "item": {
          "id": "efbbec79-a140-4aec-bc1a-4e1d80349eba",
          "name": "credentials_status:credentialStatus:item:type:boolean"
        },
        "response": {
          "id": "677a85ad-0c43-490e-940c-cb9da55c584b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9c7c7e8-b868-4d78-aefc-2f1c49237b83",
        "cursor": {
          "ref": "fc176a4a-0e51-4790-ac07-c9f842624079",
          "length": 250,
          "cycles": 1,
          "position": 129,
          "iteration": 0,
          "httpRequestId": "cb35605c-9bad-4f03-bbf1-939090364fea"
        },
        "item": {
          "id": "d9c7c7e8-b868-4d78-aefc-2f1c49237b83",
          "name": "credentials_status:credentialStatus:item:type:integer"
        },
        "response": {
          "id": "2539be7f-8393-4e38-993c-b01c79cbb19a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "75e265e9-2db0-44dd-871f-77dc079dd543",
        "cursor": {
          "ref": "f95b9245-1310-41ed-8df8-122cf62fba3d",
          "length": 250,
          "cycles": 1,
          "position": 130,
          "iteration": 0,
          "httpRequestId": "9b803c12-86da-4467-a1a0-ad17bd3c1ff4"
        },
        "item": {
          "id": "75e265e9-2db0-44dd-871f-77dc079dd543",
          "name": "credentials_status:credentialStatus:item:type:null"
        },
        "response": {
          "id": "c50e6faf-3cb2-4cb4-90a8-06780c051e95",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c19d232f-e1c4-4af3-b163-0c931c3014db",
        "cursor": {
          "ref": "dab27590-d2b0-4683-90d5-aba16d1b14ea",
          "length": 250,
          "cycles": 1,
          "position": 131,
          "iteration": 0,
          "httpRequestId": "477ac2d0-f0c2-4bdc-b4af-9f657ecf6afc"
        },
        "item": {
          "id": "c19d232f-e1c4-4af3-b163-0c931c3014db",
          "name": "credentials_status:credentialStatus:item:type:object"
        },
        "response": {
          "id": "9c960e9f-d07d-459e-9c26-cc1bf216fd5d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "dc63021b-1f90-4325-86fa-db5fbdbe14a7",
        "cursor": {
          "ref": "b2dbbcd7-a267-4896-aac4-03341bff0d0d",
          "length": 250,
          "cycles": 1,
          "position": 132,
          "iteration": 0,
          "httpRequestId": "a7984414-9899-439e-a03e-226fa786e573"
        },
        "item": {
          "id": "dc63021b-1f90-4325-86fa-db5fbdbe14a7",
          "name": "credentials_status:credentialStatus:item:type:invalid"
        },
        "response": {
          "id": "4525e152-a7fc-4156-96e2-0c3fb6d1b2a9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7daca660-b8fd-4abb-9a47-79740205e5d2",
        "cursor": {
          "ref": "119b5b8b-8e7f-4118-a185-96aa193e8b30",
          "length": 250,
          "cycles": 1,
          "position": 133,
          "iteration": 0,
          "httpRequestId": "1ab6a02f-f081-456c-a9d1-a57fae4a5a5e"
        },
        "item": {
          "id": "7daca660-b8fd-4abb-9a47-79740205e5d2",
          "name": "credentials_status:credentialStatus:item:status:missing"
        },
        "response": {
          "id": "1c7a88df-aee3-4ecf-8ffe-24eaa5a0b784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "00a35ec9-e46c-45cd-9910-9457affc0765",
        "cursor": {
          "ref": "48a3bd7c-d4b7-439c-9a21-dcef9689c42c",
          "length": 250,
          "cycles": 1,
          "position": 134,
          "iteration": 0,
          "httpRequestId": "3ab2f25b-ea5c-4669-a429-3fcaf1281726"
        },
        "item": {
          "id": "00a35ec9-e46c-45cd-9910-9457affc0765",
          "name": "credentials_status:credentialStatus:item:status:array"
        },
        "response": {
          "id": "8eb4095e-5479-44fd-bc44-c115f771024b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "825e163d-b2ad-40d2-b808-a005e2f5b22f",
        "cursor": {
          "ref": "a505635c-f8f0-42c7-8251-ca67110925da",
          "length": 250,
          "cycles": 1,
          "position": 135,
          "iteration": 0,
          "httpRequestId": "98add5d2-0032-44d3-ba37-e230fbe1141c"
        },
        "item": {
          "id": "825e163d-b2ad-40d2-b808-a005e2f5b22f",
          "name": "credentials_status:credentialStatus:item:status:boolean"
        },
        "response": {
          "id": "223a0c4e-030d-43d1-bd8e-832b7dccd84c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af595236-07f6-4f0c-8cbd-a2f88a3ac057",
        "cursor": {
          "ref": "02457266-57dd-4edf-94b9-86544d4374a8",
          "length": 250,
          "cycles": 1,
          "position": 136,
          "iteration": 0,
          "httpRequestId": "f2be1c15-c5a8-4c04-b681-e0f94769bf60"
        },
        "item": {
          "id": "af595236-07f6-4f0c-8cbd-a2f88a3ac057",
          "name": "credentials_status:credentialStatus:item:status:integer"
        },
        "response": {
          "id": "cc128b14-6563-40e3-b5c3-d72ecc2e0380",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 72,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "bf3d779c-004d-4663-8558-a194e611738c",
        "cursor": {
          "ref": "d6e6e0ca-1f2f-48c6-8860-8f2cc9ae9aac",
          "length": 250,
          "cycles": 1,
          "position": 137,
          "iteration": 0,
          "httpRequestId": "6e9b9031-53a3-43a0-a213-84ed16f1ca95"
        },
        "item": {
          "id": "bf3d779c-004d-4663-8558-a194e611738c",
          "name": "credentials_status:credentialStatus:item:status:null"
        },
        "response": {
          "id": "d4276ac6-6721-447f-aad7-f1e7397d2c2d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aea7c849-920f-4997-872d-b2fbee730f71",
        "cursor": {
          "ref": "81b82a19-4f9f-4a79-8959-870f159d8f82",
          "length": 250,
          "cycles": 1,
          "position": 138,
          "iteration": 0,
          "httpRequestId": "30d1c163-1daa-416f-a782-c1cb1938a337"
        },
        "item": {
          "id": "aea7c849-920f-4997-872d-b2fbee730f71",
          "name": "credentials_status:credentialStatus:item:status:object"
        },
        "response": {
          "id": "62435967-be0b-4ec8-a5b4-65214a5bbbd1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "aa2494bb-3d3c-4fcc-af39-b9cddb72faea",
        "cursor": {
          "ref": "ca5ac760-92ca-47d1-8386-98b324c43a12",
          "length": 250,
          "cycles": 1,
          "position": 139,
          "iteration": 0,
          "httpRequestId": "257a5d8e-2797-4a49-8f11-0059a6907e4f"
        },
        "item": {
          "id": "aa2494bb-3d3c-4fcc-af39-b9cddb72faea",
          "name": "credentials_status:credentialStatus:item:purpose:missing"
        },
        "response": {
          "id": "2d9680e4-5f78-40fd-b29a-00169c692d14",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8be08042-96ea-4c95-b353-5bcd384dc493",
        "cursor": {
          "ref": "fa7cd4ad-7fc9-402e-a08c-56f462f0ad7c",
          "length": 250,
          "cycles": 1,
          "position": 140,
          "iteration": 0,
          "httpRequestId": "c8b5da46-f853-4330-965d-1d9f831656dc"
        },
        "item": {
          "id": "8be08042-96ea-4c95-b353-5bcd384dc493",
          "name": "credentials_status:credentialStatus:item:purpose:array"
        },
        "response": {
          "id": "e37004f8-026d-4692-b3da-877fecf1b6eb",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5baf792a-6f28-49fa-901b-24161f68dae6",
        "cursor": {
          "ref": "85d22cf0-8e88-4dcb-9293-650afc167eb6",
          "length": 250,
          "cycles": 1,
          "position": 141,
          "iteration": 0,
          "httpRequestId": "4d5a7025-c646-4fd6-b933-f70613583bad"
        },
        "item": {
          "id": "5baf792a-6f28-49fa-901b-24161f68dae6",
          "name": "credentials_status:credentialStatus:item:purpose:boolean"
        },
        "response": {
          "id": "15132e4b-3e9d-41a3-be1e-cdcd5abcbfe3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3faa99a1-c29b-4708-baff-ab7b2a1243ce",
        "cursor": {
          "ref": "b0da81e5-87eb-4d3a-beb2-5b1516a0a135",
          "length": 250,
          "cycles": 1,
          "position": 142,
          "iteration": 0,
          "httpRequestId": "cd080709-95ef-4626-a97f-a613880e9cd7"
        },
        "item": {
          "id": "3faa99a1-c29b-4708-baff-ab7b2a1243ce",
          "name": "credentials_status:credentialStatus:item:purpose:integer"
        },
        "response": {
          "id": "f651383c-c523-4d6d-8531-89c6f824e75b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "25ec1868-867f-4505-9325-114b377c9304",
        "cursor": {
          "ref": "7ec63968-6c56-4749-a9f6-b39ac08a2d4d",
          "length": 250,
          "cycles": 1,
          "position": 143,
          "iteration": 0,
          "httpRequestId": "de362529-3871-472b-a450-db45ff6fe910"
        },
        "item": {
          "id": "25ec1868-867f-4505-9325-114b377c9304",
          "name": "credentials_status:credentialStatus:item:purpose:null"
        },
        "response": {
          "id": "732ffe24-6f38-4a6a-8ab6-88b83e4ed017",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ac2083ae-5e02-4d23-9b71-7157c303b28b",
        "cursor": {
          "ref": "6732b3ec-3934-4319-8f17-e077e916f3dc",
          "length": 250,
          "cycles": 1,
          "position": 144,
          "iteration": 0,
          "httpRequestId": "024fc957-3ab7-47a5-9175-020cbad65d1b"
        },
        "item": {
          "id": "ac2083ae-5e02-4d23-9b71-7157c303b28b",
          "name": "credentials_status:credentialStatus:item:purpose:object"
        },
        "response": {
          "id": "435ef6dc-59ac-494d-940f-53fd5bb4f774",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 102
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "04f94075-6413-4d0b-bb24-77ecfd2fbdab",
        "cursor": {
          "ref": "adfeb163-d731-47b8-aac0-c28342bd5342",
          "length": 250,
          "cycles": 1,
          "position": 145,
          "iteration": 0,
          "httpRequestId": "e242bfaa-7e2f-4a8f-9ec0-ab20db772b9e"
        },
        "item": {
          "id": "04f94075-6413-4d0b-bb24-77ecfd2fbdab",
          "name": "credentials_status:missing_auth"
        },
        "response": {
          "id": "10c000f3-42fd-4603-8510-b9d0dc3ea0f3",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 67,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "009c4c65-a55c-4b41-bc65-4b8f60082bf1",
        "cursor": {
          "ref": "32bcdf12-4355-439e-879d-af2104f43645",
          "length": 250,
          "cycles": 1,
          "position": 146,
          "iteration": 0,
          "httpRequestId": "b95959a3-e9b2-424f-a21e-73a33a982a9a"
        },
        "item": {
          "id": "009c4c65-a55c-4b41-bc65-4b8f60082bf1",
          "name": "credentials_verify:vc:missing"
        },
        "response": {
          "id": "0c181718-741c-4f5d-9bff-286bd373cbb9",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 88
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "14dce834-bc10-412a-8c9f-10d08ff28e44",
        "cursor": {
          "ref": "5f86717b-224e-4f7c-b904-ab5756c388aa",
          "length": 250,
          "cycles": 1,
          "position": 147,
          "iteration": 0,
          "httpRequestId": "a806c7b1-0e83-4c2a-b9b4-ce045221b427"
        },
        "item": {
          "id": "14dce834-bc10-412a-8c9f-10d08ff28e44",
          "name": "credentials_verify:vc:string"
        },
        "response": {
          "id": "2c0b39ea-c796-46c5-a8af-650f3e7276e5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fa53ea65-523a-4083-af8b-a74dfa4d34ef",
        "cursor": {
          "ref": "07a05a3b-96b6-41ee-83f6-a292a47274ae",
          "length": 250,
          "cycles": 1,
          "position": 148,
          "iteration": 0,
          "httpRequestId": "ed13c288-48f8-4e49-9d26-a87d1d476e38"
        },
        "item": {
          "id": "fa53ea65-523a-4083-af8b-a74dfa4d34ef",
          "name": "credentials_verify:vc:null"
        },
        "response": {
          "id": "b416d18e-f31e-485e-8e60-9cbda3882e1d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c74d91fc-e669-4738-bb77-f27393e8a2d6",
        "cursor": {
          "ref": "6912b257-b08f-4659-b739-9a02114117fd",
          "length": 250,
          "cycles": 1,
          "position": 149,
          "iteration": 0,
          "httpRequestId": "cb084260-c8b8-4738-be83-cf7f781ab5a6"
        },
        "item": {
          "id": "c74d91fc-e669-4738-bb77-f27393e8a2d6",
          "name": "credentials_verify:vc:integer"
        },
        "response": {
          "id": "457599fa-eb3c-42e8-854d-e5c950a60ab2",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6a774082-245e-4067-9e81-640ac86f0354",
        "cursor": {
          "ref": "b2843cff-750d-4a1d-b2b0-1eac4f289afd",
          "length": 250,
          "cycles": 1,
          "position": 150,
          "iteration": 0,
          "httpRequestId": "c9ba66b5-9fdc-403d-9dc4-1c7153a38ad3"
        },
        "item": {
          "id": "6a774082-245e-4067-9e81-640ac86f0354",
          "name": "credentials_verify:vc:boolean"
        },
        "response": {
          "id": "06854cad-d8ec-47e3-9b6d-9d9c7b9bc552",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "412a25a6-509f-4c3a-bef9-9d6c4f1d9ad1",
        "cursor": {
          "ref": "4866d167-3a23-4df6-94e4-208caf3a03d8",
          "length": 250,
          "cycles": 1,
          "position": 151,
          "iteration": 0,
          "httpRequestId": "01009982-75b1-4a59-8152-6a5afdcfaeb6"
        },
        "item": {
          "id": "412a25a6-509f-4c3a-bef9-9d6c4f1d9ad1",
          "name": "credentials_verify:vc:array"
        },
        "response": {
          "id": "ddae2f4d-2d2b-4d71-bed4-0f8d15373d84",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 155
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee151d04-b891-4cf9-85df-5955cdb9fb1b",
        "cursor": {
          "ref": "9ced9d59-7639-4584-b175-db6f7adda92f",
          "length": 250,
          "cycles": 1,
          "position": 152,
          "iteration": 0,
          "httpRequestId": "809a9917-ce17-4867-be0b-53a13b41e57e"
        },
        "item": {
          "id": "ee151d04-b891-4cf9-85df-5955cdb9fb1b",
          "name": "credentials_verify:vc:@context:missing"
        },
        "response": {
          "id": "56b49445-29fc-44c0-8ba1-7f5b8c533784",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 99
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5018513c-0e20-4164-a983-bdfee2873ddf",
        "cursor": {
          "ref": "47054550-4504-4be4-8041-5c77d9b7a7cc",
          "length": 250,
          "cycles": 1,
          "position": 153,
          "iteration": 0,
          "httpRequestId": "429c4713-9e4c-46fd-af3a-12926cf5dec7"
        },
        "item": {
          "id": "5018513c-0e20-4164-a983-bdfee2873ddf",
          "name": "credentials_verify:vc:@context:boolean"
        },
        "response": {
          "id": "a75c99e2-da7c-4ee8-89bc-25a24f2964ab",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "453ac8bd-c8dd-4e51-b09e-1789223e6af9",
        "cursor": {
          "ref": "087d64c5-8b48-42e1-98fb-c7e03a0c0967",
          "length": 250,
          "cycles": 1,
          "position": 154,
          "iteration": 0,
          "httpRequestId": "6213fb15-1120-44ab-98e3-0138d8db9670"
        },
        "item": {
          "id": "453ac8bd-c8dd-4e51-b09e-1789223e6af9",
          "name": "credentials_verify:vc:@context:integer"
        },
        "response": {
          "id": "ceb40da1-e7cf-4ee7-963d-f80b17a20604",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5ef2b971-38d4-413b-9dda-c943a15bf782",
        "cursor": {
          "ref": "637a3e16-c980-485b-b4ea-8c82331652a6",
          "length": 250,
          "cycles": 1,
          "position": 155,
          "iteration": 0,
          "httpRequestId": "721c5295-1d55-493a-b796-3069feec8d14"
        },
        "item": {
          "id": "5ef2b971-38d4-413b-9dda-c943a15bf782",
          "name": "credentials_verify:vc:@context:null"
        },
        "response": {
          "id": "2049767e-f11d-42e8-b85c-6795a6a6b47b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "145c1b46-2f6d-4796-8dd5-7ecff1ebed95",
        "cursor": {
          "ref": "9e812278-5ad0-4f5d-afde-87674591403f",
          "length": 250,
          "cycles": 1,
          "position": 156,
          "iteration": 0,
          "httpRequestId": "7eef2a0a-3b1e-46a8-abb7-78b87be1b869"
        },
        "item": {
          "id": "145c1b46-2f6d-4796-8dd5-7ecff1ebed95",
          "name": "credentials_verify:vc:@context:object"
        },
        "response": {
          "id": "2a3acff9-cbff-4da2-9413-934d20632b29",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef13196e-98d5-4e17-9625-2e8a2e0693a5",
        "cursor": {
          "ref": "af1c3ab4-1ac8-4a36-889d-45db8506b803",
          "length": 250,
          "cycles": 1,
          "position": 157,
          "iteration": 0,
          "httpRequestId": "97c39ba7-fb0a-40d4-81fa-97d2dddc75d2"
        },
        "item": {
          "id": "ef13196e-98d5-4e17-9625-2e8a2e0693a5",
          "name": "credentials_verify:vc:@context:string"
        },
        "response": {
          "id": "5022396d-ab69-4e50-8e03-02ae620b093b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 115
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "01f9dbf2-bf1b-42de-baaf-bd63f6ae702b",
        "cursor": {
          "ref": "cf3ec90c-abce-465d-ae90-2ca589a72ab4",
          "length": 250,
          "cycles": 1,
          "position": 158,
          "iteration": 0,
          "httpRequestId": "504f6e84-8a44-4663-bb96-70c1e8954b85"
        },
        "item": {
          "id": "01f9dbf2-bf1b-42de-baaf-bd63f6ae702b",
          "name": "credentials_verify:vc:@context:item:array"
        },
        "response": {
          "id": "1aa247fc-2868-4a73-b317-85eef093fb92",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2f578498-4a0b-417a-a8d4-024b778cdcf7",
        "cursor": {
          "ref": "290f381a-c5ca-4cbd-9ab0-1611b6f4b363",
          "length": 250,
          "cycles": 1,
          "position": 159,
          "iteration": 0,
          "httpRequestId": "ff644aa9-82c2-4897-9de6-4ed11e9ff8a7"
        },
        "item": {
          "id": "2f578498-4a0b-417a-a8d4-024b778cdcf7",
          "name": "credentials_verify:vc:@context:item:boolean"
        },
        "response": {
          "id": "5e665807-82eb-48c3-93fc-7963104f4015",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "928c7ea4-6dd2-4ce5-bed6-9bd9ecbd7733",
        "cursor": {
          "ref": "940581a1-d922-448e-8bac-ae60bbf7f59f",
          "length": 250,
          "cycles": 1,
          "position": 160,
          "iteration": 0,
          "httpRequestId": "f2981113-70f5-4348-8610-2fcc838bb183"
        },
        "item": {
          "id": "928c7ea4-6dd2-4ce5-bed6-9bd9ecbd7733",
          "name": "credentials_verify:vc:@context:item:integer"
        },
        "response": {
          "id": "74e9a28d-8c87-4b47-8828-71fee84d7e94",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5a2ef13e-ef93-4480-a6fa-9ec906312f3f",
        "cursor": {
          "ref": "2c9ef779-9b79-4053-a475-f1f9a66c6a4e",
          "length": 250,
          "cycles": 1,
          "position": 161,
          "iteration": 0,
          "httpRequestId": "83518cf8-0a6d-4735-9e55-79ab9867b38b"
        },
        "item": {
          "id": "5a2ef13e-ef93-4480-a6fa-9ec906312f3f",
          "name": "credentials_verify:vc:@context:item:null"
        },
        "response": {
          "id": "6dfdef84-f9a6-410c-bf81-92b5d4d3de8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3ad04a13-c557-4f92-bca7-198ddf514cc1",
        "cursor": {
          "ref": "62da1f80-c459-48e1-a99a-168d7e845c6d",
          "length": 250,
          "cycles": 1,
          "position": 162,
          "iteration": 0,
          "httpRequestId": "d73abdac-5e9b-4432-87fa-394750dbcd5e"
        },
        "item": {
          "id": "3ad04a13-c557-4f92-bca7-198ddf514cc1",
          "name": "credentials_verify:vc:@context:item:object"
        },
        "response": {
          "id": "95b57fe5-be94-43cd-84f8-3261b5fa7d12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 121
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "65bf27fb-8f48-4d93-9eaf-f88aca4dbfb1",
        "cursor": {
          "ref": "c9cbdbb6-8f55-4f25-a519-0f16e13e3316",
          "length": 250,
          "cycles": 1,
          "position": 163,
          "iteration": 0,
          "httpRequestId": "8a1d15e2-5011-4349-bab3-29043cd5d6a0"
        },
        "item": {
          "id": "65bf27fb-8f48-4d93-9eaf-f88aca4dbfb1",
          "name": "credentials_verify:vc:id:array"
        },
        "response": {
          "id": "05725ea3-932a-4ff4-ae17-7f1b9d495fbc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d5b22ff3-84ae-4a44-9fbb-4e266e67dd66",
        "cursor": {
          "ref": "81ace1e0-2644-4eba-aeb2-a24e74447db9",
          "length": 250,
          "cycles": 1,
          "position": 164,
          "iteration": 0,
          "httpRequestId": "9408431b-bb53-442a-b572-49b8c510d552"
        },
        "item": {
          "id": "d5b22ff3-84ae-4a44-9fbb-4e266e67dd66",
          "name": "credentials_verify:vc:id:boolean"
        },
        "response": {
          "id": "203f43d7-de13-4e03-a9ce-7527701c12b8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0a0cba4-00cf-4874-8aba-c82c07e6b02a",
        "cursor": {
          "ref": "f145e3ef-a4d2-493e-a785-76652dfb121d",
          "length": 250,
          "cycles": 1,
          "position": 165,
          "iteration": 0,
          "httpRequestId": "bd1e64ab-73f7-47e0-bf44-bee6e8c81550"
        },
        "item": {
          "id": "c0a0cba4-00cf-4874-8aba-c82c07e6b02a",
          "name": "credentials_verify:vc:id:integer"
        },
        "response": {
          "id": "05e83d80-46bb-4ee9-9d0d-42b13ebd0c0f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d9fdc18a-57df-4abc-979f-9c8c0f72c2f6",
        "cursor": {
          "ref": "0fccbd7e-cd45-46d1-8ece-41690d37ee54",
          "length": 250,
          "cycles": 1,
          "position": 166,
          "iteration": 0,
          "httpRequestId": "eb6abbbd-a22c-460c-ba92-2a22ac7f4579"
        },
        "item": {
          "id": "d9fdc18a-57df-4abc-979f-9c8c0f72c2f6",
          "name": "credentials_verify:vc:id:null"
        },
        "response": {
          "id": "ba0c68ed-b1ca-47bc-ae2a-1afd2ce70700",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0c8d567b-60da-4b9d-8721-4ec32be5a6c5",
        "cursor": {
          "ref": "ee0d1d0f-9a1f-4de2-ba69-cac9cfc2d9a0",
          "length": 250,
          "cycles": 1,
          "position": 167,
          "iteration": 0,
          "httpRequestId": "51f19c0d-e801-4b44-88ab-da3d035ff7ea"
        },
        "item": {
          "id": "0c8d567b-60da-4b9d-8721-4ec32be5a6c5",
          "name": "credentials_verify:vc:id:object"
        },
        "response": {
          "id": "82c14fb0-3ccb-4f76-aab3-e77d96a26064",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "fe26a96a-b4fe-4974-9af9-17a8e88541fc",
        "cursor": {
          "ref": "b486ca78-a89b-4147-9d15-8c9f11a3823c",
          "length": 250,
          "cycles": 1,
          "position": 168,
          "iteration": 0,
          "httpRequestId": "1eb5626a-f0b3-468c-a4dc-cbaeca0181b9"
        },
        "item": {
          "id": "fe26a96a-b4fe-4974-9af9-17a8e88541fc",
          "name": "credentials_verify:vc:type:missing"
        },
        "response": {
          "id": "3d9cd6f6-75e3-4c0e-81d5-a449848c0da1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 95
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53f3c930-ea70-42aa-80a6-2c834ea742b4",
        "cursor": {
          "ref": "d9638d28-53cb-4bec-b9c1-f8c680015250",
          "length": 250,
          "cycles": 1,
          "position": 169,
          "iteration": 0,
          "httpRequestId": "08175282-d84f-44e8-941c-996b8a1cb077"
        },
        "item": {
          "id": "53f3c930-ea70-42aa-80a6-2c834ea742b4",
          "name": "credentials_verify:vc:type:boolean"
        },
        "response": {
          "id": "89fbafa2-8c65-49c6-8df2-61827353247d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6d2eb72d-6096-4a8d-9d85-21e8efa07037",
        "cursor": {
          "ref": "9a1d9a8e-9c9c-4d0d-9115-2d026b8f783b",
          "length": 250,
          "cycles": 1,
          "position": 170,
          "iteration": 0,
          "httpRequestId": "86b8e457-d796-4fb5-88db-222e50445f26"
        },
        "item": {
          "id": "6d2eb72d-6096-4a8d-9d85-21e8efa07037",
          "name": "credentials_verify:vc:type:integer"
        },
        "response": {
          "id": "c58630ea-aaf1-45d7-93aa-362f138c0dcc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a774faee-cfe4-4923-95da-5dd937142bac",
        "cursor": {
          "ref": "b83c6b08-4e89-4436-aa50-b94444c04671",
          "length": 250,
          "cycles": 1,
          "position": 171,
          "iteration": 0,
          "httpRequestId": "1f5c234d-1daa-49c9-81b8-fedcf285bbb2"
        },
        "item": {
          "id": "a774faee-cfe4-4923-95da-5dd937142bac",
          "name": "credentials_verify:vc:type:null"
        },
        "response": {
          "id": "f7efd6d7-4d5d-45a8-94c1-83197244c903",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f8a167cd-c141-45df-8682-3c742e80345e",
        "cursor": {
          "ref": "18f5b609-09ba-4163-b916-b85d2acf2f38",
          "length": 250,
          "cycles": 1,
          "position": 172,
          "iteration": 0,
          "httpRequestId": "3083ea07-309d-440f-8742-f4a3216b9bf4"
        },
        "item": {
          "id": "f8a167cd-c141-45df-8682-3c742e80345e",
          "name": "credentials_verify:vc:type:object"
        },
        "response": {
          "id": "3c6de2c4-6f17-4a05-aa59-b42acc529137",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f3cec254-efff-4777-97ae-06fe60792b57",
        "cursor": {
          "ref": "9a28b284-fc42-4ff1-a83d-ab16dddc9ab2",
          "length": 250,
          "cycles": 1,
          "position": 173,
          "iteration": 0,
          "httpRequestId": "92d9af05-3054-4bdf-bd46-5c29af54567b"
        },
        "item": {
          "id": "f3cec254-efff-4777-97ae-06fe60792b57",
          "name": "credentials_verify:vc:type:string"
        },
        "response": {
          "id": "ca7948fb-93a5-45ff-860a-ea01a3ea4224",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "35176537-c12a-47cc-95dd-3e8aa3b83e26",
        "cursor": {
          "ref": "e3dcfe78-b2ba-4842-abdb-cc770bf8ed6a",
          "length": 250,
          "cycles": 1,
          "position": 174,
          "iteration": 0,
          "httpRequestId": "fd317621-0b19-4c5c-b65d-4b02477909d9"
        },
        "item": {
          "id": "35176537-c12a-47cc-95dd-3e8aa3b83e26",
          "name": "credentials_verify:vc:type:item:missing"
        },
        "response": {
          "id": "297b771b-d446-427e-afc4-b97e7cce2d8b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 113
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c75b52d7-117b-4ba9-bd0f-c4666d781742",
        "cursor": {
          "ref": "5bb0860e-12af-4467-8c19-2c0613ed0ebb",
          "length": 250,
          "cycles": 1,
          "position": 175,
          "iteration": 0,
          "httpRequestId": "3f269323-a9d8-4d9d-bcfe-fba48120e99f"
        },
        "item": {
          "id": "c75b52d7-117b-4ba9-bd0f-c4666d781742",
          "name": "credentials_verify:vc:type:item:array"
        },
        "response": {
          "id": "3c2759f3-5e37-4122-a645-c2675aeb5a12",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "d4ba8176-8138-468a-a9af-d289bd4c2a9e",
        "cursor": {
          "ref": "c7671c10-55a4-439e-89c5-a93ef4c2920d",
          "length": 250,
          "cycles": 1,
          "position": 176,
          "iteration": 0,
          "httpRequestId": "2bfa9e4c-52c3-4f68-babc-db03b68ba1bb"
        },
        "item": {
          "id": "d4ba8176-8138-468a-a9af-d289bd4c2a9e",
          "name": "credentials_verify:vc:type:item:boolean"
        },
        "response": {
          "id": "434df313-cfea-478d-8eee-24fe66804362",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ea341ab-0cae-457a-bb2d-2a90047e4cb9",
        "cursor": {
          "ref": "f4f67e0b-4220-4911-805f-6aed6a036184",
          "length": 250,
          "cycles": 1,
          "position": 177,
          "iteration": 0,
          "httpRequestId": "68fe1c20-915f-46b2-8aa6-b7e1921df05e"
        },
        "item": {
          "id": "8ea341ab-0cae-457a-bb2d-2a90047e4cb9",
          "name": "credentials_verify:vc:type:item:integer"
        },
        "response": {
          "id": "99fe7b18-e0e5-48a2-903d-73e25af56678",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "af87cb17-64ae-4a9d-9a37-df3f55bf1805",
        "cursor": {
          "ref": "b619e8f9-0798-47e1-9c65-2e423516582d",
          "length": 250,
          "cycles": 1,
          "position": 178,
          "iteration": 0,
          "httpRequestId": "6577214b-08fd-4726-afee-9c4e151acce2"
        },
        "item": {
          "id": "af87cb17-64ae-4a9d-9a37-df3f55bf1805",
          "name": "credentials_verify:vc:type:item:null"
        },
        "response": {
          "id": "f4d3d3ae-a4b5-45aa-a388-bcabbfa328a8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "350ea8e1-2e5b-4007-9fe1-3db68ca2a7e4",
        "cursor": {
          "ref": "138f23e6-f10d-431d-ad48-fd174262cb01",
          "length": 250,
          "cycles": 1,
          "position": 179,
          "iteration": 0,
          "httpRequestId": "db6a290f-3f3a-4f7d-a376-b61ca396de12"
        },
        "item": {
          "id": "350ea8e1-2e5b-4007-9fe1-3db68ca2a7e4",
          "name": "credentials_verify:vc:type:item:object"
        },
        "response": {
          "id": "eeb2a2a8-49ea-4c13-a925-dd978f8fd60a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 117
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "f32d8844-8677-430c-93fb-294a689afb8f",
        "cursor": {
          "ref": "b925967c-c2ee-4820-afc5-d718e02b23aa",
          "length": 250,
          "cycles": 1,
          "position": 180,
          "iteration": 0,
          "httpRequestId": "4230c4fb-56f1-41ed-acff-6d54dbc2024b"
        },
        "item": {
          "id": "f32d8844-8677-430c-93fb-294a689afb8f",
          "name": "credentials_verify:vc:issuer:missing"
        },
        "response": {
          "id": "462e3a73-7524-4183-81fc-b98763d5edd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 66,
          "responseSize": 97
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e693027d-7a0f-40ab-8563-fabbf7dd27bb",
        "cursor": {
          "ref": "4156d82f-ad56-4cd0-b221-5496be926747",
          "length": 250,
          "cycles": 1,
          "position": 181,
          "iteration": 0,
          "httpRequestId": "e52d9c94-996c-427e-a0bf-f6235f3a1c33"
        },
        "item": {
          "id": "e693027d-7a0f-40ab-8563-fabbf7dd27bb",
          "name": "credentials_verify:vc:issuer:array"
        },
        "response": {
          "id": "744b7a59-965a-417e-8a39-b95885489f1a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "cd73cfd7-0911-4404-9802-10cd09753985",
        "cursor": {
          "ref": "fb285ab7-1a2b-45c8-b446-61fb9201f0d4",
          "length": 250,
          "cycles": 1,
          "position": 182,
          "iteration": 0,
          "httpRequestId": "2a93baf0-2af9-4fa3-bc96-7def5d217b6b"
        },
        "item": {
          "id": "cd73cfd7-0911-4404-9802-10cd09753985",
          "name": "credentials_verify:vc:issuer:boolean"
        },
        "response": {
          "id": "5bad35b2-21a9-4289-882c-3ca4958fdd80",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "416d779c-d8eb-4b3d-ad50-3672928236ab",
        "cursor": {
          "ref": "f8b23055-b457-4eb8-b796-4f566a1b7f97",
          "length": 250,
          "cycles": 1,
          "position": 183,
          "iteration": 0,
          "httpRequestId": "a26ef50e-6951-49a9-9ce4-eaf93e7af2c9"
        },
        "item": {
          "id": "416d779c-d8eb-4b3d-ad50-3672928236ab",
          "name": "credentials_verify:vc:issuer:integer"
        },
        "response": {
          "id": "4b7f71e4-55ba-4d47-aee7-387de2fde315",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "474acafd-95b4-4e9a-b26f-5e0a4314e3ed",
        "cursor": {
          "ref": "16fbd0de-a4b5-4514-9b16-40e84416c439",
          "length": 250,
          "cycles": 1,
          "position": 184,
          "iteration": 0,
          "httpRequestId": "e8088d3a-aa92-49fc-8e76-00bebe1ed4f8"
        },
        "item": {
          "id": "474acafd-95b4-4e9a-b26f-5e0a4314e3ed",
          "name": "credentials_verify:vc:issuer:null"
        },
        "response": {
          "id": "08881917-068c-455f-95c9-a7a4fa2ce9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 135
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fe1362a-0dd6-45f7-b767-79696469a774",
        "cursor": {
          "ref": "c5d15b75-5cbe-4f0f-ac55-338eee1bbe6f",
          "length": 250,
          "cycles": 1,
          "position": 185,
          "iteration": 0,
          "httpRequestId": "3763a869-c3b6-4867-8c3d-ae9acc2d9cf9"
        },
        "item": {
          "id": "4fe1362a-0dd6-45f7-b767-79696469a774",
          "name": "credentials_verify:vc:issuer:id:missing"
        },
        "response": {
          "id": "2a0c8c69-04e4-49b4-8b3e-9daacb6f6c51",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 110
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "adfa3fdb-c70b-4b10-9195-5e622118b1a0",
        "cursor": {
          "ref": "09ab974f-8d58-4032-8984-b66efb9998a8",
          "length": 250,
          "cycles": 1,
          "position": 186,
          "iteration": 0,
          "httpRequestId": "1bf15d07-fd5b-4860-95a2-260fcdfef05e"
        },
        "item": {
          "id": "adfa3fdb-c70b-4b10-9195-5e622118b1a0",
          "name": "credentials_verify:vc:issuer:id:array"
        },
        "response": {
          "id": "c2abd5c4-3df9-4ba9-ab32-aa44571b45ee",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "18b5f459-2f5d-4ba7-8295-c3e218df6e57",
        "cursor": {
          "ref": "fcc51106-f403-49fb-b64c-9d793c402f84",
          "length": 250,
          "cycles": 1,
          "position": 187,
          "iteration": 0,
          "httpRequestId": "559ff60f-6c6a-4942-be48-a23fa54a51e9"
        },
        "item": {
          "id": "18b5f459-2f5d-4ba7-8295-c3e218df6e57",
          "name": "credentials_verify:vc:issuer:id:boolean"
        },
        "response": {
          "id": "267c46e4-7509-4f36-89fa-26a83e626ce5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "61a56490-1be6-4dce-9fcc-99df2b136e0f",
        "cursor": {
          "ref": "1b6623dd-4767-4435-abee-129ff74463ba",
          "length": 250,
          "cycles": 1,
          "position": 188,
          "iteration": 0,
          "httpRequestId": "3077b90e-2296-448e-9ec9-98210aa76c1d"
        },
        "item": {
          "id": "61a56490-1be6-4dce-9fcc-99df2b136e0f",
          "name": "credentials_verify:vc:issuer:id:integer"
        },
        "response": {
          "id": "d2851ab3-4cb8-4f4b-a848-6d96848b723c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db044961-2806-45dd-ba10-e3322cdb139e",
        "cursor": {
          "ref": "134c79a8-2486-4aef-b1a7-2a125e167d34",
          "length": 250,
          "cycles": 1,
          "position": 189,
          "iteration": 0,
          "httpRequestId": "284966ea-7e26-44d1-a461-a57a56b3ec0d"
        },
        "item": {
          "id": "db044961-2806-45dd-ba10-e3322cdb139e",
          "name": "credentials_verify:vc:issuer:id:null"
        },
        "response": {
          "id": "abb51224-aabb-4813-a132-f846565e9a62",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "41170001-1651-46da-8a69-e04694b51a95",
        "cursor": {
          "ref": "7a691d9d-7ed7-4a20-bff9-df6b0a9d04d1",
          "length": 250,
          "cycles": 1,
          "position": 190,
          "iteration": 0,
          "httpRequestId": "de8e38d5-fe1b-4197-85e3-585dbb311325"
        },
        "item": {
          "id": "41170001-1651-46da-8a69-e04694b51a95",
          "name": "credentials_verify:vc:issuer:id:object"
        },
        "response": {
          "id": "43825bd7-ed1a-4227-9e88-8d9891de70f0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 138
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "859db8ca-44cb-4c7c-bfb5-6516581e03db",
        "cursor": {
          "ref": "3745da49-b048-4563-b003-01c52b7eb018",
          "length": 250,
          "cycles": 1,
          "position": 191,
          "iteration": 0,
          "httpRequestId": "281e07de-69d3-467e-a0c6-f229d7306ed0"
        },
        "item": {
          "id": "859db8ca-44cb-4c7c-bfb5-6516581e03db",
          "name": "credentials_verify:vc:issuanceDate:missing"
        },
        "response": {
          "id": "9909d1ff-5181-4810-86d3-db290134245b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 103
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c122ff9f-33f5-4d7c-b9a8-bd758677e415",
        "cursor": {
          "ref": "8d1dd63b-eb0c-4ff6-9fc0-9e0cb2381a45",
          "length": 250,
          "cycles": 1,
          "position": 192,
          "iteration": 0,
          "httpRequestId": "b14b34b4-0779-4880-97a3-d2077411e949"
        },
        "item": {
          "id": "c122ff9f-33f5-4d7c-b9a8-bd758677e415",
          "name": "credentials_verify:vc:issuanceDate:array"
        },
        "response": {
          "id": "ffbbe086-5c89-4eb5-b2ac-1b2ee0bfd6fc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4872d3e5-6916-47aa-9ced-90cf8f72acf0",
        "cursor": {
          "ref": "7346bd4b-bc54-40f4-9edb-8a885f6a4f36",
          "length": 250,
          "cycles": 1,
          "position": 193,
          "iteration": 0,
          "httpRequestId": "5ecb4b28-6425-406f-a97e-87f8e0a918eb"
        },
        "item": {
          "id": "4872d3e5-6916-47aa-9ced-90cf8f72acf0",
          "name": "credentials_verify:vc:issuanceDate:boolean"
        },
        "response": {
          "id": "79db0ea8-cca1-4c0b-9616-142339aeb9a4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "860cd7a0-9577-4557-b5e6-407326a47d1e",
        "cursor": {
          "ref": "d3e50b35-a5f0-46e1-8ce5-27124e80b8aa",
          "length": 250,
          "cycles": 1,
          "position": 194,
          "iteration": 0,
          "httpRequestId": "a15bfc02-6ae3-467c-80f2-aede412fd628"
        },
        "item": {
          "id": "860cd7a0-9577-4557-b5e6-407326a47d1e",
          "name": "credentials_verify:vc:issuanceDate:integer"
        },
        "response": {
          "id": "55019c54-8a44-4553-a849-b8ee84cb49a5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5994ce7f-15a3-4bca-8fa7-ae09d4533435",
        "cursor": {
          "ref": "6fc8f537-9c4b-4e9a-9dbb-1853b25f0ae0",
          "length": 250,
          "cycles": 1,
          "position": 195,
          "iteration": 0,
          "httpRequestId": "5fa2f2ce-5bf4-4496-a145-f849ec7c2cce"
        },
        "item": {
          "id": "5994ce7f-15a3-4bca-8fa7-ae09d4533435",
          "name": "credentials_verify:vc:issuanceDate:null"
        },
        "response": {
          "id": "08d06bee-0884-48a3-b767-8a38dabd4c26",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5bdf2e57-ef35-4d83-bb41-0408c38c0f75",
        "cursor": {
          "ref": "9e5fb976-593a-46be-98a4-9dea8cb65bd2",
          "length": 250,
          "cycles": 1,
          "position": 196,
          "iteration": 0,
          "httpRequestId": "782c5035-c927-4dc4-9a0e-8638fcb599ca"
        },
        "item": {
          "id": "5bdf2e57-ef35-4d83-bb41-0408c38c0f75",
          "name": "credentials_verify:vc:issuanceDate:object"
        },
        "response": {
          "id": "7a80917c-e45b-4707-b239-e665f5b42e71",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 123
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ef7130f9-5b4d-432a-934c-31044f3bb2b5",
        "cursor": {
          "ref": "caa535fc-3da3-496e-bea0-61b62de10e87",
          "length": 250,
          "cycles": 1,
          "position": 197,
          "iteration": 0,
          "httpRequestId": "d6704ed9-b028-4ba2-9b55-015cd8bf5e71"
        },
        "item": {
          "id": "ef7130f9-5b4d-432a-934c-31044f3bb2b5",
          "name": "credentials_verify:vc:issuanceDate:string"
        },
        "response": {
          "id": "43c22ca3-c4be-43e3-9476-dc4dd857dad1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 131
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "43955b50-897e-4040-b3b3-511477a8ccaf",
        "cursor": {
          "ref": "327762dc-b69f-4b88-a1fe-6b73af7cc005",
          "length": 250,
          "cycles": 1,
          "position": 198,
          "iteration": 0,
          "httpRequestId": "b141af57-1cc1-49f3-b519-03841710eca4"
        },
        "item": {
          "id": "43955b50-897e-4040-b3b3-511477a8ccaf",
          "name": "credentials_verify:vc:credentialSubject:missing"
        },
        "response": {
          "id": "d336dfe0-89da-4aa0-9720-5d33f9a1ea17",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 70,
          "responseSize": 108
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "52be43f9-11ee-468f-b20e-564fed773d67",
        "cursor": {
          "ref": "35335e5d-ae0c-4be3-b98b-51d903b662bc",
          "length": 250,
          "cycles": 1,
          "position": 199,
          "iteration": 0,
          "httpRequestId": "bcde3601-dff4-43fc-a246-0fe80173a46b"
        },
        "item": {
          "id": "52be43f9-11ee-468f-b20e-564fed773d67",
          "name": "credentials_verify:vc:credentialSubject:array"
        },
        "response": {
          "id": "744c4b78-cca6-4a3b-a935-17461dc30592",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "ee688036-0742-4f51-8dc3-0c59806d1226",
        "cursor": {
          "ref": "77574651-cac7-4184-9afc-b1bdb867ba29",
          "length": 250,
          "cycles": 1,
          "position": 200,
          "iteration": 0,
          "httpRequestId": "31d077f0-00f2-40a9-8f3e-444b75ae3ee9"
        },
        "item": {
          "id": "ee688036-0742-4f51-8dc3-0c59806d1226",
          "name": "credentials_verify:vc:credentialSubject:boolean"
        },
        "response": {
          "id": "f0a83006-974c-4f8f-8b0a-45032c91fff0",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 75,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "7eb16ec5-bee9-416f-970d-89c99d45d1fd",
        "cursor": {
          "ref": "517d3de7-128c-40e7-bc4b-41639c47da6e",
          "length": 250,
          "cycles": 1,
          "position": 201,
          "iteration": 0,
          "httpRequestId": "cee09ea3-ecc9-4091-b968-a6f05b9ab2ee"
        },
        "item": {
          "id": "7eb16ec5-bee9-416f-970d-89c99d45d1fd",
          "name": "credentials_verify:vc:credentialSubject:integer"
        },
        "response": {
          "id": "512bbd83-4e15-47cc-adb6-57de9909c963",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "50153c71-6b36-4c4a-b66a-a6d0ac8e0b75",
        "cursor": {
          "ref": "babef834-e35b-4163-8605-8c67e8471d4d",
          "length": 250,
          "cycles": 1,
          "position": 202,
          "iteration": 0,
          "httpRequestId": "5e29452c-b80b-44b2-a88f-eb566fb388f1"
        },
        "item": {
          "id": "50153c71-6b36-4c4a-b66a-a6d0ac8e0b75",
          "name": "credentials_verify:vc:credentialSubject:null"
        },
        "response": {
          "id": "88bbfdb9-7724-438e-8f00-648716c3ecad",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5543934e-e749-48fa-974a-43f79e360ba8",
        "cursor": {
          "ref": "ed385190-7098-4805-9338-04b71c3e1031",
          "length": 250,
          "cycles": 1,
          "position": 203,
          "iteration": 0,
          "httpRequestId": "c11eec35-2102-4959-830e-4c9f28c3616f"
        },
        "item": {
          "id": "5543934e-e749-48fa-974a-43f79e360ba8",
          "name": "credentials_verify:vc:credentialSubject:string"
        },
        "response": {
          "id": "f7d8fa5a-0c1e-46eb-8204-c7f4357f0b1f",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 130
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "421df540-a8f5-4374-9705-345d051819ce",
        "cursor": {
          "ref": "7f750db2-f953-4978-ac59-e44eb82f5e74",
          "length": 250,
          "cycles": 1,
          "position": 204,
          "iteration": 0,
          "httpRequestId": "1cfe5dd6-05dc-46b6-8852-2b3960700f02"
        },
        "item": {
          "id": "421df540-a8f5-4374-9705-345d051819ce",
          "name": "credentials_verify:vc:credentialSubject:id:array"
        },
        "response": {
          "id": "f0544d1a-b3c7-4522-9dac-c1d459ab230e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "99c64a91-c23b-414c-8d38-f6354e3dc37e",
        "cursor": {
          "ref": "d0fca5ff-20e9-42bb-af9a-3d5071c73144",
          "length": 250,
          "cycles": 1,
          "position": 205,
          "iteration": 0,
          "httpRequestId": "fb86d535-d691-4a5b-b86a-58c02e5cd421"
        },
        "item": {
          "id": "99c64a91-c23b-414c-8d38-f6354e3dc37e",
          "name": "credentials_verify:vc:credentialSubject:id:boolean"
        },
        "response": {
          "id": "3be2a76c-14f5-4648-ad44-168608d94a01",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9d9d2ba7-09bc-4f07-b4ee-470b2cb264c1",
        "cursor": {
          "ref": "84c59468-158f-4a37-b0d6-77a9d831e354",
          "length": 250,
          "cycles": 1,
          "position": 206,
          "iteration": 0,
          "httpRequestId": "2e2b45b8-dd39-4ea8-97c5-5ffb2ed183c3"
        },
        "item": {
          "id": "9d9d2ba7-09bc-4f07-b4ee-470b2cb264c1",
          "name": "credentials_verify:vc:credentialSubject:id:integer"
        },
        "response": {
          "id": "f3f34d60-bab1-4d73-ac28-a4c7f663b3d7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 71,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4f0cba88-db2b-44cb-afa1-e64179a6f08d",
        "cursor": {
          "ref": "58e0cc3e-5621-4d74-8077-044949bac00f",
          "length": 250,
          "cycles": 1,
          "position": 207,
          "iteration": 0,
          "httpRequestId": "afdbf6a6-aca7-4c09-8463-039b80fabbbe"
        },
        "item": {
          "id": "4f0cba88-db2b-44cb-afa1-e64179a6f08d",
          "name": "credentials_verify:vc:credentialSubject:id:null"
        },
        "response": {
          "id": "91417dc0-86f2-4370-b184-13c7a8ffbfd5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "db5c6a33-f7d9-47b9-bdff-59d4029c749c",
        "cursor": {
          "ref": "1c29b83a-46ed-4cd0-b2ac-1048c1890e58",
          "length": 250,
          "cycles": 1,
          "position": 208,
          "iteration": 0,
          "httpRequestId": "ec48d3da-4951-47b4-aeb8-d889fd59f5d4"
        },
        "item": {
          "id": "db5c6a33-f7d9-47b9-bdff-59d4029c749c",
          "name": "credentials_verify:vc:credentialSubject:id:object"
        },
        "response": {
          "id": "2b234c83-d8c4-47a9-9cf2-b71ed4949392",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 129
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "9b081c94-6b79-428c-9c71-f82b7b094205",
        "cursor": {
          "ref": "17902926-5f10-44e4-ad4f-927609b9f4b2",
          "length": 250,
          "cycles": 1,
          "position": 209,
          "iteration": 0,
          "httpRequestId": "9837a8fe-94cc-4d6e-ab78-eba70c5cdc0d"
        },
        "item": {
          "id": "9b081c94-6b79-428c-9c71-f82b7b094205",
          "name": "credentials_verify:proof:missing"
        },
        "response": {
          "id": "0be0051a-7ee0-4031-b57c-3b5a34611b38",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "593e627b-b73c-4163-9813-0f28c551ef8b",
        "cursor": {
          "ref": "1a203845-28e2-4142-b797-873e5046aa96",
          "length": 250,
          "cycles": 1,
          "position": 210,
          "iteration": 0,
          "httpRequestId": "ffd2341e-ca30-472b-8a84-0293e322ec5c"
        },
        "item": {
          "id": "593e627b-b73c-4163-9813-0f28c551ef8b",
          "name": "credentials_verify:proof:array"
        },
        "response": {
          "id": "c837bb8b-8d52-449c-8d46-d0c4efc286d5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 67,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a4795bea-b178-48d4-94a8-5511c0fce278",
        "cursor": {
          "ref": "e050b070-fc94-4e27-852b-a94266588819",
          "length": 250,
          "cycles": 1,
          "position": 211,
          "iteration": 0,
          "httpRequestId": "5b984660-2bd3-4dfb-a2a5-017d1d4be8ee"
        },
        "item": {
          "id": "a4795bea-b178-48d4-94a8-5511c0fce278",
          "name": "credentials_verify:proof:boolean"
        },
        "response": {
          "id": "49504e19-3a9f-4197-bf6e-75e8ad39150a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1d02b827-156f-4387-8e3b-fc028f64da3f",
        "cursor": {
          "ref": "d80dd80a-8cae-43d7-8c8f-a72dc564f4a1",
          "length": 250,
          "cycles": 1,
          "position": 212,
          "iteration": 0,
          "httpRequestId": "28ea348a-e9b7-43d9-b627-45d262e1f1c4"
        },
        "item": {
          "id": "1d02b827-156f-4387-8e3b-fc028f64da3f",
          "name": "credentials_verify:proof:integer"
        },
        "response": {
          "id": "460b59fb-fcf8-4650-83eb-b0d6edc8d37a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5cf5cad-c252-4110-8975-fa92cd8515f2",
        "cursor": {
          "ref": "3aa42013-f499-467f-bb13-c2eedc7bf132",
          "length": 250,
          "cycles": 1,
          "position": 213,
          "iteration": 0,
          "httpRequestId": "429f1a2c-2f2d-44b6-ba42-830abe80e42d"
        },
        "item": {
          "id": "b5cf5cad-c252-4110-8975-fa92cd8515f2",
          "name": "credentials_verify:proof:null"
        },
        "response": {
          "id": "6fe92a1c-4dad-429a-b66d-7c13574af63d",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e23841a5-4ef9-4636-b480-f895e2979073",
        "cursor": {
          "ref": "1279fb17-7b22-4f6c-9398-03b89bbffcee",
          "length": 250,
          "cycles": 1,
          "position": 214,
          "iteration": 0,
          "httpRequestId": "808918b8-2257-4e2b-a7c6-daf3000e2d0d"
        },
        "item": {
          "id": "e23841a5-4ef9-4636-b480-f895e2979073",
          "name": "credentials_verify:proof:string"
        },
        "response": {
          "id": "2e4b3e74-e750-4bb4-b6ff-1032eabbf6c7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "014ce255-1590-4afc-93cb-7043c9dcfcb0",
        "cursor": {
          "ref": "29de1dbd-abd7-4e44-b322-d7207afbb91d",
          "length": 250,
          "cycles": 1,
          "position": 215,
          "iteration": 0,
          "httpRequestId": "7c9fa0ef-17b3-4769-803f-43b2723afa9e"
        },
        "item": {
          "id": "014ce255-1590-4afc-93cb-7043c9dcfcb0",
          "name": "credentials_verify:proof:type:missing"
        },
        "response": {
          "id": "6a533c68-c72e-4bda-b5e8-4a7ff14ac429",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 69,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2921169e-c5fe-4484-a5ca-ea31abd56341",
        "cursor": {
          "ref": "1981a390-eb48-432a-b806-4ecc7112986c",
          "length": 250,
          "cycles": 1,
          "position": 216,
          "iteration": 0,
          "httpRequestId": "e19ce0ba-d0cc-4c46-b448-0461a3b6dc95"
        },
        "item": {
          "id": "2921169e-c5fe-4484-a5ca-ea31abd56341",
          "name": "credentials_verify:proof:type:array"
        },
        "response": {
          "id": "d6c9b244-9bbc-44bc-847b-7a57900fc7ae",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 88,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2cea0c3c-0b29-452a-b168-e29950012d65",
        "cursor": {
          "ref": "1eef6cc0-3654-47c9-8a0f-7d3a34e740b2",
          "length": 250,
          "cycles": 1,
          "position": 217,
          "iteration": 0,
          "httpRequestId": "9f2c50b2-a0dd-4d3f-b746-2651ade442ba"
        },
        "item": {
          "id": "2cea0c3c-0b29-452a-b168-e29950012d65",
          "name": "credentials_verify:proof:type:boolean"
        },
        "response": {
          "id": "71aeaed2-6862-4ef3-ad65-8b25bf2c23f7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 385,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4bb98f2b-9fa6-451d-8918-75a3efd80d60",
        "cursor": {
          "ref": "e4b6b461-ba33-4d86-9ed6-11783d884a58",
          "length": 250,
          "cycles": 1,
          "position": 218,
          "iteration": 0,
          "httpRequestId": "7b916ecd-d6f4-46e8-8b1f-24942c3b1b81"
        },
        "item": {
          "id": "4bb98f2b-9fa6-451d-8918-75a3efd80d60",
          "name": "credentials_verify:proof:type:integer"
        },
        "response": {
          "id": "d4ccffe8-f5e7-4c44-83f9-61a959d75dd6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "1207ffe2-898c-4c80-a9dd-33605d3da472",
        "cursor": {
          "ref": "29e3eb9e-8ebc-4445-87d1-a826a568505a",
          "length": 250,
          "cycles": 1,
          "position": 219,
          "iteration": 0,
          "httpRequestId": "b343cf0f-bf0b-4581-b8a4-0ddab35b7057"
        },
        "item": {
          "id": "1207ffe2-898c-4c80-a9dd-33605d3da472",
          "name": "credentials_verify:proof:type:null"
        },
        "response": {
          "id": "454276d9-8101-4197-9fdd-fb47ca430ce1",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "87ba052b-e681-45db-90ec-787e87f4e719",
        "cursor": {
          "ref": "393036b7-005e-4e09-a1b3-54f06e84d6de",
          "length": 250,
          "cycles": 1,
          "position": 220,
          "iteration": 0,
          "httpRequestId": "0c147ee5-e7ea-4b90-8951-c999f004fa87"
        },
        "item": {
          "id": "87ba052b-e681-45db-90ec-787e87f4e719",
          "name": "credentials_verify:proof:type:object"
        },
        "response": {
          "id": "727eca48-1e38-4726-8792-8a3b589df9ce",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "0de00fe0-2a7f-4d75-9ab4-a4f6496e2c86",
        "cursor": {
          "ref": "30b9fd6d-3203-4ecd-a650-0fd0b9e36cdc",
          "length": 250,
          "cycles": 1,
          "position": 221,
          "iteration": 0,
          "httpRequestId": "cf373766-bcfc-4828-bffa-c019ccdecc7e"
        },
        "item": {
          "id": "0de00fe0-2a7f-4d75-9ab4-a4f6496e2c86",
          "name": "credentials_verify:proof:type:string"
        },
        "response": {
          "id": "04ab2669-7a19-4013-81fa-07077d240c2e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "60303955-1c18-420f-aebd-aadf93dc8984",
        "cursor": {
          "ref": "3b6f8aaa-6328-449b-9ef7-bade227ebf16",
          "length": 250,
          "cycles": 1,
          "position": 222,
          "iteration": 0,
          "httpRequestId": "e255a7f2-9d4d-4e91-b26d-ff7dba355e0e"
        },
        "item": {
          "id": "60303955-1c18-420f-aebd-aadf93dc8984",
          "name": "credentials_verify:proof:created:array"
        },
        "response": {
          "id": "062c0748-06e0-4b46-b480-1d4937056ee6",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c0643b32-7017-431e-bc71-5037fa3de1d9",
        "cursor": {
          "ref": "32e34fc3-c209-4c77-8384-c7eda9eb6572",
          "length": 250,
          "cycles": 1,
          "position": 223,
          "iteration": 0,
          "httpRequestId": "acf54ff0-f177-4588-bb1c-2766acc09bf3"
        },
        "item": {
          "id": "c0643b32-7017-431e-bc71-5037fa3de1d9",
          "name": "credentials_verify:proof:created:boolean"
        },
        "response": {
          "id": "d17bbc9e-0654-4a03-9e86-fa86689d064e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "697ca1e7-c4a7-456c-8f71-f3134bfb0480",
        "cursor": {
          "ref": "e9d34c60-e583-446c-bd21-dc650df26645",
          "length": 250,
          "cycles": 1,
          "position": 224,
          "iteration": 0,
          "httpRequestId": "ff06d995-0b9c-4223-b7a7-8802e32750f9"
        },
        "item": {
          "id": "697ca1e7-c4a7-456c-8f71-f3134bfb0480",
          "name": "credentials_verify:proof:created:integer"
        },
        "response": {
          "id": "8ccda03a-6b7f-4157-8679-cf8fea5d90ed",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 65,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8611e8ac-1f6c-4b9a-b4ad-3dd8fe58a474",
        "cursor": {
          "ref": "905bb368-3ab2-423f-9872-c8c0a8f0fd6e",
          "length": 250,
          "cycles": 1,
          "position": 225,
          "iteration": 0,
          "httpRequestId": "7cf6d05e-f4d4-4198-b35a-0930fa515249"
        },
        "item": {
          "id": "8611e8ac-1f6c-4b9a-b4ad-3dd8fe58a474",
          "name": "credentials_verify:proof:created:null"
        },
        "response": {
          "id": "4fcf9d14-c24f-442f-bca6-831128804058",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "afc791a1-94f0-421f-8975-d82477c6d558",
        "cursor": {
          "ref": "9735d582-d020-4a4a-8f8f-a61a7a35df24",
          "length": 250,
          "cycles": 1,
          "position": 226,
          "iteration": 0,
          "httpRequestId": "e7747496-290a-41ac-b91a-a9f2706a813d"
        },
        "item": {
          "id": "afc791a1-94f0-421f-8975-d82477c6d558",
          "name": "credentials_verify:proof:created:object"
        },
        "response": {
          "id": "14daf35f-3252-48bd-917a-5d9461506347",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 68,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "eb1728bc-ab0b-45c2-8093-24d67b1f5cfa",
        "cursor": {
          "ref": "11542594-95d9-43b5-8814-5728149eff09",
          "length": 250,
          "cycles": 1,
          "position": 227,
          "iteration": 0,
          "httpRequestId": "af5e1bec-aee4-4d87-8040-26377af4d5c6"
        },
        "item": {
          "id": "eb1728bc-ab0b-45c2-8093-24d67b1f5cfa",
          "name": "credentials_verify:proof:verificationMethod:array"
        },
        "response": {
          "id": "2c6fab34-c0c7-49ee-a6ff-bf14be3fb96a",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3945c9c-66d8-4683-8649-e63d65554ff8",
        "cursor": {
          "ref": "4218e53a-8a1a-41ef-9847-8db6237081e3",
          "length": 250,
          "cycles": 1,
          "position": 228,
          "iteration": 0,
          "httpRequestId": "3112ff75-505e-4ffb-8550-7996ddf3d9cb"
        },
        "item": {
          "id": "e3945c9c-66d8-4683-8649-e63d65554ff8",
          "name": "credentials_verify:proof:verificationMethod:boolean"
        },
        "response": {
          "id": "34b7ac26-9c3d-4663-94a6-629f322f73cc",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a6490bdf-6418-4ebc-9672-592e6b044e40",
        "cursor": {
          "ref": "b2e4b5fc-633f-4434-90b1-8fd169e6594f",
          "length": 250,
          "cycles": 1,
          "position": 229,
          "iteration": 0,
          "httpRequestId": "7f5206c6-3bb2-4580-90e3-8291211509b9"
        },
        "item": {
          "id": "a6490bdf-6418-4ebc-9672-592e6b044e40",
          "name": "credentials_verify:proof:verificationMethod:integer"
        },
        "response": {
          "id": "ff50a7b4-6cfe-45a3-acb4-b387aef6d7d8",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 60,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6f35a443-e938-4b5c-8518-a4e579ef4f85",
        "cursor": {
          "ref": "94e68837-75f6-45a8-a1cc-ab3df3ff4fba",
          "length": 250,
          "cycles": 1,
          "position": 230,
          "iteration": 0,
          "httpRequestId": "b271f540-f0b6-461b-8c22-07ab3f7b1164"
        },
        "item": {
          "id": "6f35a443-e938-4b5c-8518-a4e579ef4f85",
          "name": "credentials_verify:proof:verificationMethod:null"
        },
        "response": {
          "id": "dc1c77d9-6096-41ea-8e2e-67e0f0848f70",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3499fdba-87bc-4ad5-add2-55fe802c525f",
        "cursor": {
          "ref": "63589e33-fbdc-4a87-8ef2-4faeb5d20bf7",
          "length": 250,
          "cycles": 1,
          "position": 231,
          "iteration": 0,
          "httpRequestId": "7c05f17c-fbd0-43a8-b396-dbe81404d9e8"
        },
        "item": {
          "id": "3499fdba-87bc-4ad5-add2-55fe802c525f",
          "name": "credentials_verify:proof:verificationMethod:object"
        },
        "response": {
          "id": "a52ee05c-992a-4b0f-8d06-3aafe900b4b5",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4fc4176d-5a64-47a5-b035-18d5b9439131",
        "cursor": {
          "ref": "3e162265-8310-49c5-9387-9fe2abe0b927",
          "length": 250,
          "cycles": 1,
          "position": 232,
          "iteration": 0,
          "httpRequestId": "6fd976e0-c670-4b47-96e8-58d0875bb2a1"
        },
        "item": {
          "id": "4fc4176d-5a64-47a5-b035-18d5b9439131",
          "name": "credentials_verify:proof:jws:array"
        },
        "response": {
          "id": "7eeb5011-df27-46ce-9f98-8bf614f0ca6b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "32228a30-3182-4268-9165-e5040f099e58",
        "cursor": {
          "ref": "801b62e6-1488-4a24-b29e-1de2c3870982",
          "length": 250,
          "cycles": 1,
          "position": 233,
          "iteration": 0,
          "httpRequestId": "c93261a2-aecb-4cf6-8da4-32d4ef7727af"
        },
        "item": {
          "id": "32228a30-3182-4268-9165-e5040f099e58",
          "name": "credentials_verify:proof:jws:boolean"
        },
        "response": {
          "id": "f17937cd-1774-48f2-93e9-dea99de7be3c",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "4e57c5ff-93d9-4ffc-ae9b-42ac75c78a4c",
        "cursor": {
          "ref": "01d63f8d-152c-4e4f-b402-3a5e31b780bd",
          "length": 250,
          "cycles": 1,
          "position": 234,
          "iteration": 0,
          "httpRequestId": "2ca8a352-8204-4fce-8c76-1eae29459b80"
        },
        "item": {
          "id": "4e57c5ff-93d9-4ffc-ae9b-42ac75c78a4c",
          "name": "credentials_verify:proof:jws:integer"
        },
        "response": {
          "id": "ac19cc3c-16bd-473a-a4a9-7aac0db87afd",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 61,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "53ee03f1-ffc5-4abd-8f09-33a9d72e8718",
        "cursor": {
          "ref": "d009a79f-731d-498e-810d-93ada776adf6",
          "length": 250,
          "cycles": 1,
          "position": 235,
          "iteration": 0,
          "httpRequestId": "ef4927ff-0ff3-4323-abd8-ba2147e448de"
        },
        "item": {
          "id": "53ee03f1-ffc5-4abd-8f09-33a9d72e8718",
          "name": "credentials_verify:proof:jws:null"
        },
        "response": {
          "id": "82e3f764-1a1e-4d63-a213-0a483f6ecc77",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "3187d68f-39e3-4522-bf91-2199e8005dcf",
        "cursor": {
          "ref": "a4e1a1c3-d8a0-48ad-a669-762ca39329b7",
          "length": 250,
          "cycles": 1,
          "position": 236,
          "iteration": 0,
          "httpRequestId": "353ceab8-3949-46cd-ae0c-7021adfdb47d"
        },
        "item": {
          "id": "3187d68f-39e3-4522-bf91-2199e8005dcf",
          "name": "credentials_verify:proof:jws:object"
        },
        "response": {
          "id": "ed9386a3-4821-4a31-912a-35304dbe4858",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "68b51d5d-751e-407c-b44b-857323db04c4",
        "cursor": {
          "ref": "b312219e-ffae-4090-8264-888a84a78909",
          "length": 250,
          "cycles": 1,
          "position": 237,
          "iteration": 0,
          "httpRequestId": "50b8d26a-77f3-4b2b-9275-e84b2caec42f"
        },
        "item": {
          "id": "68b51d5d-751e-407c-b44b-857323db04c4",
          "name": "credentials_verify:proof:proofPurpose:array"
        },
        "response": {
          "id": "7e691633-591c-4afb-8dd0-be9a8b8aaec4",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "2965f43d-a5fd-4589-9dca-150d117c14e4",
        "cursor": {
          "ref": "0843711c-ddbe-477d-a8d5-be57bd4acdc8",
          "length": 250,
          "cycles": 1,
          "position": 238,
          "iteration": 0,
          "httpRequestId": "8fb25475-835c-47f9-8399-710b7fb2c702"
        },
        "item": {
          "id": "2965f43d-a5fd-4589-9dca-150d117c14e4",
          "name": "credentials_verify:proof:proofPurpose:boolean"
        },
        "response": {
          "id": "e426ef82-6d8d-4c3b-8077-adf282480208",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 63,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "21a22d76-3eff-4341-93d3-bbf2931513c2",
        "cursor": {
          "ref": "670c3fb2-3c85-473f-b2bb-ce4a0b4bca1d",
          "length": 250,
          "cycles": 1,
          "position": 239,
          "iteration": 0,
          "httpRequestId": "4dde2813-8183-4a0f-ae9b-e3bb231863ce"
        },
        "item": {
          "id": "21a22d76-3eff-4341-93d3-bbf2931513c2",
          "name": "credentials_verify:proof:proofPurpose:integer"
        },
        "response": {
          "id": "84fa129e-0dbd-478b-ad9e-bb5b50ca85e7",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "5c17b90f-c736-4386-b569-b4cc4b36a61f",
        "cursor": {
          "ref": "859ed586-da6f-460e-bd27-90738c60d26f",
          "length": 250,
          "cycles": 1,
          "position": 240,
          "iteration": 0,
          "httpRequestId": "e5cbb1d2-e17c-47be-b219-00c285334e2b"
        },
        "item": {
          "id": "5c17b90f-c736-4386-b569-b4cc4b36a61f",
          "name": "credentials_verify:proof:proofPurpose:null"
        },
        "response": {
          "id": "6a4de684-84cc-44db-9dd9-a104df08e9c3",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "b5ed167f-7054-438d-9fc0-d3c353114a34",
        "cursor": {
          "ref": "217c940d-6cb0-46f4-abae-98fe648f99a5",
          "length": 250,
          "cycles": 1,
          "position": 241,
          "iteration": 0,
          "httpRequestId": "3b282364-d667-48c3-947e-759d91023d4e"
        },
        "item": {
          "id": "b5ed167f-7054-438d-9fc0-d3c353114a34",
          "name": "credentials_verify:proof:proofPurpose:object"
        },
        "response": {
          "id": "d2faf973-860a-4862-9ce7-e7a3fcb2b97e",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 64,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "a114da8e-1ff7-4a0f-8cca-306b4a0a3a76",
        "cursor": {
          "ref": "c20426d1-8df7-41be-886a-92824b0880f8",
          "length": 250,
          "cycles": 1,
          "position": 242,
          "iteration": 0,
          "httpRequestId": "b5d5b5c3-5556-4edd-82c3-b6a977c26d9e"
        },
        "item": {
          "id": "a114da8e-1ff7-4a0f-8cca-306b4a0a3a76",
          "name": "credentials_verify:proof:proofPurpose:string"
        },
        "response": {
          "id": "2de6b2b6-8951-4a1b-9b5d-feed94371e3b",
          "status": "Bad Request",
          "code": 400,
          "responseTime": 62,
          "responseSize": 111
        },
        "assertions": [
          {
            "assertion": "status code is 400",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "6534b6e4-7075-4d02-bee3-f85cae3ea0be",
        "cursor": {
          "ref": "77020afe-b6fb-4384-9ff6-83a135419318",
          "length": 250,
          "cycles": 1,
          "position": 243,
          "iteration": 0,
          "httpRequestId": "fbb74adb-b85e-4453-9bd3-1a399efccb0f"
        },
        "item": {
          "id": "6534b6e4-7075-4d02-bee3-f85cae3ea0be",
          "name": "credentials_verify:missing_auth"
        },
        "response": {
          "id": "736486e5-552d-45e1-b566-07948113a1ed",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "c4749973-c3fe-4714-a68d-0c5949f903dc",
        "cursor": {
          "ref": "5ac0bddc-44a8-40f0-aa0d-d10200ba2157",
          "length": 250,
          "cycles": 1,
          "position": 244,
          "iteration": 0,
          "httpRequestId": "ed0c5ad2-77b4-419c-9ff5-1a3c566cd9af"
        },
        "item": {
          "id": "c4749973-c3fe-4714-a68d-0c5949f903dc",
          "name": "credentials_verify:bad_signature"
        },
        "response": {
          "id": "3a6700f0-8eca-44c3-acfe-49951aaeeac5",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 338,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:245)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:245)"
            }
          },
          {
            "assertion": "response verified is false",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is false",
              "message": "expected undefined to be false",
              "stack": "AssertionError: expected undefined to be false\n   at Object.eval sandbox-script.js:3:245)"
            }
          }
        ]
      },
      {
        "id": "b7bf02e0-4414-4ce5-816c-c3492a12cc6e",
        "cursor": {
          "ref": "05957403-9789-4421-8553-db23d423b308",
          "length": 250,
          "cycles": 1,
          "position": 245,
          "iteration": 0,
          "httpRequestId": "4ef6194e-8290-49ec-8ad1-57abfca14ac1"
        },
        "item": {
          "id": "b7bf02e0-4414-4ce5-816c-c3492a12cc6e",
          "name": "credentials_verify"
        },
        "response": {
          "id": "a60debce-b89a-4b6c-8eba-c0b46bf02282",
          "status": "Gateway Timeout",
          "code": 504,
          "responseTime": 10566,
          "responseSize": 14
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 504",
              "stack": "AssertionError: expected response to have status code 200 but got 504\n   at Object.eval sandbox-script.js:1:246)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:246)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:246)"
            }
          }
        ]
      },
      {
        "id": "965f2c99-3aa1-4108-b175-51abf8388f9e",
        "cursor": {
          "ref": "fd633a6d-a7db-40f3-8213-7651cc9b06cd",
          "length": 250,
          "cycles": 1,
          "position": 246,
          "iteration": 0,
          "httpRequestId": "1eb2bda5-49ab-48a4-9be1-e2987a417a3a"
        },
        "item": {
          "id": "965f2c99-3aa1-4108-b175-51abf8388f9e",
          "name": "credentials_verify:issuer:object"
        },
        "response": {
          "id": "0781ad88-2034-4694-9322-e5fd00e38c66",
          "status": "Internal Server Error",
          "code": 500,
          "responseTime": 454,
          "responseSize": 71
        },
        "assertions": [
          {
            "assertion": "status code is 200",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 0,
              "test": "status code is 200",
              "message": "expected response to have status code 200 but got 500",
              "stack": "AssertionError: expected response to have status code 200 but got 500\n   at Object.eval sandbox-script.js:1:247)"
            }
          },
          {
            "assertion": "response validates against schema",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 1,
              "test": "response validates against schema",
              "message": "expected data to satisfy schema but found following errors: \ndata should have required property 'verified'",
              "stack": "AssertionError: expected data to satisfy schema but found following errors: \ndata should have required property 'verified'\n   at Object.eval sandbox-script.js:2:247)"
            }
          },
          {
            "assertion": "response verified is true",
            "skipped": false,
            "error": {
              "name": "AssertionError",
              "index": 2,
              "test": "response verified is true",
              "message": "expected undefined to be true",
              "stack": "AssertionError: expected undefined to be true\n   at Object.eval sandbox-script.js:3:247)"
            }
          }
        ]
      },
      {
        "id": "e298bb4a-eda8-4f88-ac52-3d61412f33c9",
        "cursor": {
          "ref": "3b58a854-25a7-4cd6-b5b2-f62a6ff1d59a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1497ee98-aa87-481f-ae62-9941d1465a67"
        },
        "item": {
          "id": "e298bb4a-eda8-4f88-ac52-3d61412f33c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78fbb6c4-92bd-467a-9e91-35283c27b202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e298bb4a-eda8-4f88-ac52-3d61412f33c9",
        "cursor": {
          "ref": "3b58a854-25a7-4cd6-b5b2-f62a6ff1d59a",
          "length": 250,
          "cycles": 1,
          "position": 247,
          "iteration": 0,
          "httpRequestId": "1497ee98-aa87-481f-ae62-9941d1465a67"
        },
        "item": {
          "id": "e298bb4a-eda8-4f88-ac52-3d61412f33c9",
          "name": "presentations:missing_auth"
        },
        "response": {
          "id": "78fbb6c4-92bd-467a-9e91-35283c27b202",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "8ed16bf0-296f-45d5-9267-70bc8df836ee",
        "cursor": {
          "ref": "b8804e3d-dfba-416c-906d-dcf5d13c32de",
          "length": 250,
          "cycles": 1,
          "position": 248,
          "iteration": 0,
          "httpRequestId": "ad24936b-14f2-4fc5-8e75-7e823a2975e5"
        },
        "item": {
          "id": "8ed16bf0-296f-45d5-9267-70bc8df836ee",
          "name": "presentations_prove:missing_auth"
        },
        "response": {
          "id": "36d2a059-481a-428f-8527-0f48756b5866",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      },
      {
        "id": "e3bcee9b-4ae4-4dbf-aabc-55fd90258e53",
        "cursor": {
          "ref": "64eb19e9-faa2-43fd-aaa9-51516895c15d",
          "length": 250,
          "cycles": 1,
          "position": 249,
          "iteration": 0,
          "httpRequestId": "db66e8c7-c155-446b-99d1-bf8faa723fcc"
        },
        "item": {
          "id": "e3bcee9b-4ae4-4dbf-aabc-55fd90258e53",
          "name": "presentations_verify:missing_auth"
        },
        "response": {
          "id": "b9f450ac-f329-493b-912c-8c7952df2331",
          "status": "Unauthorized",
          "code": 401,
          "responseTime": 61,
          "responseSize": 38
        },
        "assertions": [
          {
            "assertion": "status code is 401",
            "skipped": false
          },
          {
            "assertion": "response validates against schema",
            "skipped": false
          }
        ]
      }
    ]
  }
}